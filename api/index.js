Index.PACKAGES = {"ackcord.util" : [{"name" : "ackcord.util.AckCordGatewaySettings", "shortDescription" : "Settings that AckCord used.", "object" : "ackcord\/util\/AckCordGatewaySettings$.html", "members_class" : [{"label" : "NumTraces", "tail" : ": Int", "member" : "ackcord.util.AckCordGatewaySettings.NumTraces", "link" : "ackcord\/util\/AckCordGatewaySettings.html#NumTraces:Int", "kind" : "val"}, {"label" : "OnlyUniqueTraces", "tail" : ": Boolean", "member" : "ackcord.util.AckCordGatewaySettings.OnlyUniqueTraces", "link" : "ackcord\/util\/AckCordGatewaySettings.html#OnlyUniqueTraces:Boolean", "kind" : "val"}, {"label" : "LogJsonTraces", "tail" : ": Boolean", "member" : "ackcord.util.AckCordGatewaySettings.LogJsonTraces", "link" : "ackcord\/util\/AckCordGatewaySettings.html#LogJsonTraces:Boolean", "kind" : "val"}, {"label" : "LogSentWs", "tail" : ": Boolean", "member" : "ackcord.util.AckCordGatewaySettings.LogSentWs", "link" : "ackcord\/util\/AckCordGatewaySettings.html#LogSentWs:Boolean", "kind" : "val"}, {"label" : "LogReceivedWs", "tail" : ": Boolean", "member" : "ackcord.util.AckCordGatewaySettings.LogReceivedWs", "link" : "ackcord\/util\/AckCordGatewaySettings.html#LogReceivedWs:Boolean", "kind" : "val"}, {"member" : "ackcord.util.AckCordGatewaySettings#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordGatewaySettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordGatewaySettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordGatewaySettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordGatewaySettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordGatewaySettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordGatewaySettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordGatewaySettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordGatewaySettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordGatewaySettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordGatewaySettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordGatewaySettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordGatewaySettings.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordGatewaySettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordGatewaySettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordGatewaySettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordGatewaySettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "()(system: ActorSystem[Nothing]): AckCordGatewaySettings", "member" : "ackcord.util.AckCordGatewaySettings.apply", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#apply()(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.util.AckCordGatewaySettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordGatewaySettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordGatewaySettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/AckCordGatewaySettings.html", "kind" : "class"}, {"name" : "ackcord.util.AckCordRequestSettings", "shortDescription" : "Settings that AckCord uses for requests.", "object" : "ackcord\/util\/AckCordRequestSettings$.html", "members_class" : [{"label" : "SpuriousWakeup", "tail" : ": FiniteDuration", "member" : "ackcord.util.AckCordRequestSettings.SpuriousWakeup", "link" : "ackcord\/util\/AckCordRequestSettings.html#SpuriousWakeup:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "LogRatelimitEvents", "tail" : ": Boolean", "member" : "ackcord.util.AckCordRequestSettings.LogRatelimitEvents", "link" : "ackcord\/util\/AckCordRequestSettings.html#LogRatelimitEvents:Boolean", "kind" : "val"}, {"label" : "LogSentREST", "tail" : ": Boolean", "member" : "ackcord.util.AckCordRequestSettings.LogSentREST", "link" : "ackcord\/util\/AckCordRequestSettings.html#LogSentREST:Boolean", "kind" : "val"}, {"label" : "LogReceivedREST", "tail" : ": Boolean", "member" : "ackcord.util.AckCordRequestSettings.LogReceivedREST", "link" : "ackcord\/util\/AckCordRequestSettings.html#LogReceivedREST:Boolean", "kind" : "val"}, {"member" : "ackcord.util.AckCordRequestSettings#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordRequestSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordRequestSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordRequestSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordRequestSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordRequestSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordRequestSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordRequestSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordRequestSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordRequestSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordRequestSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordRequestSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordRequestSettings.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordRequestSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordRequestSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordRequestSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordRequestSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "()(system: ActorSystem[Nothing]): AckCordRequestSettings", "member" : "ackcord.util.AckCordRequestSettings.apply", "link" : "ackcord\/util\/AckCordRequestSettings$.html#apply()(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.util.AckCordRequestSettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordRequestSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordRequestSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordRequestSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordRequestSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordRequestSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordRequestSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordRequestSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordRequestSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordRequestSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordRequestSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordRequestSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordRequestSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordRequestSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordRequestSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordRequestSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordRequestSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordRequestSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/AckCordRequestSettings.html", "kind" : "class"}, {"name" : "ackcord.util.AckCordVoiceSettings", "shortDescription" : "Settings that AckCord uses for voice stuff.", "object" : "ackcord\/util\/AckCordVoiceSettings$.html", "members_class" : [{"label" : "LogSentWs", "tail" : ": Boolean", "member" : "ackcord.util.AckCordVoiceSettings.LogSentWs", "link" : "ackcord\/util\/AckCordVoiceSettings.html#LogSentWs:Boolean", "kind" : "val"}, {"label" : "LogReceivedWs", "tail" : ": Boolean", "member" : "ackcord.util.AckCordVoiceSettings.LogReceivedWs", "link" : "ackcord\/util\/AckCordVoiceSettings.html#LogReceivedWs:Boolean", "kind" : "val"}, {"member" : "ackcord.util.AckCordVoiceSettings#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordVoiceSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordVoiceSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordVoiceSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordVoiceSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordVoiceSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordVoiceSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordVoiceSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordVoiceSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordVoiceSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordVoiceSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordVoiceSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordVoiceSettings.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordVoiceSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordVoiceSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordVoiceSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordVoiceSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "()(system: ActorSystem[Nothing]): AckCordVoiceSettings", "member" : "ackcord.util.AckCordVoiceSettings.apply", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#apply()(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.util.AckCordVoiceSettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/AckCordVoiceSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/AckCordVoiceSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/AckCordVoiceSettings.html", "kind" : "class"}, {"name" : "ackcord.util.APIGuildRouter", "shortDescription" : "", "object" : "ackcord\/util\/APIGuildRouter$.html", "members_class" : [{"label" : "handleThroughMessage", "tail" : "(a: APIMessage): Unit", "member" : "ackcord.util.APIGuildRouter.handleThroughMessage", "link" : "ackcord\/util\/APIGuildRouter.html#handleThroughMessage(a:ackcord.APIMessage):Unit", "kind" : "def"}, {"member" : "ackcord.util.APIGuildRouter#<init>", "error" : "unsupported entity"}, {"label" : "stopHandler", "tail" : "(guildId: GuildId): Unit", "member" : "ackcord.util.GuildRouter.stopHandler", "link" : "ackcord\/util\/APIGuildRouter.html#stopHandler(guildId:ackcord.data.GuildId):Unit", "kind" : "def"}, {"label" : "getGuild", "tail" : "(guildId: GuildId): ActorRef[Inner]", "member" : "ackcord.util.GuildRouter.getGuild", "link" : "ackcord\/util\/APIGuildRouter.html#getGuild(guildId:ackcord.data.GuildId):akka.actor.typed.ActorRef[Inner]", "kind" : "def"}, {"label" : "sendToAll", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToAll", "link" : "ackcord\/util\/APIGuildRouter.html#sendToAll[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToNotGuild", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToNotGuild", "link" : "ackcord\/util\/APIGuildRouter.html#sendToNotGuild[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToGuild", "tail" : "(guildId: GuildId, msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToGuild", "link" : "ackcord\/util\/APIGuildRouter.html#sendToGuild[A](guildId:ackcord.data.GuildId,msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "onMessage", "tail" : "(msg: Command[APIMessage, Inner]): Behavior[Command[APIMessage, Inner]]", "member" : "ackcord.util.GuildRouter.onMessage", "link" : "ackcord\/util\/APIGuildRouter.html#onMessage(msg:ackcord.util.GuildRouter.Command[Event,Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[Event,Inner]]", "kind" : "def"}, {"label" : "isShuttingDown", "tail" : ": Boolean", "member" : "ackcord.util.GuildRouter.isShuttingDown", "link" : "ackcord\/util\/APIGuildRouter.html#isShuttingDown:Boolean", "kind" : "var"}, {"label" : "handlers", "tail" : ": HashMap[GuildId, ActorRef[Inner]]", "member" : "ackcord.util.GuildRouter.handlers", "link" : "ackcord\/util\/APIGuildRouter.html#handlers:scala.collection.mutable.HashMap[ackcord.data.GuildId,akka.actor.typed.ActorRef[Inner]]", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "ackcord.util.GuildRouter.log", "link" : "ackcord\/util\/APIGuildRouter.html#log:org.slf4j.Logger", "kind" : "val"}, {"label" : "receiveSignal", "tail" : "(ctx: TypedActorContext[Command[APIMessage, Inner]], msg: Signal): Behavior[Command[APIMessage, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receiveSignal", "link" : "ackcord\/util\/APIGuildRouter.html#receiveSignal(ctx:akka.actor.typed.TypedActorContext[T],msg:akka.actor.typed.Signal):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "receive", "tail" : "(ctx: TypedActorContext[Command[APIMessage, Inner]], msg: Command[APIMessage, Inner]): Behavior[Command[APIMessage, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receive", "link" : "ackcord\/util\/APIGuildRouter.html#receive(ctx:akka.actor.typed.TypedActorContext[T],msg:T):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "onSignal", "tail" : "(): PartialFunction[Signal, Behavior[Command[APIMessage, Inner]]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.onSignal", "link" : "ackcord\/util\/APIGuildRouter.html#onSignal:PartialFunction[akka.actor.typed.Signal,akka.actor.typed.Behavior[T]]", "kind" : "def"}, {"label" : "context", "tail" : ": ActorContext[Command[APIMessage, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.context", "link" : "ackcord\/util\/APIGuildRouter.html#context:akka.actor.typed.scaladsl.ActorContext[T]", "kind" : "val"}, {"label" : "narrow", "tail" : "(): Behavior[U]", "member" : "akka.actor.typed.Behavior.narrow", "link" : "ackcord\/util\/APIGuildRouter.html#narrow[U<:T]:akka.actor.typed.Behavior[U]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/APIGuildRouter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/APIGuildRouter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/APIGuildRouter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/APIGuildRouter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/APIGuildRouter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/APIGuildRouter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/APIGuildRouter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/APIGuildRouter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/APIGuildRouter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/APIGuildRouter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/APIGuildRouter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/APIGuildRouter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/APIGuildRouter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/APIGuildRouter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/APIGuildRouter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/APIGuildRouter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "partitioner", "tail" : "(replyTo: Option[ActorRef[GuildActorCreated[Inner]]], behavior: (GuildId) => Behavior[Inner], notGuildHandler: Option[ActorRef[Inner]], shutdownBehavior: ShutdownBehavior[Inner]): Behavior[Command[APIMessage, Inner]]", "member" : "ackcord.util.APIGuildRouter.partitioner", "link" : "ackcord\/util\/APIGuildRouter$.html#partitioner[Inner](replyTo:Option[akka.actor.typed.ActorRef[ackcord.util.GuildRouter.GuildActorCreated[Inner]]],behavior:ackcord.data.GuildId=>akka.actor.typed.Behavior[Inner],notGuildHandler:Option[akka.actor.typed.ActorRef[Inner]],shutdownBehavior:ackcord.util.GuildRouter.ShutdownBehavior[Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[ackcord.APIMessage,Inner]]", "kind" : "def"}, {"label" : "router", "tail" : "(replyTo: Option[ActorRef[GuildActorCreated[APIMessage]]], behavior: (GuildId) => Behavior[APIMessage], notGuildHandler: Option[ActorRef[APIMessage]]): Behavior[Command[APIMessage, APIMessage]]", "member" : "ackcord.util.APIGuildRouter.router", "link" : "ackcord\/util\/APIGuildRouter$.html#router(replyTo:Option[akka.actor.typed.ActorRef[ackcord.util.GuildRouter.GuildActorCreated[ackcord.APIMessage]]],behavior:ackcord.data.GuildId=>akka.actor.typed.Behavior[ackcord.APIMessage],notGuildHandler:Option[akka.actor.typed.ActorRef[ackcord.APIMessage]]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[ackcord.APIMessage,ackcord.APIMessage]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/APIGuildRouter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/APIGuildRouter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/APIGuildRouter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/APIGuildRouter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/APIGuildRouter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/APIGuildRouter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/APIGuildRouter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/APIGuildRouter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/APIGuildRouter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/APIGuildRouter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/APIGuildRouter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/APIGuildRouter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/APIGuildRouter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/APIGuildRouter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/APIGuildRouter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/APIGuildRouter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/APIGuildRouter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/APIGuildRouter.html", "kind" : "class"}, {"name" : "ackcord.util.GatewayGuildRouter", "shortDescription" : "", "object" : "ackcord\/util\/GatewayGuildRouter$.html", "members_class" : [{"label" : "handleThroughMessage", "tail" : "(a: GatewayMessage[_]): Unit", "member" : "ackcord.util.GatewayGuildRouter.handleThroughMessage", "link" : "ackcord\/util\/GatewayGuildRouter.html#handleThroughMessage(a:ackcord.gateway.GatewayMessage[_]):Unit", "kind" : "def"}, {"label" : "handleLazyOpt", "tail" : "(later: Eval[Result[Option[A]]])(f: (A) => B): Option[B]", "member" : "ackcord.util.GatewayGuildRouter.handleLazyOpt", "link" : "ackcord\/util\/GatewayGuildRouter.html#handleLazyOpt[A,B](later:cats.Eval[io.circe.Decoder.Result[Option[A]]])(f:A=>B):Option[B]", "kind" : "def"}, {"label" : "handleLazy", "tail" : "(later: Eval[Result[A]])(f: (A) => B): Option[B]", "member" : "ackcord.util.GatewayGuildRouter.handleLazy", "link" : "ackcord\/util\/GatewayGuildRouter.html#handleLazy[A,B](later:cats.Eval[io.circe.Decoder.Result[A]])(f:A=>B):Option[B]", "kind" : "def"}, {"label" : "channelToGuild", "tail" : ": HashMap[GuildChannelId, GuildId]", "member" : "ackcord.util.GatewayGuildRouter.channelToGuild", "link" : "ackcord\/util\/GatewayGuildRouter.html#channelToGuild:scala.collection.mutable.HashMap[ackcord.data.GuildChannelId,ackcord.data.GuildId]", "kind" : "val"}, {"member" : "ackcord.util.GatewayGuildRouter#<init>", "error" : "unsupported entity"}, {"label" : "stopHandler", "tail" : "(guildId: GuildId): Unit", "member" : "ackcord.util.GuildRouter.stopHandler", "link" : "ackcord\/util\/GatewayGuildRouter.html#stopHandler(guildId:ackcord.data.GuildId):Unit", "kind" : "def"}, {"label" : "getGuild", "tail" : "(guildId: GuildId): ActorRef[Inner]", "member" : "ackcord.util.GuildRouter.getGuild", "link" : "ackcord\/util\/GatewayGuildRouter.html#getGuild(guildId:ackcord.data.GuildId):akka.actor.typed.ActorRef[Inner]", "kind" : "def"}, {"label" : "sendToAll", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToAll", "link" : "ackcord\/util\/GatewayGuildRouter.html#sendToAll[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToNotGuild", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToNotGuild", "link" : "ackcord\/util\/GatewayGuildRouter.html#sendToNotGuild[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToGuild", "tail" : "(guildId: GuildId, msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToGuild", "link" : "ackcord\/util\/GatewayGuildRouter.html#sendToGuild[A](guildId:ackcord.data.GuildId,msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "onMessage", "tail" : "(msg: Command[GatewayMessage[_], Inner]): Behavior[Command[GatewayMessage[_], Inner]]", "member" : "ackcord.util.GuildRouter.onMessage", "link" : "ackcord\/util\/GatewayGuildRouter.html#onMessage(msg:ackcord.util.GuildRouter.Command[Event,Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[Event,Inner]]", "kind" : "def"}, {"label" : "isShuttingDown", "tail" : ": Boolean", "member" : "ackcord.util.GuildRouter.isShuttingDown", "link" : "ackcord\/util\/GatewayGuildRouter.html#isShuttingDown:Boolean", "kind" : "var"}, {"label" : "handlers", "tail" : ": HashMap[GuildId, ActorRef[Inner]]", "member" : "ackcord.util.GuildRouter.handlers", "link" : "ackcord\/util\/GatewayGuildRouter.html#handlers:scala.collection.mutable.HashMap[ackcord.data.GuildId,akka.actor.typed.ActorRef[Inner]]", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "ackcord.util.GuildRouter.log", "link" : "ackcord\/util\/GatewayGuildRouter.html#log:org.slf4j.Logger", "kind" : "val"}, {"label" : "receiveSignal", "tail" : "(ctx: TypedActorContext[Command[GatewayMessage[_], Inner]], msg: Signal): Behavior[Command[GatewayMessage[_], Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receiveSignal", "link" : "ackcord\/util\/GatewayGuildRouter.html#receiveSignal(ctx:akka.actor.typed.TypedActorContext[T],msg:akka.actor.typed.Signal):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "receive", "tail" : "(ctx: TypedActorContext[Command[GatewayMessage[_], Inner]], msg: Command[GatewayMessage[_], Inner]): Behavior[Command[GatewayMessage[_], Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receive", "link" : "ackcord\/util\/GatewayGuildRouter.html#receive(ctx:akka.actor.typed.TypedActorContext[T],msg:T):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "onSignal", "tail" : "(): PartialFunction[Signal, Behavior[Command[GatewayMessage[_], Inner]]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.onSignal", "link" : "ackcord\/util\/GatewayGuildRouter.html#onSignal:PartialFunction[akka.actor.typed.Signal,akka.actor.typed.Behavior[T]]", "kind" : "def"}, {"label" : "context", "tail" : ": ActorContext[Command[GatewayMessage[_], Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.context", "link" : "ackcord\/util\/GatewayGuildRouter.html#context:akka.actor.typed.scaladsl.ActorContext[T]", "kind" : "val"}, {"label" : "narrow", "tail" : "(): Behavior[U]", "member" : "akka.actor.typed.Behavior.narrow", "link" : "ackcord\/util\/GatewayGuildRouter.html#narrow[U<:T]:akka.actor.typed.Behavior[U]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/GatewayGuildRouter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/GatewayGuildRouter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/GatewayGuildRouter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/GatewayGuildRouter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/GatewayGuildRouter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/GatewayGuildRouter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/GatewayGuildRouter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/GatewayGuildRouter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/GatewayGuildRouter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/GatewayGuildRouter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/GatewayGuildRouter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/GatewayGuildRouter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/GatewayGuildRouter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/GatewayGuildRouter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/GatewayGuildRouter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/GatewayGuildRouter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "partitioner", "tail" : "(replyTo: Option[ActorRef[GuildActorCreated[Inner]]], behavior: (GuildId) => Behavior[Inner], notGuildHandler: Option[ActorRef[Inner]], shutdownBehavior: ShutdownBehavior[Inner]): Behavior[Command[GatewayMessage[_], Inner]]", "member" : "ackcord.util.GatewayGuildRouter.partitioner", "link" : "ackcord\/util\/GatewayGuildRouter$.html#partitioner[Inner](replyTo:Option[akka.actor.typed.ActorRef[ackcord.util.GuildRouter.GuildActorCreated[Inner]]],behavior:ackcord.data.GuildId=>akka.actor.typed.Behavior[Inner],notGuildHandler:Option[akka.actor.typed.ActorRef[Inner]],shutdownBehavior:ackcord.util.GuildRouter.ShutdownBehavior[Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[ackcord.gateway.GatewayMessage[_],Inner]]", "kind" : "def"}, {"label" : "router", "tail" : "(replyTo: Option[ActorRef[GuildActorCreated[GatewayMessage[_]]]], behavior: (GuildId) => Behavior[GatewayMessage[_]], notGuildHandler: Option[ActorRef[GatewayMessage[_]]]): Behavior[Command[GatewayMessage[_], GatewayMessage[_]]]", "member" : "ackcord.util.GatewayGuildRouter.router", "link" : "ackcord\/util\/GatewayGuildRouter$.html#router(replyTo:Option[akka.actor.typed.ActorRef[ackcord.util.GuildRouter.GuildActorCreated[ackcord.gateway.GatewayMessage[_]]]],behavior:ackcord.data.GuildId=>akka.actor.typed.Behavior[ackcord.gateway.GatewayMessage[_]],notGuildHandler:Option[akka.actor.typed.ActorRef[ackcord.gateway.GatewayMessage[_]]]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/GatewayGuildRouter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/GatewayGuildRouter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/GatewayGuildRouter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/GatewayGuildRouter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/GatewayGuildRouter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/GatewayGuildRouter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/GatewayGuildRouter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GatewayGuildRouter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/GatewayGuildRouter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/GatewayGuildRouter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/GatewayGuildRouter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/GatewayGuildRouter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/GatewayGuildRouter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/GatewayGuildRouter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/GatewayGuildRouter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/GatewayGuildRouter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/GatewayGuildRouter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/GatewayGuildRouter.html", "kind" : "class"}, {"name" : "ackcord.util.GuildRouter", "shortDescription" : "", "object" : "ackcord\/util\/GuildRouter$.html", "members_class" : [{"label" : "stopHandler", "tail" : "(guildId: GuildId): Unit", "member" : "ackcord.util.GuildRouter.stopHandler", "link" : "ackcord\/util\/GuildRouter.html#stopHandler(guildId:ackcord.data.GuildId):Unit", "kind" : "def"}, {"label" : "getGuild", "tail" : "(guildId: GuildId): ActorRef[Inner]", "member" : "ackcord.util.GuildRouter.getGuild", "link" : "ackcord\/util\/GuildRouter.html#getGuild(guildId:ackcord.data.GuildId):akka.actor.typed.ActorRef[Inner]", "kind" : "def"}, {"label" : "sendToAll", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToAll", "link" : "ackcord\/util\/GuildRouter.html#sendToAll[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToNotGuild", "tail" : "(msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToNotGuild", "link" : "ackcord\/util\/GuildRouter.html#sendToNotGuild[A](msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "sendToGuild", "tail" : "(guildId: GuildId, msg: A, handle: (ActorRef[Inner], A) => Unit): Unit", "member" : "ackcord.util.GuildRouter.sendToGuild", "link" : "ackcord\/util\/GuildRouter.html#sendToGuild[A](guildId:ackcord.data.GuildId,msg:A,handle:(akka.actor.typed.ActorRef[Inner],A)=>Unit):Unit", "kind" : "def"}, {"label" : "onMessage", "tail" : "(msg: Command[Event, Inner]): Behavior[Command[Event, Inner]]", "member" : "ackcord.util.GuildRouter.onMessage", "link" : "ackcord\/util\/GuildRouter.html#onMessage(msg:ackcord.util.GuildRouter.Command[Event,Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[Event,Inner]]", "kind" : "def"}, {"label" : "isShuttingDown", "tail" : ": Boolean", "member" : "ackcord.util.GuildRouter.isShuttingDown", "link" : "ackcord\/util\/GuildRouter.html#isShuttingDown:Boolean", "kind" : "var"}, {"label" : "handlers", "tail" : ": HashMap[GuildId, ActorRef[Inner]]", "member" : "ackcord.util.GuildRouter.handlers", "link" : "ackcord\/util\/GuildRouter.html#handlers:scala.collection.mutable.HashMap[ackcord.data.GuildId,akka.actor.typed.ActorRef[Inner]]", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "ackcord.util.GuildRouter.log", "link" : "ackcord\/util\/GuildRouter.html#log:org.slf4j.Logger", "kind" : "val"}, {"member" : "ackcord.util.GuildRouter#<init>", "error" : "unsupported entity"}, {"label" : "receiveSignal", "tail" : "(ctx: TypedActorContext[Command[Event, Inner]], msg: Signal): Behavior[Command[Event, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receiveSignal", "link" : "ackcord\/util\/GuildRouter.html#receiveSignal(ctx:akka.actor.typed.TypedActorContext[T],msg:akka.actor.typed.Signal):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "receive", "tail" : "(ctx: TypedActorContext[Command[Event, Inner]], msg: Command[Event, Inner]): Behavior[Command[Event, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receive", "link" : "ackcord\/util\/GuildRouter.html#receive(ctx:akka.actor.typed.TypedActorContext[T],msg:T):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "onSignal", "tail" : "(): PartialFunction[Signal, Behavior[Command[Event, Inner]]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.onSignal", "link" : "ackcord\/util\/GuildRouter.html#onSignal:PartialFunction[akka.actor.typed.Signal,akka.actor.typed.Behavior[T]]", "kind" : "def"}, {"label" : "context", "tail" : ": ActorContext[Command[Event, Inner]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.context", "link" : "ackcord\/util\/GuildRouter.html#context:akka.actor.typed.scaladsl.ActorContext[T]", "kind" : "val"}, {"label" : "narrow", "tail" : "(): Behavior[U]", "member" : "akka.actor.typed.Behavior.narrow", "link" : "ackcord\/util\/GuildRouter.html#narrow[U<:T]:akka.actor.typed.Behavior[U]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/GuildRouter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/GuildRouter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/GuildRouter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/GuildRouter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/GuildRouter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/GuildRouter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/GuildRouter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/GuildRouter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/GuildRouter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/GuildRouter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/GuildRouter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/GuildRouter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/GuildRouter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/GuildRouter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/GuildRouter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/GuildRouter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleThroughMessage", "tail" : "(a: Event): Unit", "member" : "ackcord.util.GuildRouter.handleThroughMessage", "link" : "ackcord\/util\/GuildRouter.html#handleThroughMessage(a:Event):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "GuildActorCreated", "tail" : "", "member" : "ackcord.util.GuildRouter.GuildActorCreated", "link" : "ackcord\/util\/GuildRouter$.html#GuildActorCreated[Inner]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Broadcast", "tail" : "", "member" : "ackcord.util.GuildRouter.Broadcast", "link" : "ackcord\/util\/GuildRouter$.html#Broadcast[Inner]extendsGuildRouter.Command[Nothing,Inner]withProductwithSerializable", "kind" : "case class"}, {"label" : "GetGuildActorReply", "tail" : "", "member" : "ackcord.util.GuildRouter.GetGuildActorReply", "link" : "ackcord\/util\/GuildRouter$.html#GetGuildActorReply[Inner]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "SendToGuildActor", "tail" : "", "member" : "ackcord.util.GuildRouter.SendToGuildActor", "link" : "ackcord\/util\/GuildRouter$.html#SendToGuildActor[Inner]extendsGuildRouter.Command[Nothing,Inner]withProductwithSerializable", "kind" : "case class"}, {"label" : "GetGuildActor", "tail" : "", "member" : "ackcord.util.GuildRouter.GetGuildActor", "link" : "ackcord\/util\/GuildRouter$.html#GetGuildActor[Inner]extendsGuildRouter.Command[Nothing,Inner]withProductwithSerializable", "kind" : "case class"}, {"label" : "Shutdown", "tail" : "", "member" : "ackcord.util.GuildRouter.Shutdown", "link" : "ackcord\/util\/GuildRouter$.html#Shutdown", "kind" : "case object"}, {"label" : "EventMessage", "tail" : "", "member" : "ackcord.util.GuildRouter.EventMessage", "link" : "ackcord\/util\/GuildRouter$.html#EventMessage[Event]extendsGuildRouter.Command[Event,Nothing]withProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "ackcord.util.GuildRouter.Command", "link" : "ackcord\/util\/GuildRouter$.html#Command[+Event,+Inner]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "OnShutdownStop", "tail" : "", "member" : "ackcord.util.GuildRouter.OnShutdownStop", "link" : "ackcord\/util\/GuildRouter$.html#OnShutdownStop", "kind" : "case object"}, {"label" : "OnShutdownSendMsg", "tail" : "", "member" : "ackcord.util.GuildRouter.OnShutdownSendMsg", "link" : "ackcord\/util\/GuildRouter$.html#OnShutdownSendMsg[Inner]extendsGuildRouter.ShutdownBehavior[Inner]withProductwithSerializable", "kind" : "case class"}, {"label" : "ShutdownBehavior", "tail" : "", "member" : "ackcord.util.GuildRouter.ShutdownBehavior", "link" : "ackcord\/util\/GuildRouter$.html#ShutdownBehavior[+Inner]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "partitioner", "tail" : "(replyTo: Option[ActorRef[GuildActorCreated[Inner]]], behavior: (GuildId) => Behavior[Inner], notGuildHandler: Option[ActorRef[Inner]], shutdownBehavior: ShutdownBehavior[Inner]): Behavior[Command[Nothing, Inner]]", "member" : "ackcord.util.GuildRouter.partitioner", "link" : "ackcord\/util\/GuildRouter$.html#partitioner[Inner](replyTo:Option[akka.actor.typed.ActorRef[ackcord.util.GuildRouter.GuildActorCreated[Inner]]],behavior:ackcord.data.GuildId=>akka.actor.typed.Behavior[Inner],notGuildHandler:Option[akka.actor.typed.ActorRef[Inner]],shutdownBehavior:ackcord.util.GuildRouter.ShutdownBehavior[Inner]):akka.actor.typed.Behavior[ackcord.util.GuildRouter.Command[Nothing,Inner]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/GuildRouter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/GuildRouter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/GuildRouter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/GuildRouter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/GuildRouter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/GuildRouter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/GuildRouter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildRouter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/GuildRouter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/GuildRouter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/GuildRouter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/GuildRouter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/GuildRouter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/GuildRouter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/GuildRouter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/GuildRouter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/GuildRouter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/GuildRouter.html", "kind" : "class"}, {"name" : "ackcord.util.GuildStreams", "shortDescription" : "", "object" : "ackcord\/util\/GuildStreams$.html", "members_object" : [{"label" : "gatewayEventGroupByGuildId", "tail" : "(log: Logger): SubFlow[Msg, NotUsed, [+O]Flow[Msg, O, NotUsed], Sink[Msg, NotUsed]]", "member" : "ackcord.util.GuildStreams.gatewayEventGroupByGuildId", "link" : "ackcord\/util\/GuildStreams$.html#gatewayEventGroupByGuildId[Msg<:ackcord.gateway.GatewayEvent[_]](log:org.slf4j.Logger):akka.stream.scaladsl.SubFlow[Msg,akka.NotUsed,[+O]akka.stream.scaladsl.Flow[Msg,O,akka.NotUsed],akka.stream.scaladsl.Sink[Msg,akka.NotUsed]]", "kind" : "def"}, {"label" : "apiMessageGroupByGuildId", "tail" : "(): SubFlow[Msg, NotUsed, [+O]Flow[Msg, O, NotUsed], Sink[Msg, NotUsed]]", "member" : "ackcord.util.GuildStreams.apiMessageGroupByGuildId", "link" : "ackcord\/util\/GuildStreams$.html#apiMessageGroupByGuildId[Msg<:ackcord.APIMessage]:akka.stream.scaladsl.SubFlow[Msg,akka.NotUsed,[+O]akka.stream.scaladsl.Flow[Msg,O,akka.NotUsed],akka.stream.scaladsl.Sink[Msg,akka.NotUsed]]", "kind" : "def"}, {"label" : "guildFilterGatewayEvent", "tail" : "(guildId: GuildId, log: Logger): Flow[Msg, Msg, NotUsed]", "member" : "ackcord.util.GuildStreams.guildFilterGatewayEvent", "link" : "ackcord\/util\/GuildStreams$.html#guildFilterGatewayEvent[Msg<:ackcord.gateway.GatewayEvent[_]](guildId:ackcord.data.GuildId,log:org.slf4j.Logger):akka.stream.scaladsl.Flow[Msg,Msg,akka.NotUsed]", "kind" : "def"}, {"label" : "guildFilterApiMessage", "tail" : "(guildId: GuildId): Flow[Msg, Msg, NotUsed]", "member" : "ackcord.util.GuildStreams.guildFilterApiMessage", "link" : "ackcord\/util\/GuildStreams$.html#guildFilterApiMessage[Msg<:ackcord.APIMessage](guildId:ackcord.data.GuildId):akka.stream.scaladsl.Flow[Msg,Msg,akka.NotUsed]", "kind" : "def"}, {"label" : "withGuildInfoGatewayEvent", "tail" : "(log: Logger): Flow[Msg, (Msg, Option[GuildId]), NotUsed]", "member" : "ackcord.util.GuildStreams.withGuildInfoGatewayEvent", "link" : "ackcord\/util\/GuildStreams$.html#withGuildInfoGatewayEvent[Msg<:ackcord.gateway.GatewayEvent[_]](log:org.slf4j.Logger):akka.stream.scaladsl.Flow[Msg,(Msg,Option[ackcord.data.GuildId]),akka.NotUsed]", "kind" : "def"}, {"label" : "createGatewayGuildInfoExtractor", "tail" : "(log: Logger): (GatewayEvent[_]) => Option[GuildId]", "member" : "ackcord.util.GuildStreams.createGatewayGuildInfoExtractor", "link" : "ackcord\/util\/GuildStreams$.html#createGatewayGuildInfoExtractor(log:org.slf4j.Logger):ackcord.gateway.GatewayEvent[_]=>Option[ackcord.data.GuildId]", "kind" : "def"}, {"label" : "withGuildInfoApiMessage", "tail" : "(): Flow[Msg, (Msg, Option[GuildId]), NotUsed]", "member" : "ackcord.util.GuildStreams.withGuildInfoApiMessage", "link" : "ackcord\/util\/GuildStreams$.html#withGuildInfoApiMessage[Msg<:ackcord.APIMessage]:akka.stream.scaladsl.Flow[Msg,(Msg,Option[ackcord.data.GuildId]),akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/GuildStreams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/GuildStreams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/GuildStreams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/GuildStreams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/GuildStreams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/GuildStreams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/GuildStreams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildStreams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildStreams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/GuildStreams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/GuildStreams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/GuildStreams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/GuildStreams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/GuildStreams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/GuildStreams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/GuildStreams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/GuildStreams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/GuildStreams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/GuildStreams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.util.IntCirceEnumWithUnknown", "trait" : "ackcord\/util\/IntCirceEnumWithUnknown.html", "kind" : "trait", "members_trait" : [{"label" : "codec", "tail" : ": Codec[EntryType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[EntryType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], EntryType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[EntryType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): EntryType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, EntryType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createUnknown", "tail" : "(value: Int): EntryType", "member" : "ackcord.util.ValueEnumWithUnknown.createUnknown", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#createUnknown(value:ValueType):EntryType", "kind" : "abstract def"}, {"label" : "values", "tail" : "(): IndexedSeq[EntryType]", "member" : "enumeratum.values.ValueEnum.values", "link" : "ackcord\/util\/IntCirceEnumWithUnknown.html#values:IndexedSeq[EntryType]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.util.JsonNull", "case object" : "ackcord\/util\/JsonNull$.html", "shortDescription" : "", "members_case object" : [{"label" : "toList", "tail" : "(): List[Nothing]", "member" : "ackcord.util.JsonNull.toList", "link" : "ackcord\/util\/JsonNull$.html#toList[A1]:List[Nothing]", "kind" : "def"}, {"label" : "orElseIfUndefined", "tail" : "(other: => Option[B]): Option[B]", "member" : "ackcord.util.JsonNull.orElseIfUndefined", "link" : "ackcord\/util\/JsonNull$.html#orElseIfUndefined[B](other:=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonNull.orElse", "link" : "ackcord\/util\/JsonNull$.html#orElse[B](other:=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "getOrElseIfUndefined", "tail" : "(other: => B): Option[B]", "member" : "ackcord.util.JsonNull.getOrElseIfUndefined", "link" : "ackcord\/util\/JsonNull$.html#getOrElseIfUndefined[B](other:=>B):Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(other: => B): B", "member" : "ackcord.util.JsonNull.getOrElse", "link" : "ackcord\/util\/JsonNull$.html#getOrElse[B](other:=>B):B", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A1) => Unit): Unit", "member" : "ackcord.util.JsonNull.foreach", "link" : "ackcord\/util\/JsonNull$.html#foreach[A1](f:A1=>Unit):Unit", "kind" : "def"}, {"label" : "forall", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonNull.forall", "link" : "ackcord\/util\/JsonNull$.html#forall[A1](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonNull.exists", "link" : "ackcord\/util\/JsonNull$.html#exists[A1](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(value: A1): Boolean", "member" : "ackcord.util.JsonNull.contains", "link" : "ackcord\/util\/JsonNull$.html#contains[A1](value:A1):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonNull.flatMap", "link" : "ackcord\/util\/JsonNull$.html#flatMap[B](f:Nothing=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): JsonOption[B]", "member" : "ackcord.util.JsonNull.map", "link" : "ackcord\/util\/JsonNull$.html#map[B](f:Nothing=>B):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "fold", "tail" : "(ifNull: => B, ifUndefined: => B)(f: (Nothing) => B): B", "member" : "ackcord.util.JsonNull.fold", "link" : "ackcord\/util\/JsonNull$.html#fold[B](ifNull:=>B,ifUndefined:=>B)(f:Nothing=>B):B", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[Nothing]", "member" : "ackcord.util.JsonNull.toOption", "link" : "ackcord\/util\/JsonNull$.html#toOption:Option[Nothing]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonNull.isEmpty", "link" : "ackcord\/util\/JsonNull$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isUndefined", "tail" : "(): Boolean", "member" : "ackcord.util.JsonNull.isUndefined", "link" : "ackcord\/util\/JsonNull$.html#isUndefined:Boolean", "kind" : "def"}, {"label" : "isNull", "tail" : "(): Boolean", "member" : "ackcord.util.JsonNull.isNull", "link" : "ackcord\/util\/JsonNull$.html#isNull:Boolean", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/util\/JsonNull$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/util\/JsonNull$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.nonEmpty", "link" : "ackcord\/util\/JsonNull$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/JsonNull$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/JsonNull$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/JsonNull$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/JsonNull$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/JsonNull$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/JsonNull$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/JsonNull$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonNull$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonNull$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonNull$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/JsonNull$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/JsonNull$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/JsonNull$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/JsonNull$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/JsonNull$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/JsonNull$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/JsonNull$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.util.JsonOption", "object" : "ackcord\/util\/JsonOption$.html", "members_object" : [{"label" : "removeUndefinedToObj", "tail" : "(seq: (String, JsonOption[Json])*): Json", "member" : "ackcord.util.JsonOption.removeUndefinedToObj", "link" : "ackcord\/util\/JsonOption$.html#removeUndefinedToObj(seq:(String,ackcord.util.JsonOption[io.circe.Json])*):io.circe.Json", "kind" : "def"}, {"label" : "removeUndefined", "tail" : "(seq: Seq[(String, JsonOption[Json])]): Seq[(String, Json)]", "member" : "ackcord.util.JsonOption.removeUndefined", "link" : "ackcord\/util\/JsonOption$.html#removeUndefined[A](seq:Seq[(String,ackcord.util.JsonOption[io.circe.Json])]):Seq[(String,io.circe.Json)]", "kind" : "def"}, {"label" : "fromOptionWithUndefined", "tail" : "(opt: Option[A]): JsonOption[A]", "member" : "ackcord.util.JsonOption.fromOptionWithUndefined", "link" : "ackcord\/util\/JsonOption$.html#fromOptionWithUndefined[A](opt:Option[A]):ackcord.util.JsonOption[A]", "kind" : "def"}, {"label" : "fromOptionWithNull", "tail" : "(opt: Option[A]): JsonOption[A]", "member" : "ackcord.util.JsonOption.fromOptionWithNull", "link" : "ackcord\/util\/JsonOption$.html#fromOptionWithNull[A](opt:Option[A]):ackcord.util.JsonOption[A]", "kind" : "def"}, {"label" : "decodeRestOption", "tail" : "(decodeOpt: Decoder[Option[A]]): Decoder[JsonOption[A]]", "member" : "ackcord.util.JsonOption.decodeRestOption", "link" : "ackcord\/util\/JsonOption$.html#decodeRestOption[A](implicitdecodeOpt:io.circe.Decoder[Option[A]]):io.circe.Decoder[ackcord.util.JsonOption[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/JsonOption$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/JsonOption$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/JsonOption$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/JsonOption$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/JsonOption$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/JsonOption$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/JsonOption$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/JsonOption$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/JsonOption$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/JsonOption$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/JsonOption$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/JsonOption$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/JsonOption$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/JsonOption$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/JsonOption$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/JsonOption$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/util\/JsonOption.html", "kind" : "trait", "members_trait" : [{"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.nonEmpty", "link" : "ackcord\/util\/JsonOption.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/JsonOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/JsonOption.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/JsonOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/JsonOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/JsonOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/JsonOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/JsonOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/JsonOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/JsonOption.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/JsonOption.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/JsonOption.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/JsonOption.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/JsonOption.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/JsonOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/JsonOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/JsonOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "ackcord.util.JsonOption.toList", "link" : "ackcord\/util\/JsonOption.html#toList[A1>:A]:List[A]", "kind" : "abstract def"}, {"label" : "orElseIfUndefined", "tail" : "(other: => Option[B]): Option[B]", "member" : "ackcord.util.JsonOption.orElseIfUndefined", "link" : "ackcord\/util\/JsonOption.html#orElseIfUndefined[B>:A](other:=>Option[B]):Option[B]", "kind" : "abstract def"}, {"label" : "orElse", "tail" : "(other: => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonOption.orElse", "link" : "ackcord\/util\/JsonOption.html#orElse[B>:A](other:=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "abstract def"}, {"label" : "getOrElseIfUndefined", "tail" : "(other: => B): Option[B]", "member" : "ackcord.util.JsonOption.getOrElseIfUndefined", "link" : "ackcord\/util\/JsonOption.html#getOrElseIfUndefined[B>:A](other:=>B):Option[B]", "kind" : "abstract def"}, {"label" : "getOrElse", "tail" : "(other: => B): B", "member" : "ackcord.util.JsonOption.getOrElse", "link" : "ackcord\/util\/JsonOption.html#getOrElse[B>:A](other:=>B):B", "kind" : "abstract def"}, {"label" : "foreach", "tail" : "(f: (A1) => Unit): Unit", "member" : "ackcord.util.JsonOption.foreach", "link" : "ackcord\/util\/JsonOption.html#foreach[A1>:A](f:A1=>Unit):Unit", "kind" : "abstract def"}, {"label" : "forall", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonOption.forall", "link" : "ackcord\/util\/JsonOption.html#forall[A1>:A](f:A1=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonOption.exists", "link" : "ackcord\/util\/JsonOption.html#exists[A1>:A](f:A1=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(value: A1): Boolean", "member" : "ackcord.util.JsonOption.contains", "link" : "ackcord\/util\/JsonOption.html#contains[A1>:A](value:A1):Boolean", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(f: (A) => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonOption.flatMap", "link" : "ackcord\/util\/JsonOption.html#flatMap[B](f:A=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) => B): JsonOption[B]", "member" : "ackcord.util.JsonOption.map", "link" : "ackcord\/util\/JsonOption.html#map[B](f:A=>B):ackcord.util.JsonOption[B]", "kind" : "abstract def"}, {"label" : "fold", "tail" : "(ifNull: => B, ifUndefined: => B)(f: (A) => B): B", "member" : "ackcord.util.JsonOption.fold", "link" : "ackcord\/util\/JsonOption.html#fold[B](ifNull:=>B,ifUndefined:=>B)(f:A=>B):B", "kind" : "abstract def"}, {"label" : "toOption", "tail" : "(): Option[A]", "member" : "ackcord.util.JsonOption.toOption", "link" : "ackcord\/util\/JsonOption.html#toOption:Option[A]", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.isEmpty", "link" : "ackcord\/util\/JsonOption.html#isEmpty:Boolean", "kind" : "abstract def"}, {"label" : "isUndefined", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.isUndefined", "link" : "ackcord\/util\/JsonOption.html#isUndefined:Boolean", "kind" : "abstract def"}, {"label" : "isNull", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.isNull", "link" : "ackcord\/util\/JsonOption.html#isNull:Boolean", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.util.JsonSome", "shortDescription" : "", "members_case class" : [{"label" : "toList", "tail" : "(): List[A]", "member" : "ackcord.util.JsonSome.toList", "link" : "ackcord\/util\/JsonSome.html#toList[A1>:A]:List[A]", "kind" : "def"}, {"label" : "orElseIfUndefined", "tail" : "(other: => Option[B]): Option[B]", "member" : "ackcord.util.JsonSome.orElseIfUndefined", "link" : "ackcord\/util\/JsonSome.html#orElseIfUndefined[B>:A](other:=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonSome.orElse", "link" : "ackcord\/util\/JsonSome.html#orElse[B>:A](other:=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "getOrElseIfUndefined", "tail" : "(other: => B): Option[B]", "member" : "ackcord.util.JsonSome.getOrElseIfUndefined", "link" : "ackcord\/util\/JsonSome.html#getOrElseIfUndefined[B>:A](other:=>B):Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(other: => B): B", "member" : "ackcord.util.JsonSome.getOrElse", "link" : "ackcord\/util\/JsonSome.html#getOrElse[B>:A](other:=>B):B", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A1) => Unit): Unit", "member" : "ackcord.util.JsonSome.foreach", "link" : "ackcord\/util\/JsonSome.html#foreach[A1>:A](f:A1=>Unit):Unit", "kind" : "def"}, {"label" : "forall", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonSome.forall", "link" : "ackcord\/util\/JsonSome.html#forall[A1>:A](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonSome.exists", "link" : "ackcord\/util\/JsonSome.html#exists[A1>:A](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(value: A1): Boolean", "member" : "ackcord.util.JsonSome.contains", "link" : "ackcord\/util\/JsonSome.html#contains[A1>:A](value:A1):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonSome.flatMap", "link" : "ackcord\/util\/JsonSome.html#flatMap[B](f:A=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): JsonOption[B]", "member" : "ackcord.util.JsonSome.map", "link" : "ackcord\/util\/JsonSome.html#map[B](f:A=>B):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "fold", "tail" : "(ifNull: => B, ifUndefined: => B)(f: (A) => B): B", "member" : "ackcord.util.JsonSome.fold", "link" : "ackcord\/util\/JsonSome.html#fold[B](ifNull:=>B,ifUndefined:=>B)(f:A=>B):B", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[A]", "member" : "ackcord.util.JsonSome.toOption", "link" : "ackcord\/util\/JsonSome.html#toOption:Option[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonSome.isEmpty", "link" : "ackcord\/util\/JsonSome.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isUndefined", "tail" : "(): Boolean", "member" : "ackcord.util.JsonSome.isUndefined", "link" : "ackcord\/util\/JsonSome.html#isUndefined:Boolean", "kind" : "def"}, {"label" : "isNull", "tail" : "(): Boolean", "member" : "ackcord.util.JsonSome.isNull", "link" : "ackcord\/util\/JsonSome.html#isNull:Boolean", "kind" : "def"}, {"member" : "ackcord.util.JsonSome#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "ackcord.util.JsonSome.value", "link" : "ackcord\/util\/JsonSome.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/util\/JsonSome.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.nonEmpty", "link" : "ackcord\/util\/JsonSome.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/JsonSome.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/JsonSome.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/JsonSome.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/JsonSome.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/JsonSome.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/JsonSome.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/JsonSome.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonSome.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonSome.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonSome.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/JsonSome.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/JsonSome.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/JsonSome.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/JsonSome.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/JsonSome.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/JsonSome.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/util\/JsonSome.html", "kind" : "case class"}, {"name" : "ackcord.util.JsonUndefined", "case object" : "ackcord\/util\/JsonUndefined$.html", "shortDescription" : "", "members_case object" : [{"label" : "toList", "tail" : "(): List[Nothing]", "member" : "ackcord.util.JsonUndefined.toList", "link" : "ackcord\/util\/JsonUndefined$.html#toList[A1]:List[Nothing]", "kind" : "def"}, {"label" : "orElseIfUndefined", "tail" : "(other: => Option[B]): Option[B]", "member" : "ackcord.util.JsonUndefined.orElseIfUndefined", "link" : "ackcord\/util\/JsonUndefined$.html#orElseIfUndefined[B](other:=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonUndefined.orElse", "link" : "ackcord\/util\/JsonUndefined$.html#orElse[B](other:=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "getOrElseIfUndefined", "tail" : "(other: => B): Option[B]", "member" : "ackcord.util.JsonUndefined.getOrElseIfUndefined", "link" : "ackcord\/util\/JsonUndefined$.html#getOrElseIfUndefined[B](other:=>B):Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(other: => B): B", "member" : "ackcord.util.JsonUndefined.getOrElse", "link" : "ackcord\/util\/JsonUndefined$.html#getOrElse[B](other:=>B):B", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A1) => Unit): Unit", "member" : "ackcord.util.JsonUndefined.foreach", "link" : "ackcord\/util\/JsonUndefined$.html#foreach[A1](f:A1=>Unit):Unit", "kind" : "def"}, {"label" : "forall", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonUndefined.forall", "link" : "ackcord\/util\/JsonUndefined$.html#forall[A1](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (A1) => Boolean): Boolean", "member" : "ackcord.util.JsonUndefined.exists", "link" : "ackcord\/util\/JsonUndefined$.html#exists[A1](f:A1=>Boolean):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(value: A1): Boolean", "member" : "ackcord.util.JsonUndefined.contains", "link" : "ackcord\/util\/JsonUndefined$.html#contains[A1](value:A1):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) => JsonOption[B]): JsonOption[B]", "member" : "ackcord.util.JsonUndefined.flatMap", "link" : "ackcord\/util\/JsonUndefined$.html#flatMap[B](f:Nothing=>ackcord.util.JsonOption[B]):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): JsonOption[B]", "member" : "ackcord.util.JsonUndefined.map", "link" : "ackcord\/util\/JsonUndefined$.html#map[B](f:Nothing=>B):ackcord.util.JsonOption[B]", "kind" : "def"}, {"label" : "fold", "tail" : "(ifNull: => B, ifUndefined: => B)(f: (Nothing) => B): B", "member" : "ackcord.util.JsonUndefined.fold", "link" : "ackcord\/util\/JsonUndefined$.html#fold[B](ifNull:=>B,ifUndefined:=>B)(f:Nothing=>B):B", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[Nothing]", "member" : "ackcord.util.JsonUndefined.toOption", "link" : "ackcord\/util\/JsonUndefined$.html#toOption:Option[Nothing]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonUndefined.isEmpty", "link" : "ackcord\/util\/JsonUndefined$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isUndefined", "tail" : "(): Boolean", "member" : "ackcord.util.JsonUndefined.isUndefined", "link" : "ackcord\/util\/JsonUndefined$.html#isUndefined:Boolean", "kind" : "def"}, {"label" : "isNull", "tail" : "(): Boolean", "member" : "ackcord.util.JsonUndefined.isNull", "link" : "ackcord\/util\/JsonUndefined$.html#isNull:Boolean", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/util\/JsonUndefined$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/util\/JsonUndefined$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "ackcord.util.JsonOption.nonEmpty", "link" : "ackcord\/util\/JsonUndefined$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/JsonUndefined$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/JsonUndefined$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/JsonUndefined$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/JsonUndefined$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/JsonUndefined$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/JsonUndefined$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/JsonUndefined$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonUndefined$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonUndefined$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/JsonUndefined$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/JsonUndefined$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/JsonUndefined$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/JsonUndefined$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/JsonUndefined$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/JsonUndefined$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/JsonUndefined$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/JsonUndefined$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.util.RepeatLast", "shortDescription" : "", "object" : "ackcord\/util\/RepeatLast$.html", "members_class" : [{"label" : "createLogic", "tail" : "(inheritedAttributes: Attributes): GraphStageLogic", "member" : "ackcord.util.RepeatLast.createLogic", "link" : "ackcord\/util\/RepeatLast.html#createLogic(inheritedAttributes:akka.stream.Attributes):akka.stream.stage.GraphStageLogic", "kind" : "def"}, {"label" : "shape", "tail" : "(): FlowShape[A, A]", "member" : "ackcord.util.RepeatLast.shape", "link" : "ackcord\/util\/RepeatLast.html#shape:akka.stream.FlowShape[A,A]", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[A]", "member" : "ackcord.util.RepeatLast.out", "link" : "ackcord\/util\/RepeatLast.html#out:akka.stream.Outlet[A]", "kind" : "val"}, {"label" : "in", "tail" : ": Inlet[A]", "member" : "ackcord.util.RepeatLast.in", "link" : "ackcord\/util\/RepeatLast.html#in:akka.stream.Inlet[A]", "kind" : "val"}, {"member" : "ackcord.util.RepeatLast#<init>", "error" : "unsupported entity"}, {"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, NotUsed)", "member" : "akka.stream.stage.GraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/util\/RepeatLast.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,akka.NotUsed)", "kind" : "final def"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/util\/RepeatLast.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/util\/RepeatLast.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/util\/RepeatLast.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/RepeatLast.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/RepeatLast.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/RepeatLast.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[FlowShape[A, A], NotUsed]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/util\/RepeatLast.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/util\/RepeatLast.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/RepeatLast.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/RepeatLast.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/RepeatLast.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/RepeatLast.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/RepeatLast.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/RepeatLast.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/RepeatLast.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/RepeatLast.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/RepeatLast.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/RepeatLast.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/RepeatLast.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/RepeatLast.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/RepeatLast.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/RepeatLast.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/RepeatLast.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/RepeatLast.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "flow", "tail" : "(): Flow[A, A, NotUsed]", "member" : "ackcord.util.RepeatLast.flow", "link" : "ackcord\/util\/RepeatLast$.html#flow[A]:akka.stream.scaladsl.Flow[A,A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/RepeatLast$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/RepeatLast$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/RepeatLast$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/RepeatLast$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/RepeatLast$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/RepeatLast$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/RepeatLast$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/RepeatLast$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/RepeatLast$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/RepeatLast$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/RepeatLast$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/RepeatLast$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/RepeatLast$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/RepeatLast$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/RepeatLast$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/RepeatLast$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/RepeatLast$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/RepeatLast.html", "kind" : "class"}, {"name" : "ackcord.util.Streamable", "object" : "ackcord\/util\/Streamable$.html", "members_object" : [{"label" : "sourceStreamable", "tail" : ": Streamable[[α$2$]Source[α$2$, NotUsed]]", "member" : "ackcord.util.Streamable.sourceStreamable", "link" : "ackcord\/util\/Streamable$.html#sourceStreamable:ackcord.util.Streamable[[α$2$]akka.stream.scaladsl.Source[α$2$,akka.NotUsed]]", "kind" : "implicit val"}, {"label" : "optFutureStreamable", "tail" : ": Streamable[OptFuture]", "member" : "ackcord.util.Streamable.optFutureStreamable", "link" : "ackcord\/util\/Streamable$.html#optFutureStreamable:ackcord.util.Streamable[ackcord.OptFuture]", "kind" : "implicit val"}, {"label" : "futureOptionTStreamable", "tail" : ": Streamable[[β$0$]OptionT[Future, β$0$]]", "member" : "ackcord.util.Streamable.futureOptionTStreamable", "link" : "ackcord\/util\/Streamable$.html#futureOptionTStreamable:ackcord.util.Streamable[[β$0$]cats.data.OptionT[scala.concurrent.Future,β$0$]]", "kind" : "implicit val"}, {"label" : "futureFoldableStreamable", "tail" : "(arg0: Foldable[F]): Streamable[[A]Future[F[A]]]", "member" : "ackcord.util.Streamable.futureFoldableStreamable", "link" : "ackcord\/util\/Streamable$.html#futureFoldableStreamable[F[_]](implicitevidence$1:cats.Foldable[F]):ackcord.util.Streamable[[A]scala.concurrent.Future[F[A]]]", "kind" : "implicit def"}, {"label" : "futureStreamable", "tail" : ": Streamable[Future]", "member" : "ackcord.util.Streamable.futureStreamable", "link" : "ackcord\/util\/Streamable$.html#futureStreamable:ackcord.util.Streamable[scala.concurrent.Future]", "kind" : "implicit val"}, {"label" : "idStreamable", "tail" : ": Streamable[Id]", "member" : "ackcord.util.Streamable.idStreamable", "link" : "ackcord\/util\/Streamable$.html#idStreamable:ackcord.util.Streamable[cats.Id]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(F: Streamable[F]): Streamable[F]", "member" : "ackcord.util.Streamable.apply", "link" : "ackcord\/util\/Streamable$.html#apply[F[_]](implicitF:ackcord.util.Streamable[F]):ackcord.util.Streamable[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/Streamable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/Streamable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/Streamable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/Streamable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/Streamable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/Streamable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/Streamable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/Streamable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/Streamable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/Streamable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/Streamable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/Streamable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/Streamable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/Streamable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/Streamable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/Streamable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/util\/Streamable.html", "kind" : "trait", "members_trait" : [{"label" : "optionToSource", "tail" : "(opt: OptionT[F, A]): Source[A, NotUsed]", "member" : "ackcord.util.Streamable.optionToSource", "link" : "ackcord\/util\/Streamable.html#optionToSource[A](opt:cats.data.OptionT[F,A]):akka.stream.scaladsl.Source[A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/Streamable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/Streamable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/Streamable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/Streamable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/Streamable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/Streamable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/Streamable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Streamable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/Streamable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/Streamable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/Streamable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/Streamable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/Streamable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/Streamable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/Streamable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/Streamable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/Streamable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toSource", "tail" : "(fa: F[A]): Source[A, NotUsed]", "member" : "ackcord.util.Streamable.toSource", "link" : "ackcord\/util\/Streamable.html#toSource[A](fa:F[A]):akka.stream.scaladsl.Source[A,akka.NotUsed]", "kind" : "abstract def"}], "shortDescription" : "Typeclass for converting some type F[A] to a Source[A, NotUsed]"}, {"name" : "ackcord.util.StreamBalancer", "shortDescription" : "", "object" : "ackcord\/util\/StreamBalancer$.html", "members_object" : [{"label" : "balanceMerge", "tail" : "(parallelism: Int, flow: Graph[FlowShape[I, O], NotUsed]): Flow[I, O, NotUsed]", "member" : "ackcord.util.StreamBalancer.balanceMerge", "link" : "ackcord\/util\/StreamBalancer$.html#balanceMerge[I,O](parallelism:Int,flow:akka.stream.Graph[akka.stream.FlowShape[I,O],akka.NotUsed]):akka.stream.scaladsl.Flow[I,O,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/StreamBalancer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/StreamBalancer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/StreamBalancer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/StreamBalancer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/StreamBalancer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/StreamBalancer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/StreamBalancer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamBalancer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamBalancer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamBalancer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/StreamBalancer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/StreamBalancer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/StreamBalancer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/StreamBalancer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/StreamBalancer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/StreamBalancer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/StreamBalancer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/StreamBalancer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/StreamBalancer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.util.StreamInstances", "shortDescription" : "", "object" : "ackcord\/util\/StreamInstances$.html", "members_object" : [{"label" : "SourceFlatmap", "tail" : "", "member" : "ackcord.util.StreamInstances.SourceFlatmap", "link" : "ackcord\/util\/StreamInstances$.html#SourceFlatmap[A,M1]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "sinkInstance", "tail" : "(): Contravariant[[α$2$]Sink[α$2$, Mat]]", "member" : "ackcord.util.StreamInstances.sinkInstance", "link" : "ackcord\/util\/StreamInstances$.html#sinkInstance[Mat]:cats.Contravariant[[α$2$]akka.stream.scaladsl.Sink[α$2$,Mat]]", "kind" : "implicit def"}, {"label" : "flowInstance", "tail" : "(): Functor[[β$0$]Flow[In, β$0$, Mat]]", "member" : "ackcord.util.StreamInstances.flowInstance", "link" : "ackcord\/util\/StreamInstances$.html#flowInstance[In,Mat]:cats.Functor[[β$0$]akka.stream.scaladsl.Flow[In,β$0$,Mat]]", "kind" : "implicit def"}, {"label" : "sourceInstance", "tail" : ": MonadError[SourceRequest, Throwable] with Alternative[SourceRequest]", "member" : "ackcord.util.StreamInstances.sourceInstance", "link" : "ackcord\/util\/StreamInstances$.html#sourceInstance:cats.MonadError[ackcord.util.StreamInstances.SourceRequest,Throwable]withcats.Alternative[ackcord.util.StreamInstances.SourceRequest]", "kind" : "implicit val"}, {"label" : "SourceRequest", "tail" : "", "member" : "ackcord.util.StreamInstances.SourceRequest", "link" : "ackcord\/util\/StreamInstances$.html#SourceRequest[A]=akka.stream.scaladsl.Source[A,akka.NotUsed]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/StreamInstances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/StreamInstances$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/StreamInstances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/StreamInstances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/StreamInstances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/StreamInstances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/StreamInstances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamInstances$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamInstances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StreamInstances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/StreamInstances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/StreamInstances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/StreamInstances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/StreamInstances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/StreamInstances$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/StreamInstances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/StreamInstances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/StreamInstances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/StreamInstances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.util.StringCirceEnumWithUnknown", "trait" : "ackcord\/util\/StringCirceEnumWithUnknown.html", "kind" : "trait", "members_trait" : [{"label" : "codec", "tail" : ": Codec[EntryType]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[EntryType]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], EntryType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[EntryType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): EntryType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, EntryType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createUnknown", "tail" : "(value: String): EntryType", "member" : "ackcord.util.ValueEnumWithUnknown.createUnknown", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#createUnknown(value:ValueType):EntryType", "kind" : "abstract def"}, {"label" : "values", "tail" : "(): IndexedSeq[EntryType]", "member" : "enumeratum.values.ValueEnum.values", "link" : "ackcord\/util\/StringCirceEnumWithUnknown.html#values:IndexedSeq[EntryType]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.util.Switch", "shortDescription" : "", "members_class" : [{"label" : "createLogic", "tail" : "(inheritedAttributes: Attributes): GraphStageLogic", "member" : "ackcord.util.Switch.createLogic", "link" : "ackcord\/util\/Switch.html#createLogic(inheritedAttributes:akka.stream.Attributes):akka.stream.stage.GraphStageLogic", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[A]", "member" : "ackcord.util.Switch.out", "link" : "ackcord\/util\/Switch.html#out:akka.stream.Outlet[A]", "kind" : "val"}, {"label" : "in2", "tail" : ": Inlet[A]", "member" : "ackcord.util.Switch.in2", "link" : "ackcord\/util\/Switch.html#in2:akka.stream.Inlet[A]", "kind" : "val"}, {"label" : "in1", "tail" : ": Inlet[A]", "member" : "ackcord.util.Switch.in1", "link" : "ackcord\/util\/Switch.html#in1:akka.stream.Inlet[A]", "kind" : "val"}, {"label" : "shape", "tail" : ": FanInShape2[A, A, A]", "member" : "ackcord.util.Switch.shape", "link" : "ackcord\/util\/Switch.html#shape:akka.stream.FanInShape2[A,A,A]", "kind" : "val"}, {"member" : "ackcord.util.Switch#<init>", "error" : "unsupported entity"}, {"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, NotUsed)", "member" : "akka.stream.stage.GraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/util\/Switch.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,akka.NotUsed)", "kind" : "final def"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/util\/Switch.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/util\/Switch.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/util\/Switch.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/Switch.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/Switch.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/Switch.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[FanInShape2[A, A, A], NotUsed]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/util\/Switch.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/util\/Switch.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/Switch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/Switch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/Switch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/Switch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/Switch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/Switch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/Switch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Switch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Switch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/Switch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/Switch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/Switch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/Switch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/Switch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/Switch.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/Switch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/Switch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/Switch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/Switch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/Switch.html", "kind" : "class"}, {"name" : "ackcord.util.UdpConnectedFlow", "shortDescription" : "", "object" : "ackcord\/util\/UdpConnectedFlow$.html", "members_class" : [{"label" : "createLogic", "tail" : "(inheritedAttributes: Attributes): GraphStageLogic", "member" : "ackcord.util.UdpConnectedFlow.createLogic", "link" : "ackcord\/util\/UdpConnectedFlow.html#createLogic(inheritedAttributes:akka.stream.Attributes):akka.stream.stage.GraphStageLogic", "kind" : "def"}, {"label" : "shape", "tail" : "(): FlowShape[ByteString, ByteString]", "member" : "ackcord.util.UdpConnectedFlow.shape", "link" : "ackcord\/util\/UdpConnectedFlow.html#shape:akka.stream.FlowShape[akka.util.ByteString,akka.util.ByteString]", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[ByteString]", "member" : "ackcord.util.UdpConnectedFlow.out", "link" : "ackcord\/util\/UdpConnectedFlow.html#out:akka.stream.Outlet[akka.util.ByteString]", "kind" : "val"}, {"label" : "in", "tail" : ": Inlet[ByteString]", "member" : "ackcord.util.UdpConnectedFlow.in", "link" : "ackcord\/util\/UdpConnectedFlow.html#in:akka.stream.Inlet[akka.util.ByteString]", "kind" : "val"}, {"member" : "ackcord.util.UdpConnectedFlow#<init>", "error" : "unsupported entity"}, {"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, NotUsed)", "member" : "akka.stream.stage.GraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/util\/UdpConnectedFlow.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,akka.NotUsed)", "kind" : "final def"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/util\/UdpConnectedFlow.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/util\/UdpConnectedFlow.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/util\/UdpConnectedFlow.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/UdpConnectedFlow.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/UdpConnectedFlow.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/util\/UdpConnectedFlow.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[FlowShape[ByteString, ByteString], NotUsed]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/util\/UdpConnectedFlow.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/util\/UdpConnectedFlow.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/UdpConnectedFlow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/UdpConnectedFlow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/UdpConnectedFlow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/UdpConnectedFlow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/UdpConnectedFlow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/UdpConnectedFlow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/UdpConnectedFlow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/UdpConnectedFlow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/UdpConnectedFlow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/UdpConnectedFlow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/UdpConnectedFlow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/UdpConnectedFlow.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/UdpConnectedFlow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/UdpConnectedFlow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/UdpConnectedFlow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/UdpConnectedFlow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "flow", "tail" : "(remoteAddress: InetSocketAddress, localAddress: Option[InetSocketAddress], connectOptions: Iterable[SocketOption])(system: ActorSystem[Nothing]): Flow[ByteString, ByteString, NotUsed]", "member" : "ackcord.util.UdpConnectedFlow.flow", "link" : "ackcord\/util\/UdpConnectedFlow$.html#flow(remoteAddress:java.net.InetSocketAddress,localAddress:Option[java.net.InetSocketAddress],connectOptions:scala.collection.immutable.Iterable[akka.io.Inet.SocketOption])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[akka.util.ByteString,akka.util.ByteString,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/UdpConnectedFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/UdpConnectedFlow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/UdpConnectedFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/UdpConnectedFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/UdpConnectedFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/UdpConnectedFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/UdpConnectedFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/UdpConnectedFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/UdpConnectedFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/UdpConnectedFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/UdpConnectedFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/UdpConnectedFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/UdpConnectedFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/UdpConnectedFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/UdpConnectedFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/UdpConnectedFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/UdpConnectedFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/util\/UdpConnectedFlow.html", "kind" : "class"}, {"name" : "ackcord.util.ValueEnumWithUnknown", "trait" : "ackcord\/util\/ValueEnumWithUnknown.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/util\/ValueEnumWithUnknown.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createUnknown", "tail" : "(value: ValueType): EntryType", "member" : "ackcord.util.ValueEnumWithUnknown.createUnknown", "link" : "ackcord\/util\/ValueEnumWithUnknown.html#createUnknown(value:ValueType):EntryType", "kind" : "abstract def"}], "shortDescription" : ""}], "ackcord" : [{"name" : "ackcord.AckCord", "shortDescription" : "", "object" : "ackcord\/AckCord$.html", "members_object" : [{"label" : "DiscordVoiceVersion", "tail" : ": String", "member" : "ackcord.AckCord.DiscordVoiceVersion", "link" : "ackcord\/AckCord$.html#DiscordVoiceVersion:String", "kind" : "val"}, {"label" : "DiscordApiVersion", "tail" : ": String", "member" : "ackcord.AckCord.DiscordApiVersion", "link" : "ackcord\/AckCord$.html#DiscordApiVersion:String", "kind" : "val"}, {"label" : "Version", "tail" : ": String", "member" : "ackcord.AckCord.Version", "link" : "ackcord\/AckCord$.html#Version:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/AckCord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/AckCord$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/AckCord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/AckCord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/AckCord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/AckCord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/AckCord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/AckCord$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/AckCord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/AckCord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/AckCord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/AckCord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/AckCord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/AckCord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/AckCord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/AckCord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/AckCord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/AckCord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/AckCord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.APIMessage", "object" : "ackcord\/APIMessage$.html", "members_object" : [{"label" : "WebhookUpdate", "tail" : "", "member" : "ackcord.APIMessage.WebhookUpdate", "link" : "ackcord\/APIMessage$.html#WebhookUpdateextendsAPIMessage.GuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "VoiceServerUpdate", "tail" : "", "member" : "ackcord.APIMessage.VoiceServerUpdate", "link" : "ackcord\/APIMessage$.html#VoiceServerUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "VoiceStateUpdate", "tail" : "", "member" : "ackcord.APIMessage.VoiceStateUpdate", "link" : "ackcord\/APIMessage$.html#VoiceStateUpdateextendsAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "UserUpdate", "tail" : "", "member" : "ackcord.APIMessage.UserUpdate", "link" : "ackcord\/APIMessage$.html#UserUpdateextendsAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "TypingStart", "tail" : "", "member" : "ackcord.APIMessage.TypingStart", "link" : "ackcord\/APIMessage$.html#TypingStartextendsAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "PresenceUpdate", "tail" : "", "member" : "ackcord.APIMessage.PresenceUpdate", "link" : "ackcord\/APIMessage$.html#PresenceUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveEmoji", "tail" : "", "member" : "ackcord.APIMessage.MessageReactionRemoveEmoji", "link" : "ackcord\/APIMessage$.html#MessageReactionRemoveEmojiextendsAPIMessage.MessageIdMessagewithAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveAll", "tail" : "", "member" : "ackcord.APIMessage.MessageReactionRemoveAll", "link" : "ackcord\/APIMessage$.html#MessageReactionRemoveAllextendsAPIMessage.MessageIdMessagewithAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemove", "tail" : "", "member" : "ackcord.APIMessage.MessageReactionRemove", "link" : "ackcord\/APIMessage$.html#MessageReactionRemoveextendsAPIMessage.MessageIdMessagewithAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionAdd", "tail" : "", "member" : "ackcord.APIMessage.MessageReactionAdd", "link" : "ackcord\/APIMessage$.html#MessageReactionAddextendsAPIMessage.MessageIdMessagewithAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDeleteBulk", "tail" : "", "member" : "ackcord.APIMessage.MessageDeleteBulk", "link" : "ackcord\/APIMessage$.html#MessageDeleteBulkextendsAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDelete", "tail" : "", "member" : "ackcord.APIMessage.MessageDelete", "link" : "ackcord\/APIMessage$.html#MessageDeleteextendsAPIMessage.MessageIdMessagewithAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageIdMessage", "tail" : "", "member" : "ackcord.APIMessage.MessageIdMessage", "link" : "ackcord\/APIMessage$.html#MessageIdMessageextendsAPIMessage.TextChannelIdMessage", "kind" : "sealed trait"}, {"label" : "MessageUpdate", "tail" : "", "member" : "ackcord.APIMessage.MessageUpdate", "link" : "ackcord\/APIMessage$.html#MessageUpdateextendsAPIMessage.OptGuildMessagewithAPIMessage.MessageMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageCreate", "tail" : "", "member" : "ackcord.APIMessage.MessageCreate", "link" : "ackcord\/APIMessage$.html#MessageCreateextendsAPIMessage.OptGuildMessagewithAPIMessage.MessageMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "MessageMessage", "tail" : "", "member" : "ackcord.APIMessage.MessageMessage", "link" : "ackcord\/APIMessage$.html#MessageMessageextendsAPIMessage", "kind" : "sealed trait"}, {"label" : "InviteDelete", "tail" : "", "member" : "ackcord.APIMessage.InviteDelete", "link" : "ackcord\/APIMessage$.html#InviteDeleteextendsAPIMessage.OptGuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "InviteCreate", "tail" : "", "member" : "ackcord.APIMessage.InviteCreate", "link" : "ackcord\/APIMessage$.html#InviteCreateextendsAPIMessage.OptGuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleDelete", "tail" : "", "member" : "ackcord.APIMessage.GuildRoleDelete", "link" : "ackcord\/APIMessage$.html#GuildRoleDeleteextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleUpdate", "tail" : "", "member" : "ackcord.APIMessage.GuildRoleUpdate", "link" : "ackcord\/APIMessage$.html#GuildRoleUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleCreate", "tail" : "", "member" : "ackcord.APIMessage.GuildRoleCreate", "link" : "ackcord\/APIMessage$.html#GuildRoleCreateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMembersChunk", "tail" : "", "member" : "ackcord.APIMessage.GuildMembersChunk", "link" : "ackcord\/APIMessage$.html#GuildMembersChunkextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberUpdate", "tail" : "", "member" : "ackcord.APIMessage.GuildMemberUpdate", "link" : "ackcord\/APIMessage$.html#GuildMemberUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberRemove", "tail" : "", "member" : "ackcord.APIMessage.GuildMemberRemove", "link" : "ackcord\/APIMessage$.html#GuildMemberRemoveextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberAdd", "tail" : "", "member" : "ackcord.APIMessage.GuildMemberAdd", "link" : "ackcord\/APIMessage$.html#GuildMemberAddextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildIntegrationsUpdate", "tail" : "", "member" : "ackcord.APIMessage.GuildIntegrationsUpdate", "link" : "ackcord\/APIMessage$.html#GuildIntegrationsUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildEmojiUpdate", "tail" : "", "member" : "ackcord.APIMessage.GuildEmojiUpdate", "link" : "ackcord\/APIMessage$.html#GuildEmojiUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildBanRemove", "tail" : "", "member" : "ackcord.APIMessage.GuildBanRemove", "link" : "ackcord\/APIMessage$.html#GuildBanRemoveextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildBanAdd", "tail" : "", "member" : "ackcord.APIMessage.GuildBanAdd", "link" : "ackcord\/APIMessage$.html#GuildBanAddextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildDelete", "tail" : "", "member" : "ackcord.APIMessage.GuildDelete", "link" : "ackcord\/APIMessage$.html#GuildDeleteextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildUpdate", "tail" : "", "member" : "ackcord.APIMessage.GuildUpdate", "link" : "ackcord\/APIMessage$.html#GuildUpdateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildCreate", "tail" : "", "member" : "ackcord.APIMessage.GuildCreate", "link" : "ackcord\/APIMessage$.html#GuildCreateextendsAPIMessage.GuildMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMessage", "tail" : "", "member" : "ackcord.APIMessage.GuildMessage", "link" : "ackcord\/APIMessage$.html#GuildMessageextendsAPIMessage", "kind" : "sealed trait"}, {"label" : "ChannelPinsUpdate", "tail" : "", "member" : "ackcord.APIMessage.ChannelPinsUpdate", "link" : "ackcord\/APIMessage$.html#ChannelPinsUpdateextendsAPIMessage.TextChannelIdMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "TextChannelIdMessage", "tail" : "", "member" : "ackcord.APIMessage.TextChannelIdMessage", "link" : "ackcord\/APIMessage$.html#TextChannelIdMessageextendsAPIMessage.OptGuildMessage", "kind" : "sealed trait"}, {"label" : "ChannelDelete", "tail" : "", "member" : "ackcord.APIMessage.ChannelDelete", "link" : "ackcord\/APIMessage$.html#ChannelDeleteextendsAPIMessage.OptGuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelUpdate", "tail" : "", "member" : "ackcord.APIMessage.ChannelUpdate", "link" : "ackcord\/APIMessage$.html#ChannelUpdateextendsAPIMessage.OptGuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelCreate", "tail" : "", "member" : "ackcord.APIMessage.ChannelCreate", "link" : "ackcord\/APIMessage$.html#ChannelCreateextendsAPIMessage.OptGuildMessagewithAPIMessage.ChannelMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelMessage", "tail" : "", "member" : "ackcord.APIMessage.ChannelMessage", "link" : "ackcord\/APIMessage$.html#ChannelMessageextendsAPIMessage", "kind" : "sealed trait"}, {"label" : "OptGuildMessage", "tail" : "", "member" : "ackcord.APIMessage.OptGuildMessage", "link" : "ackcord\/APIMessage$.html#OptGuildMessageextendsAPIMessage", "kind" : "sealed trait"}, {"label" : "Resumed", "tail" : "", "member" : "ackcord.APIMessage.Resumed", "link" : "ackcord\/APIMessage$.html#ResumedextendsAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Ready", "tail" : "", "member" : "ackcord.APIMessage.Ready", "link" : "ackcord\/APIMessage$.html#ReadyextendsAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/APIMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/APIMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/APIMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/APIMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/APIMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/APIMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/APIMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/APIMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/APIMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/APIMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/APIMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/APIMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/APIMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/APIMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/APIMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/APIMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/APIMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/APIMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/APIMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/APIMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/APIMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/APIMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/APIMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/APIMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/APIMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/APIMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/APIMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/APIMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/APIMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/APIMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/APIMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/APIMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/APIMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cache", "tail" : "(): CacheState", "member" : "ackcord.APIMessage.cache", "link" : "ackcord\/APIMessage.html#cache:ackcord.CacheState", "kind" : "abstract def"}], "shortDescription" : "Base trait normal messages."}, {"name" : "ackcord.APIMessageCacheUpdate", "shortDescription" : "An event that should publish an APIMessage.", "members_case class" : [{"label" : "process", "tail" : "(builder: CacheSnapshotBuilder)(log: Logger): Unit", "member" : "ackcord.APIMessageCacheUpdate.process", "link" : "ackcord\/APIMessageCacheUpdate.html#process(builder:ackcord.cachehandlers.CacheSnapshotBuilder)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"member" : "ackcord.APIMessageCacheUpdate#<init>", "error" : "unsupported entity"}, {"label" : "dispatch", "tail" : ": Dispatch[_]", "member" : "ackcord.APIMessageCacheUpdate.dispatch", "link" : "ackcord\/APIMessageCacheUpdate.html#dispatch:ackcord.gateway.Dispatch[_]", "kind" : "val"}, {"label" : "registry", "tail" : ": CacheTypeRegistry", "member" : "ackcord.APIMessageCacheUpdate.registry", "link" : "ackcord\/APIMessageCacheUpdate.html#registry:ackcord.cachehandlers.CacheTypeRegistry", "kind" : "val"}, {"label" : "handler", "tail" : ": CacheHandler[Data]", "member" : "ackcord.APIMessageCacheUpdate.handler", "link" : "ackcord\/APIMessageCacheUpdate.html#handler:ackcord.cachehandlers.CacheHandler[Data]", "kind" : "val"}, {"label" : "sendEvent", "tail" : ": (CacheState) => Option[APIMessage]", "member" : "ackcord.APIMessageCacheUpdate.sendEvent", "link" : "ackcord\/APIMessageCacheUpdate.html#sendEvent:ackcord.CacheState=>Option[ackcord.APIMessage]", "kind" : "val"}, {"label" : "data", "tail" : ": Data", "member" : "ackcord.APIMessageCacheUpdate.data", "link" : "ackcord\/APIMessageCacheUpdate.html#data:Data", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/APIMessageCacheUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/APIMessageCacheUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/APIMessageCacheUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/APIMessageCacheUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/APIMessageCacheUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/APIMessageCacheUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/APIMessageCacheUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/APIMessageCacheUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessageCacheUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessageCacheUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/APIMessageCacheUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/APIMessageCacheUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/APIMessageCacheUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/APIMessageCacheUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/APIMessageCacheUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/APIMessageCacheUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/APIMessageCacheUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/APIMessageCacheUpdate.html", "kind" : "case class"}, {"name" : "ackcord.BatchedAPIMessageCacheUpdate", "shortDescription" : "", "members_case class" : [{"label" : "process", "tail" : "(builder: CacheSnapshotBuilder)(log: Logger): Unit", "member" : "ackcord.BatchedAPIMessageCacheUpdate.process", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#process(builder:ackcord.cachehandlers.CacheSnapshotBuilder)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"member" : "ackcord.BatchedAPIMessageCacheUpdate#<init>", "error" : "unsupported entity"}, {"label" : "updates", "tail" : ": Seq[APIMessageCacheUpdate[_]]", "member" : "ackcord.BatchedAPIMessageCacheUpdate.updates", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#updates:Seq[ackcord.APIMessageCacheUpdate[_]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/BatchedAPIMessageCacheUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/BatchedAPIMessageCacheUpdate.html", "kind" : "case class"}, {"name" : "ackcord.CacheEvent", "trait" : "ackcord\/CacheEvent.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(builder: CacheSnapshotBuilder)(log: Logger): Unit", "member" : "ackcord.CacheEvent.process", "link" : "ackcord\/CacheEvent.html#process(builder:ackcord.cachehandlers.CacheSnapshotBuilder)(implicitlog:org.slf4j.Logger):Unit", "kind" : "abstract def"}], "shortDescription" : "Represents some sort of event handled by the cache"}, {"name" : "ackcord.CacheEventCreator", "shortDescription" : "", "object" : "ackcord\/CacheEventCreator$.html", "members_object" : [{"label" : "eventToCacheUpdate", "tail" : "(dispatch: Dispatch[_], registry: CacheTypeRegistry, log: Logger, settings: AckCordGatewaySettings): Option[APIMessageCacheUpdate[_]]", "member" : "ackcord.CacheEventCreator.eventToCacheUpdate", "link" : "ackcord\/CacheEventCreator$.html#eventToCacheUpdate(dispatch:ackcord.gateway.Dispatch[_],registry:ackcord.cachehandlers.CacheTypeRegistry,log:org.slf4j.Logger,settings:ackcord.util.AckCordGatewaySettings):Option[ackcord.APIMessageCacheUpdate[_]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheEventCreator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheEventCreator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheEventCreator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheEventCreator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheEventCreator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheEventCreator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheEventCreator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEventCreator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEventCreator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheEventCreator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheEventCreator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheEventCreator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheEventCreator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheEventCreator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheEventCreator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheEventCreator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheEventCreator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheEventCreator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheEventCreator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.CacheSettings", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.CacheSettings#<init>", "error" : "unsupported entity"}, {"label" : "partitionCacheByGuild", "tail" : ": Boolean", "member" : "ackcord.CacheSettings.partitionCacheByGuild", "link" : "ackcord\/CacheSettings.html#partitionCacheByGuild:Boolean", "kind" : "val"}, {"label" : "cacheTypeRegistry", "tail" : ": (Logger) => CacheTypeRegistry", "member" : "ackcord.CacheSettings.cacheTypeRegistry", "link" : "ackcord\/CacheSettings.html#cacheTypeRegistry:org.slf4j.Logger=>ackcord.cachehandlers.CacheTypeRegistry", "kind" : "val"}, {"label" : "ignoredEvents", "tail" : ": Seq[Class[_ <: GatewayEvent[_]]]", "member" : "ackcord.CacheSettings.ignoredEvents", "link" : "ackcord\/CacheSettings.html#ignoredEvents:Seq[Class[_<:ackcord.gateway.GatewayEvent[_]]]", "kind" : "val"}, {"label" : "receiveGatewayEventsBufferSize", "tail" : ": PubSubBufferSize", "member" : "ackcord.CacheSettings.receiveGatewayEventsBufferSize", "link" : "ackcord\/CacheSettings.html#receiveGatewayEventsBufferSize:ackcord.PubSubBufferSize", "kind" : "val"}, {"label" : "sendGatewayEventsBufferSize", "tail" : ": PubSubBufferSize", "member" : "ackcord.CacheSettings.sendGatewayEventsBufferSize", "link" : "ackcord\/CacheSettings.html#sendGatewayEventsBufferSize:ackcord.PubSubBufferSize", "kind" : "val"}, {"label" : "cacheBufferSize", "tail" : ": PubSubBufferSize", "member" : "ackcord.CacheSettings.cacheBufferSize", "link" : "ackcord\/CacheSettings.html#cacheBufferSize:ackcord.PubSubBufferSize", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "ackcord.CacheSettings.parallelism", "link" : "ackcord\/CacheSettings.html#parallelism:Int", "kind" : "val"}, {"label" : "processor", "tail" : ": CacheProcessor", "member" : "ackcord.CacheSettings.processor", "link" : "ackcord\/CacheSettings.html#processor:ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/CacheSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/CacheSettings.html", "kind" : "case class"}, {"name" : "ackcord.CacheSnapshot", "object" : "ackcord\/CacheSnapshot$.html", "members_object" : [{"label" : "BotUser", "tail" : "", "member" : "ackcord.CacheSnapshot.BotUser", "link" : "ackcord\/CacheSnapshot$.html#BotUserextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheSnapshot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheSnapshot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheSnapshot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheSnapshot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheSnapshot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheSnapshot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheSnapshot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheSnapshot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheSnapshot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheSnapshot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheSnapshot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheSnapshot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheSnapshot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheSnapshot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheSnapshot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheSnapshot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/CacheSnapshot.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheSnapshot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheSnapshot.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheSnapshot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheSnapshot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheSnapshot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheSnapshot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheSnapshot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheSnapshot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheSnapshot.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheSnapshot.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheSnapshot.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheSnapshot.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheSnapshot.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheSnapshot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheSnapshot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheSnapshot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getPresence", "tail" : "(guildId: GuildId, userId: UserId): Option[Presence]", "member" : "ackcord.CacheSnapshot.getPresence", "link" : "ackcord\/CacheSnapshot.html#getPresence(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Presence]", "kind" : "abstract def"}, {"label" : "getBan", "tail" : "(guildId: GuildId, userId: UserId): Option[Ban]", "member" : "ackcord.CacheSnapshot.getBan", "link" : "ackcord\/CacheSnapshot.html#getBan(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Ban]", "kind" : "abstract def"}, {"label" : "getGuildBans", "tail" : "(id: GuildId): MapType[User, Ban]", "member" : "ackcord.CacheSnapshot.getGuildBans", "link" : "ackcord\/CacheSnapshot.html#getGuildBans(id:ackcord.data.GuildId):CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.Ban]", "kind" : "abstract def"}, {"label" : "getUser", "tail" : "(id: UserId): Option[User]", "member" : "ackcord.CacheSnapshot.getUser", "link" : "ackcord\/CacheSnapshot.html#getUser(id:ackcord.data.UserId):Option[ackcord.data.User]", "kind" : "abstract def"}, {"label" : "getLastTyped", "tail" : "(channelId: TextChannelId, userId: UserId): Option[Instant]", "member" : "ackcord.CacheSnapshot.getLastTyped", "link" : "ackcord\/CacheSnapshot.html#getLastTyped(channelId:ackcord.data.TextChannelId,userId:ackcord.data.UserId):Option[java.time.Instant]", "kind" : "abstract def"}, {"label" : "getChannelLastTyped", "tail" : "(channelId: TextChannelId): MapType[User, Instant]", "member" : "ackcord.CacheSnapshot.getChannelLastTyped", "link" : "ackcord\/CacheSnapshot.html#getChannelLastTyped(channelId:ackcord.data.TextChannelId):CacheSnapshot.this.MapType[ackcord.data.User,java.time.Instant]", "kind" : "abstract def"}, {"label" : "getEmoji", "tail" : "(id: EmojiId): Option[Emoji]", "member" : "ackcord.CacheSnapshot.getEmoji", "link" : "ackcord\/CacheSnapshot.html#getEmoji(id:ackcord.data.EmojiId):Option[ackcord.data.Emoji]", "kind" : "abstract def"}, {"label" : "getRole", "tail" : "(guildId: GuildId, roleId: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshot.getRole", "link" : "ackcord\/CacheSnapshot.html#getRole(guildId:ackcord.data.GuildId,roleId:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "abstract def"}, {"label" : "getRole", "tail" : "(id: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshot.getRole", "link" : "ackcord\/CacheSnapshot.html#getRole(id:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "abstract def"}, {"label" : "getTextChannel", "tail" : "(id: TextChannelId): Option[TextChannel]", "member" : "ackcord.CacheSnapshot.getTextChannel", "link" : "ackcord\/CacheSnapshot.html#getTextChannel(id:ackcord.data.TextChannelId):Option[ackcord.data.TextChannel]", "kind" : "abstract def"}, {"label" : "getChannel", "tail" : "(id: ChannelId): Option[Channel]", "member" : "ackcord.CacheSnapshot.getChannel", "link" : "ackcord\/CacheSnapshot.html#getChannel(id:ackcord.data.ChannelId):Option[ackcord.data.Channel]", "kind" : "abstract def"}, {"label" : "getGuildChannel", "tail" : "(id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshot.getGuildChannel", "link" : "ackcord\/CacheSnapshot.html#getGuildChannel(id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "abstract def"}, {"label" : "getGuildChannel", "tail" : "(guildId: GuildId, id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshot.getGuildChannel", "link" : "ackcord\/CacheSnapshot.html#getGuildChannel(guildId:ackcord.data.GuildId,id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "abstract def"}, {"label" : "getMessage", "tail" : "(messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshot.getMessage", "link" : "ackcord\/CacheSnapshot.html#getMessage(messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "abstract def"}, {"label" : "getMessage", "tail" : "(channelId: TextChannelId, messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshot.getMessage", "link" : "ackcord\/CacheSnapshot.html#getMessage(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "abstract def"}, {"label" : "getChannelMessages", "tail" : "(channelId: TextChannelId): MapType[Message, Message]", "member" : "ackcord.CacheSnapshot.getChannelMessages", "link" : "ackcord\/CacheSnapshot.html#getChannelMessages(channelId:ackcord.data.TextChannelId):CacheSnapshot.this.MapType[ackcord.data.Message,ackcord.data.Message]", "kind" : "abstract def"}, {"label" : "getGuildWithUnavailable", "tail" : "(id: GuildId): Option[UnknownStatusGuild]", "member" : "ackcord.CacheSnapshot.getGuildWithUnavailable", "link" : "ackcord\/CacheSnapshot.html#getGuildWithUnavailable(id:ackcord.data.GuildId):Option[ackcord.data.UnknownStatusGuild]", "kind" : "abstract def"}, {"label" : "getGuild", "tail" : "(id: GuildId): Option[Guild]", "member" : "ackcord.CacheSnapshot.getGuild", "link" : "ackcord\/CacheSnapshot.html#getGuild(id:ackcord.data.GuildId):Option[ackcord.data.Guild]", "kind" : "abstract def"}, {"label" : "getGroupDmChannel", "tail" : "(id: SnowflakeType[GroupDMChannel]): Option[GroupDMChannel]", "member" : "ackcord.CacheSnapshot.getGroupDmChannel", "link" : "ackcord\/CacheSnapshot.html#getGroupDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.GroupDMChannel]):Option[ackcord.data.GroupDMChannel]", "kind" : "abstract def"}, {"label" : "getUserDmChannel", "tail" : "(id: UserId): Option[DMChannel]", "member" : "ackcord.CacheSnapshot.getUserDmChannel", "link" : "ackcord\/CacheSnapshot.html#getUserDmChannel(id:ackcord.data.UserId):Option[ackcord.data.DMChannel]", "kind" : "abstract def"}, {"label" : "getDmChannel", "tail" : "(id: SnowflakeType[DMChannel]): Option[DMChannel]", "member" : "ackcord.CacheSnapshot.getDmChannel", "link" : "ackcord\/CacheSnapshot.html#getDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.DMChannel]):Option[ackcord.data.DMChannel]", "kind" : "abstract def"}, {"label" : "botUser", "tail" : "(): @@[User, BotUser]", "member" : "ackcord.CacheSnapshot.botUser", "link" : "ackcord\/CacheSnapshot.html#botUser:ackcord.data.User@@ackcord.CacheSnapshot.BotUser", "kind" : "abstract def"}, {"label" : "banMap", "tail" : "(): MapType[Guild, MapType[User, Ban]]", "member" : "ackcord.CacheSnapshot.banMap", "link" : "ackcord\/CacheSnapshot.html#banMap:CacheSnapshot.this.MapType[ackcord.data.Guild,CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.Ban]]", "kind" : "abstract def"}, {"label" : "userMap", "tail" : "(): MapType[User, User]", "member" : "ackcord.CacheSnapshot.userMap", "link" : "ackcord\/CacheSnapshot.html#userMap:CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.User]", "kind" : "abstract def"}, {"label" : "lastTypedMap", "tail" : "(): MapType[TextChannel, MapType[User, Instant]]", "member" : "ackcord.CacheSnapshot.lastTypedMap", "link" : "ackcord\/CacheSnapshot.html#lastTypedMap:CacheSnapshot.this.MapType[ackcord.data.TextChannel,CacheSnapshot.this.MapType[ackcord.data.User,java.time.Instant]]", "kind" : "abstract def"}, {"label" : "messageMap", "tail" : "(): MapType[TextChannel, MapType[Message, Message]]", "member" : "ackcord.CacheSnapshot.messageMap", "link" : "ackcord\/CacheSnapshot.html#messageMap:CacheSnapshot.this.MapType[ackcord.data.TextChannel,CacheSnapshot.this.MapType[ackcord.data.Message,ackcord.data.Message]]", "kind" : "abstract def"}, {"label" : "guildMap", "tail" : "(): MapType[Guild, Guild]", "member" : "ackcord.CacheSnapshot.guildMap", "link" : "ackcord\/CacheSnapshot.html#guildMap:CacheSnapshot.this.MapType[ackcord.data.Guild,ackcord.data.Guild]", "kind" : "abstract def"}, {"label" : "unavailableGuildMap", "tail" : "(): MapType[Guild, UnavailableGuild]", "member" : "ackcord.CacheSnapshot.unavailableGuildMap", "link" : "ackcord\/CacheSnapshot.html#unavailableGuildMap:CacheSnapshot.this.MapType[ackcord.data.Guild,ackcord.data.UnavailableGuild]", "kind" : "abstract def"}, {"label" : "groupDmChannelMap", "tail" : "(): MapType[GroupDMChannel, GroupDMChannel]", "member" : "ackcord.CacheSnapshot.groupDmChannelMap", "link" : "ackcord\/CacheSnapshot.html#groupDmChannelMap:CacheSnapshot.this.MapType[ackcord.data.GroupDMChannel,ackcord.data.GroupDMChannel]", "kind" : "abstract def"}, {"label" : "dmChannelMap", "tail" : "(): MapType[DMChannel, DMChannel]", "member" : "ackcord.CacheSnapshot.dmChannelMap", "link" : "ackcord\/CacheSnapshot.html#dmChannelMap:CacheSnapshot.this.MapType[ackcord.data.DMChannel,ackcord.data.DMChannel]", "kind" : "abstract def"}, {"member" : "ackcord.CacheSnapshot.MapType", "error" : "unsupported entity"}], "shortDescription" : "A representation of the cache."}, {"name" : "ackcord.CacheSnapshotWithMaps", "trait" : "ackcord\/CacheSnapshotWithMaps.html", "kind" : "trait", "members_trait" : [{"label" : "getPresence", "tail" : "(guildId: GuildId, userId: UserId): Option[Presence]", "member" : "ackcord.CacheSnapshotWithMaps.getPresence", "link" : "ackcord\/CacheSnapshotWithMaps.html#getPresence(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Presence]", "kind" : "def"}, {"label" : "getBan", "tail" : "(guildId: GuildId, userId: UserId): Option[Ban]", "member" : "ackcord.CacheSnapshotWithMaps.getBan", "link" : "ackcord\/CacheSnapshotWithMaps.html#getBan(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Ban]", "kind" : "def"}, {"label" : "getUser", "tail" : "(id: UserId): Option[User]", "member" : "ackcord.CacheSnapshotWithMaps.getUser", "link" : "ackcord\/CacheSnapshotWithMaps.html#getUser(id:ackcord.data.UserId):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "getLastTyped", "tail" : "(channelId: TextChannelId, userId: UserId): Option[Instant]", "member" : "ackcord.CacheSnapshotWithMaps.getLastTyped", "link" : "ackcord\/CacheSnapshotWithMaps.html#getLastTyped(channelId:ackcord.data.TextChannelId,userId:ackcord.data.UserId):Option[java.time.Instant]", "kind" : "def"}, {"label" : "getEmoji", "tail" : "(id: EmojiId): Option[Emoji]", "member" : "ackcord.CacheSnapshotWithMaps.getEmoji", "link" : "ackcord\/CacheSnapshotWithMaps.html#getEmoji(id:ackcord.data.EmojiId):Option[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "getRole", "tail" : "(guildId: GuildId, roleId: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/CacheSnapshotWithMaps.html#getRole(guildId:ackcord.data.GuildId,roleId:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getRole", "tail" : "(id: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/CacheSnapshotWithMaps.html#getRole(id:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getTextChannel", "tail" : "(id: TextChannelId): Option[TextChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getTextChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getTextChannel(id:ackcord.data.TextChannelId):Option[ackcord.data.TextChannel]", "kind" : "def"}, {"label" : "getChannel", "tail" : "(id: ChannelId): Option[Channel]", "member" : "ackcord.CacheSnapshotWithMaps.getChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getChannel(id:ackcord.data.ChannelId):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGuildChannel(id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(guildId: GuildId, id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGuildChannel(guildId:ackcord.data.GuildId,id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/CacheSnapshotWithMaps.html#getMessage(messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(channelId: TextChannelId, messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/CacheSnapshotWithMaps.html#getMessage(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getGuildWithUnavailable", "tail" : "(id: GuildId): Option[UnknownStatusGuild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildWithUnavailable", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGuildWithUnavailable(id:ackcord.data.GuildId):Option[ackcord.data.UnknownStatusGuild]", "kind" : "def"}, {"label" : "getGuild", "tail" : "(id: GuildId): Option[Guild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuild", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGuild(id:ackcord.data.GuildId):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "getGroupDmChannel", "tail" : "(id: SnowflakeType[GroupDMChannel]): Option[GroupDMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGroupDmChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGroupDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.GroupDMChannel]):Option[ackcord.data.GroupDMChannel]", "kind" : "def"}, {"label" : "getUserDmChannel", "tail" : "(id: UserId): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getUserDmChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getUserDmChannel(id:ackcord.data.UserId):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "getDmChannel", "tail" : "(id: SnowflakeType[DMChannel]): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getDmChannel", "link" : "ackcord\/CacheSnapshotWithMaps.html#getDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.DMChannel]):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheSnapshotWithMaps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheSnapshotWithMaps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheSnapshotWithMaps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheSnapshotWithMaps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheSnapshotWithMaps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheSnapshotWithMaps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheSnapshotWithMaps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshotWithMaps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshotWithMaps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheSnapshotWithMaps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheSnapshotWithMaps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheSnapshotWithMaps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheSnapshotWithMaps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheSnapshotWithMaps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheSnapshotWithMaps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheSnapshotWithMaps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheSnapshotWithMaps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheSnapshotWithMaps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheSnapshotWithMaps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getGuildBans", "tail" : "(id: GuildId): MapType[User, Ban]", "member" : "ackcord.CacheSnapshot.getGuildBans", "link" : "ackcord\/CacheSnapshotWithMaps.html#getGuildBans(id:ackcord.data.GuildId):CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.Ban]", "kind" : "abstract def"}, {"label" : "getChannelLastTyped", "tail" : "(channelId: TextChannelId): MapType[User, Instant]", "member" : "ackcord.CacheSnapshot.getChannelLastTyped", "link" : "ackcord\/CacheSnapshotWithMaps.html#getChannelLastTyped(channelId:ackcord.data.TextChannelId):CacheSnapshot.this.MapType[ackcord.data.User,java.time.Instant]", "kind" : "abstract def"}, {"label" : "getChannelMessages", "tail" : "(channelId: TextChannelId): MapType[Message, Message]", "member" : "ackcord.CacheSnapshot.getChannelMessages", "link" : "ackcord\/CacheSnapshotWithMaps.html#getChannelMessages(channelId:ackcord.data.TextChannelId):CacheSnapshot.this.MapType[ackcord.data.Message,ackcord.data.Message]", "kind" : "abstract def"}, {"label" : "botUser", "tail" : "(): @@[User, BotUser]", "member" : "ackcord.CacheSnapshot.botUser", "link" : "ackcord\/CacheSnapshotWithMaps.html#botUser:ackcord.data.User@@ackcord.CacheSnapshot.BotUser", "kind" : "abstract def"}, {"label" : "banMap", "tail" : "(): MapType[Guild, MapType[User, Ban]]", "member" : "ackcord.CacheSnapshot.banMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#banMap:CacheSnapshot.this.MapType[ackcord.data.Guild,CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.Ban]]", "kind" : "abstract def"}, {"label" : "userMap", "tail" : "(): MapType[User, User]", "member" : "ackcord.CacheSnapshot.userMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#userMap:CacheSnapshot.this.MapType[ackcord.data.User,ackcord.data.User]", "kind" : "abstract def"}, {"label" : "lastTypedMap", "tail" : "(): MapType[TextChannel, MapType[User, Instant]]", "member" : "ackcord.CacheSnapshot.lastTypedMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#lastTypedMap:CacheSnapshot.this.MapType[ackcord.data.TextChannel,CacheSnapshot.this.MapType[ackcord.data.User,java.time.Instant]]", "kind" : "abstract def"}, {"label" : "messageMap", "tail" : "(): MapType[TextChannel, MapType[Message, Message]]", "member" : "ackcord.CacheSnapshot.messageMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#messageMap:CacheSnapshot.this.MapType[ackcord.data.TextChannel,CacheSnapshot.this.MapType[ackcord.data.Message,ackcord.data.Message]]", "kind" : "abstract def"}, {"label" : "guildMap", "tail" : "(): MapType[Guild, Guild]", "member" : "ackcord.CacheSnapshot.guildMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#guildMap:CacheSnapshot.this.MapType[ackcord.data.Guild,ackcord.data.Guild]", "kind" : "abstract def"}, {"label" : "unavailableGuildMap", "tail" : "(): MapType[Guild, UnavailableGuild]", "member" : "ackcord.CacheSnapshot.unavailableGuildMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#unavailableGuildMap:CacheSnapshot.this.MapType[ackcord.data.Guild,ackcord.data.UnavailableGuild]", "kind" : "abstract def"}, {"label" : "groupDmChannelMap", "tail" : "(): MapType[GroupDMChannel, GroupDMChannel]", "member" : "ackcord.CacheSnapshot.groupDmChannelMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#groupDmChannelMap:CacheSnapshot.this.MapType[ackcord.data.GroupDMChannel,ackcord.data.GroupDMChannel]", "kind" : "abstract def"}, {"label" : "dmChannelMap", "tail" : "(): MapType[DMChannel, DMChannel]", "member" : "ackcord.CacheSnapshot.dmChannelMap", "link" : "ackcord\/CacheSnapshotWithMaps.html#dmChannelMap:CacheSnapshot.this.MapType[ackcord.data.DMChannel,ackcord.data.DMChannel]", "kind" : "abstract def"}, {"member" : "ackcord.CacheSnapshot.MapType", "error" : "unsupported entity"}], "shortDescription" : "A cache snapshot where the getters can use the maps to get their data."}, {"name" : "ackcord.CacheState", "shortDescription" : "Represents the state of the cache for a single point.", "members_case class" : [{"label" : "update", "tail" : "(newSnapshot: MemoryCacheSnapshot): CacheState", "member" : "ackcord.CacheState.update", "link" : "ackcord\/CacheState.html#update(newSnapshot:ackcord.MemoryCacheSnapshot):ackcord.CacheState", "kind" : "def"}, {"member" : "ackcord.CacheState#<init>", "error" : "unsupported entity"}, {"label" : "previous", "tail" : ": MemoryCacheSnapshot", "member" : "ackcord.CacheState.previous", "link" : "ackcord\/CacheState.html#previous:ackcord.MemoryCacheSnapshot", "kind" : "val"}, {"label" : "current", "tail" : ": MemoryCacheSnapshot", "member" : "ackcord.CacheState.current", "link" : "ackcord\/CacheState.html#current:ackcord.MemoryCacheSnapshot", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/CacheState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/CacheState.html", "kind" : "case class"}, {"name" : "ackcord.CacheStreams", "shortDescription" : "", "object" : "ackcord\/CacheStreams$.html", "members_object" : [{"label" : "cacheUpdater", "tail" : "(cacheBuilder: CacheSnapshotBuilder)(system: ActorSystem[Nothing]): Flow[CacheEvent, (CacheEvent, CacheState), NotUsed]", "member" : "ackcord.CacheStreams.cacheUpdater", "link" : "ackcord\/CacheStreams$.html#cacheUpdater(cacheBuilder:ackcord.cachehandlers.CacheSnapshotBuilder)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[ackcord.CacheEvent,(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed]", "kind" : "def"}, {"label" : "guildCacheUpdater", "tail" : "(guildCacheUpdateActor: ActorRef[GuildCacheEvent]): Flow[CacheEvent, (CacheEvent, CacheState), NotUsed]", "member" : "ackcord.CacheStreams.guildCacheUpdater", "link" : "ackcord\/CacheStreams$.html#guildCacheUpdater(guildCacheUpdateActor:akka.actor.typed.ActorRef[ackcord.CacheStreams.GuildCacheEvent]):akka.stream.scaladsl.Flow[ackcord.CacheEvent,(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed]", "kind" : "def"}, {"label" : "guildCacheBehavior", "tail" : "(cacheBuilder: CacheSnapshotBuilder): Behavior[GuildCacheEvent]", "member" : "ackcord.CacheStreams.guildCacheBehavior", "link" : "ackcord\/CacheStreams$.html#guildCacheBehavior(cacheBuilder:ackcord.cachehandlers.CacheSnapshotBuilder):akka.actor.typed.Behavior[ackcord.CacheStreams.GuildCacheEvent]", "kind" : "def"}, {"label" : "GuildCacheEvent", "tail" : "", "member" : "ackcord.CacheStreams.GuildCacheEvent", "link" : "ackcord\/CacheStreams$.html#GuildCacheEventextendsProductwithSerializable", "kind" : "case class"}, {"label" : "emptyStartingCache", "tail" : "(cacheProcessor: CacheProcessor): CacheSnapshotBuilder", "member" : "ackcord.CacheStreams.emptyStartingCache", "link" : "ackcord\/CacheStreams$.html#emptyStartingCache(cacheProcessor:ackcord.MemoryCacheSnapshot.CacheProcessor):ackcord.cachehandlers.CacheSnapshotBuilder", "kind" : "def"}, {"label" : "createApiMessages", "tail" : "(): Flow[(CacheEvent, CacheState), APIMessage, NotUsed]", "member" : "ackcord.CacheStreams.createApiMessages", "link" : "ackcord\/CacheStreams$.html#createApiMessages:akka.stream.scaladsl.Flow[(ackcord.CacheEvent,ackcord.CacheState),ackcord.APIMessage,akka.NotUsed]", "kind" : "def"}, {"label" : "gatewayEvents", "tail" : "(bufferSize: PubSubBufferSize)(system: ActorSystem[Nothing]): (Sink[GatewayMessage[D], NotUsed], Source[GatewayMessage[D], NotUsed])", "member" : "ackcord.CacheStreams.gatewayEvents", "link" : "ackcord\/CacheStreams$.html#gatewayEvents[D](bufferSize:ackcord.PubSubBufferSize)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):(akka.stream.scaladsl.Sink[ackcord.gateway.GatewayMessage[D],akka.NotUsed],akka.stream.scaladsl.Source[ackcord.gateway.GatewayMessage[D],akka.NotUsed])", "kind" : "def"}, {"label" : "cacheStreamsCustom", "tail" : "(updater: Flow[CacheEvent, (CacheEvent, CacheState), NotUsed], bufferSize: PubSubBufferSize)(system: ActorSystem[Nothing]): (Sink[CacheEvent, NotUsed], Source[(CacheEvent, CacheState), NotUsed])", "member" : "ackcord.CacheStreams.cacheStreamsCustom", "link" : "ackcord\/CacheStreams$.html#cacheStreamsCustom(updater:akka.stream.scaladsl.Flow[ackcord.CacheEvent,(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed],bufferSize:ackcord.PubSubBufferSize)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):(akka.stream.scaladsl.Sink[ackcord.CacheEvent,akka.NotUsed],akka.stream.scaladsl.Source[(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed])", "kind" : "def"}, {"label" : "cacheStreams", "tail" : "(cacheProcessor: CacheProcessor, bufferSize: PubSubBufferSize)(system: ActorSystem[Nothing]): (Sink[CacheEvent, NotUsed], Source[(CacheEvent, CacheState), NotUsed])", "member" : "ackcord.CacheStreams.cacheStreams", "link" : "ackcord\/CacheStreams$.html#cacheStreams(cacheProcessor:ackcord.MemoryCacheSnapshot.CacheProcessor,bufferSize:ackcord.PubSubBufferSize)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):(akka.stream.scaladsl.Sink[ackcord.CacheEvent,akka.NotUsed],akka.stream.scaladsl.Source[(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/CacheStreams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/CacheStreams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/CacheStreams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/CacheStreams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/CacheStreams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/CacheStreams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/CacheStreams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheStreams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheStreams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/CacheStreams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/CacheStreams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/CacheStreams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/CacheStreams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/CacheStreams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/CacheStreams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/CacheStreams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/CacheStreams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/CacheStreams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/CacheStreams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.ChannelEventListenerMessage", "object" : "ackcord\/ChannelEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.ChannelEventListenerMessage.Default", "link" : "ackcord\/ChannelEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withChannelEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/ChannelEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/ChannelEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/ChannelEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/ChannelEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/ChannelEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/ChannelEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/ChannelEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/ChannelEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/ChannelEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/ChannelEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/ChannelEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/ChannelEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/ChannelEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/ChannelEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/ChannelEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/ChannelEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/ChannelEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/ChannelEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/ChannelEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/ChannelEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/ChannelEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/ChannelEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/ChannelEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/ChannelEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/ChannelEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ChannelEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/ChannelEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/ChannelEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/ChannelEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/ChannelEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/ChannelEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/ChannelEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/ChannelEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/ChannelEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/ChannelEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channel", "tail" : "(): Channel", "member" : "ackcord.ChannelEventListenerMessage.channel", "link" : "ackcord\/ChannelEventListenerMessage.html#channel:ackcord.data.Channel", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/ChannelEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.ClientSettings", "shortDescription" : "Settings used when connecting to Discord.", "members_case class" : [{"label" : "createClientAutoShards", "tail" : "(): Future[DiscordClient]", "member" : "ackcord.ClientSettings.createClientAutoShards", "link" : "ackcord\/ClientSettings.html#createClientAutoShards():scala.concurrent.Future[ackcord.DiscordClient]", "kind" : "def"}, {"label" : "createClient", "tail" : "(): Future[DiscordClient]", "member" : "ackcord.ClientSettings.createClient", "link" : "ackcord\/ClientSettings.html#createClient():scala.concurrent.Future[ackcord.DiscordClient]", "kind" : "def"}, {"label" : "executionContext", "tail" : ": ExecutionContext", "member" : "ackcord.ClientSettings.executionContext", "link" : "ackcord\/ClientSettings.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"label" : "gatewaySettings", "tail" : ": GatewaySettings", "member" : "ackcord.ClientSettings.gatewaySettings", "link" : "ackcord\/ClientSettings.html#gatewaySettings:ackcord.GatewaySettings", "kind" : "val"}, {"member" : "ackcord.ClientSettings#<init>", "error" : "unsupported entity"}, {"label" : "cacheSettings", "tail" : ": CacheSettings", "member" : "ackcord.ClientSettings.cacheSettings", "link" : "ackcord\/ClientSettings.html#cacheSettings:ackcord.CacheSettings", "kind" : "val"}, {"label" : "requestSettings", "tail" : ": RequestSettings", "member" : "ackcord.ClientSettings.requestSettings", "link" : "ackcord\/ClientSettings.html#requestSettings:ackcord.RequestSettings", "kind" : "val"}, {"label" : "system", "tail" : ": ActorSystem[Nothing]", "member" : "ackcord.ClientSettings.system", "link" : "ackcord\/ClientSettings.html#system:akka.actor.typed.ActorSystem[Nothing]", "kind" : "val"}, {"label" : "intents", "tail" : ": GatewayIntents", "member" : "ackcord.ClientSettings.intents", "link" : "ackcord\/ClientSettings.html#intents:ackcord.gateway.GatewayIntents", "kind" : "val"}, {"label" : "compress", "tail" : ": Compress", "member" : "ackcord.ClientSettings.compress", "link" : "ackcord\/ClientSettings.html#compress:ackcord.gateway.Compress", "kind" : "val"}, {"label" : "guildSubscriptions", "tail" : ": Boolean", "member" : "ackcord.ClientSettings.guildSubscriptions", "link" : "ackcord\/ClientSettings.html#guildSubscriptions:Boolean", "kind" : "val"}, {"label" : "afk", "tail" : ": Boolean", "member" : "ackcord.ClientSettings.afk", "link" : "ackcord\/ClientSettings.html#afk:Boolean", "kind" : "val"}, {"label" : "status", "tail" : ": PresenceStatus", "member" : "ackcord.ClientSettings.status", "link" : "ackcord\/ClientSettings.html#status:ackcord.data.PresenceStatus", "kind" : "val"}, {"label" : "activities", "tail" : ": Option[Seq[RawActivity]]", "member" : "ackcord.ClientSettings.activities", "link" : "ackcord\/ClientSettings.html#activities:Option[Seq[ackcord.data.raw.RawActivity]]", "kind" : "val"}, {"label" : "idleSince", "tail" : ": Option[Instant]", "member" : "ackcord.ClientSettings.idleSince", "link" : "ackcord\/ClientSettings.html#idleSince:Option[java.time.Instant]", "kind" : "val"}, {"label" : "shardTotal", "tail" : ": Int", "member" : "ackcord.ClientSettings.shardTotal", "link" : "ackcord\/ClientSettings.html#shardTotal:Int", "kind" : "val"}, {"label" : "shardNum", "tail" : ": Int", "member" : "ackcord.ClientSettings.shardNum", "link" : "ackcord\/ClientSettings.html#shardNum:Int", "kind" : "val"}, {"label" : "largeThreshold", "tail" : ": Int", "member" : "ackcord.ClientSettings.largeThreshold", "link" : "ackcord\/ClientSettings.html#largeThreshold:Int", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.ClientSettings.token", "link" : "ackcord\/ClientSettings.html#token:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/ClientSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/ClientSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/ClientSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/ClientSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/ClientSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/ClientSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/ClientSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/ClientSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ClientSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ClientSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ClientSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/ClientSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/ClientSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/ClientSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/ClientSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/ClientSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/ClientSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/ClientSettings.html", "kind" : "case class"}, {"name" : "ackcord.DiscordClient", "trait" : "ackcord\/DiscordClient.html", "kind" : "trait", "members_trait" : [{"label" : "loadTrack", "tail" : "(playerManager: AudioPlayerManager, identifier: String): Future[AudioItem]", "member" : "ackcord.DiscordClient.loadTrack", "link" : "ackcord\/DiscordClient.html#loadTrack(playerManager:com.sedmelluq.discord.lavaplayer.player.AudioPlayerManager,identifier:String):scala.concurrent.Future[com.sedmelluq.discord.lavaplayer.track.AudioItem]", "kind" : "def"}, {"label" : "setPlaying", "tail" : "(guildId: GuildId, playing: Boolean): Unit", "member" : "ackcord.DiscordClient.setPlaying", "link" : "ackcord\/DiscordClient.html#setPlaying(guildId:ackcord.data.GuildId,playing:Boolean):Unit", "kind" : "def"}, {"label" : "leaveChannel", "tail" : "(guildId: GuildId, destroyPlayer: Boolean): Unit", "member" : "ackcord.DiscordClient.leaveChannel", "link" : "ackcord\/DiscordClient.html#leaveChannel(guildId:ackcord.data.GuildId,destroyPlayer:Boolean):Unit", "kind" : "def"}, {"label" : "joinChannel", "tail" : "(guildId: GuildId, channelId: VoiceGuildChannelId, createPlayer: => AudioPlayer, force: Boolean, timeoutDur: FiniteDuration): Future[AudioPlayer]", "member" : "ackcord.DiscordClient.joinChannel", "link" : "ackcord\/DiscordClient.html#joinChannel(guildId:ackcord.data.GuildId,channelId:ackcord.data.VoiceGuildChannelId,createPlayer:=>com.sedmelluq.discord.lavaplayer.player.AudioPlayer,force:Boolean,timeoutDur:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[com.sedmelluq.discord.lavaplayer.player.AudioPlayer]", "kind" : "def"}, {"label" : "bulkRegisterListeners", "tail" : "(listeners: EventListener[_ <: APIMessage, NotUsed]*): Seq[(EventListener[_ <: APIMessage, NotUsed], EventRegistration[NotUsed])]", "member" : "ackcord.DiscordClient.bulkRegisterListeners", "link" : "ackcord\/DiscordClient.html#bulkRegisterListeners(listeners:ackcord.EventListener[_<:ackcord.APIMessage,akka.NotUsed]*):Seq[(ackcord.EventListener[_<:ackcord.APIMessage,akka.NotUsed],ackcord.EventRegistration[akka.NotUsed])]", "kind" : "def"}, {"label" : "onEventAsync", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, OptFuture[Unit]]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventAsync", "link" : "ackcord\/DiscordClient.html#onEventAsync(handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,ackcord.OptFuture[Unit]]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "onEventSideEffectsIgnore", "tail" : "(handler: PartialFunction[APIMessage, Unit]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventSideEffectsIgnore", "link" : "ackcord\/DiscordClient.html#onEventSideEffectsIgnore(handler:PartialFunction[ackcord.APIMessage,Unit]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "onEventSideEffects", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, Unit]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventSideEffects", "link" : "ackcord\/DiscordClient.html#onEventSideEffects(handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,Unit]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "shutdownAckCord", "tail" : "(timeout: FiniteDuration): Future[Unit]", "member" : "ackcord.DiscordClient.shutdownAckCord", "link" : "ackcord\/DiscordClient.html#shutdownAckCord(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "executionContext", "tail" : ": ExecutionContextExecutor", "member" : "ackcord.DiscordClient.executionContext", "link" : "ackcord\/DiscordClient.html#executionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit val"}, {"label" : "system", "tail" : ": ActorSystem[Nothing]", "member" : "ackcord.DiscordClient.system", "link" : "ackcord\/DiscordClient.html#system:akka.actor.typed.ActorSystem[Nothing]", "kind" : "implicit val"}, {"label" : "cache", "tail" : "(): Events", "member" : "ackcord.DiscordClient.cache", "link" : "ackcord\/DiscordClient.html#cache:ackcord.Events", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/DiscordClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/DiscordClient.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/DiscordClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/DiscordClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/DiscordClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/DiscordClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/DiscordClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/DiscordClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/DiscordClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/DiscordClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/DiscordClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/DiscordClient.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/DiscordClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/DiscordClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/DiscordClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/DiscordClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "registerListener", "tail" : "(listener: EventListener[A, Mat]): EventRegistration[Mat]", "member" : "ackcord.DiscordClient.registerListener", "link" : "ackcord\/DiscordClient.html#registerListener[A<:ackcord.APIMessage,Mat](listener:ackcord.EventListener[A,Mat]):ackcord.EventRegistration[Mat]", "kind" : "abstract def"}, {"label" : "onEventStreamable", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, G[Unit]])(streamable: Streamable[G]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventStreamable", "link" : "ackcord\/DiscordClient.html#onEventStreamable[G[_]](handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,G[Unit]])(implicitstreamable:ackcord.Streamable[G]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "abstract def"}, {"label" : "shutdownJVM", "tail" : "(timeout: FiniteDuration): Future[Unit]", "member" : "ackcord.DiscordClient.shutdownJVM", "link" : "ackcord\/DiscordClient.html#shutdownJVM(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Unit]", "kind" : "abstract def"}, {"label" : "logout", "tail" : "(timeout: FiniteDuration): Future[Boolean]", "member" : "ackcord.DiscordClient.logout", "link" : "ackcord\/DiscordClient.html#logout(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Boolean]", "kind" : "abstract def"}, {"label" : "login", "tail" : "(): Unit", "member" : "ackcord.DiscordClient.login", "link" : "ackcord\/DiscordClient.html#login():Unit", "kind" : "abstract def"}, {"label" : "musicManager", "tail" : "(): Future[ActorRef[Command]]", "member" : "ackcord.DiscordClient.musicManager", "link" : "ackcord\/DiscordClient.html#musicManager:scala.concurrent.Future[akka.actor.typed.ActorRef[ackcord.MusicManager.Command]]", "kind" : "abstract def"}, {"label" : "requestsHelper", "tail" : ": RequestsHelper", "member" : "ackcord.DiscordClient.requestsHelper", "link" : "ackcord\/DiscordClient.html#requestsHelper:ackcord.RequestsHelper", "kind" : "abstract val"}, {"label" : "requests", "tail" : "(): Requests", "member" : "ackcord.DiscordClient.requests", "link" : "ackcord\/DiscordClient.html#requests:ackcord.Requests", "kind" : "abstract def"}, {"label" : "commands", "tail" : "(): CommandConnector", "member" : "ackcord.DiscordClient.commands", "link" : "ackcord\/DiscordClient.html#commands:ackcord.commands.CommandConnector", "kind" : "abstract def"}, {"label" : "events", "tail" : "(): Events", "member" : "ackcord.DiscordClient.events", "link" : "ackcord\/DiscordClient.html#events:ackcord.Events", "kind" : "abstract def"}, {"label" : "shards", "tail" : "(): Future[Seq[ActorRef[Command]]]", "member" : "ackcord.DiscordClient.shards", "link" : "ackcord\/DiscordClient.html#shards:scala.concurrent.Future[Seq[akka.actor.typed.ActorRef[ackcord.DiscordShard.Command]]]", "kind" : "abstract def"}], "shortDescription" : "Trait used to interface with Discord stuff from high level."}, {"name" : "ackcord.DiscordClientActor", "shortDescription" : "", "object" : "ackcord\/DiscordClientActor$.html", "members_class" : [{"label" : "onMessage", "tail" : "(msg: Command): Behavior[Command]", "member" : "ackcord.DiscordClientActor.onMessage", "link" : "ackcord\/DiscordClientActor.html#onMessage(msg:ackcord.DiscordClientActor.Command):akka.actor.typed.Behavior[ackcord.DiscordClientActor.Command]", "kind" : "def"}, {"label" : "logout", "tail" : "(timeout: FiniteDuration): Future[Boolean]", "member" : "ackcord.DiscordClientActor.logout", "link" : "ackcord\/DiscordClientActor.html#logout(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "login", "tail" : "(): Unit", "member" : "ackcord.DiscordClientActor.login", "link" : "ackcord\/DiscordClientActor.html#login():Unit", "kind" : "def"}, {"label" : "rateLimiter", "tail" : ": ActorRef[Command]", "member" : "ackcord.DiscordClientActor.rateLimiter", "link" : "ackcord\/DiscordClientActor.html#rateLimiter:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command]", "kind" : "val"}, {"label" : "musicManager", "tail" : ": ActorRef[Command]", "member" : "ackcord.DiscordClientActor.musicManager", "link" : "ackcord\/DiscordClientActor.html#musicManager:akka.actor.typed.ActorRef[ackcord.MusicManager.Command]", "kind" : "val"}, {"label" : "shardShutdownManager", "tail" : ": ActorRef[StopShard.type]", "member" : "ackcord.DiscordClientActor.shardShutdownManager", "link" : "ackcord\/DiscordClientActor.html#shardShutdownManager:akka.actor.typed.ActorRef[ackcord.DiscordShard.StopShard.type]", "kind" : "var"}, {"label" : "shards", "tail" : ": Seq[ActorRef[Command]]", "member" : "ackcord.DiscordClientActor.shards", "link" : "ackcord\/DiscordClientActor.html#shards:Seq[akka.actor.typed.ActorRef[ackcord.DiscordShard.Command]]", "kind" : "var"}, {"label" : "events", "tail" : ": Events", "member" : "ackcord.DiscordClientActor.events", "link" : "ackcord\/DiscordClientActor.html#events:ackcord.Events", "kind" : "val"}, {"label" : "system", "tail" : ": ActorSystem[Nothing]", "member" : "ackcord.DiscordClientActor.system", "link" : "ackcord\/DiscordClientActor.html#system:akka.actor.typed.ActorSystem[Nothing]", "kind" : "implicit val"}, {"member" : "ackcord.DiscordClientActor#<init>", "error" : "unsupported entity"}, {"label" : "receiveSignal", "tail" : "(ctx: TypedActorContext[Command], msg: Signal): Behavior[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receiveSignal", "link" : "ackcord\/DiscordClientActor.html#receiveSignal(ctx:akka.actor.typed.TypedActorContext[T],msg:akka.actor.typed.Signal):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "receive", "tail" : "(ctx: TypedActorContext[Command], msg: Command): Behavior[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receive", "link" : "ackcord\/DiscordClientActor.html#receive(ctx:akka.actor.typed.TypedActorContext[T],msg:T):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "onSignal", "tail" : "(): PartialFunction[Signal, Behavior[Command]]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.onSignal", "link" : "ackcord\/DiscordClientActor.html#onSignal:PartialFunction[akka.actor.typed.Signal,akka.actor.typed.Behavior[T]]", "kind" : "def"}, {"label" : "context", "tail" : ": ActorContext[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.context", "link" : "ackcord\/DiscordClientActor.html#context:akka.actor.typed.scaladsl.ActorContext[T]", "kind" : "val"}, {"label" : "narrow", "tail" : "(): Behavior[U]", "member" : "akka.actor.typed.Behavior.narrow", "link" : "ackcord\/DiscordClientActor.html#narrow[U<:T]:akka.actor.typed.Behavior[U]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/DiscordClientActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/DiscordClientActor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/DiscordClientActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/DiscordClientActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/DiscordClientActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/DiscordClientActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/DiscordClientActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/DiscordClientActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/DiscordClientActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/DiscordClientActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/DiscordClientActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/DiscordClientActor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/DiscordClientActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/DiscordClientActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/DiscordClientActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/DiscordClientActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "GetRatelimiterAndEventsReply", "tail" : "", "member" : "ackcord.DiscordClientActor.GetRatelimiterAndEventsReply", "link" : "ackcord\/DiscordClientActor$.html#GetRatelimiterAndEventsReplyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GetMusicManagerReply", "tail" : "", "member" : "ackcord.DiscordClientActor.GetMusicManagerReply", "link" : "ackcord\/DiscordClientActor$.html#GetMusicManagerReplyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GetShardsReply", "tail" : "", "member" : "ackcord.DiscordClientActor.GetShardsReply", "link" : "ackcord\/DiscordClientActor$.html#GetShardsReplyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "LogoutReply", "tail" : "", "member" : "ackcord.DiscordClientActor.LogoutReply", "link" : "ackcord\/DiscordClientActor$.html#LogoutReplyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GetRatelimiterAndEvents", "tail" : "", "member" : "ackcord.DiscordClientActor.GetRatelimiterAndEvents", "link" : "ackcord\/DiscordClientActor$.html#GetRatelimiterAndEventsextendsDiscordClientActor.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "GetMusicManager", "tail" : "", "member" : "ackcord.DiscordClientActor.GetMusicManager", "link" : "ackcord\/DiscordClientActor$.html#GetMusicManagerextendsDiscordClientActor.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "GetShards", "tail" : "", "member" : "ackcord.DiscordClientActor.GetShards", "link" : "ackcord\/DiscordClientActor$.html#GetShardsextendsDiscordClientActor.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Logout", "tail" : "", "member" : "ackcord.DiscordClientActor.Logout", "link" : "ackcord\/DiscordClientActor$.html#LogoutextendsDiscordClientActor.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Login", "tail" : "", "member" : "ackcord.DiscordClientActor.Login", "link" : "ackcord\/DiscordClientActor$.html#Login", "kind" : "case object"}, {"label" : "Command", "tail" : "", "member" : "ackcord.DiscordClientActor.Command", "link" : "ackcord\/DiscordClientActor$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "apply", "tail" : "(shardBehaviors: (Events) => Seq[Behavior[DiscordShard.Command]], cacheSettings: CacheSettings): Behavior[Command]", "member" : "ackcord.DiscordClientActor.apply", "link" : "ackcord\/DiscordClientActor$.html#apply(shardBehaviors:ackcord.Events=>Seq[akka.actor.typed.Behavior[ackcord.DiscordShard.Command]],cacheSettings:ackcord.CacheSettings):akka.actor.typed.Behavior[ackcord.DiscordClientActor.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/DiscordClientActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/DiscordClientActor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/DiscordClientActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/DiscordClientActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/DiscordClientActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/DiscordClientActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/DiscordClientActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/DiscordClientActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/DiscordClientActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/DiscordClientActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/DiscordClientActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/DiscordClientActor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/DiscordClientActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/DiscordClientActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/DiscordClientActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/DiscordClientActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/DiscordClientActor.html", "kind" : "class"}, {"name" : "ackcord.DiscordClientCore", "shortDescription" : "", "members_class" : [{"label" : "shutdownJVM", "tail" : "(timeout: FiniteDuration): Future[Unit]", "member" : "ackcord.DiscordClientCore.shutdownJVM", "link" : "ackcord\/DiscordClientCore.html#shutdownJVM(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "logout", "tail" : "(timeout: FiniteDuration): Future[Boolean]", "member" : "ackcord.DiscordClientCore.logout", "link" : "ackcord\/DiscordClientCore.html#logout(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "login", "tail" : "(): Unit", "member" : "ackcord.DiscordClientCore.login", "link" : "ackcord\/DiscordClientCore.html#login():Unit", "kind" : "def"}, {"label" : "musicManager", "tail" : "(): Future[ActorRef[Command]]", "member" : "ackcord.DiscordClientCore.musicManager", "link" : "ackcord\/DiscordClientCore.html#musicManager:scala.concurrent.Future[akka.actor.typed.ActorRef[ackcord.MusicManager.Command]]", "kind" : "def"}, {"label" : "shards", "tail" : "(): Future[Seq[ActorRef[Command]]]", "member" : "ackcord.DiscordClientCore.shards", "link" : "ackcord\/DiscordClientCore.html#shards:scala.concurrent.Future[Seq[akka.actor.typed.ActorRef[ackcord.DiscordShard.Command]]]", "kind" : "def"}, {"label" : "registerListener", "tail" : "(listener: EventListener[A, Mat]): EventRegistration[Mat]", "member" : "ackcord.DiscordClientCore.registerListener", "link" : "ackcord\/DiscordClientCore.html#registerListener[A<:ackcord.APIMessage,Mat](listener:ackcord.EventListener[A,Mat]):ackcord.EventRegistration[Mat]", "kind" : "def"}, {"label" : "onEventStreamable", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, G[Unit]])(streamable: Streamable[G]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClientCore.onEventStreamable", "link" : "ackcord\/DiscordClientCore.html#onEventStreamable[G[_]](handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,G[Unit]])(implicitstreamable:ackcord.Streamable[G]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "requestsHelper", "tail" : ": RequestsHelper", "member" : "ackcord.DiscordClientCore.requestsHelper", "link" : "ackcord\/DiscordClientCore.html#requestsHelper:ackcord.RequestsHelper", "kind" : "val"}, {"label" : "commands", "tail" : ": CommandConnector", "member" : "ackcord.DiscordClientCore.commands", "link" : "ackcord\/DiscordClientCore.html#commands:ackcord.commands.CommandConnector", "kind" : "val"}, {"member" : "ackcord.DiscordClientCore#<init>", "error" : "unsupported entity"}, {"label" : "requests", "tail" : ": Requests", "member" : "ackcord.DiscordClientCore.requests", "link" : "ackcord\/DiscordClientCore.html#requests:ackcord.Requests", "kind" : "val"}, {"label" : "events", "tail" : ": Events", "member" : "ackcord.DiscordClientCore.events", "link" : "ackcord\/DiscordClientCore.html#events:ackcord.Events", "kind" : "val"}, {"label" : "loadTrack", "tail" : "(playerManager: AudioPlayerManager, identifier: String): Future[AudioItem]", "member" : "ackcord.DiscordClient.loadTrack", "link" : "ackcord\/DiscordClientCore.html#loadTrack(playerManager:com.sedmelluq.discord.lavaplayer.player.AudioPlayerManager,identifier:String):scala.concurrent.Future[com.sedmelluq.discord.lavaplayer.track.AudioItem]", "kind" : "def"}, {"label" : "setPlaying", "tail" : "(guildId: GuildId, playing: Boolean): Unit", "member" : "ackcord.DiscordClient.setPlaying", "link" : "ackcord\/DiscordClientCore.html#setPlaying(guildId:ackcord.data.GuildId,playing:Boolean):Unit", "kind" : "def"}, {"label" : "leaveChannel", "tail" : "(guildId: GuildId, destroyPlayer: Boolean): Unit", "member" : "ackcord.DiscordClient.leaveChannel", "link" : "ackcord\/DiscordClientCore.html#leaveChannel(guildId:ackcord.data.GuildId,destroyPlayer:Boolean):Unit", "kind" : "def"}, {"label" : "joinChannel", "tail" : "(guildId: GuildId, channelId: VoiceGuildChannelId, createPlayer: => AudioPlayer, force: Boolean, timeoutDur: FiniteDuration): Future[AudioPlayer]", "member" : "ackcord.DiscordClient.joinChannel", "link" : "ackcord\/DiscordClientCore.html#joinChannel(guildId:ackcord.data.GuildId,channelId:ackcord.data.VoiceGuildChannelId,createPlayer:=>com.sedmelluq.discord.lavaplayer.player.AudioPlayer,force:Boolean,timeoutDur:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[com.sedmelluq.discord.lavaplayer.player.AudioPlayer]", "kind" : "def"}, {"label" : "bulkRegisterListeners", "tail" : "(listeners: EventListener[_ <: APIMessage, NotUsed]*): Seq[(EventListener[_ <: APIMessage, NotUsed], EventRegistration[NotUsed])]", "member" : "ackcord.DiscordClient.bulkRegisterListeners", "link" : "ackcord\/DiscordClientCore.html#bulkRegisterListeners(listeners:ackcord.EventListener[_<:ackcord.APIMessage,akka.NotUsed]*):Seq[(ackcord.EventListener[_<:ackcord.APIMessage,akka.NotUsed],ackcord.EventRegistration[akka.NotUsed])]", "kind" : "def"}, {"label" : "onEventAsync", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, OptFuture[Unit]]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventAsync", "link" : "ackcord\/DiscordClientCore.html#onEventAsync(handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,ackcord.OptFuture[Unit]]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "onEventSideEffectsIgnore", "tail" : "(handler: PartialFunction[APIMessage, Unit]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventSideEffectsIgnore", "link" : "ackcord\/DiscordClientCore.html#onEventSideEffectsIgnore(handler:PartialFunction[ackcord.APIMessage,Unit]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "onEventSideEffects", "tail" : "(handler: (CacheSnapshot) => PartialFunction[APIMessage, Unit]): EventRegistration[NotUsed]", "member" : "ackcord.DiscordClient.onEventSideEffects", "link" : "ackcord\/DiscordClientCore.html#onEventSideEffects(handler:ackcord.CacheSnapshot=>PartialFunction[ackcord.APIMessage,Unit]):ackcord.EventRegistration[akka.NotUsed]", "kind" : "def"}, {"label" : "shutdownAckCord", "tail" : "(timeout: FiniteDuration): Future[Unit]", "member" : "ackcord.DiscordClient.shutdownAckCord", "link" : "ackcord\/DiscordClientCore.html#shutdownAckCord(timeout:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "executionContext", "tail" : ": ExecutionContextExecutor", "member" : "ackcord.DiscordClient.executionContext", "link" : "ackcord\/DiscordClientCore.html#executionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit val"}, {"label" : "system", "tail" : ": ActorSystem[Nothing]", "member" : "ackcord.DiscordClient.system", "link" : "ackcord\/DiscordClientCore.html#system:akka.actor.typed.ActorSystem[Nothing]", "kind" : "implicit val"}, {"label" : "cache", "tail" : "(): Events", "member" : "ackcord.DiscordClient.cache", "link" : "ackcord\/DiscordClientCore.html#cache:ackcord.Events", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/DiscordClientCore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/DiscordClientCore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/DiscordClientCore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/DiscordClientCore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/DiscordClientCore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/DiscordClientCore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/DiscordClientCore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientCore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientCore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordClientCore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/DiscordClientCore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/DiscordClientCore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/DiscordClientCore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/DiscordClientCore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/DiscordClientCore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/DiscordClientCore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/DiscordClientCore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/DiscordClientCore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/DiscordClientCore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/DiscordClientCore.html", "kind" : "class"}, {"name" : "ackcord.DiscordShard", "shortDescription" : "", "object" : "ackcord\/DiscordShard$.html", "members_object" : [{"label" : "fetchWsGatewayWithShards", "tail" : "(token: String)(system: ActorSystem[Nothing]): Future[FetchWSGatewayBotInfo]", "member" : "ackcord.DiscordShard.fetchWsGatewayWithShards", "link" : "ackcord\/DiscordShard$.html#fetchWsGatewayWithShards(token:String)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[ackcord.DiscordShard.FetchWSGatewayBotInfo]", "kind" : "def"}, {"label" : "SessionStartLimits", "tail" : "", "member" : "ackcord.DiscordShard.SessionStartLimits", "link" : "ackcord\/DiscordShard$.html#SessionStartLimitsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "FetchWSGatewayBotInfo", "tail" : "", "member" : "ackcord.DiscordShard.FetchWSGatewayBotInfo", "link" : "ackcord\/DiscordShard$.html#FetchWSGatewayBotInfoextendsProductwithSerializable", "kind" : "case class"}, {"label" : "fetchWsGateway", "tail" : "(system: ActorSystem[Nothing]): Future[Uri]", "member" : "ackcord.DiscordShard.fetchWsGateway", "link" : "ackcord\/DiscordShard$.html#fetchWsGateway(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.http.scaladsl.model.Uri]", "kind" : "def"}, {"label" : "RestartShard", "tail" : "", "member" : "ackcord.DiscordShard.RestartShard", "link" : "ackcord\/DiscordShard$.html#RestartShard", "kind" : "case object"}, {"label" : "StartShard", "tail" : "", "member" : "ackcord.DiscordShard.StartShard", "link" : "ackcord\/DiscordShard$.html#StartShard", "kind" : "case object"}, {"label" : "StopShard", "tail" : "", "member" : "ackcord.DiscordShard.StopShard", "link" : "ackcord\/DiscordShard$.html#StopShard", "kind" : "case object"}, {"label" : "startShards", "tail" : "(shards: Seq[ActorRef[Command]])(system: ActorSystem[Nothing]): Future[Done]", "member" : "ackcord.DiscordShard.startShards", "link" : "ackcord\/DiscordShard$.html#startShards(shards:Seq[akka.actor.typed.ActorRef[ackcord.DiscordShard.Command]])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "many", "tail" : "(wsUri: Uri, shardTotal: Int, settings: GatewaySettings, events: Events): Seq[Behavior[Command]]", "member" : "ackcord.DiscordShard.many", "link" : "ackcord\/DiscordShard$.html#many(wsUri:akka.http.scaladsl.model.Uri,shardTotal:Int,settings:ackcord.GatewaySettings,events:ackcord.Events):Seq[akka.actor.typed.Behavior[ackcord.DiscordShard.Command]]", "kind" : "def"}, {"label" : "apply", "tail" : "(wsUri: Uri, settings: GatewaySettings, events: Events): Behavior[Command]", "member" : "ackcord.DiscordShard.apply", "link" : "ackcord\/DiscordShard$.html#apply(wsUri:akka.http.scaladsl.model.Uri,settings:ackcord.GatewaySettings,events:ackcord.Events):akka.actor.typed.Behavior[ackcord.DiscordShard.Command]", "kind" : "def"}, {"label" : "State", "tail" : "", "member" : "ackcord.DiscordShard.State", "link" : "ackcord\/DiscordShard$.html#StateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Parameters", "tail" : "", "member" : "ackcord.DiscordShard.Parameters", "link" : "ackcord\/DiscordShard$.html#ParametersextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "ackcord.DiscordShard.Command", "link" : "ackcord\/DiscordShard$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/DiscordShard$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/DiscordShard$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/DiscordShard$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/DiscordShard$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/DiscordShard$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/DiscordShard$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/DiscordShard$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordShard$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordShard$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/DiscordShard$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/DiscordShard$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/DiscordShard$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/DiscordShard$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/DiscordShard$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/DiscordShard$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/DiscordShard$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/DiscordShard$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/DiscordShard$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/DiscordShard$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.EventListener", "trait" : "ackcord\/EventListener.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventListener.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventListener.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sink", "tail" : "(): Sink[EventListenerMessage[A], Mat]", "member" : "ackcord.EventListener.sink", "link" : "ackcord\/EventListener.html#sink:akka.stream.scaladsl.Sink[ackcord.EventListenerMessage[A],Mat]", "kind" : "abstract def"}, {"label" : "refineEvent", "tail" : "(msg: APIMessage): Option[A]", "member" : "ackcord.EventListener.refineEvent", "link" : "ackcord\/EventListener.html#refineEvent(msg:ackcord.APIMessage):Option[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.EventListenerBuilder", "shortDescription" : "", "object" : "ackcord\/EventListenerBuilder$.html", "members_object" : [{"label" : "guildUserEvent", "tail" : "(create: (Guild, User, GuildMember) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.guildUserEvent", "link" : "ackcord\/EventListenerBuilder$.html#guildUserEvent[I[A]<:ackcord.GuildEventListenerMessage[A],O[_]](create:(ackcord.data.Guild,ackcord.data.User,ackcord.data.GuildMember)=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "voiceGuildChannelEvent", "tail" : "(create: (VoiceGuildChannel, Guild) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.voiceGuildChannelEvent", "link" : "ackcord\/EventListenerBuilder$.html#voiceGuildChannelEvent[I[A]<:ackcord.ChannelEventListenerMessage[A],O[_]](create:(ackcord.data.VoiceGuildChannel,ackcord.data.Guild)=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "textGuildChannelEvent", "tail" : "(create: (TextGuildChannel, Guild) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.textGuildChannelEvent", "link" : "ackcord\/EventListenerBuilder$.html#textGuildChannelEvent[I[A]<:ackcord.ChannelEventListenerMessage[A],O[_]](create:(ackcord.data.TextGuildChannel,ackcord.data.Guild)=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "textChannelEvent", "tail" : "(create: (TextChannel) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.textChannelEvent", "link" : "ackcord\/EventListenerBuilder$.html#textChannelEvent[I[A]<:ackcord.ChannelEventListenerMessage[A],O[_]](create:ackcord.data.TextChannel=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "channelEvent", "tail" : "(create: (Channel) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.channelEvent", "link" : "ackcord\/EventListenerBuilder$.html#channelEvent[I[A]<:ackcord.EventListenerMessage[A],O[_]](create:ackcord.data.Channel=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "guildEvent", "tail" : "(create: (Guild) => ~>[I, O]): EventTransformer[I, O]", "member" : "ackcord.EventListenerBuilder.guildEvent", "link" : "ackcord\/EventListenerBuilder$.html#guildEvent[I[A]<:ackcord.EventListenerMessage[A],O[_]](create:ackcord.data.Guild=>I~>O):ackcord.EventListenerBuilder.EventTransformer[I,O]", "kind" : "def"}, {"label" : "rawBuilder", "tail" : "(requests: Requests): EventListenerBuilder[EventListenerMessage, APIMessage]", "member" : "ackcord.EventListenerBuilder.rawBuilder", "link" : "ackcord\/EventListenerBuilder$.html#rawBuilder(requests:ackcord.Requests):ackcord.EventListenerBuilder[ackcord.EventListenerMessage,ackcord.APIMessage]", "kind" : "def"}, {"label" : "EventTransformer", "tail" : "", "member" : "ackcord.EventListenerBuilder.EventTransformer", "link" : "ackcord\/EventListenerBuilder$.html#EventTransformer[-I[_],+O[_]]=ackcord.commands.ActionTransformer[I,O,Nothing]", "kind" : "type"}, {"label" : "EventFunction", "tail" : "", "member" : "ackcord.EventListenerBuilder.EventFunction", "link" : "ackcord\/EventListenerBuilder$.html#EventFunction[-I[_],+O[_]]=ackcord.commands.ActionFunction[I,O,Nothing]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventListenerBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventListenerBuilder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventListenerBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventListenerBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventListenerBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventListenerBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventListenerBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventListenerBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventListenerBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventListenerBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventListenerBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventListenerBuilder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventListenerBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventListenerBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventListenerBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventListenerBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "andThen", "tail" : "(that: ActionFunction[M, O2, Nothing]): EventListenerBuilder[O2, A]", "member" : "ackcord.EventListenerBuilder.andThen", "link" : "ackcord\/EventListenerBuilder.html#andThen[O2[_]](that:ackcord.commands.ActionFunction[M,O2,Nothing]):ackcord.EventListenerBuilder[O2,A]", "kind" : "def"}, {"label" : "toSink", "tail" : "(sinkBlock: Sink[M[A], Mat]): EventListener[A, Mat]", "member" : "ackcord.EventListenerBuilder.toSink", "link" : "ackcord\/EventListenerBuilder.html#toSink[Mat](sinkBlock:akka.stream.scaladsl.Sink[M[A],Mat]):ackcord.EventListener[A,Mat]", "kind" : "def"}, {"label" : "on", "tail" : "(tag: ClassTag[B]): EventListenerBuilder[M, B]", "member" : "ackcord.EventListenerBuilder.on", "link" : "ackcord\/EventListenerBuilder.html#on[B<:A](implicittag:scala.reflect.ClassTag[B]):ackcord.EventListenerBuilder[M,B]", "kind" : "def"}, {"label" : "flow", "tail" : "(): Flow[EventListenerMessage[C], Either[Option[Nothing], M[C]], NotUsed]", "member" : "ackcord.EventListenerBuilder.flow", "link" : "ackcord\/EventListenerBuilder.html#flow[C]:akka.stream.scaladsl.Flow[ackcord.EventListenerMessage[C],Either[Option[Nothing],M[C]],akka.NotUsed]", "kind" : "def"}, {"label" : "Action", "tail" : "", "member" : "ackcord.EventListenerBuilder.Action", "link" : "ackcord\/EventListenerBuilder.html#Action[B,Mat]=ackcord.EventListener[B,Mat]", "kind" : "type"}, {"member" : "ackcord.EventListenerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "actionFunction", "tail" : ": ActionFunction[EventListenerMessage, M, Nothing]", "member" : "ackcord.EventListenerBuilder.actionFunction", "link" : "ackcord\/EventListenerBuilder.html#actionFunction:ackcord.commands.ActionFunction[ackcord.EventListenerMessage,M,Nothing]", "kind" : "val"}, {"label" : "refineEvent", "tail" : ": (APIMessage) => Option[A]", "member" : "ackcord.EventListenerBuilder.refineEvent", "link" : "ackcord\/EventListenerBuilder.html#refineEvent:ackcord.APIMessage=>Option[A]", "kind" : "val"}, {"label" : "requests", "tail" : ": Requests", "member" : "ackcord.EventListenerBuilder.requests", "link" : "ackcord\/EventListenerBuilder.html#requests:ackcord.Requests", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/EventListenerBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withSideEffects", "tail" : "(block: (M[A]) => Unit): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withSideEffects", "link" : "ackcord\/EventListenerBuilder.html#withSideEffects(block:O[A]=>Unit):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequestOpt", "tail" : "(block: (M[A]) => Option[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequestOpt", "link" : "ackcord\/EventListenerBuilder.html#withRequestOpt(block:O[A]=>Option[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequest", "tail" : "(block: (M[A]) => Request[Any]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequest", "link" : "ackcord\/EventListenerBuilder.html#withRequest(block:O[A]=>ackcord.requests.Request[Any]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOptRequest", "tail" : "(block: (M[A]) => OptFuture[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOptRequest", "link" : "ackcord\/EventListenerBuilder.html#asyncOptRequest[G[_]](block:O[A]=>ackcord.OptFuture[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOpt", "tail" : "(block: (M[A]) => OptFuture[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOpt", "link" : "ackcord\/EventListenerBuilder.html#asyncOpt(block:O[A]=>ackcord.OptFuture[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "async", "tail" : "(block: (M[A]) => Future[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.async", "link" : "ackcord\/EventListenerBuilder.html#async(block:O[A]=>scala.concurrent.Future[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamedOptRequest", "tail" : "(block: (M[A]) => OptionT[G, Request[Any]])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamedOptRequest", "link" : "ackcord\/EventListenerBuilder.html#streamedOptRequest[G[_]](block:O[A]=>cats.data.OptionT[G,ackcord.requests.Request[Any]])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamed", "tail" : "(block: (M[A]) => G[Unit])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamed", "link" : "ackcord\/EventListenerBuilder.html#streamed[G[_]](block:O[A]=>G[Unit])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventListenerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventListenerBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventListenerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventListenerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventListenerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventListenerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventListenerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventListenerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventListenerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventListenerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventListenerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventListenerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventListenerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/EventListenerBuilder.html", "kind" : "case class"}, {"name" : "ackcord.EventListenerMessage", "object" : "ackcord\/EventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.EventListenerMessage.Default", "link" : "ackcord\/EventListenerMessage$.html#Default[A]extendsEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "findCache", "tail" : "(message: EventListenerMessage[A]): CacheSnapshot", "member" : "ackcord.EventListenerMessage.findCache", "link" : "ackcord\/EventListenerMessage$.html#findCache[A](implicitmessage:ackcord.EventListenerMessage[A]):ackcord.CacheSnapshot", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/EventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/EventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/EventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.EventRegistration", "shortDescription" : "", "object" : "ackcord\/EventRegistration$.html", "members_object" : [{"label" : "withRegistration", "tail" : "(source: Source[A, M]): Source[A, EventRegistration[M]]", "member" : "ackcord.EventRegistration.withRegistration", "link" : "ackcord\/EventRegistration$.html#withRegistration[A,M](source:akka.stream.scaladsl.Source[A,M]):akka.stream.scaladsl.Source[A,ackcord.EventRegistration[M]]", "kind" : "def"}, {"label" : "toSink", "tail" : "(source: Source[A, M]): RunnableGraph[EventRegistration[M]]", "member" : "ackcord.EventRegistration.toSink", "link" : "ackcord\/EventRegistration$.html#toSink[A,M](source:akka.stream.scaladsl.Source[A,M]):akka.stream.scaladsl.RunnableGraph[ackcord.EventRegistration[M]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventRegistration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventRegistration$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventRegistration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventRegistration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventRegistration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventRegistration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventRegistration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventRegistration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventRegistration$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventRegistration$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventRegistration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventRegistration$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventRegistration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventRegistration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventRegistration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventRegistration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "stop", "tail" : "(): Unit", "member" : "ackcord.EventRegistration.stop", "link" : "ackcord\/EventRegistration.html#stop():Unit", "kind" : "def"}, {"member" : "ackcord.EventRegistration#<init>", "error" : "unsupported entity"}, {"label" : "killSwitch", "tail" : ": UniqueKillSwitch", "member" : "ackcord.EventRegistration.killSwitch", "link" : "ackcord\/EventRegistration.html#killSwitch:akka.stream.UniqueKillSwitch", "kind" : "val"}, {"label" : "onDone", "tail" : ": Future[Done]", "member" : "ackcord.EventRegistration.onDone", "link" : "ackcord\/EventRegistration.html#onDone:scala.concurrent.Future[akka.Done]", "kind" : "val"}, {"label" : "materialized", "tail" : ": Mat", "member" : "ackcord.EventRegistration.materialized", "link" : "ackcord\/EventRegistration.html#materialized:Mat", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/EventRegistration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventRegistration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventRegistration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventRegistration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventRegistration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventRegistration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventRegistration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventRegistration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventRegistration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventRegistration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventRegistration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventRegistration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventRegistration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventRegistration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventRegistration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/EventRegistration.html", "kind" : "case class"}, {"name" : "ackcord.Events", "shortDescription" : "Houses streams to interact with events and messages sent to and from Discord.", "object" : "ackcord\/Events$.html", "members_object" : [{"label" : "createGuildCache", "tail" : "(guildCacheActor: ActorRef[GuildCacheEvent], parallelism: Int, ignoredEvents: Seq[Class[_ <: GatewayEvent[_]]], cacheTypeRegistry: (Logger) => CacheTypeRegistry, maxBatch: Long, batchCostFun: (APIMessageCacheUpdate[_]) => Long, convertGatewayEventsToApiMessages: Boolean, cacheBufferSize: PubSubBufferSize, sendGatewayEventsBufferSize: PubSubBufferSize, receiveGatewayEventsBufferSize: PubSubBufferSize)(system: ActorSystem[Nothing]): Events", "member" : "ackcord.Events.createGuildCache", "link" : "ackcord\/Events$.html#createGuildCache(guildCacheActor:akka.actor.typed.ActorRef[ackcord.CacheStreams.GuildCacheEvent],parallelism:Int,ignoredEvents:Seq[Class[_<:ackcord.gateway.GatewayEvent[_]]],cacheTypeRegistry:org.slf4j.Logger=>ackcord.cachehandlers.CacheTypeRegistry,maxBatch:Long,batchCostFun:ackcord.APIMessageCacheUpdate[_]=>Long,convertGatewayEventsToApiMessages:Boolean,cacheBufferSize:ackcord.PubSubBufferSize,sendGatewayEventsBufferSize:ackcord.PubSubBufferSize,receiveGatewayEventsBufferSize:ackcord.PubSubBufferSize)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.Events", "kind" : "def"}, {"label" : "create", "tail" : "(cacheProcessor: CacheProcessor, parallelism: Int, ignoredEvents: Seq[Class[_ <: GatewayEvent[_]]], cacheTypeRegistry: (Logger) => CacheTypeRegistry, maxBatch: Long, batchCostFun: (APIMessageCacheUpdate[_]) => Long, convertGatewayEventsToApiMessages: Boolean, cacheBufferSize: PubSubBufferSize, sendGatewayEventsBufferSize: PubSubBufferSize, receiveGatewayEventsBufferSize: PubSubBufferSize)(system: ActorSystem[Nothing]): Events", "member" : "ackcord.Events.create", "link" : "ackcord\/Events$.html#create(cacheProcessor:ackcord.MemoryCacheSnapshot.CacheProcessor,parallelism:Int,ignoredEvents:Seq[Class[_<:ackcord.gateway.GatewayEvent[_]]],cacheTypeRegistry:org.slf4j.Logger=>ackcord.cachehandlers.CacheTypeRegistry,maxBatch:Long,batchCostFun:ackcord.APIMessageCacheUpdate[_]=>Long,convertGatewayEventsToApiMessages:Boolean,cacheBufferSize:ackcord.PubSubBufferSize,sendGatewayEventsBufferSize:ackcord.PubSubBufferSize,receiveGatewayEventsBufferSize:ackcord.PubSubBufferSize)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.Events", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/Events$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/Events$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/Events$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/Events$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/Events$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/Events$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/Events$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/Events$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/Events$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/Events$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/Events$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/Events$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/Events$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/Events$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/Events$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/Events$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "subscribeAPIActorWithAck", "tail" : "(actor: ActorRef, initMessage: Any, ackMessage: Any, completeMessage: Any, failureMessage: (Throwable) => Any)(specificEvent: Class[_ <: APIMessage]*): Unit", "member" : "ackcord.Events.subscribeAPIActorWithAck", "link" : "ackcord\/Events.html#subscribeAPIActorWithAck(actor:akka.actor.ActorRef,initMessage:Any,ackMessage:Any,completeMessage:Any,failureMessage:Throwable=>Any)(specificEvent:Class[_<:ackcord.APIMessage]*):Unit", "kind" : "def"}, {"label" : "subscribeAPIActor", "tail" : "(actor: ActorRef, completeMessage: Any, onFailureMessage: (Throwable) => Any)(specificEvent: Class[_ <: APIMessage]*): Unit", "member" : "ackcord.Events.subscribeAPIActor", "link" : "ackcord\/Events.html#subscribeAPIActor(actor:akka.actor.ActorRef,completeMessage:Any,onFailureMessage:Throwable=>Any)(specificEvent:Class[_<:ackcord.APIMessage]*):Unit", "kind" : "def"}, {"label" : "subscribeAPI", "tail" : "(): Source[APIMessage, NotUsed]", "member" : "ackcord.Events.subscribeAPI", "link" : "ackcord\/Events.html#subscribeAPI:akka.stream.scaladsl.Source[ackcord.APIMessage,akka.NotUsed]", "kind" : "def"}, {"label" : "publishCacheEvents", "tail" : "(it: Iterable[CacheEvent]): Unit", "member" : "ackcord.Events.publishCacheEvents", "link" : "ackcord\/Events.html#publishCacheEvents(it:scala.collection.immutable.Iterable[ackcord.CacheEvent]):Unit", "kind" : "def"}, {"label" : "publishMany", "tail" : "(it: Iterable[CacheEvent]): Unit", "member" : "ackcord.Events.publishMany", "link" : "ackcord\/Events.html#publishMany(it:scala.collection.immutable.Iterable[ackcord.CacheEvent]):Unit", "kind" : "def"}, {"label" : "publishCacheEvent", "tail" : "(elem: CacheEvent): Unit", "member" : "ackcord.Events.publishCacheEvent", "link" : "ackcord\/Events.html#publishCacheEvent(elem:ackcord.CacheEvent):Unit", "kind" : "def"}, {"label" : "publish", "tail" : "(elem: CacheEvent): Unit", "member" : "ackcord.Events.publish", "link" : "ackcord\/Events.html#publish(elem:ackcord.CacheEvent):Unit", "kind" : "def"}, {"label" : "gatewayClientConnection", "tail" : "(): Flow[GatewayMessage[_], GatewayMessage[_], NotUsed]", "member" : "ackcord.Events.gatewayClientConnection", "link" : "ackcord\/Events.html#gatewayClientConnection:akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_],akka.NotUsed]", "kind" : "def"}, {"member" : "ackcord.Events#<init>", "error" : "unsupported entity"}, {"label" : "parallelism", "tail" : ": Int", "member" : "ackcord.Events.parallelism", "link" : "ackcord\/Events.html#parallelism:Int", "kind" : "val"}, {"label" : "receiveGatewaySubscribe", "tail" : ": Source[GatewayMessage[Any], NotUsed]", "member" : "ackcord.Events.receiveGatewaySubscribe", "link" : "ackcord\/Events.html#receiveGatewaySubscribe:akka.stream.scaladsl.Source[ackcord.gateway.GatewayMessage[Any],akka.NotUsed]", "kind" : "val"}, {"label" : "receiveGatewayPublish", "tail" : ": Sink[GatewayMessage[Any], NotUsed]", "member" : "ackcord.Events.receiveGatewayPublish", "link" : "ackcord\/Events.html#receiveGatewayPublish:akka.stream.scaladsl.Sink[ackcord.gateway.GatewayMessage[Any],akka.NotUsed]", "kind" : "val"}, {"label" : "sendGatewaySubscribe", "tail" : ": Source[GatewayMessage[Any], NotUsed]", "member" : "ackcord.Events.sendGatewaySubscribe", "link" : "ackcord\/Events.html#sendGatewaySubscribe:akka.stream.scaladsl.Source[ackcord.gateway.GatewayMessage[Any],akka.NotUsed]", "kind" : "val"}, {"label" : "sendGatewayPublish", "tail" : ": Sink[GatewayMessage[Any], NotUsed]", "member" : "ackcord.Events.sendGatewayPublish", "link" : "ackcord\/Events.html#sendGatewayPublish:akka.stream.scaladsl.Sink[ackcord.gateway.GatewayMessage[Any],akka.NotUsed]", "kind" : "val"}, {"label" : "subscribe", "tail" : ": Source[(CacheEvent, CacheState), NotUsed]", "member" : "ackcord.Events.subscribe", "link" : "ackcord\/Events.html#subscribe:akka.stream.scaladsl.Source[(ackcord.CacheEvent,ackcord.CacheState),akka.NotUsed]", "kind" : "val"}, {"label" : "publish", "tail" : ": Sink[CacheEvent, NotUsed]", "member" : "ackcord.Events.publish", "link" : "ackcord\/Events.html#publish:akka.stream.scaladsl.Sink[ackcord.CacheEvent,akka.NotUsed]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/Events.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/Events.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/Events.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/Events.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/Events.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/Events.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/Events.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/Events.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/Events.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/Events.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/Events.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/Events.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/Events.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/Events.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/Events.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/Events.html", "kind" : "case class"}, {"name" : "ackcord.EventsController", "shortDescription" : "", "members_class" : [{"label" : "GuildUserEvent", "tail" : ": EventListenerBuilder[GuildUserEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.GuildUserEvent", "link" : "ackcord\/EventsController.html#GuildUserEvent:ackcord.EventListenerBuilder[ackcord.GuildUserEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "VGuildChannelEvent", "tail" : ": EventListenerBuilder[VGuildChannelEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.VGuildChannelEvent", "link" : "ackcord\/EventsController.html#VGuildChannelEvent:ackcord.EventListenerBuilder[ackcord.VGuildChannelEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "TextGuildChannelEvent", "tail" : ": EventListenerBuilder[TextGuildChannelEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.TextGuildChannelEvent", "link" : "ackcord\/EventsController.html#TextGuildChannelEvent:ackcord.EventListenerBuilder[ackcord.TextGuildChannelEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "TextChannelEvent", "tail" : ": EventListenerBuilder[TextChannelEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.TextChannelEvent", "link" : "ackcord\/EventsController.html#TextChannelEvent:ackcord.EventListenerBuilder[ackcord.TextChannelEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "ChannelEvent", "tail" : ": EventListenerBuilder[ChannelEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.ChannelEvent", "link" : "ackcord\/EventsController.html#ChannelEvent:ackcord.EventListenerBuilder[ackcord.ChannelEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "GuildEvent", "tail" : ": EventListenerBuilder[GuildEventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.GuildEvent", "link" : "ackcord\/EventsController.html#GuildEvent:ackcord.EventListenerBuilder[ackcord.GuildEventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "Event", "tail" : ": EventListenerBuilder[EventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.Event", "link" : "ackcord\/EventsController.html#Event:ackcord.EventListenerBuilder[ackcord.EventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "baseEventBuilder", "tail" : ": EventListenerBuilder[EventListenerMessage, APIMessage]", "member" : "ackcord.EventsController.baseEventBuilder", "link" : "ackcord\/EventsController.html#baseEventBuilder:ackcord.EventListenerBuilder[ackcord.EventListenerMessage,ackcord.APIMessage]", "kind" : "val"}, {"label" : "findCache", "tail" : "(message: EventListenerMessage[A]): CacheSnapshot", "member" : "ackcord.EventsController.findCache", "link" : "ackcord\/EventsController.html#findCache[A](implicitmessage:ackcord.EventListenerMessage[A]):ackcord.CacheSnapshot", "kind" : "implicit def"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "ackcord.EventsController.ec", "link" : "ackcord\/EventsController.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"label" : "requestHelper", "tail" : ": RequestsHelper", "member" : "ackcord.EventsController.requestHelper", "link" : "ackcord\/EventsController.html#requestHelper:ackcord.RequestsHelper", "kind" : "val"}, {"member" : "ackcord.EventsController#<init>", "error" : "unsupported entity"}, {"label" : "requests", "tail" : ": Requests", "member" : "ackcord.EventsController.requests", "link" : "ackcord\/EventsController.html#requests:ackcord.Requests", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/EventsController.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/EventsController.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/EventsController.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/EventsController.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/EventsController.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/EventsController.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/EventsController.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventsController.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventsController.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/EventsController.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/EventsController.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/EventsController.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/EventsController.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/EventsController.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/EventsController.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/EventsController.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/EventsController.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/EventsController.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/EventsController.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/EventsController.html", "kind" : "class"}, {"name" : "ackcord.GuildEventListenerMessage", "object" : "ackcord\/GuildEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.GuildEventListenerMessage.Default", "link" : "ackcord\/GuildEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withGuildEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/GuildEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/GuildEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/GuildEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/GuildEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/GuildEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/GuildEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/GuildEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/GuildEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/GuildEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/GuildEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/GuildEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/GuildEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/GuildEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/GuildEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/GuildEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/GuildEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/GuildEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/GuildEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/GuildEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/GuildEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/GuildEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/GuildEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/GuildEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/GuildEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/GuildEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/GuildEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/GuildEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/GuildEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/GuildEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/GuildEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/GuildEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/GuildEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/GuildEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/GuildEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.GuildEventListenerMessage.guild", "link" : "ackcord\/GuildEventListenerMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/GuildEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.GuildUserEventListenerMessage", "object" : "ackcord\/GuildUserEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.GuildUserEventListenerMessage.Default", "link" : "ackcord\/GuildUserEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withGuildUserEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/GuildUserEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/GuildUserEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/GuildUserEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/GuildUserEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/GuildUserEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/GuildUserEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/GuildUserEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/GuildUserEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/GuildUserEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/GuildUserEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/GuildUserEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/GuildUserEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/GuildUserEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/GuildUserEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/GuildUserEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/GuildUserEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/GuildUserEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/GuildUserEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/GuildUserEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/GuildUserEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/GuildUserEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/GuildUserEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/GuildUserEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/GuildUserEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/GuildUserEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/GuildUserEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/GuildUserEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/GuildUserEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/GuildUserEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/GuildUserEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/GuildUserEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/GuildUserEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/GuildUserEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/GuildUserEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/GuildUserEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guildMember", "tail" : "(): GuildMember", "member" : "ackcord.GuildUserEventListenerMessage.guildMember", "link" : "ackcord\/GuildUserEventListenerMessage.html#guildMember:ackcord.data.GuildMember", "kind" : "abstract def"}, {"label" : "user", "tail" : "(): User", "member" : "ackcord.UserEventListenerMessage.user", "link" : "ackcord\/GuildUserEventListenerMessage.html#user:ackcord.data.User", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.GuildEventListenerMessage.guild", "link" : "ackcord\/GuildUserEventListenerMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/GuildUserEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.MemoryCacheSnapshot", "shortDescription" : "Represents the cache at some point in time", "object" : "ackcord\/MemoryCacheSnapshot$.html", "members_object" : [{"label" : "cleanGarbage", "tail" : "(keepMessagesFor: FiniteDuration, keepTypedFor: FiniteDuration, minMessagesPerChannel: Int, minMessages: Int, alwaysKeep: Set[MessageId]): CacheProcessor", "member" : "ackcord.MemoryCacheSnapshot.cleanGarbage", "link" : "ackcord\/MemoryCacheSnapshot$.html#cleanGarbage(keepMessagesFor:scala.concurrent.duration.FiniteDuration,keepTypedFor:scala.concurrent.duration.FiniteDuration,minMessagesPerChannel:Int,minMessages:Int,alwaysKeep:Set[ackcord.data.MessageId]):ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "def"}, {"label" : "everyN", "tail" : "(every: Int, remaining: Int, doAction: CacheProcessor): CacheProcessor", "member" : "ackcord.MemoryCacheSnapshot.everyN", "link" : "ackcord\/MemoryCacheSnapshot$.html#everyN(every:Int,remaining:Int,doAction:ackcord.MemoryCacheSnapshot.CacheProcessor):ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "def"}, {"label" : "defaultCacheProcessor", "tail" : ": CacheProcessor", "member" : "ackcord.MemoryCacheSnapshot.defaultCacheProcessor", "link" : "ackcord\/MemoryCacheSnapshot$.html#defaultCacheProcessor:ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "lazy val"}, {"label" : "CacheProcessor", "tail" : "", "member" : "ackcord.MemoryCacheSnapshot.CacheProcessor", "link" : "ackcord\/MemoryCacheSnapshot$.html#CacheProcessorextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/MemoryCacheSnapshot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/MemoryCacheSnapshot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/MemoryCacheSnapshot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/MemoryCacheSnapshot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/MemoryCacheSnapshot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/MemoryCacheSnapshot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/MemoryCacheSnapshot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/MemoryCacheSnapshot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/MemoryCacheSnapshot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/MemoryCacheSnapshot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/MemoryCacheSnapshot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/MemoryCacheSnapshot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/MemoryCacheSnapshot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/MemoryCacheSnapshot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/MemoryCacheSnapshot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/MemoryCacheSnapshot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getGuildBans", "tail" : "(id: GuildId): SnowflakeMap[User, Ban]", "member" : "ackcord.MemoryCacheSnapshot.getGuildBans", "link" : "ackcord\/MemoryCacheSnapshot.html#getGuildBans(id:ackcord.data.GuildId):ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.Ban]", "kind" : "def"}, {"label" : "getChannelLastTyped", "tail" : "(channelId: TextChannelId): SnowflakeMap[User, Instant]", "member" : "ackcord.MemoryCacheSnapshot.getChannelLastTyped", "link" : "ackcord\/MemoryCacheSnapshot.html#getChannelLastTyped(channelId:ackcord.data.TextChannelId):ackcord.SnowflakeMap[ackcord.data.User,java.time.Instant]", "kind" : "def"}, {"label" : "getChannelMessages", "tail" : "(channelId: TextChannelId): SnowflakeMap[Message, Message]", "member" : "ackcord.MemoryCacheSnapshot.getChannelMessages", "link" : "ackcord\/MemoryCacheSnapshot.html#getChannelMessages(channelId:ackcord.data.TextChannelId):ackcord.SnowflakeMap[ackcord.data.Message,ackcord.data.Message]", "kind" : "def"}, {"label" : "MapType", "tail" : "", "member" : "ackcord.MemoryCacheSnapshot.MapType", "link" : "ackcord\/MemoryCacheSnapshot.html#MapType[K,V]=ackcord.SnowflakeMap[K,V]", "kind" : "type"}, {"member" : "ackcord.MemoryCacheSnapshot#<init>", "error" : "unsupported entity"}, {"label" : "processor", "tail" : ": CacheProcessor", "member" : "ackcord.MemoryCacheSnapshot.processor", "link" : "ackcord\/MemoryCacheSnapshot.html#processor:ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "val"}, {"label" : "banMap", "tail" : ": SnowflakeMap[Guild, SnowflakeMap[User, Ban]]", "member" : "ackcord.MemoryCacheSnapshot.banMap", "link" : "ackcord\/MemoryCacheSnapshot.html#banMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.Ban]]", "kind" : "val"}, {"label" : "userMap", "tail" : ": SnowflakeMap[User, User]", "member" : "ackcord.MemoryCacheSnapshot.userMap", "link" : "ackcord\/MemoryCacheSnapshot.html#userMap:ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.User]", "kind" : "val"}, {"label" : "lastTypedMap", "tail" : ": SnowflakeMap[TextChannel, SnowflakeMap[User, Instant]]", "member" : "ackcord.MemoryCacheSnapshot.lastTypedMap", "link" : "ackcord\/MemoryCacheSnapshot.html#lastTypedMap:ackcord.SnowflakeMap[ackcord.data.TextChannel,ackcord.SnowflakeMap[ackcord.data.User,java.time.Instant]]", "kind" : "val"}, {"label" : "messageMap", "tail" : ": SnowflakeMap[TextChannel, SnowflakeMap[Message, Message]]", "member" : "ackcord.MemoryCacheSnapshot.messageMap", "link" : "ackcord\/MemoryCacheSnapshot.html#messageMap:ackcord.SnowflakeMap[ackcord.data.TextChannel,ackcord.SnowflakeMap[ackcord.data.Message,ackcord.data.Message]]", "kind" : "val"}, {"label" : "guildMap", "tail" : ": SnowflakeMap[Guild, Guild]", "member" : "ackcord.MemoryCacheSnapshot.guildMap", "link" : "ackcord\/MemoryCacheSnapshot.html#guildMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.data.Guild]", "kind" : "val"}, {"label" : "unavailableGuildMap", "tail" : ": SnowflakeMap[Guild, UnavailableGuild]", "member" : "ackcord.MemoryCacheSnapshot.unavailableGuildMap", "link" : "ackcord\/MemoryCacheSnapshot.html#unavailableGuildMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.data.UnavailableGuild]", "kind" : "val"}, {"label" : "groupDmChannelMap", "tail" : ": SnowflakeMap[GroupDMChannel, GroupDMChannel]", "member" : "ackcord.MemoryCacheSnapshot.groupDmChannelMap", "link" : "ackcord\/MemoryCacheSnapshot.html#groupDmChannelMap:ackcord.SnowflakeMap[ackcord.data.GroupDMChannel,ackcord.data.GroupDMChannel]", "kind" : "val"}, {"label" : "dmChannelMap", "tail" : ": SnowflakeMap[DMChannel, DMChannel]", "member" : "ackcord.MemoryCacheSnapshot.dmChannelMap", "link" : "ackcord\/MemoryCacheSnapshot.html#dmChannelMap:ackcord.SnowflakeMap[ackcord.data.DMChannel,ackcord.data.DMChannel]", "kind" : "val"}, {"label" : "botUser", "tail" : ": @@[User, BotUser]", "member" : "ackcord.MemoryCacheSnapshot.botUser", "link" : "ackcord\/MemoryCacheSnapshot.html#botUser:ackcord.data.User@@ackcord.CacheSnapshot.BotUser", "kind" : "val"}, {"label" : "seq", "tail" : ": Long", "member" : "ackcord.MemoryCacheSnapshot.seq", "link" : "ackcord\/MemoryCacheSnapshot.html#seq:Long", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/MemoryCacheSnapshot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getPresence", "tail" : "(guildId: GuildId, userId: UserId): Option[Presence]", "member" : "ackcord.CacheSnapshotWithMaps.getPresence", "link" : "ackcord\/MemoryCacheSnapshot.html#getPresence(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Presence]", "kind" : "def"}, {"label" : "getBan", "tail" : "(guildId: GuildId, userId: UserId): Option[Ban]", "member" : "ackcord.CacheSnapshotWithMaps.getBan", "link" : "ackcord\/MemoryCacheSnapshot.html#getBan(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Ban]", "kind" : "def"}, {"label" : "getUser", "tail" : "(id: UserId): Option[User]", "member" : "ackcord.CacheSnapshotWithMaps.getUser", "link" : "ackcord\/MemoryCacheSnapshot.html#getUser(id:ackcord.data.UserId):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "getLastTyped", "tail" : "(channelId: TextChannelId, userId: UserId): Option[Instant]", "member" : "ackcord.CacheSnapshotWithMaps.getLastTyped", "link" : "ackcord\/MemoryCacheSnapshot.html#getLastTyped(channelId:ackcord.data.TextChannelId,userId:ackcord.data.UserId):Option[java.time.Instant]", "kind" : "def"}, {"label" : "getEmoji", "tail" : "(id: EmojiId): Option[Emoji]", "member" : "ackcord.CacheSnapshotWithMaps.getEmoji", "link" : "ackcord\/MemoryCacheSnapshot.html#getEmoji(id:ackcord.data.EmojiId):Option[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "getRole", "tail" : "(guildId: GuildId, roleId: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/MemoryCacheSnapshot.html#getRole(guildId:ackcord.data.GuildId,roleId:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getRole", "tail" : "(id: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/MemoryCacheSnapshot.html#getRole(id:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getTextChannel", "tail" : "(id: TextChannelId): Option[TextChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getTextChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getTextChannel(id:ackcord.data.TextChannelId):Option[ackcord.data.TextChannel]", "kind" : "def"}, {"label" : "getChannel", "tail" : "(id: ChannelId): Option[Channel]", "member" : "ackcord.CacheSnapshotWithMaps.getChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getChannel(id:ackcord.data.ChannelId):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getGuildChannel(id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(guildId: GuildId, id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getGuildChannel(guildId:ackcord.data.GuildId,id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/MemoryCacheSnapshot.html#getMessage(messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(channelId: TextChannelId, messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/MemoryCacheSnapshot.html#getMessage(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getGuildWithUnavailable", "tail" : "(id: GuildId): Option[UnknownStatusGuild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildWithUnavailable", "link" : "ackcord\/MemoryCacheSnapshot.html#getGuildWithUnavailable(id:ackcord.data.GuildId):Option[ackcord.data.UnknownStatusGuild]", "kind" : "def"}, {"label" : "getGuild", "tail" : "(id: GuildId): Option[Guild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuild", "link" : "ackcord\/MemoryCacheSnapshot.html#getGuild(id:ackcord.data.GuildId):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "getGroupDmChannel", "tail" : "(id: SnowflakeType[GroupDMChannel]): Option[GroupDMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGroupDmChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getGroupDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.GroupDMChannel]):Option[ackcord.data.GroupDMChannel]", "kind" : "def"}, {"label" : "getUserDmChannel", "tail" : "(id: UserId): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getUserDmChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getUserDmChannel(id:ackcord.data.UserId):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "getDmChannel", "tail" : "(id: SnowflakeType[DMChannel]): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getDmChannel", "link" : "ackcord\/MemoryCacheSnapshot.html#getDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.DMChannel]):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/MemoryCacheSnapshot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/MemoryCacheSnapshot.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/MemoryCacheSnapshot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/MemoryCacheSnapshot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/MemoryCacheSnapshot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/MemoryCacheSnapshot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/MemoryCacheSnapshot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MemoryCacheSnapshot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/MemoryCacheSnapshot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/MemoryCacheSnapshot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/MemoryCacheSnapshot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/MemoryCacheSnapshot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/MemoryCacheSnapshot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/MemoryCacheSnapshot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/MemoryCacheSnapshot.html", "kind" : "case class"}, {"name" : "ackcord.MusicManager", "shortDescription" : "", "object" : "ackcord\/MusicManager$.html", "members_object" : [{"label" : "GotError", "tail" : "", "member" : "ackcord.MusicManager.GotError", "link" : "ackcord\/MusicManager$.html#GotErrorextendsMusicManager.ConnectToChannelResponsewithProductwithSerializable", "kind" : "case class"}, {"label" : "GotPlayer", "tail" : "", "member" : "ackcord.MusicManager.GotPlayer", "link" : "ackcord\/MusicManager$.html#GotPlayerextendsMusicManager.ConnectToChannelResponsewithProductwithSerializable", "kind" : "case class"}, {"label" : "ConnectToChannelResponse", "tail" : "", "member" : "ackcord.MusicManager.ConnectToChannelResponse", "link" : "ackcord\/MusicManager$.html#ConnectToChannelResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Command", "tail" : "", "member" : "ackcord.MusicManager.Command", "link" : "ackcord\/MusicManager$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/MusicManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/MusicManager$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/MusicManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/MusicManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/MusicManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/MusicManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/MusicManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MusicManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MusicManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/MusicManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/MusicManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/MusicManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/MusicManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/MusicManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/MusicManager$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/MusicManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/MusicManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/MusicManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/MusicManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.OptFuture", "shortDescription" : "A future that might be missing a value.", "object" : "ackcord\/OptFuture$.html", "members_class" : [{"label" : "zip", "tail" : "(other: OptFuture[B])(ec: ExecutionContext): OptFuture[(A, B)]", "member" : "ackcord.OptFuture.zip", "link" : "ackcord\/OptFuture.html#zip[B](other:ackcord.OptFuture[B])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[(A,B)]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => Unit)(ec: ExecutionContext): Unit", "member" : "ackcord.OptFuture.foreach", "link" : "ackcord\/OptFuture.html#foreach(f:A=>Unit)(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[A, B])(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.collect", "link" : "ackcord\/OptFuture.html#collect[B](f:PartialFunction[A,B])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) => Boolean)(ec: ExecutionContext): OptFuture[A]", "member" : "ackcord.OptFuture.withFilter", "link" : "ackcord\/OptFuture.html#withFilter(p:A=>Boolean)(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean)(ec: ExecutionContext): OptFuture[A]", "member" : "ackcord.OptFuture.filter", "link" : "ackcord\/OptFuture.html#filter(f:A=>Boolean)(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "subflatMap", "tail" : "(f: (A) => Option[B])(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.subflatMap", "link" : "ackcord\/OptFuture.html#subflatMap[B](f:A=>Option[B])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"label" : "semiflatMap", "tail" : "(f: (A) => Future[B])(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.semiflatMap", "link" : "ackcord\/OptFuture.html#semiflatMap[B](f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"label" : "flatMapF", "tail" : "(f: (A) => Future[Option[B]])(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.flatMapF", "link" : "ackcord\/OptFuture.html#flatMapF[B](f:A=>scala.concurrent.Future[Option[B]])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => OptFuture[B])(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.flatMap", "link" : "ackcord\/OptFuture.html#flatMap[B](f:A=>ackcord.OptFuture[B])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B)(ec: ExecutionContext): OptFuture[B]", "member" : "ackcord.OptFuture.map", "link" : "ackcord\/OptFuture.html#map[B](f:A=>B)(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[B]", "kind" : "def"}, {"member" : "ackcord.OptFuture#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Future[Option[A]]", "member" : "ackcord.OptFuture.value", "link" : "ackcord\/OptFuture.html#value:scala.concurrent.Future[Option[A]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/OptFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/OptFuture.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/OptFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/OptFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/OptFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/OptFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/OptFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/OptFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/OptFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/OptFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/OptFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/OptFuture.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/OptFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/OptFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/OptFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/OptFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "catsInstanceForOptFuture", "tail" : "(ec: ExecutionContext): MonadError[OptFuture, Throwable]", "member" : "ackcord.OptFuture.catsInstanceForOptFuture", "link" : "ackcord\/OptFuture$.html#catsInstanceForOptFuture(implicitec:scala.concurrent.ExecutionContext):cats.MonadError[ackcord.OptFuture,Throwable]", "kind" : "implicit def"}, {"label" : "OptFutureOps", "tail" : "", "member" : "ackcord.OptFuture.OptFutureOps", "link" : "ackcord\/OptFuture$.html#OptFutureOps[A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "unit", "tail" : ": OptFuture[Unit]", "member" : "ackcord.OptFuture.unit", "link" : "ackcord\/OptFuture$.html#unit:ackcord.OptFuture[Unit]", "kind" : "val"}, {"label" : "pure", "tail" : "(value: A): OptFuture[A]", "member" : "ackcord.OptFuture.pure", "link" : "ackcord\/OptFuture$.html#pure[A](value:A):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(value: Option[A]): OptFuture[A]", "member" : "ackcord.OptFuture.fromOption", "link" : "ackcord\/OptFuture$.html#fromOption[A](value:Option[A]):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(value: Future[A])(ec: ExecutionContext): OptFuture[A]", "member" : "ackcord.OptFuture.fromFuture", "link" : "ackcord\/OptFuture$.html#fromFuture[A](value:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: Future[Option[A]]): OptFuture[A]", "member" : "ackcord.OptFuture.apply", "link" : "ackcord\/OptFuture$.html#apply[A](value:scala.concurrent.Future[Option[A]]):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/OptFuture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/OptFuture$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/OptFuture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/OptFuture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/OptFuture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/OptFuture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/OptFuture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/OptFuture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/OptFuture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/OptFuture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/OptFuture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/OptFuture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/OptFuture$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/OptFuture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/OptFuture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/OptFuture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/OptFuture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/OptFuture.html", "kind" : "class"}, {"name" : "ackcord.PubSubBufferSize", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.PubSubBufferSize#<init>", "error" : "unsupported entity"}, {"label" : "consumer", "tail" : ": Int", "member" : "ackcord.PubSubBufferSize.consumer", "link" : "ackcord\/PubSubBufferSize.html#consumer:Int", "kind" : "val"}, {"label" : "perProducer", "tail" : ": Int", "member" : "ackcord.PubSubBufferSize.perProducer", "link" : "ackcord\/PubSubBufferSize.html#perProducer:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/PubSubBufferSize.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/PubSubBufferSize.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/PubSubBufferSize.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/PubSubBufferSize.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/PubSubBufferSize.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/PubSubBufferSize.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/PubSubBufferSize.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/PubSubBufferSize.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/PubSubBufferSize.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/PubSubBufferSize.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/PubSubBufferSize.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/PubSubBufferSize.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/PubSubBufferSize.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/PubSubBufferSize.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/PubSubBufferSize.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/PubSubBufferSize.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/PubSubBufferSize.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/PubSubBufferSize.html", "kind" : "case class"}, {"name" : "ackcord.RequestCacheUpdate", "shortDescription" : "A cache event that will try to put the data of the response into the cache.", "object" : "ackcord\/RequestCacheUpdate$.html", "members_object" : [{"label" : "requestsProcessor", "tail" : "(events: Events, registry: CacheTypeRegistry): Sink[(Request[Data], RequestAnswer[Data]), NotUsed]", "member" : "ackcord.RequestCacheUpdate.requestsProcessor", "link" : "ackcord\/RequestCacheUpdate$.html#requestsProcessor[Data](events:ackcord.Events,registry:ackcord.cachehandlers.CacheTypeRegistry):akka.stream.scaladsl.Sink[(ackcord.requests.Request[Data],ackcord.requests.RequestAnswer[Data]),akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestCacheUpdate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestCacheUpdate$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestCacheUpdate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestCacheUpdate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestCacheUpdate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestCacheUpdate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestCacheUpdate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestCacheUpdate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestCacheUpdate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/RequestCacheUpdate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestCacheUpdate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/RequestCacheUpdate$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/RequestCacheUpdate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestCacheUpdate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestCacheUpdate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestCacheUpdate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "process", "tail" : "(builder: CacheSnapshotBuilder)(log: Logger): Unit", "member" : "ackcord.RequestCacheUpdate.process", "link" : "ackcord\/RequestCacheUpdate.html#process(builder:ackcord.cachehandlers.CacheSnapshotBuilder)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"member" : "ackcord.RequestCacheUpdate#<init>", "error" : "unsupported entity"}, {"label" : "registry", "tail" : ": CacheTypeRegistry", "member" : "ackcord.RequestCacheUpdate.registry", "link" : "ackcord\/RequestCacheUpdate.html#registry:ackcord.cachehandlers.CacheTypeRegistry", "kind" : "val"}, {"label" : "request", "tail" : ": Request[Data]", "member" : "ackcord.RequestCacheUpdate.request", "link" : "ackcord\/RequestCacheUpdate.html#request:ackcord.requests.Request[Data]", "kind" : "val"}, {"label" : "requestResponse", "tail" : ": RequestResponse[Data]", "member" : "ackcord.RequestCacheUpdate.requestResponse", "link" : "ackcord\/RequestCacheUpdate.html#requestResponse:ackcord.requests.RequestResponse[Data]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/RequestCacheUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestCacheUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestCacheUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestCacheUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestCacheUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestCacheUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestCacheUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestCacheUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestCacheUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestCacheUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestCacheUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestCacheUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestCacheUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestCacheUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestCacheUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/RequestCacheUpdate.html", "kind" : "case class"}, {"name" : "ackcord.RequestPermissionException", "shortDescription" : "", "members_class" : [{"member" : "ackcord.RequestPermissionException#<init>", "error" : "unsupported entity"}, {"label" : "request", "tail" : ": Request[_]", "member" : "ackcord.RequestPermissionException.request", "link" : "ackcord\/RequestPermissionException.html#request:ackcord.requests.Request[_]", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/RequestPermissionException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/RequestPermissionException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/RequestPermissionException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/RequestPermissionException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/RequestPermissionException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/RequestPermissionException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/RequestPermissionException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/RequestPermissionException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/RequestPermissionException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/RequestPermissionException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/RequestPermissionException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/RequestPermissionException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/RequestPermissionException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestPermissionException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestPermissionException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestPermissionException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestPermissionException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestPermissionException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestPermissionException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestPermissionException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestPermissionException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestPermissionException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestPermissionException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestPermissionException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestPermissionException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestPermissionException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/RequestPermissionException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/RequestPermissionException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestPermissionException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestPermissionException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestPermissionException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/RequestPermissionException.html", "kind" : "class"}, {"name" : "ackcord.RequestRunner", "object" : "ackcord\/RequestRunner$.html", "members_object" : [{"label" : "futureRequestRunner", "tail" : "(requests: requests.Requests, F: Alternative[F]): RequestRunner[[A]Future[F[A]]]", "member" : "ackcord.RequestRunner.futureRequestRunner", "link" : "ackcord\/RequestRunner$.html#futureRequestRunner[F[_]](implicitrequests:ackcord.requests.Requests,implicitF:cats.Alternative[F]):ackcord.RequestRunner[[A]scala.concurrent.Future[F[A]]]", "kind" : "implicit def"}, {"label" : "sourceRequestRunner", "tail" : "(requests: requests.Requests): RequestRunner[util.StreamInstances.SourceRequest]", "member" : "ackcord.RequestRunner.sourceRequestRunner", "link" : "ackcord\/RequestRunner$.html#sourceRequestRunner(implicitrequests:ackcord.requests.Requests):ackcord.RequestRunner[ackcord.util.StreamInstances.SourceRequest]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(runner: RequestRunner[F]): RequestRunner[F]", "member" : "ackcord.RequestRunner.apply", "link" : "ackcord\/RequestRunner$.html#apply[F[_]](implicitrunner:ackcord.RequestRunner[F]):ackcord.RequestRunner[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/RequestRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/RequestRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/RequestRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/RequestRunner.html", "kind" : "trait", "members_trait" : [{"label" : "runOptionT", "tail" : "(opt: OptionT[H, Request[A]])(streamable: util.Streamable[H], F: FlatMap[F], c: CacheSnapshot): F[A]", "member" : "ackcord.RequestRunner.runOptionT", "link" : "ackcord\/RequestRunner.html#runOptionT[H[_],A](opt:cats.data.OptionT[H,ackcord.requests.Request[A]])(implicitstreamable:ackcord.util.Streamable[H],implicitF:cats.FlatMap[F],implicitc:ackcord.CacheSnapshot):F[A]", "kind" : "def"}, {"label" : "runFoldable", "tail" : "(request: H[Request[A]])(F: Alternative[F], FM: Monad[F], G: Foldable[H], c: CacheSnapshot): F[A]", "member" : "ackcord.RequestRunner.runFoldable", "link" : "ackcord\/RequestRunner.html#runFoldable[H[_],A](request:H[ackcord.requests.Request[A]])(implicitF:cats.Alternative[F],implicitFM:cats.Monad[F],implicitG:cats.Foldable[H],implicitc:ackcord.CacheSnapshot):F[A]", "kind" : "def"}, {"label" : "liftFoldable", "tail" : "(ga: H[A])(F: Alternative[F], G: Foldable[H]): F[A]", "member" : "ackcord.RequestRunner.liftFoldable", "link" : "ackcord\/RequestRunner.html#liftFoldable[H[_],A](ga:H[A])(implicitF:cats.Alternative[F],implicitG:cats.Foldable[H]):F[A]", "kind" : "def"}, {"label" : "liftOptionT", "tail" : "(opt: OptionT[H, A])(streamable: util.Streamable[H]): F[A]", "member" : "ackcord.RequestRunner.liftOptionT", "link" : "ackcord\/RequestRunner.html#liftOptionT[H[_],A](opt:cats.data.OptionT[H,A])(implicitstreamable:ackcord.util.Streamable[H]):F[A]", "kind" : "def"}, {"label" : "liftStreamable", "tail" : "(ga: H[A])(streamable: util.Streamable[H]): F[A]", "member" : "ackcord.RequestRunner.liftStreamable", "link" : "ackcord\/RequestRunner.html#liftStreamable[H[_],A](ga:H[A])(implicitstreamable:ackcord.util.Streamable[H]):F[A]", "kind" : "def"}, {"label" : "runOption", "tail" : "(opt: Option[Request[A]])(F: Alternative[F], c: CacheSnapshot): F[A]", "member" : "ackcord.RequestRunner.runOption", "link" : "ackcord\/RequestRunner.html#runOption[A](opt:Option[ackcord.requests.Request[A]])(implicitF:cats.Alternative[F],implicitc:ackcord.CacheSnapshot):F[A]", "kind" : "def"}, {"label" : "optionPure", "tail" : "(opt: Option[A])(F: Alternative[F]): F[A]", "member" : "ackcord.RequestRunner.optionPure", "link" : "ackcord\/RequestRunner.html#optionPure[A](opt:Option[A])(implicitF:cats.Alternative[F]):F[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: A)(F: Applicative[F]): F[A]", "member" : "ackcord.RequestRunner.pure", "link" : "ackcord\/RequestRunner.html#pure[A](a:A)(implicitF:cats.Applicative[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestRunner.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/RequestRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/RequestRunner.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/RequestRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "ackcord.RequestRunner.unit", "link" : "ackcord\/RequestRunner.html#unit:F[Unit]", "kind" : "abstract def"}, {"label" : "fromSource", "tail" : "(source: Source[A, NotUsed]): F[A]", "member" : "ackcord.RequestRunner.fromSource", "link" : "ackcord\/RequestRunner.html#fromSource[A](source:akka.stream.scaladsl.Source[A,akka.NotUsed]):F[A]", "kind" : "abstract def"}, {"label" : "runMany", "tail" : "(requests: Seq[Request[A]])(c: CacheSnapshot): F[A]", "member" : "ackcord.RequestRunner.runMany", "link" : "ackcord\/RequestRunner.html#runMany[A](requests:Seq[ackcord.requests.Request[A]])(implicitc:ackcord.CacheSnapshot):F[A]", "kind" : "abstract def"}, {"label" : "run", "tail" : "(request: Request[A])(c: CacheSnapshot): F[A]", "member" : "ackcord.RequestRunner.run", "link" : "ackcord\/RequestRunner.html#run[A](request:ackcord.requests.Request[A])(implicitc:ackcord.CacheSnapshot):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.RequestSettings", "shortDescription" : "", "members_case class" : [{"label" : "toRequests", "tail" : "(token: String, ratelimitActor: ActorRef[Command])(system: ActorSystem[Nothing]): Requests", "member" : "ackcord.RequestSettings.toRequests", "link" : "ackcord\/RequestSettings.html#toRequests(token:String,ratelimitActor:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):ackcord.Requests", "kind" : "def"}, {"member" : "ackcord.RequestSettings#<init>", "error" : "unsupported entity"}, {"label" : "maxAllowedWait", "tail" : ": FiniteDuration", "member" : "ackcord.RequestSettings.maxAllowedWait", "link" : "ackcord\/RequestSettings.html#maxAllowedWait:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "overflowStrategy", "tail" : ": OverflowStrategy", "member" : "ackcord.RequestSettings.overflowStrategy", "link" : "ackcord\/RequestSettings.html#overflowStrategy:akka.stream.OverflowStrategy", "kind" : "val"}, {"label" : "maxRetryCount", "tail" : ": Int", "member" : "ackcord.RequestSettings.maxRetryCount", "link" : "ackcord\/RequestSettings.html#maxRetryCount:Int", "kind" : "val"}, {"label" : "bufferSize", "tail" : ": Int", "member" : "ackcord.RequestSettings.bufferSize", "link" : "ackcord\/RequestSettings.html#bufferSize:Int", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "ackcord.RequestSettings.parallelism", "link" : "ackcord\/RequestSettings.html#parallelism:Int", "kind" : "val"}, {"label" : "relativeTime", "tail" : ": Boolean", "member" : "ackcord.RequestSettings.relativeTime", "link" : "ackcord\/RequestSettings.html#relativeTime:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/RequestSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/RequestSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/RequestSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/RequestSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/RequestSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/RequestSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/RequestSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/RequestSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/RequestSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/RequestSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/RequestSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/RequestSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/RequestSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/RequestSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/RequestSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/RequestSettings.html", "kind" : "case class"}, {"name" : "ackcord.ShardShutdownManager", "shortDescription" : "", "object" : "ackcord\/ShardShutdownManager$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/ShardShutdownManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/ShardShutdownManager$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/ShardShutdownManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/ShardShutdownManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/ShardShutdownManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/ShardShutdownManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/ShardShutdownManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ShardShutdownManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ShardShutdownManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/ShardShutdownManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/ShardShutdownManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/ShardShutdownManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/ShardShutdownManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/ShardShutdownManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/ShardShutdownManager$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/ShardShutdownManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/ShardShutdownManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/ShardShutdownManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/ShardShutdownManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.SnowflakeMap", "shortDescription" : "", "object" : "ackcord\/SnowflakeMap$.html", "members_class" : [{"label" : "ImmutableKeySet", "tail" : "", "member" : "scala.collection.immutable.MapOps.ImmutableKeySet", "link" : "ackcord\/SnowflakeMap.html#ImmutableKeySetextendsAbstractSet[K]withMapOps.this.GenKeySetwithDefaultSerializable", "kind" : "class"}, {"label" : "GenKeySet", "tail" : "", "member" : "scala.collection.MapOps.GenKeySet", "link" : "ackcord\/SnowflakeMap.html#GenKeySetextendsAnyRef", "kind" : "trait"}, {"label" : "KeySet", "tail" : "", "member" : "scala.collection.MapOps.KeySet", "link" : "ackcord\/SnowflakeMap.html#KeySetextendsAbstractSet[K]withMapOps.this.GenKeySetwithDefaultSerializable", "kind" : "class"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "ackcord.SnowflakeMap.writeReplace", "link" : "ackcord\/SnowflakeMap.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Key, V), (SnowflakeType[K2], V2)]): SnowflakeMap[K2, V2]", "member" : "ackcord.SnowflakeMap.collect", "link" : "ackcord\/SnowflakeMap.html#collect[K2,V2](pf:PartialFunction[(SnowflakeMap.this.Key,V),(ackcord.data.SnowflakeType[K2],V2)]):ackcord.SnowflakeMap[K2,V2]", "kind" : "def"}, {"label" : "++", "tail" : "(that: IterableOnce[(Key, V1)]): SnowflakeMap[K, V1]", "member" : "ackcord.SnowflakeMap.++", "link" : "ackcord\/SnowflakeMap.html#++[V1>:V](that:scala.collection.IterableOnce[(SnowflakeMap.this.Key,V1)]):ackcord.SnowflakeMap[K,V1]", "kind" : "def"}, {"label" : "concat", "tail" : "(that: IterableOnce[(Key, V1)]): SnowflakeMap[K, V1]", "member" : "ackcord.SnowflakeMap.concat", "link" : "ackcord\/SnowflakeMap.html#concat[V1>:V](that:scala.collection.IterableOnce[(SnowflakeMap.this.Key,V1)]):ackcord.SnowflakeMap[K,V1]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((Key, V)) => IterableOnce[(SnowflakeType[K2], V2)]): SnowflakeMap[K2, V2]", "member" : "ackcord.SnowflakeMap.flatMap", "link" : "ackcord\/SnowflakeMap.html#flatMap[K2,V2](f:((SnowflakeMap.this.Key,V))=>IterableOnce[(ackcord.data.SnowflakeType[K2],V2)]):ackcord.SnowflakeMap[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((Key, V)) => (SnowflakeType[K2], V2)): SnowflakeMap[K2, V2]", "member" : "ackcord.SnowflakeMap.map", "link" : "ackcord\/SnowflakeMap.html#map[K2,V2](f:((SnowflakeMap.this.Key,V))=>(ackcord.data.SnowflakeType[K2],V2)):ackcord.SnowflakeMap[K2,V2]", "kind" : "def"}, {"label" : "lastKey", "tail" : "(): Key", "member" : "ackcord.SnowflakeMap.lastKey", "link" : "ackcord\/SnowflakeMap.html#lastKey:SnowflakeMap.this.Key", "kind" : "final def"}, {"label" : "firstKey", "tail" : "(): Key", "member" : "ackcord.SnowflakeMap.firstKey", "link" : "ackcord\/SnowflakeMap.html#firstKey:SnowflakeMap.this.Key", "kind" : "final def"}, {"label" : "++", "tail" : "(that: SnowflakeMap[K, S]): SnowflakeMap[K, S]", "member" : "ackcord.SnowflakeMap.++", "link" : "ackcord\/SnowflakeMap.html#++[S>:V](that:ackcord.SnowflakeMap[K,S]):ackcord.SnowflakeMap[K,S]", "kind" : "def"}, {"label" : "intersection", "tail" : "(that: SnowflakeMap[K, R]): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.intersection", "link" : "ackcord\/SnowflakeMap.html#intersection[R](that:ackcord.SnowflakeMap[K,R]):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "intersectionWith", "tail" : "(that: SnowflakeMap[Key, S], f: (Key, V, S) => R): SnowflakeMap[K, R]", "member" : "ackcord.SnowflakeMap.intersectionWith", "link" : "ackcord\/SnowflakeMap.html#intersectionWith[S,R](that:ackcord.SnowflakeMap[SnowflakeMap.this.Key,S],f:(SnowflakeMap.this.Key,V,S)=>R):ackcord.SnowflakeMap[K,R]", "kind" : "def"}, {"label" : "unionWith", "tail" : "(that: SnowflakeMap[Key, S], f: (Key, S, S) => S): SnowflakeMap[K, S]", "member" : "ackcord.SnowflakeMap.unionWith", "link" : "ackcord\/SnowflakeMap.html#unionWith[S>:V](that:ackcord.SnowflakeMap[SnowflakeMap.this.Key,S],f:(SnowflakeMap.this.Key,S,S)=>S):ackcord.SnowflakeMap[K,S]", "kind" : "def"}, {"label" : "modifyOrRemove", "tail" : "(f: (Key, V) => Option[S]): SnowflakeMap[K, S]", "member" : "ackcord.SnowflakeMap.modifyOrRemove", "link" : "ackcord\/SnowflakeMap.html#modifyOrRemove[S](f:(SnowflakeMap.this.Key,V)=>Option[S]):ackcord.SnowflakeMap[K,S]", "kind" : "def"}, {"label" : "removed", "tail" : "(key: Key): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.removed", "link" : "ackcord\/SnowflakeMap.html#removed(key:SnowflakeMap.this.Key):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "updateWith", "tail" : "(key: Key, value: S, f: (V, S) => S): SnowflakeMap[K, S]", "member" : "ackcord.SnowflakeMap.updateWith", "link" : "ackcord\/SnowflakeMap.html#updateWith[S>:V](key:SnowflakeMap.this.Key,value:S,f:(V,S)=>S):ackcord.SnowflakeMap[K,S]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: Key, value: V1): SnowflakeMap[K, V1]", "member" : "ackcord.SnowflakeMap.updated", "link" : "ackcord\/SnowflakeMap.html#updated[V1>:V](key:SnowflakeMap.this.Key,value:V1):ackcord.SnowflakeMap[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (Key, V1)): SnowflakeMap[K, V1]", "member" : "ackcord.SnowflakeMap.+", "link" : "ackcord\/SnowflakeMap.html#+[V1>:V](kv:(SnowflakeMap.this.Key,V1)):ackcord.SnowflakeMap[K,V1]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: Key): V", "member" : "ackcord.SnowflakeMap.apply", "link" : "ackcord\/SnowflakeMap.html#apply(key:SnowflakeMap.this.Key):V", "kind" : "final def"}, {"label" : "getOrElse", "tail" : "(key: Key, default: => V1): V1", "member" : "ackcord.SnowflakeMap.getOrElse", "link" : "ackcord\/SnowflakeMap.html#getOrElse[V1>:V](key:SnowflakeMap.this.Key,default:=>V1):V1", "kind" : "final def"}, {"label" : "get", "tail" : "(key: Key): Option[V]", "member" : "ackcord.SnowflakeMap.get", "link" : "ackcord\/SnowflakeMap.html#get(key:SnowflakeMap.this.Key):Option[V]", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "ackcord.SnowflakeMap.size", "link" : "ackcord\/SnowflakeMap.html#size:Int", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (Key, V) => S): SnowflakeMap[K, S]", "member" : "ackcord.SnowflakeMap.transform", "link" : "ackcord\/SnowflakeMap.html#transform[S](f:(SnowflakeMap.this.Key,V)=>S):ackcord.SnowflakeMap[K,S]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((Key, V)) => Boolean): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.filter", "link" : "ackcord\/SnowflakeMap.html#filter(p:((SnowflakeMap.this.Key,V))=>Boolean):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "ackcord.SnowflakeMap.knownSize", "link" : "ackcord\/SnowflakeMap.html#knownSize:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ackcord.SnowflakeMap.isEmpty", "link" : "ackcord\/SnowflakeMap.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "ackcord.SnowflakeMap.className", "link" : "ackcord\/SnowflakeMap.html#className:String", "kind" : "def"}, {"label" : "foreachValue", "tail" : "(f: (V) => Unit): Unit", "member" : "ackcord.SnowflakeMap.foreachValue", "link" : "ackcord\/SnowflakeMap.html#foreachValue(f:V=>Unit):Unit", "kind" : "final def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[V]", "member" : "ackcord.SnowflakeMap.valuesIterator", "link" : "ackcord\/SnowflakeMap.html#valuesIterator:Iterator[V]", "kind" : "def"}, {"label" : "foreachKey", "tail" : "(f: (Key) => Unit): Unit", "member" : "ackcord.SnowflakeMap.foreachKey", "link" : "ackcord\/SnowflakeMap.html#foreachKey(f:SnowflakeMap.this.Key=>Unit):Unit", "kind" : "final def"}, {"label" : "keysIterator", "tail" : "(): Iterator[Key]", "member" : "ackcord.SnowflakeMap.keysIterator", "link" : "ackcord\/SnowflakeMap.html#keysIterator:Iterator[SnowflakeMap.this.Key]", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (Key, V) => U): Unit", "member" : "ackcord.SnowflakeMap.foreachEntry", "link" : "ackcord\/SnowflakeMap.html#foreachEntry[U](f:(SnowflakeMap.this.Key,V)=>U):Unit", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: ((Key, V)) => U): Unit", "member" : "ackcord.SnowflakeMap.foreach", "link" : "ackcord\/SnowflakeMap.html#foreach[U](f:((SnowflakeMap.this.Key,V))=>U):Unit", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[(Key, V)]", "member" : "ackcord.SnowflakeMap.iterator", "link" : "ackcord\/SnowflakeMap.html#iterator:Iterator[(SnowflakeMap.this.Key,V)]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(Key, V)]", "member" : "ackcord.SnowflakeMap.toList", "link" : "ackcord\/SnowflakeMap.html#toList:List[(SnowflakeMap.this.Key,V)]", "kind" : "def"}, {"label" : "empty", "tail" : "(): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.empty", "link" : "ackcord\/SnowflakeMap.html#empty:ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[(SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.newSpecificBuilder", "link" : "ackcord\/SnowflakeMap.html#newSpecificBuilder:scala.collection.mutable.Builder[(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]@scala.annotation.unchecked.uncheckedVariance", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[(SnowflakeType[K], V)]): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.fromSpecific", "link" : "ackcord\/SnowflakeMap.html#fromSpecific(coll:IterableOnce[(ackcord.data.SnowflakeType[K],V)]@scala.annotation.unchecked.uncheckedVariance):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "Key", "tail" : "", "member" : "ackcord.SnowflakeMap.Key", "link" : "ackcord\/SnowflakeMap.html#Key=ackcord.data.SnowflakeType[K]", "kind" : "type"}, {"member" : "ackcord.SnowflakeMap#<init>", "error" : "unsupported entity"}, {"label" : "+", "tail" : "(elem1: (SnowflakeType[K], V1), elem2: (SnowflakeType[K], V1), elems: (SnowflakeType[K], V1)*): Map[SnowflakeType[K], V1]", "member" : "scala.collection.StrictOptimizedMapOps.+", "link" : "ackcord\/SnowflakeMap.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):CC[K,V1]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(SnowflakeType[K], V), (K2, V2)]): Map[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.collect", "link" : "ackcord\/SnowflakeMap.html#collect[K2,V2](pf:PartialFunction[(K,V),(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((SnowflakeType[K], V)) => IterableOnce[(K2, V2)]): Map[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.flatMap", "link" : "ackcord\/SnowflakeMap.html#flatMap[K2,V2](f:((K,V))=>scala.collection.IterableOnce[(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((SnowflakeType[K], V)) => (K2, V2)): Map[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.map", "link" : "ackcord\/SnowflakeMap.html#map[K2,V2](f:((K,V))=>(K2,V2)):CC[K2,V2]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): SnowflakeMap[K, V]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "ackcord\/SnowflakeMap.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): SnowflakeMap[K, V]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "ackcord\/SnowflakeMap.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: ((SnowflakeType[K], V)) => U): SnowflakeMap[K, V]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "ackcord\/SnowflakeMap.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: ((SnowflakeType[K], V)) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "ackcord\/SnowflakeMap.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: ((SnowflakeType[K], V)) => Boolean, isFlipped: Boolean): SnowflakeMap[K, V]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "ackcord\/SnowflakeMap.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: ((SnowflakeType[K], V)) => Boolean): SnowflakeMap[K, V]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "ackcord\/SnowflakeMap.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (SnowflakeType[K], V)) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "ackcord\/SnowflakeMap.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[((SnowflakeType[K], V), Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "ackcord\/SnowflakeMap.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[((SnowflakeType[K], V), B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[((SnowflakeType[K], V), B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "ackcord\/SnowflakeMap.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: ((SnowflakeType[K], V)) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: ((SnowflakeType[K], V)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "ackcord\/SnowflakeMap.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[(SnowflakeType[K], V), B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(SnowflakeType[K], V), B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "ackcord\/SnowflakeMap.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: ((SnowflakeType[K], V)) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: ((SnowflakeType[K], V)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "ackcord\/SnowflakeMap.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: ((SnowflakeType[K], V)) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "ackcord\/SnowflakeMap.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: ((SnowflakeType[K], V)) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "ackcord\/SnowflakeMap.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((SnowflakeType[K], V)) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "ackcord\/SnowflakeMap.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((SnowflakeType[K], V)) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "ackcord\/SnowflakeMap.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): (SnowflakeMap[K, V], SnowflakeMap[K, V])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "ackcord\/SnowflakeMap.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): (SnowflakeMap[K, V], SnowflakeMap[K, V])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "ackcord\/SnowflakeMap.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withDefaultValue", "tail" : "(d: V1): Map[SnowflakeType[K], V1]", "member" : "scala.collection.immutable.Map.withDefaultValue", "link" : "ackcord\/SnowflakeMap.html#withDefaultValue[V1>:V](d:V1):scala.collection.immutable.Map[K,V1]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (SnowflakeType[K]) => V1): Map[SnowflakeType[K], V1]", "member" : "scala.collection.immutable.Map.withDefault", "link" : "ackcord\/SnowflakeMap.html#withDefault[V1>:V](d:K=>V1):scala.collection.immutable.Map[K,V1]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(SnowflakeType[K], V), (K2, V2)]): Map[K2, V2]", "member" : "scala.collection.immutable.Map.toMap", "link" : "ackcord\/SnowflakeMap.html#toMap[K2,V2](implicitev:(K,V)<:<(K2,V2)):scala.collection.immutable.Map[K2,V2]", "kind" : "final def"}, {"label" : "mapFactory", "tail" : "(): MapFactory[Map]", "member" : "scala.collection.immutable.Map.mapFactory", "link" : "ackcord\/SnowflakeMap.html#mapFactory:scala.collection.MapFactory[scala.collection.immutable.Map]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[SnowflakeType[K]]", "member" : "scala.collection.immutable.MapOps.keySet", "link" : "ackcord\/SnowflakeMap.html#keySet:scala.collection.immutable.Set[K]", "kind" : "def"}, {"label" : "updatedWith", "tail" : "(key: SnowflakeType[K])(remappingFunction: (Option[V]) => Option[V1]): Map[SnowflakeType[K], V1]", "member" : "scala.collection.immutable.MapOps.updatedWith", "link" : "ackcord\/SnowflakeMap.html#updatedWith[V1>:V](key:K)(remappingFunction:Option[V]=>Option[V1]):CC[K,V1]", "kind" : "def"}, {"label" : "--", "tail" : "(keys: IterableOnce[SnowflakeType[K]]): SnowflakeMap[K, V]", "member" : "scala.collection.immutable.MapOps.--", "link" : "ackcord\/SnowflakeMap.html#--(keys:scala.collection.IterableOnce[K]):C", "kind" : "final def"}, {"label" : "removedAll", "tail" : "(keys: IterableOnce[SnowflakeType[K]]): SnowflakeMap[K, V]", "member" : "scala.collection.immutable.MapOps.removedAll", "link" : "ackcord\/SnowflakeMap.html#removedAll(keys:scala.collection.IterableOnce[K]):C", "kind" : "def"}, {"label" : "-", "tail" : "(key1: SnowflakeType[K], key2: SnowflakeType[K], keys: SnowflakeType[K]*): SnowflakeMap[K, V]", "member" : "scala.collection.immutable.MapOps.-", "link" : "ackcord\/SnowflakeMap.html#-(key1:K,key2:K,keys:K*):C", "kind" : "def"}, {"label" : "-", "tail" : "(key: SnowflakeType[K]): SnowflakeMap[K, V]", "member" : "scala.collection.immutable.MapOps.-", "link" : "ackcord\/SnowflakeMap.html#-(key:K):C", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.immutable.Iterable.iterableFactory", "link" : "ackcord\/SnowflakeMap.html#iterableFactory:scala.collection.IterableFactory[scala.collection.immutable.Iterable]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Map.toString", "link" : "ackcord\/SnowflakeMap.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Map.stringPrefix", "link" : "ackcord\/SnowflakeMap.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Map.hashCode", "link" : "ackcord\/SnowflakeMap.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Map.equals", "link" : "ackcord\/SnowflakeMap.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Map.canEqual", "link" : "ackcord\/SnowflakeMap.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): WithFilter[SnowflakeType[K], V, [x]Iterable[x], [x, y]Map[x, y]]", "member" : "scala.collection.MapFactoryDefaults.withFilter", "link" : "ackcord\/SnowflakeMap.html#withFilter(p:((K,V))=>Boolean):scala.collection.MapOps.WithFilter[K,V,WithFilterCC,CC]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[(SnowflakeType[K], V1)]): Map[SnowflakeType[K], V1]", "member" : "scala.collection.MapOps.++:", "link" : "ackcord\/SnowflakeMap.html#++:[V1>:V](that:scala.collection.IterableOnce[(K,V1)]):CC[K,V1]", "kind" : "def"}, {"label" : "addString", "tail" : "(sb: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapOps.addString", "link" : "ackcord\/SnowflakeMap.html#addString(sb:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: SnowflakeType[K]): Boolean", "member" : "scala.collection.MapOps.isDefinedAt", "link" : "ackcord\/SnowflakeMap.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(key: SnowflakeType[K]): Boolean", "member" : "scala.collection.MapOps.contains", "link" : "ackcord\/SnowflakeMap.html#contains(key:K):Boolean", "kind" : "def"}, {"label" : "default", "tail" : "(key: SnowflakeType[K]): V", "member" : "scala.collection.MapOps.default", "link" : "ackcord\/SnowflakeMap.html#default(key:K):V", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (V) => W): MapView[SnowflakeType[K], W]", "member" : "scala.collection.MapOps.mapValues", "link" : "ackcord\/SnowflakeMap.html#mapValues[W](f:V=>W):scala.collection.MapView[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (SnowflakeType[K]) => Boolean): MapView[SnowflakeType[K], V]", "member" : "scala.collection.MapOps.filterKeys", "link" : "ackcord\/SnowflakeMap.html#filterKeys(p:K=>Boolean):scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[V]", "member" : "scala.collection.MapOps.values", "link" : "ackcord\/SnowflakeMap.html#values:Iterable[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[SnowflakeType[K]]", "member" : "scala.collection.MapOps.keys", "link" : "ackcord\/SnowflakeMap.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) => V1): V1", "member" : "scala.collection.MapOps.applyOrElse", "link" : "ackcord\/SnowflakeMap.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "mapFromIterable", "tail" : "(it: Iterable[(K2, V2)]): Map[K2, V2]", "member" : "scala.collection.MapOps.mapFromIterable", "link" : "ackcord\/SnowflakeMap.html#mapFromIterable[K2,V2](it:Iterable[(K2,V2)]):CC[K2,V2]", "kind" : "final def"}, {"label" : "valueStepper", "tail" : "(shape: StepperShape[V, S]): S", "member" : "scala.collection.MapOps.valueStepper", "link" : "ackcord\/SnowflakeMap.html#valueStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[V,S]):S", "kind" : "def"}, {"label" : "keyStepper", "tail" : "(shape: StepperShape[SnowflakeType[K], S]): S", "member" : "scala.collection.MapOps.keyStepper", "link" : "ackcord\/SnowflakeMap.html#keyStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[K,S]):S", "kind" : "def"}, {"label" : "view", "tail" : "(): MapView[SnowflakeType[K], V]", "member" : "scala.collection.MapOps.view", "link" : "ackcord\/SnowflakeMap.html#view:scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (V) => U): (SnowflakeType[K]) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "ackcord\/SnowflakeMap.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (SnowflakeType[K]) => Option[V]", "member" : "scala.PartialFunction.lift", "link" : "ackcord\/SnowflakeMap.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, SnowflakeType[K]]): PartialFunction[R, V]", "member" : "scala.PartialFunction.compose", "link" : "ackcord\/SnowflakeMap.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[V, C]): PartialFunction[SnowflakeType[K], C]", "member" : "scala.PartialFunction.andThen", "link" : "ackcord\/SnowflakeMap.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (V) => C): PartialFunction[SnowflakeType[K], C]", "member" : "scala.PartialFunction.andThen", "link" : "ackcord\/SnowflakeMap.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "ackcord\/SnowflakeMap.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[SnowflakeType[K], V]", "member" : "scala.PartialFunction.elementWise", "link" : "ackcord\/SnowflakeMap.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: SnowflakeType[K]): Option[V]", "member" : "scala.PartialFunction.unapply", "link" : "ackcord\/SnowflakeMap.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => SnowflakeType[K]): (A) => V", "member" : "scala.Function1.compose", "link" : "ackcord\/SnowflakeMap.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[(SnowflakeType[K], V), B, SnowflakeMap.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "ackcord\/SnowflakeMap.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "seq", "tail" : "(): SnowflakeMap.this.type", "member" : "scala.collection.Iterable.seq", "link" : "ackcord\/SnowflakeMap.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): SnowflakeMap.this.type", "member" : "scala.collection.Iterable.coll", "link" : "ackcord\/SnowflakeMap.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): SnowflakeMap.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "ackcord\/SnowflakeMap.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "ackcord\/SnowflakeMap.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.inits", "link" : "ackcord\/SnowflakeMap.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.tails", "link" : "ackcord\/SnowflakeMap.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "ackcord\/SnowflakeMap.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "ackcord\/SnowflakeMap.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "ackcord\/SnowflakeMap.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((SnowflakeType[K], V), B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "ackcord\/SnowflakeMap.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "ackcord\/SnowflakeMap.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: ((SnowflakeType[K], V)) => K)(f: ((SnowflakeType[K], V)) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "ackcord\/SnowflakeMap.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: ((SnowflakeType[K], V)) => K)(f: ((SnowflakeType[K], V)) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "ackcord\/SnowflakeMap.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((SnowflakeType[K], V)) => K): Map[K, SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "ackcord\/SnowflakeMap.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.slice", "link" : "ackcord\/SnowflakeMap.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.init", "link" : "ackcord\/SnowflakeMap.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.tail", "link" : "ackcord\/SnowflakeMap.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.sliding", "link" : "ackcord\/SnowflakeMap.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.sliding", "link" : "ackcord\/SnowflakeMap.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[SnowflakeMap[K, V]]", "member" : "scala.collection.IterableOps.grouped", "link" : "ackcord\/SnowflakeMap.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "ackcord\/SnowflakeMap.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.drop", "link" : "ackcord\/SnowflakeMap.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "ackcord\/SnowflakeMap.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.take", "link" : "ackcord\/SnowflakeMap.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (SnowflakeMap[K, V], SnowflakeMap[K, V])", "member" : "scala.collection.IterableOps.splitAt", "link" : "ackcord\/SnowflakeMap.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: ((SnowflakeType[K], V)) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "ackcord\/SnowflakeMap.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOps.view", "link" : "ackcord\/SnowflakeMap.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "ackcord\/SnowflakeMap.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "ackcord\/SnowflakeMap.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "ackcord\/SnowflakeMap.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOps.lastOption", "link" : "ackcord\/SnowflakeMap.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOps.last", "link" : "ackcord\/SnowflakeMap.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOps.headOption", "link" : "ackcord\/SnowflakeMap.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOps.head", "link" : "ackcord\/SnowflakeMap.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Iterable[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "ackcord\/SnowflakeMap.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): SnowflakeMap[K, V]", "member" : "scala.collection.IterableOps.repr", "link" : "ackcord\/SnowflakeMap.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "ackcord\/SnowflakeMap.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "ackcord\/SnowflakeMap.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "ackcord\/SnowflakeMap.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "ackcord\/SnowflakeMap.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "ackcord\/SnowflakeMap.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "ackcord\/SnowflakeMap.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "ackcord\/SnowflakeMap.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "ackcord\/SnowflakeMap.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "ackcord\/SnowflakeMap.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "ackcord\/SnowflakeMap.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "ackcord\/SnowflakeMap.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[(SnowflakeType[K], V), C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "ackcord\/SnowflakeMap.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "ackcord\/SnowflakeMap.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "ackcord\/SnowflakeMap.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "ackcord\/SnowflakeMap.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "ackcord\/SnowflakeMap.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "ackcord\/SnowflakeMap.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: ((SnowflakeType[K], V), B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "ackcord\/SnowflakeMap.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, (SnowflakeType[K], V)) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "ackcord\/SnowflakeMap.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(SnowflakeType[K], V), B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "ackcord\/SnowflakeMap.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: ((SnowflakeType[K], V)) => B)(cmp: Ordering[B]): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "ackcord\/SnowflakeMap.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((SnowflakeType[K], V)) => B)(cmp: Ordering[B]): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "ackcord\/SnowflakeMap.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: ((SnowflakeType[K], V)) => B)(cmp: Ordering[B]): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "ackcord\/SnowflakeMap.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((SnowflakeType[K], V)) => B)(cmp: Ordering[B]): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "ackcord\/SnowflakeMap.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "ackcord\/SnowflakeMap.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOnceOps.max", "link" : "ackcord\/SnowflakeMap.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "ackcord\/SnowflakeMap.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): (SnowflakeType[K], V)", "member" : "scala.collection.IterableOnceOps.min", "link" : "ackcord\/SnowflakeMap.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "ackcord\/SnowflakeMap.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "ackcord\/SnowflakeMap.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "ackcord\/SnowflakeMap.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "ackcord\/SnowflakeMap.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "ackcord\/SnowflakeMap.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "ackcord\/SnowflakeMap.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "ackcord\/SnowflakeMap.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((SnowflakeType[K], V), B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "ackcord\/SnowflakeMap.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (SnowflakeType[K], V)) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "ackcord\/SnowflakeMap.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((SnowflakeType[K], V), B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "ackcord\/SnowflakeMap.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (SnowflakeType[K], V)) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "ackcord\/SnowflakeMap.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "ackcord\/SnowflakeMap.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "ackcord\/SnowflakeMap.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "ackcord\/SnowflakeMap.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((SnowflakeType[K], V), B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "ackcord\/SnowflakeMap.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (SnowflakeType[K], V)) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "ackcord\/SnowflakeMap.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((SnowflakeType[K], V), B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "ackcord\/SnowflakeMap.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (SnowflakeType[K], V)) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "ackcord\/SnowflakeMap.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): Option[(SnowflakeType[K], V)]", "member" : "scala.collection.IterableOnceOps.find", "link" : "ackcord\/SnowflakeMap.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "ackcord\/SnowflakeMap.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "ackcord\/SnowflakeMap.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((SnowflakeType[K], V)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "ackcord\/SnowflakeMap.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "ackcord\/SnowflakeMap.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[(SnowflakeType[K], V), S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "ackcord\/SnowflakeMap.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/SnowflakeMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/SnowflakeMap.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/SnowflakeMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/SnowflakeMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/SnowflakeMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/SnowflakeMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/SnowflakeMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/SnowflakeMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/SnowflakeMap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/SnowflakeMap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/SnowflakeMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/SnowflakeMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/SnowflakeMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "buildFromSnowflakeMap", "tail" : "(): BuildFrom[SnowflakeMap[_, _], (SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.buildFromSnowflakeMap", "link" : "ackcord\/SnowflakeMap$.html#buildFromSnowflakeMap[K,V]:scala.collection.BuildFrom[ackcord.SnowflakeMap[_,_],(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]", "kind" : "implicit def"}, {"label" : "iterableFactory", "tail" : "(): Factory[(SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.iterableFactory", "link" : "ackcord\/SnowflakeMap$.html#iterableFactory[K,V]:scala.collection.Factory[(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]", "kind" : "implicit def"}, {"label" : "toBuildFrom", "tail" : "(factory: SnowflakeMap.type): BuildFrom[Any, (SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.toBuildFrom", "link" : "ackcord\/SnowflakeMap$.html#toBuildFrom[K,V](factory:ackcord.SnowflakeMap.type):scala.collection.BuildFrom[Any,(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]", "kind" : "implicit def"}, {"label" : "toFactory", "tail" : "(dummy: SnowflakeMap.type): Factory[(SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.toFactory", "link" : "ackcord\/SnowflakeMap$.html#toFactory[K,V](dummy:ackcord.SnowflakeMap.type):scala.collection.Factory[(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]", "kind" : "implicit def"}, {"label" : "withKey", "tail" : "(iterable: Iterable[V])(f: (V) => SnowflakeType[K]): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.withKey", "link" : "ackcord\/SnowflakeMap$.html#withKey[K,V](iterable:Iterable[V])(f:V=>ackcord.data.SnowflakeType[K]):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(SnowflakeType[K], V), SnowflakeMap[K, V]]", "member" : "ackcord.SnowflakeMap.newBuilder", "link" : "ackcord\/SnowflakeMap$.html#newBuilder[K,V]:scala.collection.mutable.Builder[(ackcord.data.SnowflakeType[K],V),ackcord.SnowflakeMap[K,V]]", "kind" : "def"}, {"label" : "from", "tail" : "(coll: IterableOnce[(SnowflakeType[K], V)]): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.from", "link" : "ackcord\/SnowflakeMap$.html#from[K,V](coll:IterableOnce[(ackcord.data.SnowflakeType[K],V)]):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: (SnowflakeType[K], V)*): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.apply", "link" : "ackcord\/SnowflakeMap$.html#apply[K,V](elems:(ackcord.data.SnowflakeType[K],V)*):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "singleton", "tail" : "(key: SnowflakeType[K], value: V): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.singleton", "link" : "ackcord\/SnowflakeMap$.html#singleton[K,V](key:ackcord.data.SnowflakeType[K],value:V):ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "empty", "tail" : "(): SnowflakeMap[K, V]", "member" : "ackcord.SnowflakeMap.empty", "link" : "ackcord\/SnowflakeMap$.html#empty[K,V]:ackcord.SnowflakeMap[K,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/SnowflakeMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/SnowflakeMap$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/SnowflakeMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/SnowflakeMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/SnowflakeMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/SnowflakeMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/SnowflakeMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/SnowflakeMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/SnowflakeMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/SnowflakeMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/SnowflakeMap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/SnowflakeMap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/SnowflakeMap$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/SnowflakeMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/SnowflakeMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/SnowflakeMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/SnowflakeMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/SnowflakeMap.html", "kind" : "class"}, {"name" : "ackcord.TextChannelEventListenerMessage", "object" : "ackcord\/TextChannelEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.TextChannelEventListenerMessage.Default", "link" : "ackcord\/TextChannelEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withTextChannelEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/TextChannelEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/TextChannelEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/TextChannelEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/TextChannelEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/TextChannelEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/TextChannelEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/TextChannelEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/TextChannelEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/TextChannelEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/TextChannelEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/TextChannelEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/TextChannelEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/TextChannelEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/TextChannelEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/TextChannelEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/TextChannelEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/TextChannelEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/TextChannelEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/TextChannelEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/TextChannelEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/TextChannelEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/TextChannelEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/TextChannelEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/TextChannelEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/TextChannelEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextChannelEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/TextChannelEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/TextChannelEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/TextChannelEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/TextChannelEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/TextChannelEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/TextChannelEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/TextChannelEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/TextChannelEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/TextChannelEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channel", "tail" : "(): TextChannel", "member" : "ackcord.TextChannelEventListenerMessage.channel", "link" : "ackcord\/TextChannelEventListenerMessage.html#channel:ackcord.data.TextChannel", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/TextChannelEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.TextGuildChannelEventListenerMessage", "object" : "ackcord\/TextGuildChannelEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.TextGuildChannelEventListenerMessage.Default", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withTextGuildChannelEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/TextGuildChannelEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/TextGuildChannelEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channel", "tail" : "(): TextGuildChannel", "member" : "ackcord.TextGuildChannelEventListenerMessage.channel", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#channel:ackcord.data.TextGuildChannel", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.GuildEventListenerMessage.guild", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/TextGuildChannelEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.UserEventListenerMessage", "trait" : "ackcord\/UserEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/UserEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/UserEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/UserEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/UserEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/UserEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/UserEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/UserEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/UserEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/UserEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/UserEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/UserEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/UserEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/UserEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/UserEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/UserEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/UserEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/UserEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/UserEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/UserEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/UserEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "user", "tail" : "(): User", "member" : "ackcord.UserEventListenerMessage.user", "link" : "ackcord\/UserEventListenerMessage.html#user:ackcord.data.User", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/UserEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.VGuildChannelEventListenerMessage", "object" : "ackcord\/VGuildChannelEventListenerMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.VGuildChannelEventListenerMessage.Default", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#Default[A]extendsWrappedEventListenerMessage[A]withVGuildChannelEventListenerMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/VGuildChannelEventListenerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/VGuildChannelEventListenerMessage.html", "kind" : "trait", "members_trait" : [{"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/VGuildChannelEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channel", "tail" : "(): VoiceGuildChannel", "member" : "ackcord.VGuildChannelEventListenerMessage.channel", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#channel:ackcord.data.VoiceGuildChannel", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.GuildEventListenerMessage.guild", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.EventListenerMessage.event", "link" : "ackcord\/VGuildChannelEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.WrappedEventListenerMessage", "shortDescription" : "", "members_class" : [{"label" : "event", "tail" : "(): A with APIMessage", "member" : "ackcord.WrappedEventListenerMessage.event", "link" : "ackcord\/WrappedEventListenerMessage.html#event:Awithackcord.APIMessage", "kind" : "def"}, {"member" : "ackcord.WrappedEventListenerMessage#<init>", "error" : "unsupported entity"}, {"label" : "cacheSnapshot", "tail" : "(): CacheSnapshot", "member" : "ackcord.EventListenerMessage.cacheSnapshot", "link" : "ackcord\/WrappedEventListenerMessage.html#cacheSnapshot:ackcord.CacheSnapshot", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/WrappedEventListenerMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/WrappedEventListenerMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/WrappedEventListenerMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/WrappedEventListenerMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/WrappedEventListenerMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/WrappedEventListenerMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/WrappedEventListenerMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/WrappedEventListenerMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/WrappedEventListenerMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/WrappedEventListenerMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/WrappedEventListenerMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/WrappedEventListenerMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/WrappedEventListenerMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/WrappedEventListenerMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/WrappedEventListenerMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/WrappedEventListenerMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/WrappedEventListenerMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/WrappedEventListenerMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/WrappedEventListenerMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/WrappedEventListenerMessage.html", "kind" : "class"}], "ackcord.lavaplayer" : [{"name" : "ackcord.lavaplayer.LavaplayerHandler", "shortDescription" : "", "object" : "ackcord\/lavaplayer\/LavaplayerHandler$.html", "members_object" : [{"label" : "ForcedConnectedException", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.ForcedConnectedException", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ForcedConnectedExceptionextendsException", "kind" : "class"}, {"label" : "NoMatchException", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.NoMatchException", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#NoMatchExceptionextendsException", "kind" : "class"}, {"label" : "AudioEventSender", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.AudioEventSender", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#AudioEventSender[A]extendsAudioEventListener", "kind" : "class"}, {"label" : "loadItem", "tail" : "(playerManager: AudioPlayerManager, identifier: String): Future[AudioItem]", "member" : "ackcord.lavaplayer.LavaplayerHandler.loadItem", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#loadItem(playerManager:com.sedmelluq.discord.lavaplayer.player.AudioPlayerManager,identifier:String):scala.concurrent.Future[com.sedmelluq.discord.lavaplayer.track.AudioItem]", "kind" : "def"}, {"label" : "Shutdown", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.Shutdown", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#Shutdown", "kind" : "case object"}, {"label" : "SetPlaying", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.SetPlaying", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#SetPlayingextendsLavaplayerHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "ForcedConnectionFailure", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.ForcedConnectionFailure", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ForcedConnectionFailureextendsLavaplayerHandler.ReplywithProductwithSerializable", "kind" : "case class"}, {"label" : "AlreadyConnectedFailure", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.AlreadyConnectedFailure", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#AlreadyConnectedFailureextendsLavaplayerHandler.ReplywithProductwithSerializable", "kind" : "case class"}, {"label" : "MusicReady", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.MusicReady", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#MusicReadyextendsLavaplayerHandler.ReplywithProductwithSerializable", "kind" : "case class"}, {"label" : "DisconnectVoiceChannel", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.DisconnectVoiceChannel", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#DisconnectVoiceChannel", "kind" : "case object"}, {"label" : "ConnectVoiceChannel", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.ConnectVoiceChannel", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ConnectVoiceChannelextendsLavaplayerHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Reply", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.Reply", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ReplyextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Command", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.Command", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "active", "tail" : "(parameters: Parameters, state: CanSendAudio): Behavior[Command]", "member" : "ackcord.lavaplayer.LavaplayerHandler.active", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#active(parameters:ackcord.lavaplayer.LavaplayerHandler.Parameters,state:ackcord.lavaplayer.LavaplayerHandler.CanSendAudio):akka.actor.typed.Behavior[ackcord.lavaplayer.LavaplayerHandler.Command]", "kind" : "def"}, {"label" : "inactive", "tail" : "(parameters: Parameters, state: InactiveState): Behavior[Command]", "member" : "ackcord.lavaplayer.LavaplayerHandler.inactive", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#inactive(parameters:ackcord.lavaplayer.LavaplayerHandler.Parameters,state:ackcord.lavaplayer.LavaplayerHandler.InactiveState):akka.actor.typed.Behavior[ackcord.lavaplayer.LavaplayerHandler.Command]", "kind" : "def"}, {"label" : "handleConflictingConnect", "tail" : "(command: ConnectVoiceChannel, parameters: Parameters, newVoiceChannelId: VoiceGuildChannelId, inVoiceChannelId: VoiceGuildChannelId, force: Boolean, firstSender: ActorRef[Reply], newSender: ActorRef[Reply], voiceHandler: Option[ActorRef[voice.VoiceHandler.Command]], readyListener: Option[ActorRef[AudioAPIMessage]], movedMonitor: Option[ActorRef[MovedMonitor.Command]]): Behavior[Command]", "member" : "ackcord.lavaplayer.LavaplayerHandler.handleConflictingConnect", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#handleConflictingConnect(command:ackcord.lavaplayer.LavaplayerHandler.ConnectVoiceChannel,parameters:ackcord.lavaplayer.LavaplayerHandler.Parameters,newVoiceChannelId:ackcord.data.VoiceGuildChannelId,inVoiceChannelId:ackcord.data.VoiceGuildChannelId,force:Boolean,firstSender:akka.actor.typed.ActorRef[ackcord.lavaplayer.LavaplayerHandler.Reply],newSender:akka.actor.typed.ActorRef[ackcord.lavaplayer.LavaplayerHandler.Reply],voiceHandler:Option[akka.actor.typed.ActorRef[ackcord.voice.VoiceHandler.Command]],readyListener:Option[akka.actor.typed.ActorRef[ackcord.voice.AudioAPIMessage]],movedMonitor:Option[akka.actor.typed.ActorRef[ackcord.lavaplayer.MovedMonitor.Command]]):akka.actor.typed.Behavior[ackcord.lavaplayer.LavaplayerHandler.Command]", "kind" : "def"}, {"label" : "apply", "tail" : "(player: AudioPlayer, guildId: GuildId, events: Events): Behavior[Command]", "member" : "ackcord.lavaplayer.LavaplayerHandler.apply", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#apply(player:com.sedmelluq.discord.lavaplayer.player.AudioPlayer,guildId:ackcord.data.GuildId,events:ackcord.Events):akka.actor.typed.Behavior[ackcord.lavaplayer.LavaplayerHandler.Command]", "kind" : "def"}, {"label" : "Parameters", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.Parameters", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ParametersextendsProductwithSerializable", "kind" : "case class"}, {"label" : "InactiveState", "tail" : "", "member" : "ackcord.lavaplayer.LavaplayerHandler.InactiveState", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#InactiveStateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.lavaplayer.LavaplayerSource", "shortDescription" : "", "object" : "ackcord\/lavaplayer\/LavaplayerSource$.html", "members_class" : [{"label" : "createLogic", "tail" : "(inheritedAttributes: Attributes): GraphStageLogic", "member" : "ackcord.lavaplayer.LavaplayerSource.createLogic", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#createLogic(inheritedAttributes:akka.stream.Attributes):akka.stream.stage.GraphStageLogic", "kind" : "def"}, {"label" : "shape", "tail" : "(): SourceShape[ByteString]", "member" : "ackcord.lavaplayer.LavaplayerSource.shape", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#shape:akka.stream.SourceShape[akka.util.ByteString]", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[ByteString]", "member" : "ackcord.lavaplayer.LavaplayerSource.out", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#out:akka.stream.Outlet[akka.util.ByteString]", "kind" : "val"}, {"member" : "ackcord.lavaplayer.LavaplayerSource#<init>", "error" : "unsupported entity"}, {"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, NotUsed)", "member" : "akka.stream.stage.GraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,akka.NotUsed)", "kind" : "final def"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[SourceShape[ByteString], NotUsed]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "source", "tail" : "(player: AudioPlayer): Source[ByteString, NotUsed]", "member" : "ackcord.lavaplayer.LavaplayerSource.source", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#source(player:com.sedmelluq.discord.lavaplayer.player.AudioPlayer):akka.stream.scaladsl.Source[akka.util.ByteString,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/lavaplayer\/LavaplayerSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/lavaplayer\/LavaplayerSource.html", "kind" : "class"}, {"name" : "ackcord.lavaplayer.VoiceServerNegotiator", "shortDescription" : "", "object" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html", "members_object" : [{"label" : "GotVoiceData", "tail" : "", "member" : "ackcord.lavaplayer.VoiceServerNegotiator.GotVoiceData", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#GotVoiceDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Stop", "tail" : "", "member" : "ackcord.lavaplayer.VoiceServerNegotiator.Stop", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#Stop", "kind" : "case object"}, {"label" : "Command", "tail" : "", "member" : "ackcord.lavaplayer.VoiceServerNegotiator.Command", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "apply", "tail" : "(guildId: GuildId, voiceChannelId: VoiceGuildChannelId, events: Events, replyTo: ActorRef[GotVoiceData]): Behavior[Command]", "member" : "ackcord.lavaplayer.VoiceServerNegotiator.apply", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#apply(guildId:ackcord.data.GuildId,voiceChannelId:ackcord.data.VoiceGuildChannelId,events:ackcord.Events,replyTo:akka.actor.typed.ActorRef[ackcord.lavaplayer.VoiceServerNegotiator.GotVoiceData]):akka.actor.typed.Behavior[ackcord.lavaplayer.VoiceServerNegotiator.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/lavaplayer\/VoiceServerNegotiator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ackcord.gateway" : [{"name" : "ackcord.gateway.Compress", "object" : "ackcord\/gateway\/Compress$.html", "members_object" : [{"label" : "ZLibStreamCompress", "tail" : "", "member" : "ackcord.gateway.Compress.ZLibStreamCompress", "link" : "ackcord\/gateway\/Compress$.html#ZLibStreamCompress", "kind" : "case object"}, {"label" : "PerMessageCompress", "tail" : "", "member" : "ackcord.gateway.Compress.PerMessageCompress", "link" : "ackcord\/gateway\/Compress$.html#PerMessageCompress", "kind" : "case object"}, {"label" : "NoCompress", "tail" : "", "member" : "ackcord.gateway.Compress.NoCompress", "link" : "ackcord\/gateway\/Compress$.html#NoCompress", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Compress$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Compress$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Compress$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Compress$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Compress$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Compress$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Compress$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Compress$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Compress$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/Compress$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Compress$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/Compress$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/Compress$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Compress$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Compress$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Compress$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/gateway\/Compress.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Compress.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Compress.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Compress.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Compress.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Compress.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Compress.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Compress.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Compress.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Compress.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Compress.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/Compress.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Compress.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/Compress.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/Compress.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Compress.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Compress.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Compress.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.gateway.Dispatch", "shortDescription" : "Sent with each new event.", "members_case class" : [{"label" : "d", "tail" : "(): Eval[Either[DecodingFailure, D]]", "member" : "ackcord.gateway.Dispatch.d", "link" : "ackcord\/gateway\/Dispatch.html#d:cats.Eval[Either[io.circe.DecodingFailure,D]]", "kind" : "def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Dispatch.op", "link" : "ackcord\/gateway\/Dispatch.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"label" : "t", "tail" : ": util.JsonSome[GatewayEvent[D]]", "member" : "ackcord.gateway.Dispatch.t", "link" : "ackcord\/gateway\/Dispatch.html#t:ackcord.util.JsonSome[ackcord.gateway.GatewayEvent[D]]", "kind" : "val"}, {"label" : "s", "tail" : ": util.JsonSome[Int]", "member" : "ackcord.gateway.Dispatch.s", "link" : "ackcord\/gateway\/Dispatch.html#s:ackcord.util.JsonSome[Int]", "kind" : "val"}, {"member" : "ackcord.gateway.Dispatch#<init>", "error" : "unsupported entity"}, {"label" : "event", "tail" : ": GatewayEvent[D]", "member" : "ackcord.gateway.Dispatch.event", "link" : "ackcord\/gateway\/Dispatch.html#event:ackcord.gateway.GatewayEvent[D]", "kind" : "val"}, {"label" : "sequence", "tail" : ": Int", "member" : "ackcord.gateway.Dispatch.sequence", "link" : "ackcord\/gateway\/Dispatch.html#sequence:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Dispatch.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Dispatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Dispatch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Dispatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Dispatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Dispatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Dispatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Dispatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Dispatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Dispatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Dispatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Dispatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Dispatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Dispatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Dispatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Dispatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Dispatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/Dispatch.html", "kind" : "case class"}, {"name" : "ackcord.gateway.EagerGatewayMessage", "trait" : "ackcord\/gateway\/EagerGatewayMessage.html", "kind" : "trait", "members_trait" : [{"label" : "d", "tail" : "(): Now[Result[D]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[D]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/EagerGatewayMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nowD", "tail" : "(): D", "member" : "ackcord.gateway.EagerGatewayMessage.nowD", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#nowD:D", "kind" : "abstract def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.GatewayMessage.op", "link" : "ackcord\/gateway\/EagerGatewayMessage.html#op:ackcord.gateway.GatewayOpCode", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.gateway.GatewayEvent", "object" : "ackcord\/gateway\/GatewayEvent$.html", "members_object" : [{"label" : "IgnoredEvent", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.IgnoredEvent", "link" : "ackcord\/gateway\/GatewayEvent$.html#IgnoredEventextendsGatewayEvent[Unit]withProductwithSerializable", "kind" : "case class"}, {"label" : "WebhookUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.WebhookUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#WebhookUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.WebhookUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "WebhookUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.WebhookUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#WebhookUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "VoiceServerUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.VoiceServerUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#VoiceServerUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.VoiceServerUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "VoiceStateUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.VoiceStateUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#VoiceStateUpdateextendsGatewayEvent.OptGuildEvent[ackcord.data.VoiceState]withProductwithSerializable", "kind" : "case class"}, {"label" : "UserUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.UserUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#UserUpdateextendsGatewayEvent[ackcord.data.User]withProductwithSerializable", "kind" : "case class"}, {"label" : "TypingStart", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.TypingStart", "link" : "ackcord\/gateway\/GatewayEvent$.html#TypingStartextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.TypingStartData]withProductwithSerializable", "kind" : "case class"}, {"label" : "TypingStartData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.TypingStartData", "link" : "ackcord\/gateway\/GatewayEvent$.html#TypingStartDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "PresenceUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.PresenceUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#PresenceUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.PresenceUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "PresenceUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.PresenceUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#PresenceUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveEmoji", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionRemoveEmoji", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionRemoveEmojiextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageReactionRemoveEmojiData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageReactionRemoveEmojiData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveEmojiData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionRemoveEmojiData", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionRemoveEmojiDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveAll", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionRemoveAll", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionRemoveAllextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageReactionRemoveAllData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageReactionRemoveAllData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemoveAllData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionRemoveAllData", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionRemoveAllDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionRemove", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionRemove", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionRemoveextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageReactionData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageReactionData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionAdd", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionAdd", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionAddextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageReactionData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageReactionData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageReactionData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageReactionData", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageReactionDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDeleteBulk", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageDeleteBulk", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageDeleteBulkextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageDeleteBulkData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageDeleteBulkData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDeleteBulkData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageDeleteBulkData", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageDeleteBulkDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDelete", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageDelete", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageDeleteextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.MessageDeleteData]withGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.MessageDeleteData]withProductwithSerializable", "kind" : "case class"}, {"label" : "MessageDeleteData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageDeleteData", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageDeleteDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageUpdateextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.RawPartialMessage]withProductwithSerializable", "kind" : "case class"}, {"label" : "RawPartialMessage", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.RawPartialMessage", "link" : "ackcord\/gateway\/GatewayEvent$.html#RawPartialMessageextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MessageCreate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.MessageCreate", "link" : "ackcord\/gateway\/GatewayEvent$.html#MessageCreateextendsGatewayEvent.ChannelEvent[ackcord.data.raw.RawMessage]withProductwithSerializable", "kind" : "case class"}, {"label" : "InviteDelete", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.InviteDelete", "link" : "ackcord\/gateway\/GatewayEvent$.html#InviteDeleteextendsGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.InviteDeleteData]withGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.InviteDeleteData]withProductwithSerializable", "kind" : "case class"}, {"label" : "InviteDeleteData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.InviteDeleteData", "link" : "ackcord\/gateway\/GatewayEvent$.html#InviteDeleteDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "InviteCreate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.InviteCreate", "link" : "ackcord\/gateway\/GatewayEvent$.html#InviteCreateextendsGatewayEvent.OptGuildEvent[ackcord.gateway.GatewayEvent.InviteCreateData]withGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.InviteCreateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "InviteCreateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.InviteCreateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#InviteCreateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleDelete", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildRoleDelete", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildRoleDeleteextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildRoleDeleteData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleDeleteData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildRoleDeleteData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildRoleDeleteDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildRoleUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildRoleUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildRoleModifyData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleCreate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildRoleCreate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildRoleCreateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildRoleModifyData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildRoleModifyData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildRoleModifyData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildRoleModifyDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberChunk", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberChunk", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberChunkextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildMemberChunkData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberChunkData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberChunkData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberChunkDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildMemberUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberRemove", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberRemove", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberRemoveextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildMemberRemoveData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberRemoveData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberRemoveData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberRemoveDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildMemberAdd", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildMemberAdd", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildMemberAddextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.RawGuildMemberWithGuild]withProductwithSerializable", "kind" : "case class"}, {"label" : "RawGuildMemberWithGuild", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.RawGuildMemberWithGuild", "link" : "ackcord\/gateway\/GatewayEvent$.html#RawGuildMemberWithGuild", "kind" : "object"}, {"label" : "RawGuildMemberWithGuild", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.RawGuildMemberWithGuild", "link" : "ackcord\/gateway\/GatewayEvent$.html#RawGuildMemberWithGuildextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildIntegrationsUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildIntegrationsUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildIntegrationsUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildIntegrationsUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildIntegrationsUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildIntegrationsUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildIntegrationsUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildEmojisUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildEmojisUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildEmojisUpdateextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.GuildEmojisUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildEmojisUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildEmojisUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildEmojisUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildBanRemove", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildBanRemove", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildBanRemoveextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.UserWithGuildId]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildBanAdd", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildBanAdd", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildBanAddextendsGatewayEvent.GuildEvent[ackcord.gateway.GatewayEvent.UserWithGuildId]withProductwithSerializable", "kind" : "case class"}, {"label" : "UserWithGuildId", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.UserWithGuildId", "link" : "ackcord\/gateway\/GatewayEvent$.html#UserWithGuildIdextendsProductwithSerializable", "kind" : "case class"}, {"label" : "GuildDelete", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildDelete", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildDeleteextendsGatewayEvent.GuildEvent[ackcord.data.UnavailableGuild]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildUpdateextendsGatewayEvent.GuildEvent[ackcord.data.raw.RawGuild]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildCreate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildCreate", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildCreateextendsGatewayEvent.GuildEvent[ackcord.data.raw.RawGuild]withProductwithSerializable", "kind" : "case class"}, {"label" : "GuildEvent", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.GuildEvent", "link" : "ackcord\/gateway\/GatewayEvent$.html#GuildEvent[D]extendsGatewayEvent[D]", "kind" : "sealed trait"}, {"label" : "ChannelPinsUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelPinsUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelPinsUpdateextendsGatewayEvent.ChannelEvent[ackcord.gateway.GatewayEvent.ChannelPinsUpdateData]withProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelPinsUpdateData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelPinsUpdateData", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelPinsUpdateDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelEvent", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelEvent", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelEvent[D]extendsGatewayEvent[D]", "kind" : "sealed trait"}, {"label" : "ChannelDelete", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelDelete", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelDeleteextendsGatewayEvent.OptGuildEvent[ackcord.data.raw.RawChannel]withGatewayEvent.ChannelEvent[ackcord.data.raw.RawChannel]withProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelUpdate", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelUpdateextendsGatewayEvent.OptGuildEvent[ackcord.data.raw.RawChannel]withGatewayEvent.ChannelEvent[ackcord.data.raw.RawChannel]withProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelCreate", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ChannelCreate", "link" : "ackcord\/gateway\/GatewayEvent$.html#ChannelCreateextendsGatewayEvent.OptGuildEvent[ackcord.data.raw.RawChannel]withGatewayEvent.ChannelEvent[ackcord.data.raw.RawChannel]withProductwithSerializable", "kind" : "case class"}, {"label" : "OptGuildEvent", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.OptGuildEvent", "link" : "ackcord\/gateway\/GatewayEvent$.html#OptGuildEvent[D]extendsGatewayEvent[D]", "kind" : "sealed trait"}, {"label" : "Resumed", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.Resumed", "link" : "ackcord\/gateway\/GatewayEvent$.html#ResumedextendsGatewayEvent[akka.NotUsed]withProductwithSerializable", "kind" : "case class"}, {"label" : "Ready", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.Ready", "link" : "ackcord\/gateway\/GatewayEvent$.html#ReadyextendsGatewayEvent[ackcord.gateway.GatewayEvent.ReadyData]withProductwithSerializable", "kind" : "case class"}, {"label" : "ReadyData", "tail" : "", "member" : "ackcord.gateway.GatewayEvent.ReadyData", "link" : "ackcord\/gateway\/GatewayEvent$.html#ReadyDataextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayEvent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayEvent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayEvent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayEvent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayEvent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/gateway\/GatewayEvent.html", "kind" : "trait", "members_trait" : [{"label" : "mapData", "tail" : "(f: (D) => A): Eval[Result[A]]", "member" : "ackcord.gateway.GatewayEvent.mapData", "link" : "ackcord\/gateway\/GatewayEvent.html#mapData[A](f:D=>A):cats.Eval[io.circe.Decoder.Result[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "data", "tail" : "(): Eval[Either[DecodingFailure, D]]", "member" : "ackcord.gateway.GatewayEvent.data", "link" : "ackcord\/gateway\/GatewayEvent.html#data:cats.Eval[Either[io.circe.DecodingFailure,D]]", "kind" : "abstract def"}, {"label" : "rawData", "tail" : "(): Json", "member" : "ackcord.gateway.GatewayEvent.rawData", "link" : "ackcord\/gateway\/GatewayEvent.html#rawData:io.circe.Json", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.gateway.GatewayEvent.name", "link" : "ackcord\/gateway\/GatewayEvent.html#name:String", "kind" : "abstract def"}], "shortDescription" : "Base trait for all gateway events."}, {"name" : "ackcord.gateway.GatewayHandler", "shortDescription" : "", "object" : "ackcord\/gateway\/GatewayHandler$.html", "members_object" : [{"label" : "Logout", "tail" : "", "member" : "ackcord.gateway.GatewayHandler.Logout", "link" : "ackcord\/gateway\/GatewayHandler$.html#Logout", "kind" : "case object"}, {"label" : "Login", "tail" : "", "member" : "ackcord.gateway.GatewayHandler.Login", "link" : "ackcord\/gateway\/GatewayHandler$.html#Login", "kind" : "case object"}, {"label" : "Command", "tail" : "", "member" : "ackcord.gateway.GatewayHandler.Command", "link" : "ackcord\/gateway\/GatewayHandler$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "defaultWsFlow", "tail" : "(wsUri: Uri, parameters: Parameters, state: State): Flow[GatewayMessage[_], GatewayMessage[_], (Future[WebSocketUpgradeResponse], Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "ackcord.gateway.GatewayHandler.defaultWsFlow", "link" : "ackcord\/gateway\/GatewayHandler$.html#defaultWsFlow(wsUri:akka.http.scaladsl.model.Uri,parameters:ackcord.gateway.GatewayHandler.Parameters,state:ackcord.gateway.GatewayHandler.State):akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_],(scala.concurrent.Future[akka.http.scaladsl.model.ws.WebSocketUpgradeResponse],scala.concurrent.Future[(Option[ackcord.gateway.ResumeData],Boolean)],scala.concurrent.Future[Unit])]", "kind" : "def"}, {"label" : "apply", "tail" : "(rawWsUri: Uri, settings: GatewaySettings, handlerFlow: Flow[GatewayMessage[_], GatewayMessage[_], NotUsed], wsFlow: WsFlowFunc): Behavior[Command]", "member" : "ackcord.gateway.GatewayHandler.apply", "link" : "ackcord\/gateway\/GatewayHandler$.html#apply(rawWsUri:akka.http.scaladsl.model.Uri,settings:ackcord.gateway.GatewaySettings,handlerFlow:akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_],akka.NotUsed],wsFlow:ackcord.gateway.GatewayHandler.WsFlowFunc):akka.actor.typed.Behavior[ackcord.gateway.GatewayHandler.Command]", "kind" : "def"}, {"label" : "WsFlowFunc", "tail" : "", "member" : "ackcord.gateway.GatewayHandler.WsFlowFunc", "link" : "ackcord\/gateway\/GatewayHandler$.html#WsFlowFunc=(akka.http.scaladsl.model.Uri,ackcord.gateway.GatewayHandler.Parameters,ackcord.gateway.GatewayHandler.State)=>akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_],(scala.concurrent.Future[akka.http.scaladsl.model.ws.WebSocketUpgradeResponse],scala.concurrent.Future[(Option[ackcord.gateway.ResumeData],Boolean)],scala.concurrent.Future[Unit])]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.gateway.GatewayHandlerGraphStage", "shortDescription" : "", "object" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html", "members_class" : [{"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, (Future[(Option[ResumeData], Boolean)], Future[Unit]))", "member" : "ackcord.gateway.GatewayHandlerGraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,(scala.concurrent.Future[(Option[ackcord.gateway.ResumeData],Boolean)],scala.concurrent.Future[Unit]))", "kind" : "def"}, {"label" : "shape", "tail" : "(): FlowShape[GatewayMessage[_], GatewayMessage[_]]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.shape", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#shape:akka.stream.FlowShape[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_]]", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[GatewayMessage[_]]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.out", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#out:akka.stream.Outlet[ackcord.gateway.GatewayMessage[_]]", "kind" : "val"}, {"label" : "in", "tail" : ": Inlet[GatewayMessage[_]]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.in", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#in:akka.stream.Inlet[ackcord.gateway.GatewayMessage[_]]", "kind" : "val"}, {"member" : "ackcord.gateway.GatewayHandlerGraphStage#<init>", "error" : "unsupported entity"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[FlowShape[GatewayMessage[_], GatewayMessage[_]], (Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createMessage", "tail" : "(system: ActorSystem[Nothing]): Flow[GatewayMessage[_], Message, NotUsed]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.createMessage", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#createMessage(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],akka.http.scaladsl.model.ws.Message,akka.NotUsed]", "kind" : "def"}, {"label" : "parseMessage", "tail" : "(compress: Compress)(system: ActorSystem[Nothing]): Flow[Message, Either[Error, GatewayMessage[_]], NotUsed]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.parseMessage", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#parseMessage(compress:ackcord.gateway.Compress)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ws.Message,Either[io.circe.Error,ackcord.gateway.GatewayMessage[_]],akka.NotUsed]", "kind" : "def"}, {"label" : "flow", "tail" : "(wsUri: Uri, settings: GatewaySettings, prevResume: Option[ResumeData])(system: ActorSystem[Nothing]): Flow[GatewayMessage[_], GatewayMessage[_], (Future[WebSocketUpgradeResponse], Future[(Option[ResumeData], Boolean)], Future[Unit])]", "member" : "ackcord.gateway.GatewayHandlerGraphStage.flow", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#flow(wsUri:akka.http.scaladsl.model.Uri,settings:ackcord.gateway.GatewaySettings,prevResume:Option[ackcord.gateway.ResumeData])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[ackcord.gateway.GatewayMessage[_],ackcord.gateway.GatewayMessage[_],(scala.concurrent.Future[akka.http.scaladsl.model.ws.WebSocketUpgradeResponse],scala.concurrent.Future[(Option[ackcord.gateway.ResumeData],Boolean)],scala.concurrent.Future[Unit])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayHandlerGraphStage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/gateway\/GatewayHandlerGraphStage.html", "kind" : "class"}, {"name" : "ackcord.gateway.GatewayIntents", "shortDescription" : "", "object" : "ackcord\/gateway\/package$$GatewayIntents$.html", "members_object" : [{"label" : "All", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.All", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#All:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "AllNonPrivileged", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.AllNonPrivileged", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#AllNonPrivileged:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "DirectMessageTyping", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.DirectMessageTyping", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#DirectMessageTyping:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "DirectMessagesReactions", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.DirectMessagesReactions", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#DirectMessagesReactions:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "DirectMessages", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.DirectMessages", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#DirectMessages:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildMessageTyping", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildMessageTyping", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildMessageTyping:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildMessageReactions", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildMessageReactions", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildMessageReactions:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildMessages", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildMessages", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildMessages:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildPresences", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildPresences", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildPresences:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildVoiceStates", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildVoiceStates", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildVoiceStates:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildInvites", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildInvites", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildInvites:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildWebhooks", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildWebhooks", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildWebhooks:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildIntegrations", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildIntegrations", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildIntegrations:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildEmojis", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildEmojis", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildEmojis:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildBans", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildBans", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildBans:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "GuildMembers", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.GuildMembers", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#GuildMembers:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "Guilds", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.Guilds", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#Guilds:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "None", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.None", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#None:ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "val"}, {"label" : "fromInt", "tail" : "(int: Int): GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.fromInt", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#fromInt(int:Int):ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "def"}, {"label" : "apply", "tail" : "(flags: GatewayIntents*): GatewayIntents", "member" : "ackcord.gateway.GatewayIntents.apply", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#apply(flags:ackcord.gateway.GatewayIntents.GatewayIntents*):ackcord.gateway.GatewayIntents.GatewayIntents", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/package$$GatewayIntents$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.gateway.GatewayIntents.GatewayIntents", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.gateway.GatewayIntentsSyntax", "shortDescription" : "", "members_class" : [{"label" : "isNone", "tail" : "(): Boolean", "member" : "ackcord.gateway.GatewayIntentsSyntax.isNone", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#isNone:Boolean", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(other: GatewayIntents): Boolean", "member" : "ackcord.gateway.GatewayIntentsSyntax.hasFlag", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#hasFlag(other:ackcord.gateway.package.GatewayIntents):Boolean", "kind" : "def"}, {"label" : "--", "tail" : "(other: GatewayIntents): GatewayIntents", "member" : "ackcord.gateway.GatewayIntentsSyntax.--", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#--(other:ackcord.gateway.package.GatewayIntents):ackcord.gateway.package.GatewayIntents", "kind" : "def"}, {"label" : "++", "tail" : "(other: GatewayIntents): GatewayIntents", "member" : "ackcord.gateway.GatewayIntentsSyntax.++", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#++(other:ackcord.gateway.package.GatewayIntents):ackcord.gateway.package.GatewayIntents", "kind" : "def"}, {"label" : "toInt", "tail" : "(): Int", "member" : "ackcord.gateway.GatewayIntentsSyntax.toInt", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#toInt:Int", "kind" : "def"}, {"member" : "ackcord.gateway.GatewayIntentsSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/gateway\/package$$GatewayIntentsSyntax.html", "kind" : "class"}, {"name" : "ackcord.gateway.GatewayJsonException", "shortDescription" : "", "members_class" : [{"member" : "ackcord.gateway.GatewayJsonException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/gateway\/GatewayJsonException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/gateway\/GatewayJsonException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayJsonException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/gateway\/GatewayJsonException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/gateway\/GatewayJsonException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/gateway\/GatewayJsonException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/gateway\/GatewayJsonException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/gateway\/GatewayJsonException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayJsonException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayJsonException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayJsonException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayJsonException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayJsonException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayJsonException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayJsonException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayJsonException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayJsonException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayJsonException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayJsonException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayJsonException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayJsonException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayJsonException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayJsonException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayJsonException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayJsonException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayJsonException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/gateway\/GatewayJsonException.html", "kind" : "class"}, {"name" : "ackcord.gateway.GatewayMessage", "trait" : "ackcord\/gateway\/GatewayMessage.html", "kind" : "trait", "members_trait" : [{"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[D]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/GatewayMessage.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/GatewayMessage.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "d", "tail" : "(): Eval[Either[DecodingFailure, D]]", "member" : "ackcord.gateway.GatewayMessage.d", "link" : "ackcord\/gateway\/GatewayMessage.html#d:cats.Eval[Either[io.circe.DecodingFailure,D]]", "kind" : "abstract def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.GatewayMessage.op", "link" : "ackcord\/gateway\/GatewayMessage.html#op:ackcord.gateway.GatewayOpCode", "kind" : "abstract def"}], "shortDescription" : "Base trait for all gateway messages."}, {"name" : "ackcord.gateway.GatewayOpCode", "shortDescription" : "All the different opcodes used by the gateway.", "object" : "ackcord\/gateway\/GatewayOpCode$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.gateway.GatewayOpCode.value", "link" : "ackcord\/gateway\/GatewayOpCode.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayOpCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayOpCode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayOpCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayOpCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayOpCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayOpCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayOpCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayOpCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayOpCode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayOpCode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayOpCode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayOpCode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayOpCode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayOpCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayOpCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayOpCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): GatewayOpCode", "member" : "ackcord.gateway.GatewayOpCode.createUnknown", "link" : "ackcord\/gateway\/GatewayOpCode$.html#createUnknown(value:Int):ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Unknown", "link" : "ackcord\/gateway\/GatewayOpCode$.html#UnknownextendsGatewayOpCodewithProductwithSerializable", "kind" : "case class"}, {"label" : "values", "tail" : "(): IndexedSeq[GatewayOpCode]", "member" : "ackcord.gateway.GatewayOpCode.values", "link" : "ackcord\/gateway\/GatewayOpCode$.html#values:IndexedSeq[ackcord.gateway.GatewayOpCode]", "kind" : "def"}, {"label" : "HeartbeatACK", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.HeartbeatACK", "link" : "ackcord\/gateway\/GatewayOpCode$.html#HeartbeatACK", "kind" : "object"}, {"label" : "Hello", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Hello", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Hello", "kind" : "object"}, {"label" : "InvalidSession", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.InvalidSession", "link" : "ackcord\/gateway\/GatewayOpCode$.html#InvalidSession", "kind" : "object"}, {"label" : "RequestGuildMembers", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.RequestGuildMembers", "link" : "ackcord\/gateway\/GatewayOpCode$.html#RequestGuildMembers", "kind" : "object"}, {"label" : "Reconnect", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Reconnect", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Reconnect", "kind" : "object"}, {"label" : "Resume", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Resume", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Resume", "kind" : "object"}, {"label" : "VoiceServerPing", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.VoiceServerPing", "link" : "ackcord\/gateway\/GatewayOpCode$.html#VoiceServerPing", "kind" : "object"}, {"label" : "VoiceStateUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.VoiceStateUpdate", "link" : "ackcord\/gateway\/GatewayOpCode$.html#VoiceStateUpdate", "kind" : "object"}, {"label" : "StatusUpdate", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.StatusUpdate", "link" : "ackcord\/gateway\/GatewayOpCode$.html#StatusUpdate", "kind" : "object"}, {"label" : "Identify", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Identify", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Identify", "kind" : "object"}, {"label" : "Heartbeat", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Heartbeat", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Heartbeat", "kind" : "object"}, {"label" : "Dispatch", "tail" : "", "member" : "ackcord.gateway.GatewayOpCode.Dispatch", "link" : "ackcord\/gateway\/GatewayOpCode$.html#Dispatch", "kind" : "object"}, {"label" : "codec", "tail" : ": Codec[GatewayOpCode]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/gateway\/GatewayOpCode$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[GatewayOpCode]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/gateway\/GatewayOpCode$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], GatewayOpCode]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/gateway\/GatewayOpCode$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[GatewayOpCode]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/gateway\/GatewayOpCode$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): GatewayOpCode", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/gateway\/GatewayOpCode$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, GatewayOpCode]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/gateway\/GatewayOpCode$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayOpCode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayOpCode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayOpCode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayOpCode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayOpCode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayOpCode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayOpCode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayOpCode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayOpCode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayOpCode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayOpCode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayOpCode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayOpCode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayOpCode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayOpCode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayOpCode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayOpCode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/gateway\/GatewayOpCode.html", "kind" : "class"}, {"name" : "ackcord.gateway.GatewayProtocol", "shortDescription" : "", "object" : "ackcord\/gateway\/GatewayProtocol$.html", "members_object" : [{"label" : "wsMessageDecoder", "tail" : ": Decoder[GatewayMessage[_]]", "member" : "ackcord.gateway.GatewayProtocol.wsMessageDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#wsMessageDecoder:io.circe.Decoder[ackcord.gateway.GatewayMessage[_]]", "kind" : "implicit val"}, {"label" : "wsMessageEncoder", "tail" : ": Encoder[GatewayMessage[_]]", "member" : "ackcord.gateway.GatewayProtocol.wsMessageEncoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#wsMessageEncoder:io.circe.Encoder[ackcord.gateway.GatewayMessage[_]]", "kind" : "implicit val"}, {"label" : "rawPartialMessageDecoder", "tail" : ": Decoder[RawPartialMessage]", "member" : "ackcord.gateway.GatewayProtocol.rawPartialMessageDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawPartialMessageDecoder:io.circe.Decoder[ackcord.gateway.GatewayEvent.RawPartialMessage]", "kind" : "implicit val"}, {"label" : "rawPartialMessageEncoder", "tail" : ": Encoder[RawPartialMessage]", "member" : "ackcord.gateway.GatewayProtocol.rawPartialMessageEncoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawPartialMessageEncoder:io.circe.Encoder[ackcord.gateway.GatewayEvent.RawPartialMessage]", "kind" : "implicit val"}, {"label" : "userWithGuildIdCodec", "tail" : ": Codec[UserWithGuildId]", "member" : "ackcord.gateway.GatewayProtocol.userWithGuildIdCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#userWithGuildIdCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.UserWithGuildId]", "kind" : "implicit val"}, {"label" : "webhookUpdateDataCodec", "tail" : ": Codec[WebhookUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.webhookUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#webhookUpdateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.WebhookUpdateData]", "kind" : "implicit val"}, {"label" : "messageReactionRemoveEmojiDataCodec", "tail" : ": Codec[MessageReactionRemoveEmojiData]", "member" : "ackcord.gateway.GatewayProtocol.messageReactionRemoveEmojiDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageReactionRemoveEmojiDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.MessageReactionRemoveEmojiData]", "kind" : "implicit val"}, {"label" : "messageReactionRemoveAllDataCodec", "tail" : ": Codec[MessageReactionRemoveAllData]", "member" : "ackcord.gateway.GatewayProtocol.messageReactionRemoveAllDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageReactionRemoveAllDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.MessageReactionRemoveAllData]", "kind" : "implicit val"}, {"label" : "messageReactionDataCodec", "tail" : ": Codec[MessageReactionData]", "member" : "ackcord.gateway.GatewayProtocol.messageReactionDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageReactionDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.MessageReactionData]", "kind" : "implicit val"}, {"label" : "messageEmojiCodec", "tail" : ": Codec[PartialEmoji]", "member" : "ackcord.gateway.GatewayProtocol.messageEmojiCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageEmojiCodec:io.circe.Codec[ackcord.data.PartialEmoji]", "kind" : "implicit val"}, {"label" : "channelPinsUpdateDataDecoder", "tail" : ": Decoder[ChannelPinsUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.channelPinsUpdateDataDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#channelPinsUpdateDataDecoder:io.circe.Decoder[ackcord.gateway.GatewayEvent.ChannelPinsUpdateData]", "kind" : "implicit val"}, {"label" : "channelPinsUpdateDataEncoder", "tail" : ": Encoder[ChannelPinsUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.channelPinsUpdateDataEncoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#channelPinsUpdateDataEncoder:io.circe.Encoder[ackcord.gateway.GatewayEvent.ChannelPinsUpdateData]", "kind" : "implicit val"}, {"label" : "rawGuildMemberWithGuildCodec", "tail" : ": Codec[RawGuildMemberWithGuild]", "member" : "ackcord.gateway.GatewayProtocol.rawGuildMemberWithGuildCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawGuildMemberWithGuildCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.RawGuildMemberWithGuild]", "kind" : "implicit val"}, {"label" : "voiceStateUpdateDataCodec", "tail" : ": Codec[VoiceStateUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.voiceStateUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#voiceStateUpdateDataCodec:io.circe.Codec[ackcord.gateway.VoiceStateUpdateData]", "kind" : "implicit val"}, {"label" : "helloDataCodec", "tail" : ": Codec[HelloData]", "member" : "ackcord.gateway.GatewayProtocol.helloDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#helloDataCodec:io.circe.Codec[ackcord.gateway.HelloData]", "kind" : "implicit val"}, {"label" : "requestGuildMembersDataDecoder", "tail" : ": Decoder[RequestGuildMembersData]", "member" : "ackcord.gateway.GatewayProtocol.requestGuildMembersDataDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#requestGuildMembersDataDecoder:io.circe.Decoder[ackcord.gateway.RequestGuildMembersData]", "kind" : "implicit val"}, {"label" : "requestGuildMembersDataEncoder", "tail" : ": Encoder[RequestGuildMembersData]", "member" : "ackcord.gateway.GatewayProtocol.requestGuildMembersDataEncoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#requestGuildMembersDataEncoder:io.circe.Encoder[ackcord.gateway.RequestGuildMembersData]", "kind" : "implicit val"}, {"label" : "resumeDataCodec", "tail" : ": Codec[ResumeData]", "member" : "ackcord.gateway.GatewayProtocol.resumeDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#resumeDataCodec:io.circe.Codec[ackcord.gateway.ResumeData]", "kind" : "implicit val"}, {"label" : "statusDataCodec", "tail" : ": Codec[StatusData]", "member" : "ackcord.gateway.GatewayProtocol.statusDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#statusDataCodec:io.circe.Codec[ackcord.gateway.StatusData]", "kind" : "implicit val"}, {"label" : "identifyObjectCodec", "tail" : ": Codec[IdentifyData]", "member" : "ackcord.gateway.GatewayProtocol.identifyObjectCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#identifyObjectCodec:io.circe.Codec[ackcord.gateway.IdentifyData]", "kind" : "implicit val"}, {"label" : "voiceServerUpdateDataCodec", "tail" : ": Codec[VoiceServerUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.voiceServerUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#voiceServerUpdateDataCodec:io.circe.Codec[ackcord.gateway.VoiceServerUpdateData]", "kind" : "implicit val"}, {"label" : "typingStartDataCodec", "tail" : ": Codec[TypingStartData]", "member" : "ackcord.gateway.GatewayProtocol.typingStartDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#typingStartDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.TypingStartData]", "kind" : "implicit val"}, {"label" : "presenceUpdateDataCodec", "tail" : ": Codec[PresenceUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.presenceUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#presenceUpdateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.PresenceUpdateData]", "kind" : "implicit val"}, {"label" : "messageDeleteBulkDataCodec", "tail" : ": Codec[MessageDeleteBulkData]", "member" : "ackcord.gateway.GatewayProtocol.messageDeleteBulkDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageDeleteBulkDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.MessageDeleteBulkData]", "kind" : "implicit val"}, {"label" : "messageDeleteDataCodec", "tail" : ": Codec[MessageDeleteData]", "member" : "ackcord.gateway.GatewayProtocol.messageDeleteDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageDeleteDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.MessageDeleteData]", "kind" : "implicit val"}, {"label" : "inviteDeleteDataCodec", "tail" : ": Codec[InviteDeleteData]", "member" : "ackcord.gateway.GatewayProtocol.inviteDeleteDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteDeleteDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.InviteDeleteData]", "kind" : "implicit val"}, {"label" : "inviteCreateDataCodec", "tail" : ": Codec[InviteCreateData]", "member" : "ackcord.gateway.GatewayProtocol.inviteCreateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteCreateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.InviteCreateData]", "kind" : "implicit val"}, {"label" : "guildRoleDeleteDataCodec", "tail" : ": Codec[GuildRoleDeleteData]", "member" : "ackcord.gateway.GatewayProtocol.guildRoleDeleteDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildRoleDeleteDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildRoleDeleteData]", "kind" : "implicit val"}, {"label" : "guildRoleModifyDataCodec", "tail" : ": Codec[GuildRoleModifyData]", "member" : "ackcord.gateway.GatewayProtocol.guildRoleModifyDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildRoleModifyDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildRoleModifyData]", "kind" : "implicit val"}, {"label" : "guildMemberChunkDataCodec", "tail" : ": Codec[GuildMemberChunkData]", "member" : "ackcord.gateway.GatewayProtocol.guildMemberChunkDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildMemberChunkDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildMemberChunkData]", "kind" : "implicit val"}, {"label" : "guildMemberUpdateDataCodec", "tail" : ": Codec[GuildMemberUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.guildMemberUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildMemberUpdateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildMemberUpdateData]", "kind" : "implicit val"}, {"label" : "guildMemberRemoveDataCodec", "tail" : ": Codec[GuildMemberRemoveData]", "member" : "ackcord.gateway.GatewayProtocol.guildMemberRemoveDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildMemberRemoveDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildMemberRemoveData]", "kind" : "implicit val"}, {"label" : "guildIntegrationsUpdateDataCodec", "tail" : ": Codec[GuildIntegrationsUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.guildIntegrationsUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildIntegrationsUpdateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildIntegrationsUpdateData]", "kind" : "implicit val"}, {"label" : "guildEmojisUpdateDataCodec", "tail" : ": Codec[GuildEmojisUpdateData]", "member" : "ackcord.gateway.GatewayProtocol.guildEmojisUpdateDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildEmojisUpdateDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.GuildEmojisUpdateData]", "kind" : "implicit val"}, {"label" : "readyDataCodec", "tail" : ": Codec[ReadyData]", "member" : "ackcord.gateway.GatewayProtocol.readyDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#readyDataCodec:io.circe.Codec[ackcord.gateway.GatewayEvent.ReadyData]", "kind" : "implicit val"}, {"label" : "gatewayIntentsCodec", "tail" : ": Codec[GatewayIntents]", "member" : "ackcord.gateway.GatewayProtocol.gatewayIntentsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#gatewayIntentsCodec:io.circe.Codec[ackcord.gateway.GatewayIntents]", "kind" : "implicit val"}, {"label" : "teamMemberCodec", "tail" : ": Codec[TeamMember]", "member" : "ackcord.data.DiscordProtocol.teamMemberCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#teamMemberCodec:io.circe.Codec[ackcord.data.TeamMember]", "kind" : "implicit val"}, {"label" : "teamCodec", "tail" : ": Codec[Team]", "member" : "ackcord.data.DiscordProtocol.teamCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#teamCodec:io.circe.Codec[ackcord.data.Team]", "kind" : "implicit val"}, {"label" : "clientStatusCodec", "tail" : ": Codec[ClientStatus]", "member" : "ackcord.data.DiscordProtocol.clientStatusCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#clientStatusCodec:io.circe.Codec[ackcord.data.ClientStatus]", "kind" : "implicit val"}, {"label" : "rawBanCodec", "tail" : ": Codec[RawBan]", "member" : "ackcord.data.DiscordProtocol.rawBanCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawBanCodec:io.circe.Codec[ackcord.data.raw.RawBan]", "kind" : "implicit val"}, {"label" : "auditLogChangeDecoder", "tail" : ": Decoder[AuditLogChange[_]]", "member" : "ackcord.data.DiscordProtocol.auditLogChangeDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#auditLogChangeDecoder:io.circe.Decoder[ackcord.data.AuditLogChange[_]]", "kind" : "implicit val"}, {"label" : "guildWidgetMemberCodec", "tail" : ": Codec[GuildWidgetMember]", "member" : "ackcord.data.DiscordProtocol.guildWidgetMemberCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildWidgetMemberCodec:io.circe.Codec[ackcord.data.GuildWidgetMember]", "kind" : "implicit val"}, {"label" : "guildWidgetChannelCodec", "tail" : ": Codec[GuildWidgetChannel]", "member" : "ackcord.data.DiscordProtocol.guildWidgetChannelCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildWidgetChannelCodec:io.circe.Codec[ackcord.data.GuildWidgetChannel]", "kind" : "implicit val"}, {"label" : "guildWidgetCodec", "tail" : ": Codec[GuildWidget]", "member" : "ackcord.data.DiscordProtocol.guildWidgetCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildWidgetCodec:io.circe.Codec[ackcord.data.GuildWidget]", "kind" : "implicit val"}, {"label" : "templateCodec", "tail" : ": Codec[Template]", "member" : "ackcord.data.DiscordProtocol.templateCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#templateCodec:io.circe.Codec[ackcord.data.Template]", "kind" : "implicit val"}, {"label" : "partialRoleCodec", "tail" : ": Codec[PartialRole]", "member" : "ackcord.data.DiscordProtocol.partialRoleCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#partialRoleCodec:io.circe.Codec[ackcord.data.AuditLogChange.PartialRole]", "kind" : "implicit val"}, {"label" : "optionalAuditLogInfoDecoder", "tail" : ": Decoder[OptionalAuditLogInfo]", "member" : "ackcord.data.DiscordProtocol.optionalAuditLogInfoDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#optionalAuditLogInfoDecoder:io.circe.Decoder[ackcord.data.OptionalAuditLogInfo]", "kind" : "implicit val"}, {"label" : "auditLogEntryDecoder", "tail" : ": Decoder[AuditLogEntry]", "member" : "ackcord.data.DiscordProtocol.auditLogEntryDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#auditLogEntryDecoder:io.circe.Decoder[ackcord.data.AuditLogEntry]", "kind" : "implicit val"}, {"label" : "auditLogDecoder", "tail" : ": Decoder[AuditLog]", "member" : "ackcord.data.DiscordProtocol.auditLogDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#auditLogDecoder:io.circe.Decoder[ackcord.data.AuditLog]", "kind" : "implicit val"}, {"label" : "webhookDecoder", "tail" : ": Decoder[Webhook]", "member" : "ackcord.data.DiscordProtocol.webhookDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#webhookDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "implicit val"}, {"label" : "connectionCodec", "tail" : ": Codec[Connection]", "member" : "ackcord.data.DiscordProtocol.connectionCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#connectionCodec:io.circe.Codec[ackcord.data.Connection]", "kind" : "implicit val"}, {"label" : "rawEmojiCodec", "tail" : ": Codec[RawEmoji]", "member" : "ackcord.data.DiscordProtocol.rawEmojiCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawEmojiCodec:io.circe.Codec[ackcord.data.raw.RawEmoji]", "kind" : "implicit val"}, {"label" : "voiceRegionCodec", "tail" : ": Codec[VoiceRegion]", "member" : "ackcord.data.DiscordProtocol.voiceRegionCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#voiceRegionCodec:io.circe.Codec[ackcord.data.VoiceRegion]", "kind" : "implicit val"}, {"label" : "integrationCodec", "tail" : ": Codec[Integration]", "member" : "ackcord.data.DiscordProtocol.integrationCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#integrationCodec:io.circe.Codec[ackcord.data.Integration]", "kind" : "implicit val"}, {"label" : "integrationApplicationCodec", "tail" : ": Codec[IntegrationApplication]", "member" : "ackcord.data.DiscordProtocol.integrationApplicationCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#integrationApplicationCodec:io.circe.Codec[ackcord.data.IntegrationApplication]", "kind" : "implicit val"}, {"label" : "partialIntegrationCodec", "tail" : ": Codec[PartialIntegration]", "member" : "ackcord.data.DiscordProtocol.partialIntegrationCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#partialIntegrationCodec:io.circe.Codec[ackcord.data.PartialIntegration]", "kind" : "implicit val"}, {"label" : "integrationAccountCodec", "tail" : ": Codec[IntegrationAccount]", "member" : "ackcord.data.DiscordProtocol.integrationAccountCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#integrationAccountCodec:io.circe.Codec[ackcord.data.IntegrationAccount]", "kind" : "implicit val"}, {"label" : "guildWidgetSettingsCodec", "tail" : ": Codec[GuildWidgetSettings]", "member" : "ackcord.data.DiscordProtocol.guildWidgetSettingsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#guildWidgetSettingsCodec:io.circe.Codec[ackcord.data.GuildWidgetSettings]", "kind" : "implicit val"}, {"label" : "inviteWithMetadataCodec", "tail" : ": Codec[InviteWithMetadata]", "member" : "ackcord.data.DiscordProtocol.inviteWithMetadataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteWithMetadataCodec:io.circe.Codec[ackcord.data.InviteWithMetadata]", "kind" : "implicit val"}, {"label" : "inviteCodec", "tail" : ": Codec[Invite]", "member" : "ackcord.data.DiscordProtocol.inviteCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteCodec:io.circe.Codec[ackcord.data.Invite]", "kind" : "implicit val"}, {"label" : "inviteTargetUserCodec", "tail" : ": Codec[InviteTargetUser]", "member" : "ackcord.data.DiscordProtocol.inviteTargetUserCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteTargetUserCodec:io.circe.Codec[ackcord.data.InviteTargetUser]", "kind" : "implicit val"}, {"label" : "inviteChannelCodec", "tail" : ": Codec[InviteChannel]", "member" : "ackcord.data.DiscordProtocol.inviteChannelCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteChannelCodec:io.circe.Codec[ackcord.data.InviteChannel]", "kind" : "implicit val"}, {"label" : "inviteGuildCodec", "tail" : ": Codec[InviteGuild]", "member" : "ackcord.data.DiscordProtocol.inviteGuildCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#inviteGuildCodec:io.circe.Codec[ackcord.data.InviteGuild]", "kind" : "implicit val"}, {"label" : "voiceStateCodec", "tail" : ": Codec[VoiceState]", "member" : "ackcord.data.DiscordProtocol.voiceStateCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#voiceStateCodec:io.circe.Codec[ackcord.data.VoiceState]", "kind" : "implicit val"}, {"label" : "rawMessageDecoder", "tail" : ": Decoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageDecoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawMessageDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "rawMessageEncoder", "tail" : ": Encoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageEncoder", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawMessageEncoder:io.circe.Encoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "messageReferenceCodec", "tail" : ": Codec[MessageReference]", "member" : "ackcord.data.DiscordProtocol.messageReferenceCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageReferenceCodec:io.circe.Codec[ackcord.data.MessageReference]", "kind" : "implicit val"}, {"label" : "channelMentionCodec", "tail" : ": Codec[ChannelMention]", "member" : "ackcord.data.DiscordProtocol.channelMentionCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#channelMentionCodec:io.circe.Codec[ackcord.data.ChannelMention]", "kind" : "implicit val"}, {"label" : "partialRawGuildMemberCodec", "tail" : ": Codec[PartialRawGuildMember]", "member" : "ackcord.data.DiscordProtocol.partialRawGuildMemberCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#partialRawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.PartialRawGuildMember]", "kind" : "implicit val"}, {"label" : "messageApplicationCodec", "tail" : ": Codec[MessageApplication]", "member" : "ackcord.data.DiscordProtocol.messageApplicationCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageApplicationCodec:io.circe.Codec[ackcord.data.MessageApplication]", "kind" : "implicit val"}, {"label" : "rawMessageActivityCodec", "tail" : ": Codec[RawMessageActivity]", "member" : "ackcord.data.DiscordProtocol.rawMessageActivityCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawMessageActivityCodec:io.circe.Codec[ackcord.data.raw.RawMessageActivity]", "kind" : "implicit val"}, {"label" : "reactionCodec", "tail" : ": Codec[Reaction]", "member" : "ackcord.data.DiscordProtocol.reactionCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#reactionCodec:io.circe.Codec[ackcord.data.Reaction]", "kind" : "implicit val"}, {"label" : "partialEmojiCodec", "tail" : ": Codec[PartialEmoji]", "member" : "ackcord.data.DiscordProtocol.partialEmojiCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#partialEmojiCodec:io.circe.Codec[ackcord.data.PartialEmoji]", "kind" : "implicit val"}, {"label" : "outgoingEmbedCodec", "tail" : ": Codec[OutgoingEmbed]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedCodec:io.circe.Codec[ackcord.data.OutgoingEmbed]", "kind" : "implicit val"}, {"label" : "outgoingEmbedAuthorCodec", "tail" : ": Codec[OutgoingEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedAuthorCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedAuthorCodec:io.circe.Codec[ackcord.data.OutgoingEmbedAuthor]", "kind" : "implicit val"}, {"label" : "outgoingEmbedThumbnailCodec", "tail" : ": Codec[OutgoingEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedThumbnailCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedThumbnailCodec:io.circe.Codec[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "outgoingEmbedVideoCodec", "tail" : ": Codec[OutgoingEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedVideoCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedVideoCodec:io.circe.Codec[ackcord.data.OutgoingEmbedVideo]", "kind" : "implicit val"}, {"label" : "outgoingEmbedImageCodec", "tail" : ": Codec[OutgoingEmbedImage]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedImageCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedImageCodec:io.circe.Codec[ackcord.data.OutgoingEmbedImage]", "kind" : "implicit val"}, {"label" : "outgoingEmbedFooterCodec", "tail" : ": Codec[OutgoingEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedFooterCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#outgoingEmbedFooterCodec:io.circe.Codec[ackcord.data.OutgoingEmbedFooter]", "kind" : "implicit val"}, {"label" : "receivedEmbedCodec", "tail" : ": Codec[ReceivedEmbed]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedCodec:io.circe.Codec[ackcord.data.ReceivedEmbed]", "kind" : "implicit val"}, {"label" : "receivedEmbedAuthorCodec", "tail" : ": Codec[ReceivedEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedAuthorCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedAuthorCodec:io.circe.Codec[ackcord.data.ReceivedEmbedAuthor]", "kind" : "implicit val"}, {"label" : "receivedEmbedProviderCodec", "tail" : ": Codec[ReceivedEmbedProvider]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedProviderCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedProviderCodec:io.circe.Codec[ackcord.data.ReceivedEmbedProvider]", "kind" : "implicit val"}, {"label" : "receivedEmbedVideoCodec", "tail" : ": Codec[ReceivedEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedVideoCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedVideoCodec:io.circe.Codec[ackcord.data.ReceivedEmbedVideo]", "kind" : "implicit val"}, {"label" : "receivedEmbedThumbnailCodec", "tail" : ": Codec[ReceivedEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedThumbnailCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedThumbnailCodec:io.circe.Codec[ackcord.data.ReceivedEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "receivedEmbedImageCodec", "tail" : ": Codec[ReceivedEmbedImage]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedImageCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedImageCodec:io.circe.Codec[ackcord.data.ReceivedEmbedImage]", "kind" : "implicit val"}, {"label" : "receivedEmbedFooterCodec", "tail" : ": Codec[ReceivedEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedFooterCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#receivedEmbedFooterCodec:io.circe.Codec[ackcord.data.ReceivedEmbedFooter]", "kind" : "implicit val"}, {"label" : "embedFieldCodec", "tail" : ": Codec[EmbedField]", "member" : "ackcord.data.DiscordProtocol.embedFieldCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#embedFieldCodec:io.circe.Codec[ackcord.data.EmbedField]", "kind" : "implicit val"}, {"label" : "attachementCodec", "tail" : ": Codec[Attachment]", "member" : "ackcord.data.DiscordProtocol.attachementCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#attachementCodec:io.circe.Codec[ackcord.data.Attachment]", "kind" : "implicit val"}, {"label" : "rawGuildMemberCodec", "tail" : ": Codec[RawGuildMember]", "member" : "ackcord.data.DiscordProtocol.rawGuildMemberCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.RawGuildMember]", "kind" : "implicit val"}, {"label" : "rawRoleCodec", "tail" : ": Codec[RawRole]", "member" : "ackcord.data.DiscordProtocol.rawRoleCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawRoleCodec:io.circe.Codec[ackcord.data.raw.RawRole]", "kind" : "implicit val"}, {"label" : "roleCodec", "tail" : ": Codec[Role]", "member" : "ackcord.data.DiscordProtocol.roleCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#roleCodec:io.circe.Codec[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "webhookAuthorCodec", "tail" : ": Codec[WebhookAuthor]", "member" : "ackcord.data.DiscordProtocol.webhookAuthorCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#webhookAuthorCodec:io.circe.Codec[ackcord.data.WebhookAuthor]", "kind" : "implicit val"}, {"label" : "userCodec", "tail" : ": Codec[User]", "member" : "ackcord.data.DiscordProtocol.userCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#userCodec:io.circe.Codec[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "permissionValueCodec", "tail" : ": Codec[PermissionOverwrite]", "member" : "ackcord.data.DiscordProtocol.permissionValueCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#permissionValueCodec:io.circe.Codec[ackcord.data.PermissionOverwrite]", "kind" : "implicit val"}, {"label" : "unavailableGuildCodec", "tail" : ": Codec[UnavailableGuild]", "member" : "ackcord.data.DiscordProtocol.unavailableGuildCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#unavailableGuildCodec:io.circe.Codec[ackcord.data.UnavailableGuild]", "kind" : "implicit val"}, {"label" : "rawPresenceCodec", "tail" : ": Codec[RawPresence]", "member" : "ackcord.data.DiscordProtocol.rawPresenceCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawPresenceCodec:io.circe.Codec[ackcord.data.raw.RawPresence]", "kind" : "implicit val"}, {"label" : "activityEmojiCodec", "tail" : ": Codec[ActivityEmoji]", "member" : "ackcord.data.DiscordProtocol.activityEmojiCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#activityEmojiCodec:io.circe.Codec[ackcord.data.ActivityEmoji]", "kind" : "implicit val"}, {"label" : "rawActivityPartyCodec", "tail" : ": Codec[RawActivityParty]", "member" : "ackcord.data.DiscordProtocol.rawActivityPartyCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawActivityPartyCodec:io.circe.Codec[ackcord.data.raw.RawActivityParty]", "kind" : "implicit val"}, {"label" : "activityAssetCodec", "tail" : ": Codec[ActivityAsset]", "member" : "ackcord.data.DiscordProtocol.activityAssetCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#activityAssetCodec:io.circe.Codec[ackcord.data.ActivityAsset]", "kind" : "implicit val"}, {"label" : "activityTimestampsCodec", "tail" : ": Codec[ActivityTimestamps]", "member" : "ackcord.data.DiscordProtocol.activityTimestampsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#activityTimestampsCodec:io.circe.Codec[ackcord.data.ActivityTimestamps]", "kind" : "implicit val"}, {"label" : "rawActivityCodec", "tail" : ": Codec[RawActivity]", "member" : "ackcord.data.DiscordProtocol.rawActivityCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawActivityCodec:io.circe.Codec[ackcord.data.raw.RawActivity]", "kind" : "implicit val"}, {"label" : "partialUserCodec", "tail" : ": Codec[PartialUser]", "member" : "ackcord.data.DiscordProtocol.partialUserCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#partialUserCodec:io.circe.Codec[ackcord.data.raw.PartialUser]", "kind" : "implicit val"}, {"label" : "rawGuildPreviewCodec", "tail" : ": Codec[GuildPreview]", "member" : "ackcord.data.DiscordProtocol.rawGuildPreviewCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawGuildPreviewCodec:io.circe.Codec[ackcord.data.GuildPreview]", "kind" : "implicit val"}, {"label" : "rawGuildCodec", "tail" : ": Codec[RawGuild]", "member" : "ackcord.data.DiscordProtocol.rawGuildCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawGuildCodec:io.circe.Codec[ackcord.data.raw.RawGuild]", "kind" : "implicit val"}, {"label" : "rawChannelCodec", "tail" : ": Codec[RawChannel]", "member" : "ackcord.data.DiscordProtocol.rawChannelCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#rawChannelCodec:io.circe.Codec[ackcord.data.raw.RawChannel]", "kind" : "implicit val"}, {"label" : "imageDataCodec", "tail" : ": Codec[ImageData]", "member" : "ackcord.data.DiscordProtocol.imageDataCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#imageDataCodec:io.circe.Codec[ackcord.data.ImageData]", "kind" : "implicit val"}, {"label" : "offsetDateTimeCodec", "tail" : ": Codec[OffsetDateTime]", "member" : "ackcord.data.DiscordProtocol.offsetDateTimeCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#offsetDateTimeCodec:io.circe.Codec[java.time.OffsetDateTime]", "kind" : "implicit val"}, {"label" : "systemChannelFlagsCodec", "tail" : ": Codec[SystemChannelFlags]", "member" : "ackcord.data.DiscordProtocol.systemChannelFlagsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#systemChannelFlagsCodec:io.circe.Codec[ackcord.data.SystemChannelFlags]", "kind" : "implicit val"}, {"label" : "messageFlagsCodec", "tail" : ": Codec[MessageFlags]", "member" : "ackcord.data.DiscordProtocol.messageFlagsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#messageFlagsCodec:io.circe.Codec[ackcord.data.MessageFlags]", "kind" : "implicit val"}, {"label" : "userFlagsCodec", "tail" : ": Codec[UserFlags]", "member" : "ackcord.data.DiscordProtocol.userFlagsCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#userFlagsCodec:io.circe.Codec[ackcord.data.UserFlags]", "kind" : "implicit val"}, {"label" : "permissionCodec", "tail" : ": Codec[Permission]", "member" : "ackcord.data.DiscordProtocol.permissionCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#permissionCodec:io.circe.Codec[ackcord.data.Permission]", "kind" : "implicit val"}, {"label" : "instantCodec", "tail" : ": Codec[Instant]", "member" : "ackcord.data.DiscordProtocol.instantCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#instantCodec:io.circe.Codec[java.time.Instant]", "kind" : "implicit val"}, {"label" : "snowflakeTypeCodec", "tail" : "(): Codec[SnowflakeType[A]]", "member" : "ackcord.data.DiscordProtocol.snowflakeTypeCodec", "link" : "ackcord\/gateway\/GatewayProtocol$.html#snowflakeTypeCodec[A]:io.circe.Codec[ackcord.data.SnowflakeType[A]]", "kind" : "implicit def"}, {"label" : "circeConfiguration", "tail" : ": Configuration", "member" : "ackcord.data.DiscordProtocol.circeConfiguration", "link" : "ackcord\/gateway\/GatewayProtocol$.html#circeConfiguration:io.circe.generic.extras.Configuration", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/GatewayProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.gateway.GatewayRatelimitedException", "shortDescription" : "", "members_class" : [{"member" : "ackcord.gateway.GatewayRatelimitedException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewayRatelimitedException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/gateway\/GatewayRatelimitedException.html", "kind" : "class"}, {"name" : "ackcord.gateway.GatewaySettings", "shortDescription" : "All the settings used by AckCord when connecting and similar", "members_case class" : [{"member" : "ackcord.gateway.GatewaySettings#<init>", "error" : "unsupported entity"}, {"label" : "compress", "tail" : ": Compress", "member" : "ackcord.gateway.GatewaySettings.compress", "link" : "ackcord\/gateway\/GatewaySettings.html#compress:ackcord.gateway.Compress", "kind" : "val"}, {"label" : "intents", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.GatewaySettings.intents", "link" : "ackcord\/gateway\/GatewaySettings.html#intents:ackcord.gateway.GatewayIntents", "kind" : "val"}, {"label" : "guildSubscriptions", "tail" : ": Boolean", "member" : "ackcord.gateway.GatewaySettings.guildSubscriptions", "link" : "ackcord\/gateway\/GatewaySettings.html#guildSubscriptions:Boolean", "kind" : "val"}, {"label" : "afk", "tail" : ": Boolean", "member" : "ackcord.gateway.GatewaySettings.afk", "link" : "ackcord\/gateway\/GatewaySettings.html#afk:Boolean", "kind" : "val"}, {"label" : "status", "tail" : ": PresenceStatus", "member" : "ackcord.gateway.GatewaySettings.status", "link" : "ackcord\/gateway\/GatewaySettings.html#status:ackcord.data.PresenceStatus", "kind" : "val"}, {"label" : "activities", "tail" : ": Option[Seq[RawActivity]]", "member" : "ackcord.gateway.GatewaySettings.activities", "link" : "ackcord\/gateway\/GatewaySettings.html#activities:Option[Seq[ackcord.data.raw.RawActivity]]", "kind" : "val"}, {"label" : "idleSince", "tail" : ": Option[Instant]", "member" : "ackcord.gateway.GatewaySettings.idleSince", "link" : "ackcord\/gateway\/GatewaySettings.html#idleSince:Option[java.time.Instant]", "kind" : "val"}, {"label" : "shardTotal", "tail" : ": Int", "member" : "ackcord.gateway.GatewaySettings.shardTotal", "link" : "ackcord\/gateway\/GatewaySettings.html#shardTotal:Int", "kind" : "val"}, {"label" : "shardNum", "tail" : ": Int", "member" : "ackcord.gateway.GatewaySettings.shardNum", "link" : "ackcord\/gateway\/GatewaySettings.html#shardNum:Int", "kind" : "val"}, {"label" : "largeThreshold", "tail" : ": Int", "member" : "ackcord.gateway.GatewaySettings.largeThreshold", "link" : "ackcord\/gateway\/GatewaySettings.html#largeThreshold:Int", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.gateway.GatewaySettings.token", "link" : "ackcord\/gateway\/GatewaySettings.html#token:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/GatewaySettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/GatewaySettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/GatewaySettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/GatewaySettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/GatewaySettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/GatewaySettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/GatewaySettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/GatewaySettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewaySettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewaySettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/GatewaySettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/GatewaySettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/GatewaySettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/GatewaySettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/GatewaySettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/GatewaySettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/GatewaySettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/GatewaySettings.html", "kind" : "case class"}, {"name" : "ackcord.gateway.Heartbeat", "shortDescription" : "Sent and received to confirm the connection is still going.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Heartbeat.op", "link" : "ackcord\/gateway\/Heartbeat.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.Heartbeat#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": Option[Int]", "member" : "ackcord.gateway.Heartbeat.nowD", "link" : "ackcord\/gateway\/Heartbeat.html#nowD:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Heartbeat.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[Option[Int]]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/Heartbeat.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[Option[Int]]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/Heartbeat.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/Heartbeat.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Heartbeat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Heartbeat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Heartbeat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Heartbeat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Heartbeat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Heartbeat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Heartbeat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Heartbeat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Heartbeat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Heartbeat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Heartbeat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Heartbeat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Heartbeat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Heartbeat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Heartbeat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Heartbeat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/Heartbeat.html", "kind" : "case class"}, {"name" : "ackcord.gateway.HeartbeatACK", "case object" : "ackcord\/gateway\/HeartbeatACK$.html", "shortDescription" : "Sent by the gateway as a response to Heartbeat.", "members_case object" : [{"label" : "nowD", "tail" : "(): NotUsed", "member" : "ackcord.gateway.HeartbeatACK.nowD", "link" : "ackcord\/gateway\/HeartbeatACK$.html#nowD:akka.NotUsed", "kind" : "def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.HeartbeatACK.op", "link" : "ackcord\/gateway\/HeartbeatACK$.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/HeartbeatACK$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/gateway\/HeartbeatACK$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[NotUsed]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/HeartbeatACK$.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[NotUsed]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/HeartbeatACK$.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/HeartbeatACK$.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/HeartbeatACK$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/HeartbeatACK$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/HeartbeatACK$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/HeartbeatACK$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/HeartbeatACK$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/HeartbeatACK$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/HeartbeatACK$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HeartbeatACK$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HeartbeatACK$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HeartbeatACK$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/HeartbeatACK$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/HeartbeatACK$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/HeartbeatACK$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/HeartbeatACK$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/HeartbeatACK$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/HeartbeatACK$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/HeartbeatACK$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.gateway.Hello", "shortDescription" : "Sent by the gateway as a response to Identify", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Hello.op", "link" : "ackcord\/gateway\/Hello.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.Hello#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": HelloData", "member" : "ackcord.gateway.Hello.nowD", "link" : "ackcord\/gateway\/Hello.html#nowD:ackcord.gateway.HelloData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Hello.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[HelloData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/Hello.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[HelloData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/Hello.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/Hello.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Hello.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Hello.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Hello.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Hello.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Hello.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Hello.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Hello.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Hello.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Hello.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Hello.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Hello.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Hello.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Hello.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Hello.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Hello.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Hello.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/Hello.html", "kind" : "case class"}, {"name" : "ackcord.gateway.HelloData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.HelloData#<init>", "error" : "unsupported entity"}, {"label" : "heartbeatInterval", "tail" : ": Int", "member" : "ackcord.gateway.HelloData.heartbeatInterval", "link" : "ackcord\/gateway\/HelloData.html#heartbeatInterval:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/HelloData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/HelloData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/HelloData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/HelloData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/HelloData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/HelloData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/HelloData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/HelloData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HelloData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HelloData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/HelloData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/HelloData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/HelloData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/HelloData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/HelloData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/HelloData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/HelloData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/HelloData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.Identify", "shortDescription" : "Sent by the shard to log in.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Identify.op", "link" : "ackcord\/gateway\/Identify.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.Identify#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": IdentifyData", "member" : "ackcord.gateway.Identify.nowD", "link" : "ackcord\/gateway\/Identify.html#nowD:ackcord.gateway.IdentifyData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Identify.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[IdentifyData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/Identify.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[IdentifyData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/Identify.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/Identify.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Identify.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Identify.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Identify.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Identify.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Identify.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Identify.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Identify.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Identify.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Identify.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Identify.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Identify.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Identify.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Identify.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Identify.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Identify.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Identify.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/Identify.html", "kind" : "case class"}, {"name" : "ackcord.gateway.IdentifyData", "shortDescription" : "", "object" : "ackcord\/gateway\/IdentifyData$.html", "members_object" : [{"label" : "createProperties", "tail" : "(): Map[String, String]", "member" : "ackcord.gateway.IdentifyData.createProperties", "link" : "ackcord\/gateway\/IdentifyData$.html#createProperties:Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/IdentifyData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/IdentifyData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/IdentifyData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/IdentifyData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/IdentifyData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/IdentifyData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/IdentifyData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/IdentifyData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/IdentifyData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/gateway\/IdentifyData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/IdentifyData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/IdentifyData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/gateway\/IdentifyData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/IdentifyData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/IdentifyData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/IdentifyData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.gateway.IdentifyData#<init>", "error" : "unsupported entity"}, {"label" : "intents", "tail" : ": GatewayIntents", "member" : "ackcord.gateway.IdentifyData.intents", "link" : "ackcord\/gateway\/IdentifyData.html#intents:ackcord.gateway.GatewayIntents", "kind" : "val"}, {"label" : "guildSubscriptions", "tail" : ": Boolean", "member" : "ackcord.gateway.IdentifyData.guildSubscriptions", "link" : "ackcord\/gateway\/IdentifyData.html#guildSubscriptions:Boolean", "kind" : "val"}, {"label" : "presence", "tail" : ": StatusData", "member" : "ackcord.gateway.IdentifyData.presence", "link" : "ackcord\/gateway\/IdentifyData.html#presence:ackcord.gateway.StatusData", "kind" : "val"}, {"label" : "shard", "tail" : ": Seq[Int]", "member" : "ackcord.gateway.IdentifyData.shard", "link" : "ackcord\/gateway\/IdentifyData.html#shard:Seq[Int]", "kind" : "val"}, {"label" : "largeThreshold", "tail" : ": Int", "member" : "ackcord.gateway.IdentifyData.largeThreshold", "link" : "ackcord\/gateway\/IdentifyData.html#largeThreshold:Int", "kind" : "val"}, {"label" : "compress", "tail" : ": Boolean", "member" : "ackcord.gateway.IdentifyData.compress", "link" : "ackcord\/gateway\/IdentifyData.html#compress:Boolean", "kind" : "val"}, {"label" : "properties", "tail" : ": Map[String, String]", "member" : "ackcord.gateway.IdentifyData.properties", "link" : "ackcord\/gateway\/IdentifyData.html#properties:Map[String,String]", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.gateway.IdentifyData.token", "link" : "ackcord\/gateway\/IdentifyData.html#token:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/IdentifyData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/IdentifyData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/IdentifyData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/IdentifyData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/IdentifyData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/IdentifyData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/IdentifyData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/IdentifyData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/IdentifyData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/IdentifyData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/IdentifyData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/IdentifyData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/IdentifyData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/IdentifyData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/IdentifyData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/IdentifyData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.InvalidSession", "shortDescription" : "Sent by the gateway if the session is invalid when resuming a connection.", "members_case class" : [{"label" : "nowD", "tail" : "(): Boolean", "member" : "ackcord.gateway.InvalidSession.nowD", "link" : "ackcord\/gateway\/InvalidSession.html#nowD:Boolean", "kind" : "def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.InvalidSession.op", "link" : "ackcord\/gateway\/InvalidSession.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.InvalidSession#<init>", "error" : "unsupported entity"}, {"label" : "resumable", "tail" : ": Boolean", "member" : "ackcord.gateway.InvalidSession.resumable", "link" : "ackcord\/gateway\/InvalidSession.html#resumable:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/InvalidSession.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[Boolean]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/InvalidSession.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[Boolean]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/InvalidSession.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/InvalidSession.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/InvalidSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/InvalidSession.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/InvalidSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/InvalidSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/InvalidSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/InvalidSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/InvalidSession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/InvalidSession.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/InvalidSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/InvalidSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/InvalidSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/InvalidSession.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/InvalidSession.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/InvalidSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/InvalidSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/InvalidSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/InvalidSession.html", "kind" : "case class"}, {"name" : "ackcord.gateway.Reconnect", "case object" : "ackcord\/gateway\/Reconnect$.html", "shortDescription" : "Sent by the gateway to indicate that the shard should reconnect.", "members_case object" : [{"label" : "nowD", "tail" : "(): NotUsed", "member" : "ackcord.gateway.Reconnect.nowD", "link" : "ackcord\/gateway\/Reconnect$.html#nowD:akka.NotUsed", "kind" : "def"}, {"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Reconnect.op", "link" : "ackcord\/gateway\/Reconnect$.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Reconnect$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/gateway\/Reconnect$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[NotUsed]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/Reconnect$.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[NotUsed]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/Reconnect$.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/Reconnect$.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Reconnect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Reconnect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Reconnect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Reconnect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Reconnect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Reconnect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Reconnect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Reconnect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Reconnect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Reconnect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Reconnect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Reconnect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Reconnect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/gateway\/Reconnect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Reconnect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Reconnect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Reconnect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.gateway.RequestGuildMembers", "shortDescription" : "Sent by the shard to receive all the members of a guild, even logged out ones.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.RequestGuildMembers.op", "link" : "ackcord\/gateway\/RequestGuildMembers.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.RequestGuildMembers#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": RequestGuildMembersData", "member" : "ackcord.gateway.RequestGuildMembers.nowD", "link" : "ackcord\/gateway\/RequestGuildMembers.html#nowD:ackcord.gateway.RequestGuildMembersData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/RequestGuildMembers.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[RequestGuildMembersData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/RequestGuildMembers.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[RequestGuildMembersData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/RequestGuildMembers.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/RequestGuildMembers.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/RequestGuildMembers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/RequestGuildMembers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/RequestGuildMembers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/RequestGuildMembers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/RequestGuildMembers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/RequestGuildMembers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/RequestGuildMembers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/RequestGuildMembers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/RequestGuildMembers.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/RequestGuildMembers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/RequestGuildMembers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/RequestGuildMembers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/RequestGuildMembers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/RequestGuildMembers.html", "kind" : "case class"}, {"name" : "ackcord.gateway.RequestGuildMembersData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.RequestGuildMembersData#<init>", "error" : "unsupported entity"}, {"label" : "nonce", "tail" : ": Option[String]", "member" : "ackcord.gateway.RequestGuildMembersData.nonce", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#nonce:Option[String]", "kind" : "val"}, {"label" : "userIds", "tail" : ": Option[Seq[UserId]]", "member" : "ackcord.gateway.RequestGuildMembersData.userIds", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#userIds:Option[Seq[ackcord.data.UserId]]", "kind" : "val"}, {"label" : "presences", "tail" : ": Boolean", "member" : "ackcord.gateway.RequestGuildMembersData.presences", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#presences:Boolean", "kind" : "val"}, {"label" : "limit", "tail" : ": Int", "member" : "ackcord.gateway.RequestGuildMembersData.limit", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#limit:Int", "kind" : "val"}, {"label" : "query", "tail" : ": Option[String]", "member" : "ackcord.gateway.RequestGuildMembersData.query", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#query:Option[String]", "kind" : "val"}, {"label" : "guildId", "tail" : ": Either[Seq[GuildId], GuildId]", "member" : "ackcord.gateway.RequestGuildMembersData.guildId", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#guildId:Either[Seq[ackcord.data.GuildId],ackcord.data.GuildId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/RequestGuildMembersData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/RequestGuildMembersData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/RequestGuildMembersData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.Resume", "shortDescription" : "Sent by the shard instead of Identify when resuming a connection.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.Resume.op", "link" : "ackcord\/gateway\/Resume.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.Resume#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": ResumeData", "member" : "ackcord.gateway.Resume.nowD", "link" : "ackcord\/gateway\/Resume.html#nowD:ackcord.gateway.ResumeData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/Resume.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[ResumeData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/Resume.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[ResumeData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/Resume.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/Resume.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/Resume.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/Resume.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/Resume.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/Resume.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/Resume.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/Resume.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/Resume.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Resume.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Resume.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/Resume.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/Resume.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/Resume.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/Resume.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/Resume.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/Resume.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/Resume.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/Resume.html", "kind" : "case class"}, {"name" : "ackcord.gateway.ResumeData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.ResumeData#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : ": Int", "member" : "ackcord.gateway.ResumeData.seq", "link" : "ackcord\/gateway\/ResumeData.html#seq:Int", "kind" : "val"}, {"label" : "sessionId", "tail" : ": String", "member" : "ackcord.gateway.ResumeData.sessionId", "link" : "ackcord\/gateway\/ResumeData.html#sessionId:String", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.gateway.ResumeData.token", "link" : "ackcord\/gateway\/ResumeData.html#token:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/ResumeData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/ResumeData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/ResumeData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/ResumeData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/ResumeData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/ResumeData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/ResumeData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/ResumeData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/ResumeData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/ResumeData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/ResumeData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/ResumeData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/ResumeData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/ResumeData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/ResumeData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/ResumeData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/ResumeData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/ResumeData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.StatusData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.StatusData#<init>", "error" : "unsupported entity"}, {"label" : "afk", "tail" : ": Boolean", "member" : "ackcord.gateway.StatusData.afk", "link" : "ackcord\/gateway\/StatusData.html#afk:Boolean", "kind" : "val"}, {"label" : "status", "tail" : ": PresenceStatus", "member" : "ackcord.gateway.StatusData.status", "link" : "ackcord\/gateway\/StatusData.html#status:ackcord.data.PresenceStatus", "kind" : "val"}, {"label" : "activities", "tail" : ": Option[Seq[RawActivity]]", "member" : "ackcord.gateway.StatusData.activities", "link" : "ackcord\/gateway\/StatusData.html#activities:Option[Seq[ackcord.data.raw.RawActivity]]", "kind" : "val"}, {"label" : "since", "tail" : ": Option[Instant]", "member" : "ackcord.gateway.StatusData.since", "link" : "ackcord\/gateway\/StatusData.html#since:Option[java.time.Instant]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/StatusData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/StatusData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/StatusData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/StatusData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/StatusData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/StatusData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/StatusData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/StatusData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/StatusData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/StatusData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/StatusData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/StatusData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/StatusData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/StatusData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/StatusData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.StatusUpdate", "shortDescription" : "Sent when a presence or status changes.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.StatusUpdate.op", "link" : "ackcord\/gateway\/StatusUpdate.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.StatusUpdate#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": StatusData", "member" : "ackcord.gateway.StatusUpdate.nowD", "link" : "ackcord\/gateway\/StatusUpdate.html#nowD:ackcord.gateway.StatusData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/StatusUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[StatusData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/StatusUpdate.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[StatusData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/StatusUpdate.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/StatusUpdate.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/StatusUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/StatusUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/StatusUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/StatusUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/StatusUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/StatusUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/StatusUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/StatusUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/StatusUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/StatusUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/StatusUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/StatusUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/StatusUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/StatusUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/StatusUpdate.html", "kind" : "case class"}, {"name" : "ackcord.gateway.UnknownGatewayMessage", "shortDescription" : "All unknown gateway messages.", "members_case class" : [{"label" : "nowD", "tail" : "(): NotUsed", "member" : "ackcord.gateway.UnknownGatewayMessage.nowD", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#nowD:akka.NotUsed", "kind" : "def"}, {"member" : "ackcord.gateway.UnknownGatewayMessage#<init>", "error" : "unsupported entity"}, {"label" : "op", "tail" : ": GatewayOpCode", "member" : "ackcord.gateway.UnknownGatewayMessage.op", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#op:ackcord.gateway.GatewayOpCode", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[NotUsed]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[NotUsed]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/UnknownGatewayMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/UnknownGatewayMessage.html", "kind" : "case class"}, {"name" : "ackcord.gateway.VoiceServerUpdate", "shortDescription" : "", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.VoiceServerUpdate.op", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.VoiceServerUpdate#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": VoiceServerUpdateData", "member" : "ackcord.gateway.VoiceServerUpdate.nowD", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#nowD:ackcord.gateway.VoiceServerUpdateData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[VoiceServerUpdateData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[VoiceServerUpdateData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/VoiceServerUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/VoiceServerUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/VoiceServerUpdate.html", "kind" : "case class"}, {"name" : "ackcord.gateway.VoiceServerUpdateData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.VoiceServerUpdateData#<init>", "error" : "unsupported entity"}, {"label" : "endpoint", "tail" : ": String", "member" : "ackcord.gateway.VoiceServerUpdateData.endpoint", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#endpoint:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.gateway.VoiceServerUpdateData.guildId", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.gateway.VoiceServerUpdateData.token", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#token:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/VoiceServerUpdateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/VoiceServerUpdateData.html", "kind" : "case class"}, {"name" : "ackcord.gateway.VoiceStateUpdate", "shortDescription" : "Sent by the bot to connect to a voice channel.", "members_case class" : [{"label" : "op", "tail" : "(): GatewayOpCode", "member" : "ackcord.gateway.VoiceStateUpdate.op", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#op:ackcord.gateway.GatewayOpCode", "kind" : "def"}, {"member" : "ackcord.gateway.VoiceStateUpdate#<init>", "error" : "unsupported entity"}, {"label" : "nowD", "tail" : ": VoiceStateUpdateData", "member" : "ackcord.gateway.VoiceStateUpdate.nowD", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#nowD:ackcord.gateway.VoiceStateUpdateData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "d", "tail" : "(): Now[Result[VoiceStateUpdateData]]", "member" : "ackcord.gateway.EagerGatewayMessage.d", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#d:cats.Now[io.circe.Decoder.Result[D]]", "kind" : "def"}, {"label" : "t", "tail" : "(): util.JsonOption[GatewayEvent[VoiceStateUpdateData]]", "member" : "ackcord.gateway.GatewayMessage.t", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#t:ackcord.util.JsonOption[ackcord.gateway.GatewayEvent[D]]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.gateway.GatewayMessage.s", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/VoiceStateUpdate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/VoiceStateUpdate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/VoiceStateUpdate.html", "kind" : "case class"}, {"name" : "ackcord.gateway.VoiceStateUpdateData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.gateway.VoiceStateUpdateData#<init>", "error" : "unsupported entity"}, {"label" : "selfDeaf", "tail" : ": Boolean", "member" : "ackcord.gateway.VoiceStateUpdateData.selfDeaf", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#selfDeaf:Boolean", "kind" : "val"}, {"label" : "selfMute", "tail" : ": Boolean", "member" : "ackcord.gateway.VoiceStateUpdateData.selfMute", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#selfMute:Boolean", "kind" : "val"}, {"label" : "channelId", "tail" : ": Option[VoiceGuildChannelId]", "member" : "ackcord.gateway.VoiceStateUpdateData.channelId", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#channelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.gateway.VoiceStateUpdateData.guildId", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/gateway\/VoiceStateUpdateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/gateway\/VoiceStateUpdateData.html", "kind" : "case class"}], "ackcord.cachehandlers" : [{"name" : "ackcord.cachehandlers.CacheDeleter", "object" : "ackcord\/cachehandlers\/CacheDeleter$.html", "members_object" : [{"label" : "dummy", "tail" : "(shouldBeIgnored: Boolean): CacheDeleter[Obj]", "member" : "ackcord.cachehandlers.CacheDeleter.dummy", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#dummy[Obj](shouldBeIgnored:Boolean):ackcord.cachehandlers.CacheDeleter[Obj]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheDeleter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/cachehandlers\/CacheDeleter.html", "kind" : "trait", "members_trait" : [{"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheDeleter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: Obj, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.CacheHandler.handle", "link" : "ackcord\/cachehandlers\/CacheDeleter.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:Obj,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "abstract def"}], "shortDescription" : "A CacheHandler for deletions."}, {"name" : "ackcord.cachehandlers.CacheHandler", "trait" : "ackcord\/cachehandlers\/CacheHandler.html", "kind" : "trait", "members_trait" : [{"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/CacheHandler.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: Obj, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.CacheHandler.handle", "link" : "ackcord\/cachehandlers\/CacheHandler.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:Obj,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "abstract def"}], "shortDescription" : "A class that handles creating a new cache snapshot with an object"}, {"name" : "ackcord.cachehandlers.CacheHandlers", "shortDescription" : "", "object" : "ackcord\/cachehandlers\/CacheHandlers$.html", "members_object" : [{"label" : "messageDeleter", "tail" : ": CacheDeleter[Message]", "member" : "ackcord.cachehandlers.CacheHandlers.messageDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#messageDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.Message]", "kind" : "val"}, {"label" : "roleDeleter", "tail" : ": CacheDeleter[Role]", "member" : "ackcord.cachehandlers.CacheHandlers.roleDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#roleDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.Role]", "kind" : "val"}, {"label" : "guildMemberDeleter", "tail" : ": CacheDeleter[GuildMember]", "member" : "ackcord.cachehandlers.CacheHandlers.guildMemberDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildMemberDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.GuildMember]", "kind" : "val"}, {"label" : "groupDmChannelDeleter", "tail" : ": CacheDeleter[GroupDMChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.groupDmChannelDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#groupDmChannelDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.GroupDMChannel]", "kind" : "val"}, {"label" : "dmChannelDeleter", "tail" : ": CacheDeleter[DMChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.dmChannelDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#dmChannelDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.DMChannel]", "kind" : "val"}, {"label" : "guildChannelDeleter", "tail" : ": CacheDeleter[GuildChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.guildChannelDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildChannelDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.GuildChannel]", "kind" : "val"}, {"label" : "rawMessageReactionEmojiDeleter", "tail" : ": CacheDeleter[MessageReactionRemoveEmojiData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageReactionEmojiDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageReactionEmojiDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.MessageReactionRemoveEmojiData]", "kind" : "val"}, {"label" : "rawMessageReactionAllDeleter", "tail" : ": CacheDeleter[MessageReactionRemoveAllData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageReactionAllDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageReactionAllDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.MessageReactionRemoveAllData]", "kind" : "val"}, {"label" : "rawMessageReactionDeleter", "tail" : ": CacheDeleter[MessageReactionData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageReactionDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageReactionDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.MessageReactionData]", "kind" : "val"}, {"label" : "rawMessageBulkDeleter", "tail" : ": CacheDeleter[MessageDeleteBulkData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageBulkDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageBulkDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.MessageDeleteBulkData]", "kind" : "val"}, {"label" : "rawMessageDeleter", "tail" : ": CacheDeleter[MessageDeleteData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.MessageDeleteData]", "kind" : "val"}, {"label" : "roleDeleteDataDeleter", "tail" : ": CacheDeleter[GuildRoleDeleteData]", "member" : "ackcord.cachehandlers.CacheHandlers.roleDeleteDataDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#roleDeleteDataDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.GuildRoleDeleteData]", "kind" : "val"}, {"label" : "rawGuildMemberDeleter", "tail" : ": CacheDeleter[GuildMemberRemoveData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawGuildMemberDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawGuildMemberDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.GuildMemberRemoveData]", "kind" : "val"}, {"label" : "rawBanDeleter", "tail" : ": CacheDeleter[UserWithGuildId]", "member" : "ackcord.cachehandlers.CacheHandlers.rawBanDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawBanDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.gateway.GatewayEvent.UserWithGuildId]", "kind" : "val"}, {"label" : "guildDeleter", "tail" : ": CacheDeleter[UnavailableGuild]", "member" : "ackcord.cachehandlers.CacheHandlers.guildDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.UnavailableGuild]", "kind" : "val"}, {"label" : "rawChannelDeleter", "tail" : ": CacheDeleter[RawChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.rawChannelDeleter", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawChannelDeleter:ackcord.cachehandlers.CacheDeleter[ackcord.data.raw.RawChannel]", "kind" : "val"}, {"label" : "unavailableGuildUpdater", "tail" : ": CacheUpdater[UnavailableGuild]", "member" : "ackcord.cachehandlers.CacheHandlers.unavailableGuildUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#unavailableGuildUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.UnavailableGuild]", "kind" : "val"}, {"label" : "messageUpdater", "tail" : ": CacheUpdater[Message]", "member" : "ackcord.cachehandlers.CacheHandlers.messageUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#messageUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.Message]", "kind" : "val"}, {"label" : "voiceStateUpdater", "tail" : ": CacheUpdater[VoiceState]", "member" : "ackcord.cachehandlers.CacheHandlers.voiceStateUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#voiceStateUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.VoiceState]", "kind" : "val"}, {"label" : "guildUpdater", "tail" : ": CacheUpdater[Guild]", "member" : "ackcord.cachehandlers.CacheHandlers.guildUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.Guild]", "kind" : "val"}, {"label" : "userUpdater", "tail" : ": CacheUpdater[User]", "member" : "ackcord.cachehandlers.CacheHandlers.userUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#userUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.User]", "kind" : "val"}, {"label" : "lastTypedUpdater", "tail" : ": CacheUpdater[TypingStartData]", "member" : "ackcord.cachehandlers.CacheHandlers.lastTypedUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#lastTypedUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.TypingStartData]", "kind" : "val"}, {"label" : "rawMessageReactionUpdater", "tail" : ": CacheUpdater[MessageReactionData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageReactionUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageReactionUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.MessageReactionData]", "kind" : "val"}, {"label" : "rawPartialMessageUpdater", "tail" : ": CacheUpdater[RawPartialMessage]", "member" : "ackcord.cachehandlers.CacheHandlers.rawPartialMessageUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawPartialMessageUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.RawPartialMessage]", "kind" : "val"}, {"label" : "rawMessageUpdater", "tail" : ": CacheUpdater[RawMessage]", "member" : "ackcord.cachehandlers.CacheHandlers.rawMessageUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawMessageUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.raw.RawMessage]", "kind" : "val"}, {"label" : "roleUpdater", "tail" : ": CacheUpdater[Role]", "member" : "ackcord.cachehandlers.CacheHandlers.roleUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#roleUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.Role]", "kind" : "val"}, {"label" : "roleModifyDataUpdater", "tail" : ": CacheUpdater[GuildRoleModifyData]", "member" : "ackcord.cachehandlers.CacheHandlers.roleModifyDataUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#roleModifyDataUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.GuildRoleModifyData]", "kind" : "val"}, {"label" : "rawGuildMemberChunkUpdater", "tail" : ": CacheUpdater[GuildMemberChunkData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawGuildMemberChunkUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawGuildMemberChunkUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.GuildMemberChunkData]", "kind" : "val"}, {"label" : "rawGuildMemberUpdater", "tail" : ": CacheUpdater[GuildMemberUpdateData]", "member" : "ackcord.cachehandlers.CacheHandlers.rawGuildMemberUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawGuildMemberUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.GuildMemberUpdateData]", "kind" : "val"}, {"label" : "guildMemberUpdater", "tail" : ": CacheUpdater[GuildMember]", "member" : "ackcord.cachehandlers.CacheHandlers.guildMemberUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildMemberUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.GuildMember]", "kind" : "val"}, {"label" : "rawGuildMemberWithGuildUpdater", "tail" : ": CacheUpdater[RawGuildMemberWithGuild]", "member" : "ackcord.cachehandlers.CacheHandlers.rawGuildMemberWithGuildUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawGuildMemberWithGuildUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.RawGuildMemberWithGuild]", "kind" : "val"}, {"label" : "guildEmojisUpdater", "tail" : ": CacheUpdater[GuildEmojisUpdateData]", "member" : "ackcord.cachehandlers.CacheHandlers.guildEmojisUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildEmojisUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.gateway.GatewayEvent.GuildEmojisUpdateData]", "kind" : "val"}, {"label" : "rawBanUpdater", "tail" : ": CacheUpdater[(GuildId, RawBan)]", "member" : "ackcord.cachehandlers.CacheHandlers.rawBanUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawBanUpdater:ackcord.cachehandlers.CacheUpdater[(ackcord.data.GuildId,ackcord.data.raw.RawBan)]", "kind" : "val"}, {"label" : "rawGuildUpdater", "tail" : ": CacheUpdater[RawGuild]", "member" : "ackcord.cachehandlers.CacheHandlers.rawGuildUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawGuildUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.raw.RawGuild]", "kind" : "val"}, {"label" : "dmGroupChannelUpdater", "tail" : ": CacheUpdater[GroupDMChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.dmGroupChannelUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#dmGroupChannelUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.GroupDMChannel]", "kind" : "val"}, {"label" : "dmChannelUpdater", "tail" : ": CacheUpdater[DMChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.dmChannelUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#dmChannelUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.DMChannel]", "kind" : "val"}, {"label" : "guildChannelUpdater", "tail" : ": CacheUpdater[GuildChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.guildChannelUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#guildChannelUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.GuildChannel]", "kind" : "val"}, {"label" : "rawChannelUpdater", "tail" : ": CacheUpdater[RawChannel]", "member" : "ackcord.cachehandlers.CacheHandlers.rawChannelUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#rawChannelUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.raw.RawChannel]", "kind" : "val"}, {"label" : "partialUserUpdater", "tail" : ": CacheUpdater[PartialUser]", "member" : "ackcord.cachehandlers.CacheHandlers.partialUserUpdater", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#partialUserUpdater:ackcord.cachehandlers.CacheUpdater[ackcord.data.raw.PartialUser]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheHandlers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.cachehandlers.CacheSnapshotBuilder", "shortDescription" : "A mutable builder for creating a new snapshot", "object" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html", "members_class" : [{"label" : "copy", "tail" : "(): CacheSnapshotBuilder", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.copy", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#copy:ackcord.cachehandlers.CacheSnapshotBuilder", "kind" : "def"}, {"label" : "getGuildBans", "tail" : "(id: GuildId): SnowflakeMap[User, Ban]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.getGuildBans", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGuildBans(id:ackcord.data.GuildId):ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.Ban]", "kind" : "def"}, {"label" : "getChannelLastTyped", "tail" : "(channelId: TextChannelId): SnowflakeMap[User, Instant]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.getChannelLastTyped", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getChannelLastTyped(channelId:ackcord.data.TextChannelId):ackcord.SnowflakeMap[ackcord.data.User,java.time.Instant]", "kind" : "def"}, {"label" : "getChannelMessages", "tail" : "(channelId: TextChannelId): SnowflakeMap[Message, Message]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.getChannelMessages", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getChannelMessages(channelId:ackcord.data.TextChannelId):ackcord.SnowflakeMap[ackcord.data.Message,ackcord.data.Message]", "kind" : "def"}, {"label" : "toImmutable", "tail" : "(): MemoryCacheSnapshot", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.toImmutable", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#toImmutable:ackcord.MemoryCacheSnapshot", "kind" : "def"}, {"label" : "executeProcessor", "tail" : "(): Unit", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.executeProcessor", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#executeProcessor():Unit", "kind" : "def"}, {"label" : "MapType", "tail" : "", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.MapType", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#MapType[K,V]=ackcord.SnowflakeMap[K,V]", "kind" : "type"}, {"member" : "ackcord.cachehandlers.CacheSnapshotBuilder#<init>", "error" : "unsupported entity"}, {"label" : "processor", "tail" : ": CacheProcessor", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.processor", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#processor:ackcord.MemoryCacheSnapshot.CacheProcessor", "kind" : "var"}, {"label" : "banMap", "tail" : ": SnowflakeMap[Guild, SnowflakeMap[User, Ban]]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.banMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#banMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.Ban]]", "kind" : "var"}, {"label" : "userMap", "tail" : ": SnowflakeMap[User, User]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.userMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#userMap:ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.User]", "kind" : "var"}, {"label" : "lastTypedMap", "tail" : ": SnowflakeMap[TextChannel, SnowflakeMap[User, Instant]]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.lastTypedMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#lastTypedMap:ackcord.SnowflakeMap[ackcord.data.TextChannel,ackcord.SnowflakeMap[ackcord.data.User,java.time.Instant]]", "kind" : "var"}, {"label" : "messageMap", "tail" : ": SnowflakeMap[TextChannel, SnowflakeMap[Message, Message]]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.messageMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#messageMap:ackcord.SnowflakeMap[ackcord.data.TextChannel,ackcord.SnowflakeMap[ackcord.data.Message,ackcord.data.Message]]", "kind" : "var"}, {"label" : "guildMap", "tail" : ": SnowflakeMap[Guild, Guild]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.guildMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#guildMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.data.Guild]", "kind" : "var"}, {"label" : "unavailableGuildMap", "tail" : ": SnowflakeMap[Guild, UnavailableGuild]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.unavailableGuildMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#unavailableGuildMap:ackcord.SnowflakeMap[ackcord.data.Guild,ackcord.data.UnavailableGuild]", "kind" : "var"}, {"label" : "groupDmChannelMap", "tail" : ": SnowflakeMap[GroupDMChannel, GroupDMChannel]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.groupDmChannelMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#groupDmChannelMap:ackcord.SnowflakeMap[ackcord.data.GroupDMChannel,ackcord.data.GroupDMChannel]", "kind" : "var"}, {"label" : "dmChannelMap", "tail" : ": SnowflakeMap[DMChannel, DMChannel]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.dmChannelMap", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#dmChannelMap:ackcord.SnowflakeMap[ackcord.data.DMChannel,ackcord.data.DMChannel]", "kind" : "var"}, {"label" : "botUser", "tail" : ": @@[User, BotUser]", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.botUser", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#botUser:ackcord.data.User@@ackcord.CacheSnapshot.BotUser", "kind" : "var"}, {"label" : "getPresence", "tail" : "(guildId: GuildId, userId: UserId): Option[Presence]", "member" : "ackcord.CacheSnapshotWithMaps.getPresence", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getPresence(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Presence]", "kind" : "def"}, {"label" : "getBan", "tail" : "(guildId: GuildId, userId: UserId): Option[Ban]", "member" : "ackcord.CacheSnapshotWithMaps.getBan", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getBan(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId):Option[ackcord.data.Ban]", "kind" : "def"}, {"label" : "getUser", "tail" : "(id: UserId): Option[User]", "member" : "ackcord.CacheSnapshotWithMaps.getUser", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getUser(id:ackcord.data.UserId):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "getLastTyped", "tail" : "(channelId: TextChannelId, userId: UserId): Option[Instant]", "member" : "ackcord.CacheSnapshotWithMaps.getLastTyped", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getLastTyped(channelId:ackcord.data.TextChannelId,userId:ackcord.data.UserId):Option[java.time.Instant]", "kind" : "def"}, {"label" : "getEmoji", "tail" : "(id: EmojiId): Option[Emoji]", "member" : "ackcord.CacheSnapshotWithMaps.getEmoji", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getEmoji(id:ackcord.data.EmojiId):Option[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "getRole", "tail" : "(guildId: GuildId, roleId: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getRole(guildId:ackcord.data.GuildId,roleId:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getRole", "tail" : "(id: RoleId): Option[Role]", "member" : "ackcord.CacheSnapshotWithMaps.getRole", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getRole(id:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "getTextChannel", "tail" : "(id: TextChannelId): Option[TextChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getTextChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getTextChannel(id:ackcord.data.TextChannelId):Option[ackcord.data.TextChannel]", "kind" : "def"}, {"label" : "getChannel", "tail" : "(id: ChannelId): Option[Channel]", "member" : "ackcord.CacheSnapshotWithMaps.getChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getChannel(id:ackcord.data.ChannelId):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGuildChannel(id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getGuildChannel", "tail" : "(guildId: GuildId, id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGuildChannel(guildId:ackcord.data.GuildId,id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getMessage(messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(channelId: TextChannelId, messageId: MessageId): Option[Message]", "member" : "ackcord.CacheSnapshotWithMaps.getMessage", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getMessage(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "getGuildWithUnavailable", "tail" : "(id: GuildId): Option[UnknownStatusGuild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuildWithUnavailable", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGuildWithUnavailable(id:ackcord.data.GuildId):Option[ackcord.data.UnknownStatusGuild]", "kind" : "def"}, {"label" : "getGuild", "tail" : "(id: GuildId): Option[Guild]", "member" : "ackcord.CacheSnapshotWithMaps.getGuild", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGuild(id:ackcord.data.GuildId):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "getGroupDmChannel", "tail" : "(id: SnowflakeType[GroupDMChannel]): Option[GroupDMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getGroupDmChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getGroupDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.GroupDMChannel]):Option[ackcord.data.GroupDMChannel]", "kind" : "def"}, {"label" : "getUserDmChannel", "tail" : "(id: UserId): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getUserDmChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getUserDmChannel(id:ackcord.data.UserId):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "getDmChannel", "tail" : "(id: SnowflakeType[DMChannel]): Option[DMChannel]", "member" : "ackcord.CacheSnapshotWithMaps.getDmChannel", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getDmChannel(id:ackcord.data.SnowflakeType[ackcord.data.DMChannel]):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(snapshot: MemoryCacheSnapshot): CacheSnapshotBuilder", "member" : "ackcord.cachehandlers.CacheSnapshotBuilder.apply", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#apply(snapshot:ackcord.MemoryCacheSnapshot):ackcord.cachehandlers.CacheSnapshotBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheSnapshotBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/cachehandlers\/CacheSnapshotBuilder.html", "kind" : "class"}, {"name" : "ackcord.cachehandlers.CacheTypeRegistry", "shortDescription" : "", "object" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html", "members_class" : [{"label" : "hasDeleter", "tail" : "(arg0: ClassTag[D]): Boolean", "member" : "ackcord.cachehandlers.CacheTypeRegistry.hasDeleter", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#hasDeleter[D](implicitevidence$7:scala.reflect.ClassTag[D]):Boolean", "kind" : "def"}, {"label" : "hasUpdater", "tail" : "(arg0: ClassTag[D]): Boolean", "member" : "ackcord.cachehandlers.CacheTypeRegistry.hasUpdater", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#hasUpdater[D](implicitevidence$6:scala.reflect.ClassTag[D]):Boolean", "kind" : "def"}, {"label" : "getDeleter", "tail" : "(arg0: ClassTag[D]): Option[CacheDeleter[D]]", "member" : "ackcord.cachehandlers.CacheTypeRegistry.getDeleter", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#getDeleter[D](implicitevidence$5:scala.reflect.ClassTag[D]):Option[ackcord.cachehandlers.CacheDeleter[D]]", "kind" : "def"}, {"label" : "getUpdater", "tail" : "(arg0: ClassTag[D]): Option[CacheUpdater[D]]", "member" : "ackcord.cachehandlers.CacheTypeRegistry.getUpdater", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#getUpdater[D](implicitevidence$4:scala.reflect.ClassTag[D]):Option[ackcord.cachehandlers.CacheUpdater[D]]", "kind" : "def"}, {"label" : "deleteData", "tail" : "(builder: CacheSnapshotBuilder)(data: => D)(arg0: ClassTag[D]): Unit", "member" : "ackcord.cachehandlers.CacheTypeRegistry.deleteData", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#deleteData[D](builder:ackcord.cachehandlers.CacheSnapshotBuilder)(data:=>D)(implicitevidence$3:scala.reflect.ClassTag[D]):Unit", "kind" : "def"}, {"label" : "updateData", "tail" : "(builder: CacheSnapshotBuilder)(data: => D)(arg0: ClassTag[D]): Unit", "member" : "ackcord.cachehandlers.CacheTypeRegistry.updateData", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#updateData[D](builder:ackcord.cachehandlers.CacheSnapshotBuilder)(data:=>D)(implicitevidence$2:scala.reflect.ClassTag[D]):Unit", "kind" : "def"}, {"member" : "ackcord.cachehandlers.CacheTypeRegistry#<init>", "error" : "unsupported entity"}, {"label" : "deleteHandlers", "tail" : ": Map[Class[_], CacheDeleter[_]]", "member" : "ackcord.cachehandlers.CacheTypeRegistry.deleteHandlers", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#deleteHandlers:Map[Class[_],ackcord.cachehandlers.CacheDeleter[_]]", "kind" : "val"}, {"label" : "updateHandlers", "tail" : ": Map[Class[_], CacheUpdater[_]]", "member" : "ackcord.cachehandlers.CacheTypeRegistry.updateHandlers", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#updateHandlers:Map[Class[_],ackcord.cachehandlers.CacheUpdater[_]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "noPresencesBansEmoji", "tail" : "(log: Logger): CacheTypeRegistry", "member" : "ackcord.cachehandlers.CacheTypeRegistry.noPresencesBansEmoji", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#noPresencesBansEmoji(log:org.slf4j.Logger):ackcord.cachehandlers.CacheTypeRegistry", "kind" : "def"}, {"label" : "noPresences", "tail" : "(log: Logger): CacheTypeRegistry", "member" : "ackcord.cachehandlers.CacheTypeRegistry.noPresences", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#noPresences(log:org.slf4j.Logger):ackcord.cachehandlers.CacheTypeRegistry", "kind" : "def"}, {"label" : "default", "tail" : "(log: Logger): CacheTypeRegistry", "member" : "ackcord.cachehandlers.CacheTypeRegistry.default", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#default(log:org.slf4j.Logger):ackcord.cachehandlers.CacheTypeRegistry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheTypeRegistry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/cachehandlers\/CacheTypeRegistry.html", "kind" : "class"}, {"name" : "ackcord.cachehandlers.CacheUpdater", "object" : "ackcord\/cachehandlers\/CacheUpdater$.html", "members_object" : [{"label" : "dummy", "tail" : "(shouldBeIgnored: Boolean): CacheUpdater[Obj]", "member" : "ackcord.cachehandlers.CacheUpdater.dummy", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#dummy[Obj](shouldBeIgnored:Boolean):ackcord.cachehandlers.CacheUpdater[Obj]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheUpdater$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/cachehandlers\/CacheUpdater.html", "kind" : "trait", "members_trait" : [{"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/CacheUpdater.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: Obj, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.CacheHandler.handle", "link" : "ackcord\/cachehandlers\/CacheUpdater.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:Obj,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "abstract def"}], "shortDescription" : "A CacheHandler for updates."}, {"name" : "ackcord.cachehandlers.NOOPHandler", "shortDescription" : "A handler that takes no action", "object" : "ackcord\/cachehandlers\/NOOPHandler$.html", "members_object" : [{"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: Any, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.NOOPHandler.handle", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:Any,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/NOOPHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.cachehandlers.PresenceUpdater", "shortDescription" : "", "object" : "ackcord\/cachehandlers\/PresenceUpdater$.html", "members_object" : [{"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: PresenceUpdateData, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.PresenceUpdater.handle", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:ackcord.gateway.GatewayEvent.PresenceUpdateData,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/PresenceUpdater$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.cachehandlers.ReadyUpdater", "shortDescription" : "", "object" : "ackcord\/cachehandlers\/ReadyUpdater$.html", "members_object" : [{"label" : "handle", "tail" : "(builder: CacheSnapshotBuilder, obj: ReadyData, registry: CacheTypeRegistry)(log: Logger): Unit", "member" : "ackcord.cachehandlers.ReadyUpdater.handle", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#handle(builder:ackcord.cachehandlers.CacheSnapshotBuilder,obj:ackcord.gateway.GatewayEvent.ReadyData,registry:ackcord.cachehandlers.CacheTypeRegistry)(implicitlog:org.slf4j.Logger):Unit", "kind" : "def"}, {"label" : "ignore", "tail" : "(): Boolean", "member" : "ackcord.cachehandlers.CacheHandler.ignore", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#ignore:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/cachehandlers\/ReadyUpdater$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ackcord.data.raw" : [{"name" : "ackcord.data.raw.PartialRawGuildMember", "shortDescription" : "Represents a user in a guild, without the user field.", "members_case class" : [{"label" : "toGuildMember", "tail" : "(userId: UserId, guildId: GuildId): GuildMember", "member" : "ackcord.data.raw.PartialRawGuildMember.toGuildMember", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#toGuildMember(userId:ackcord.data.UserId,guildId:ackcord.data.GuildId):ackcord.data.GuildMember", "kind" : "def"}, {"member" : "ackcord.data.raw.PartialRawGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "mute", "tail" : ": Boolean", "member" : "ackcord.data.raw.PartialRawGuildMember.mute", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#mute:Boolean", "kind" : "val"}, {"label" : "deaf", "tail" : ": Boolean", "member" : "ackcord.data.raw.PartialRawGuildMember.deaf", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#deaf:Boolean", "kind" : "val"}, {"label" : "premiumSince", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.raw.PartialRawGuildMember.premiumSince", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#premiumSince:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "joinedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.raw.PartialRawGuildMember.joinedAt", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#joinedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.raw.PartialRawGuildMember.roles", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "nick", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialRawGuildMember.nick", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#nick:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/PartialRawGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/PartialRawGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.PartialUser", "shortDescription" : "A user where fields can be missing.", "members_case class" : [{"member" : "ackcord.data.raw.PartialUser#<init>", "error" : "unsupported entity"}, {"label" : "publicFlags", "tail" : ": Option[UserFlags]", "member" : "ackcord.data.raw.PartialUser.publicFlags", "link" : "ackcord\/data\/raw\/PartialUser.html#publicFlags:Option[ackcord.data.UserFlags]", "kind" : "val"}, {"label" : "premiumType", "tail" : ": Option[PremiumType]", "member" : "ackcord.data.raw.PartialUser.premiumType", "link" : "ackcord\/data\/raw\/PartialUser.html#premiumType:Option[ackcord.data.PremiumType]", "kind" : "val"}, {"label" : "flags", "tail" : ": Option[UserFlags]", "member" : "ackcord.data.raw.PartialUser.flags", "link" : "ackcord\/data\/raw\/PartialUser.html#flags:Option[ackcord.data.UserFlags]", "kind" : "val"}, {"label" : "email", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialUser.email", "link" : "ackcord\/data\/raw\/PartialUser.html#email:Option[String]", "kind" : "val"}, {"label" : "verified", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.PartialUser.verified", "link" : "ackcord\/data\/raw\/PartialUser.html#verified:Option[Boolean]", "kind" : "val"}, {"label" : "locale", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialUser.locale", "link" : "ackcord\/data\/raw\/PartialUser.html#locale:Option[String]", "kind" : "val"}, {"label" : "mfaEnabled", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.PartialUser.mfaEnabled", "link" : "ackcord\/data\/raw\/PartialUser.html#mfaEnabled:Option[Boolean]", "kind" : "val"}, {"label" : "system", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.PartialUser.system", "link" : "ackcord\/data\/raw\/PartialUser.html#system:Option[Boolean]", "kind" : "val"}, {"label" : "bot", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.PartialUser.bot", "link" : "ackcord\/data\/raw\/PartialUser.html#bot:Option[Boolean]", "kind" : "val"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialUser.avatar", "link" : "ackcord\/data\/raw\/PartialUser.html#avatar:Option[String]", "kind" : "val"}, {"label" : "discriminator", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialUser.discriminator", "link" : "ackcord\/data\/raw\/PartialUser.html#discriminator:Option[String]", "kind" : "val"}, {"label" : "username", "tail" : ": Option[String]", "member" : "ackcord.data.raw.PartialUser.username", "link" : "ackcord\/data\/raw\/PartialUser.html#username:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": UserId", "member" : "ackcord.data.raw.PartialUser.id", "link" : "ackcord\/data\/raw\/PartialUser.html#id:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/PartialUser.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/PartialUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/PartialUser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/PartialUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/PartialUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/PartialUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/PartialUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/PartialUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/PartialUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/PartialUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/PartialUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/PartialUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/PartialUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/PartialUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/PartialUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/PartialUser.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawActivity", "shortDescription" : "The content of a presence.", "members_case class" : [{"label" : "toActivity", "tail" : "(): Either[String, Activity]", "member" : "ackcord.data.raw.RawActivity.toActivity", "link" : "ackcord\/data\/raw\/RawActivity.html#toActivity:Either[String,ackcord.data.Activity]", "kind" : "def"}, {"label" : "requireCanSend", "tail" : "(): Unit", "member" : "ackcord.data.raw.RawActivity.requireCanSend", "link" : "ackcord\/data\/raw\/RawActivity.html#requireCanSend():Unit", "kind" : "def"}, {"member" : "ackcord.data.raw.RawActivity#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.raw.RawActivity.assets", "link" : "ackcord\/data\/raw\/RawActivity.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "party", "tail" : ": Option[RawActivityParty]", "member" : "ackcord.data.raw.RawActivity.party", "link" : "ackcord\/data\/raw\/RawActivity.html#party:Option[ackcord.data.raw.RawActivityParty]", "kind" : "val"}, {"label" : "emoji", "tail" : ": Option[ActivityEmoji]", "member" : "ackcord.data.raw.RawActivity.emoji", "link" : "ackcord\/data\/raw\/RawActivity.html#emoji:Option[ackcord.data.ActivityEmoji]", "kind" : "val"}, {"label" : "state", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawActivity.state", "link" : "ackcord\/data\/raw\/RawActivity.html#state:Option[String]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawActivity.details", "link" : "ackcord\/data\/raw\/RawActivity.html#details:Option[String]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.raw.RawActivity.applicationId", "link" : "ackcord\/data\/raw\/RawActivity.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.raw.RawActivity.timestamps", "link" : "ackcord\/data\/raw\/RawActivity.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.raw.RawActivity.createdAt", "link" : "ackcord\/data\/raw\/RawActivity.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawActivity.url", "link" : "ackcord\/data\/raw\/RawActivity.html#url:Option[String]", "kind" : "val"}, {"label" : "type", "tail" : ": Int", "member" : "ackcord.data.raw.RawActivity.type", "link" : "ackcord\/data\/raw\/RawActivity.html#type:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.raw.RawActivity.name", "link" : "ackcord\/data\/raw\/RawActivity.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawActivity.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawActivity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawActivity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawActivity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawActivity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawActivity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawActivity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawActivity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawActivity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawActivity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawActivity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawActivity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawActivity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawActivity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawActivity.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawActivityParty", "shortDescription" : "", "members_case class" : [{"label" : "toParty", "tail" : "(): ActivityParty", "member" : "ackcord.data.raw.RawActivityParty.toParty", "link" : "ackcord\/data\/raw\/RawActivityParty.html#toParty:ackcord.data.ActivityParty", "kind" : "def"}, {"member" : "ackcord.data.raw.RawActivityParty#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": Option[Seq[Int]]", "member" : "ackcord.data.raw.RawActivityParty.size", "link" : "ackcord\/data\/raw\/RawActivityParty.html#size:Option[Seq[Int]]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawActivityParty.id", "link" : "ackcord\/data\/raw\/RawActivityParty.html#id:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawActivityParty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawActivityParty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawActivityParty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawActivityParty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawActivityParty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawActivityParty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawActivityParty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawActivityParty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivityParty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivityParty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawActivityParty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawActivityParty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawActivityParty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawActivityParty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawActivityParty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawActivityParty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawActivityParty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawActivityParty.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawBan", "shortDescription" : "A raw ban before going through the cache.", "members_case class" : [{"label" : "toBan", "tail" : "(): Ban", "member" : "ackcord.data.raw.RawBan.toBan", "link" : "ackcord\/data\/raw\/RawBan.html#toBan:ackcord.data.Ban", "kind" : "def"}, {"member" : "ackcord.data.raw.RawBan#<init>", "error" : "unsupported entity"}, {"label" : "user", "tail" : ": User", "member" : "ackcord.data.raw.RawBan.user", "link" : "ackcord\/data\/raw\/RawBan.html#user:ackcord.data.User", "kind" : "val"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawBan.reason", "link" : "ackcord\/data\/raw\/RawBan.html#reason:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawBan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawBan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawBan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawBan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawBan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawBan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawBan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawBan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawBan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawBan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawBan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawBan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawBan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawBan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawBan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawBan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawBan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawBan.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawChannel", "shortDescription" : "A raw channel before going through the cache.", "members_case class" : [{"label" : "toGuildChannel", "tail" : "(guildId: GuildId): Option[GuildChannel]", "member" : "ackcord.data.raw.RawChannel.toGuildChannel", "link" : "ackcord\/data\/raw\/RawChannel.html#toGuildChannel(guildId:ackcord.data.GuildId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "toChannel", "tail" : "(): Option[Channel]", "member" : "ackcord.data.raw.RawChannel.toChannel", "link" : "ackcord\/data\/raw\/RawChannel.html#toChannel:Option[ackcord.data.Channel]", "kind" : "def"}, {"member" : "ackcord.data.raw.RawChannel#<init>", "error" : "unsupported entity"}, {"label" : "lastPinTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.raw.RawChannel.lastPinTimestamp", "link" : "ackcord\/data\/raw\/RawChannel.html#lastPinTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.raw.RawChannel.parentId", "link" : "ackcord\/data\/raw\/RawChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.raw.RawChannel.applicationId", "link" : "ackcord\/data\/raw\/RawChannel.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "ownerId", "tail" : ": Option[UserId]", "member" : "ackcord.data.raw.RawChannel.ownerId", "link" : "ackcord\/data\/raw\/RawChannel.html#ownerId:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawChannel.icon", "link" : "ackcord\/data\/raw\/RawChannel.html#icon:Option[String]", "kind" : "val"}, {"label" : "recipients", "tail" : ": Option[Seq[User]]", "member" : "ackcord.data.raw.RawChannel.recipients", "link" : "ackcord\/data\/raw\/RawChannel.html#recipients:Option[Seq[ackcord.data.User]]", "kind" : "val"}, {"label" : "rateLimitPerUser", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawChannel.rateLimitPerUser", "link" : "ackcord\/data\/raw\/RawChannel.html#rateLimitPerUser:Option[Int]", "kind" : "val"}, {"label" : "userLimit", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawChannel.userLimit", "link" : "ackcord\/data\/raw\/RawChannel.html#userLimit:Option[Int]", "kind" : "val"}, {"label" : "bitrate", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawChannel.bitrate", "link" : "ackcord\/data\/raw\/RawChannel.html#bitrate:Option[Int]", "kind" : "val"}, {"label" : "lastMessageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.raw.RawChannel.lastMessageId", "link" : "ackcord\/data\/raw\/RawChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawChannel.nsfw", "link" : "ackcord\/data\/raw\/RawChannel.html#nsfw:Option[Boolean]", "kind" : "val"}, {"label" : "topic", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawChannel.topic", "link" : "ackcord\/data\/raw\/RawChannel.html#topic:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawChannel.name", "link" : "ackcord\/data\/raw\/RawChannel.html#name:Option[String]", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": Option[Seq[PermissionOverwrite]]", "member" : "ackcord.data.raw.RawChannel.permissionOverwrites", "link" : "ackcord\/data\/raw\/RawChannel.html#permissionOverwrites:Option[Seq[ackcord.data.PermissionOverwrite]]", "kind" : "val"}, {"label" : "position", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawChannel.position", "link" : "ackcord\/data\/raw\/RawChannel.html#position:Option[Int]", "kind" : "val"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.raw.RawChannel.guildId", "link" : "ackcord\/data\/raw\/RawChannel.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "type", "tail" : ": ChannelType", "member" : "ackcord.data.raw.RawChannel.type", "link" : "ackcord\/data\/raw\/RawChannel.html#type:ackcord.data.ChannelType", "kind" : "val"}, {"label" : "id", "tail" : ": ChannelId", "member" : "ackcord.data.raw.RawChannel.id", "link" : "ackcord\/data\/raw\/RawChannel.html#id:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawEmoji", "shortDescription" : "A raw emoji before going through the cache.", "members_case class" : [{"label" : "toEmoji", "tail" : "(): Emoji", "member" : "ackcord.data.raw.RawEmoji.toEmoji", "link" : "ackcord\/data\/raw\/RawEmoji.html#toEmoji:ackcord.data.Emoji", "kind" : "def"}, {"member" : "ackcord.data.raw.RawEmoji#<init>", "error" : "unsupported entity"}, {"label" : "available", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawEmoji.available", "link" : "ackcord\/data\/raw\/RawEmoji.html#available:Option[Boolean]", "kind" : "val"}, {"label" : "animated", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawEmoji.animated", "link" : "ackcord\/data\/raw\/RawEmoji.html#animated:Option[Boolean]", "kind" : "val"}, {"label" : "managed", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawEmoji.managed", "link" : "ackcord\/data\/raw\/RawEmoji.html#managed:Option[Boolean]", "kind" : "val"}, {"label" : "requireColons", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawEmoji.requireColons", "link" : "ackcord\/data\/raw\/RawEmoji.html#requireColons:Option[Boolean]", "kind" : "val"}, {"label" : "user", "tail" : ": Option[User]", "member" : "ackcord.data.raw.RawEmoji.user", "link" : "ackcord\/data\/raw\/RawEmoji.html#user:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.raw.RawEmoji.roles", "link" : "ackcord\/data\/raw\/RawEmoji.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.raw.RawEmoji.name", "link" : "ackcord\/data\/raw\/RawEmoji.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": EmojiId", "member" : "ackcord.data.raw.RawEmoji.id", "link" : "ackcord\/data\/raw\/RawEmoji.html#id:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawEmoji.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawGuild", "shortDescription" : "A raw guild before going through the cache.", "members_case class" : [{"label" : "toGuild", "tail" : "(): Option[Guild]", "member" : "ackcord.data.raw.RawGuild.toGuild", "link" : "ackcord\/data\/raw\/RawGuild.html#toGuild:Option[ackcord.data.Guild]", "kind" : "def"}, {"member" : "ackcord.data.raw.RawGuild#<init>", "error" : "unsupported entity"}, {"label" : "approximatePresenceCount", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.approximatePresenceCount", "link" : "ackcord\/data\/raw\/RawGuild.html#approximatePresenceCount:Option[Int]", "kind" : "val"}, {"label" : "approximateMemberCount", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.approximateMemberCount", "link" : "ackcord\/data\/raw\/RawGuild.html#approximateMemberCount:Option[Int]", "kind" : "val"}, {"label" : "maxVideoChannelUsers", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.maxVideoChannelUsers", "link" : "ackcord\/data\/raw\/RawGuild.html#maxVideoChannelUsers:Option[Int]", "kind" : "val"}, {"label" : "publicUpdatesChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.raw.RawGuild.publicUpdatesChannelId", "link" : "ackcord\/data\/raw\/RawGuild.html#publicUpdatesChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "preferredLocale", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.preferredLocale", "link" : "ackcord\/data\/raw\/RawGuild.html#preferredLocale:Option[String]", "kind" : "val"}, {"label" : "premiumSubscriptionCount", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.premiumSubscriptionCount", "link" : "ackcord\/data\/raw\/RawGuild.html#premiumSubscriptionCount:Option[Int]", "kind" : "val"}, {"label" : "premiumTier", "tail" : ": PremiumTier", "member" : "ackcord.data.raw.RawGuild.premiumTier", "link" : "ackcord\/data\/raw\/RawGuild.html#premiumTier:ackcord.data.PremiumTier", "kind" : "val"}, {"label" : "banner", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.banner", "link" : "ackcord\/data\/raw\/RawGuild.html#banner:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.description", "link" : "ackcord\/data\/raw\/RawGuild.html#description:Option[String]", "kind" : "val"}, {"label" : "vanityUrlCode", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.vanityUrlCode", "link" : "ackcord\/data\/raw\/RawGuild.html#vanityUrlCode:Option[String]", "kind" : "val"}, {"label" : "maxMembers", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.maxMembers", "link" : "ackcord\/data\/raw\/RawGuild.html#maxMembers:Option[Int]", "kind" : "val"}, {"label" : "maxPresences", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.maxPresences", "link" : "ackcord\/data\/raw\/RawGuild.html#maxPresences:Option[Int]", "kind" : "val"}, {"label" : "presences", "tail" : ": Option[Seq[RawPresence]]", "member" : "ackcord.data.raw.RawGuild.presences", "link" : "ackcord\/data\/raw\/RawGuild.html#presences:Option[Seq[ackcord.data.raw.RawPresence]]", "kind" : "val"}, {"label" : "channels", "tail" : ": Option[Seq[RawChannel]]", "member" : "ackcord.data.raw.RawGuild.channels", "link" : "ackcord\/data\/raw\/RawGuild.html#channels:Option[Seq[ackcord.data.raw.RawChannel]]", "kind" : "val"}, {"label" : "members", "tail" : ": Option[Seq[RawGuildMember]]", "member" : "ackcord.data.raw.RawGuild.members", "link" : "ackcord\/data\/raw\/RawGuild.html#members:Option[Seq[ackcord.data.raw.RawGuildMember]]", "kind" : "val"}, {"label" : "voiceStates", "tail" : ": Option[Seq[VoiceState]]", "member" : "ackcord.data.raw.RawGuild.voiceStates", "link" : "ackcord\/data\/raw\/RawGuild.html#voiceStates:Option[Seq[ackcord.data.VoiceState]]", "kind" : "val"}, {"label" : "memberCount", "tail" : ": Option[Int]", "member" : "ackcord.data.raw.RawGuild.memberCount", "link" : "ackcord\/data\/raw\/RawGuild.html#memberCount:Option[Int]", "kind" : "val"}, {"label" : "unavailable", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawGuild.unavailable", "link" : "ackcord\/data\/raw\/RawGuild.html#unavailable:Option[Boolean]", "kind" : "val"}, {"label" : "large", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawGuild.large", "link" : "ackcord\/data\/raw\/RawGuild.html#large:Option[Boolean]", "kind" : "val"}, {"label" : "joinedAt", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.raw.RawGuild.joinedAt", "link" : "ackcord\/data\/raw\/RawGuild.html#joinedAt:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "rulesChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.raw.RawGuild.rulesChannelId", "link" : "ackcord\/data\/raw\/RawGuild.html#rulesChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "systemChannelFlags", "tail" : ": SystemChannelFlags", "member" : "ackcord.data.raw.RawGuild.systemChannelFlags", "link" : "ackcord\/data\/raw\/RawGuild.html#systemChannelFlags:ackcord.data.SystemChannelFlags", "kind" : "val"}, {"label" : "systemChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.raw.RawGuild.systemChannelId", "link" : "ackcord\/data\/raw\/RawGuild.html#systemChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "widgetChannelId", "tail" : ": Option[GuildChannelId]", "member" : "ackcord.data.raw.RawGuild.widgetChannelId", "link" : "ackcord\/data\/raw\/RawGuild.html#widgetChannelId:Option[ackcord.data.GuildChannelId]", "kind" : "val"}, {"label" : "widgetEnabled", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawGuild.widgetEnabled", "link" : "ackcord\/data\/raw\/RawGuild.html#widgetEnabled:Option[Boolean]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.raw.RawGuild.applicationId", "link" : "ackcord\/data\/raw\/RawGuild.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "mfaLevel", "tail" : ": MFALevel", "member" : "ackcord.data.raw.RawGuild.mfaLevel", "link" : "ackcord\/data\/raw\/RawGuild.html#mfaLevel:ackcord.data.MFALevel", "kind" : "val"}, {"label" : "features", "tail" : ": Seq[GuildFeature]", "member" : "ackcord.data.raw.RawGuild.features", "link" : "ackcord\/data\/raw\/RawGuild.html#features:Seq[ackcord.data.GuildFeature]", "kind" : "val"}, {"label" : "emojis", "tail" : ": Seq[RawEmoji]", "member" : "ackcord.data.raw.RawGuild.emojis", "link" : "ackcord\/data\/raw\/RawGuild.html#emojis:Seq[ackcord.data.raw.RawEmoji]", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RawRole]", "member" : "ackcord.data.raw.RawGuild.roles", "link" : "ackcord\/data\/raw\/RawGuild.html#roles:Seq[ackcord.data.raw.RawRole]", "kind" : "val"}, {"label" : "explicitContentFilter", "tail" : ": FilterLevel", "member" : "ackcord.data.raw.RawGuild.explicitContentFilter", "link" : "ackcord\/data\/raw\/RawGuild.html#explicitContentFilter:ackcord.data.FilterLevel", "kind" : "val"}, {"label" : "defaultMessageNotifications", "tail" : ": NotificationLevel", "member" : "ackcord.data.raw.RawGuild.defaultMessageNotifications", "link" : "ackcord\/data\/raw\/RawGuild.html#defaultMessageNotifications:ackcord.data.NotificationLevel", "kind" : "val"}, {"label" : "verificationLevel", "tail" : ": VerificationLevel", "member" : "ackcord.data.raw.RawGuild.verificationLevel", "link" : "ackcord\/data\/raw\/RawGuild.html#verificationLevel:ackcord.data.VerificationLevel", "kind" : "val"}, {"label" : "afkTimeout", "tail" : ": Int", "member" : "ackcord.data.raw.RawGuild.afkTimeout", "link" : "ackcord\/data\/raw\/RawGuild.html#afkTimeout:Int", "kind" : "val"}, {"label" : "afkChannelId", "tail" : ": Option[VoiceGuildChannelId]", "member" : "ackcord.data.raw.RawGuild.afkChannelId", "link" : "ackcord\/data\/raw\/RawGuild.html#afkChannelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "region", "tail" : ": String", "member" : "ackcord.data.raw.RawGuild.region", "link" : "ackcord\/data\/raw\/RawGuild.html#region:String", "kind" : "val"}, {"label" : "permissions", "tail" : ": Option[Permission]", "member" : "ackcord.data.raw.RawGuild.permissions", "link" : "ackcord\/data\/raw\/RawGuild.html#permissions:Option[ackcord.data.Permission]", "kind" : "val"}, {"label" : "ownerId", "tail" : ": UserId", "member" : "ackcord.data.raw.RawGuild.ownerId", "link" : "ackcord\/data\/raw\/RawGuild.html#ownerId:ackcord.data.UserId", "kind" : "val"}, {"label" : "owner", "tail" : ": Option[Boolean]", "member" : "ackcord.data.raw.RawGuild.owner", "link" : "ackcord\/data\/raw\/RawGuild.html#owner:Option[Boolean]", "kind" : "val"}, {"label" : "discoverySplash", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.discoverySplash", "link" : "ackcord\/data\/raw\/RawGuild.html#discoverySplash:Option[String]", "kind" : "val"}, {"label" : "splash", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.splash", "link" : "ackcord\/data\/raw\/RawGuild.html#splash:Option[String]", "kind" : "val"}, {"label" : "iconHash", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.iconHash", "link" : "ackcord\/data\/raw\/RawGuild.html#iconHash:Option[String]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuild.icon", "link" : "ackcord\/data\/raw\/RawGuild.html#icon:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.raw.RawGuild.name", "link" : "ackcord\/data\/raw\/RawGuild.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.raw.RawGuild.id", "link" : "ackcord\/data\/raw\/RawGuild.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawGuild.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawGuildMember", "shortDescription" : "Represents a user in a guild.", "members_case class" : [{"label" : "toGuildMember", "tail" : "(guildId: GuildId): GuildMember", "member" : "ackcord.data.raw.RawGuildMember.toGuildMember", "link" : "ackcord\/data\/raw\/RawGuildMember.html#toGuildMember(guildId:ackcord.data.GuildId):ackcord.data.GuildMember", "kind" : "def"}, {"member" : "ackcord.data.raw.RawGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "mute", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawGuildMember.mute", "link" : "ackcord\/data\/raw\/RawGuildMember.html#mute:Boolean", "kind" : "val"}, {"label" : "deaf", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawGuildMember.deaf", "link" : "ackcord\/data\/raw\/RawGuildMember.html#deaf:Boolean", "kind" : "val"}, {"label" : "premiumSince", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.raw.RawGuildMember.premiumSince", "link" : "ackcord\/data\/raw\/RawGuildMember.html#premiumSince:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "joinedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.raw.RawGuildMember.joinedAt", "link" : "ackcord\/data\/raw\/RawGuildMember.html#joinedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.raw.RawGuildMember.roles", "link" : "ackcord\/data\/raw\/RawGuildMember.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "nick", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawGuildMember.nick", "link" : "ackcord\/data\/raw\/RawGuildMember.html#nick:Option[String]", "kind" : "val"}, {"label" : "user", "tail" : ": User", "member" : "ackcord.data.raw.RawGuildMember.user", "link" : "ackcord\/data\/raw\/RawGuildMember.html#user:ackcord.data.User", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawMessage", "shortDescription" : "A raw message before going through the cache.", "members_case class" : [{"label" : "toMessage", "tail" : "(): Message", "member" : "ackcord.data.raw.RawMessage.toMessage", "link" : "ackcord\/data\/raw\/RawMessage.html#toMessage:ackcord.data.Message", "kind" : "def"}, {"member" : "ackcord.data.raw.RawMessage#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Option[MessageFlags]", "member" : "ackcord.data.raw.RawMessage.flags", "link" : "ackcord\/data\/raw\/RawMessage.html#flags:Option[ackcord.data.MessageFlags]", "kind" : "val"}, {"label" : "messageReference", "tail" : ": Option[MessageReference]", "member" : "ackcord.data.raw.RawMessage.messageReference", "link" : "ackcord\/data\/raw\/RawMessage.html#messageReference:Option[ackcord.data.MessageReference]", "kind" : "val"}, {"label" : "application", "tail" : ": Option[MessageApplication]", "member" : "ackcord.data.raw.RawMessage.application", "link" : "ackcord\/data\/raw\/RawMessage.html#application:Option[ackcord.data.MessageApplication]", "kind" : "val"}, {"label" : "activity", "tail" : ": Option[RawMessageActivity]", "member" : "ackcord.data.raw.RawMessage.activity", "link" : "ackcord\/data\/raw\/RawMessage.html#activity:Option[ackcord.data.raw.RawMessageActivity]", "kind" : "val"}, {"label" : "type", "tail" : ": MessageType", "member" : "ackcord.data.raw.RawMessage.type", "link" : "ackcord\/data\/raw\/RawMessage.html#type:ackcord.data.MessageType", "kind" : "val"}, {"label" : "pinned", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawMessage.pinned", "link" : "ackcord\/data\/raw\/RawMessage.html#pinned:Boolean", "kind" : "val"}, {"label" : "nonce", "tail" : ": Option[Either[Int, String]]", "member" : "ackcord.data.raw.RawMessage.nonce", "link" : "ackcord\/data\/raw\/RawMessage.html#nonce:Option[Either[Int,String]]", "kind" : "val"}, {"label" : "reactions", "tail" : ": Option[Seq[Reaction]]", "member" : "ackcord.data.raw.RawMessage.reactions", "link" : "ackcord\/data\/raw\/RawMessage.html#reactions:Option[Seq[ackcord.data.Reaction]]", "kind" : "val"}, {"label" : "embeds", "tail" : ": Seq[ReceivedEmbed]", "member" : "ackcord.data.raw.RawMessage.embeds", "link" : "ackcord\/data\/raw\/RawMessage.html#embeds:Seq[ackcord.data.ReceivedEmbed]", "kind" : "val"}, {"label" : "attachment", "tail" : ": Seq[Attachment]", "member" : "ackcord.data.raw.RawMessage.attachment", "link" : "ackcord\/data\/raw\/RawMessage.html#attachment:Seq[ackcord.data.Attachment]", "kind" : "val"}, {"label" : "mentionChannels", "tail" : ": Option[Seq[ChannelMention]]", "member" : "ackcord.data.raw.RawMessage.mentionChannels", "link" : "ackcord\/data\/raw\/RawMessage.html#mentionChannels:Option[Seq[ackcord.data.ChannelMention]]", "kind" : "val"}, {"label" : "mentionRoles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.raw.RawMessage.mentionRoles", "link" : "ackcord\/data\/raw\/RawMessage.html#mentionRoles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "mentions", "tail" : ": Seq[User]", "member" : "ackcord.data.raw.RawMessage.mentions", "link" : "ackcord\/data\/raw\/RawMessage.html#mentions:Seq[ackcord.data.User]", "kind" : "val"}, {"label" : "mentionEveryone", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawMessage.mentionEveryone", "link" : "ackcord\/data\/raw\/RawMessage.html#mentionEveryone:Boolean", "kind" : "val"}, {"label" : "tts", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawMessage.tts", "link" : "ackcord\/data\/raw\/RawMessage.html#tts:Boolean", "kind" : "val"}, {"label" : "editedTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.raw.RawMessage.editedTimestamp", "link" : "ackcord\/data\/raw\/RawMessage.html#editedTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "timestamp", "tail" : ": OffsetDateTime", "member" : "ackcord.data.raw.RawMessage.timestamp", "link" : "ackcord\/data\/raw\/RawMessage.html#timestamp:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "ackcord.data.raw.RawMessage.content", "link" : "ackcord\/data\/raw\/RawMessage.html#content:String", "kind" : "val"}, {"label" : "member", "tail" : ": Option[PartialRawGuildMember]", "member" : "ackcord.data.raw.RawMessage.member", "link" : "ackcord\/data\/raw\/RawMessage.html#member:Option[ackcord.data.raw.PartialRawGuildMember]", "kind" : "val"}, {"label" : "author", "tail" : ": Author[_]", "member" : "ackcord.data.raw.RawMessage.author", "link" : "ackcord\/data\/raw\/RawMessage.html#author:ackcord.data.Author[_]", "kind" : "val"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.raw.RawMessage.guildId", "link" : "ackcord\/data\/raw\/RawMessage.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.data.raw.RawMessage.channelId", "link" : "ackcord\/data\/raw\/RawMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "id", "tail" : ": MessageId", "member" : "ackcord.data.raw.RawMessage.id", "link" : "ackcord\/data\/raw\/RawMessage.html#id:ackcord.data.MessageId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawMessage.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawMessageActivity", "shortDescription" : "", "members_case class" : [{"label" : "toMessageActivity", "tail" : "(): MessageActivity", "member" : "ackcord.data.raw.RawMessageActivity.toMessageActivity", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#toMessageActivity:ackcord.data.MessageActivity", "kind" : "def"}, {"member" : "ackcord.data.raw.RawMessageActivity#<init>", "error" : "unsupported entity"}, {"label" : "partyId", "tail" : ": Option[String]", "member" : "ackcord.data.raw.RawMessageActivity.partyId", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#partyId:Option[String]", "kind" : "val"}, {"label" : "type", "tail" : ": MessageActivityType", "member" : "ackcord.data.raw.RawMessageActivity.type", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#type:ackcord.data.MessageActivityType", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawMessageActivity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawMessageActivity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawMessageActivity.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawPresence", "shortDescription" : "A raw presence.", "members_case class" : [{"label" : "toPresence", "tail" : "(): Either[String, Presence]", "member" : "ackcord.data.raw.RawPresence.toPresence", "link" : "ackcord\/data\/raw\/RawPresence.html#toPresence:Either[String,ackcord.data.Presence]", "kind" : "def"}, {"member" : "ackcord.data.raw.RawPresence#<init>", "error" : "unsupported entity"}, {"label" : "clientStatus", "tail" : ": Option[ClientStatus]", "member" : "ackcord.data.raw.RawPresence.clientStatus", "link" : "ackcord\/data\/raw\/RawPresence.html#clientStatus:Option[ackcord.data.ClientStatus]", "kind" : "val"}, {"label" : "activities", "tail" : ": Option[Seq[RawActivity]]", "member" : "ackcord.data.raw.RawPresence.activities", "link" : "ackcord\/data\/raw\/RawPresence.html#activities:Option[Seq[ackcord.data.raw.RawActivity]]", "kind" : "val"}, {"label" : "status", "tail" : ": Option[PresenceStatus]", "member" : "ackcord.data.raw.RawPresence.status", "link" : "ackcord\/data\/raw\/RawPresence.html#status:Option[ackcord.data.PresenceStatus]", "kind" : "val"}, {"label" : "user", "tail" : ": PartialUser", "member" : "ackcord.data.raw.RawPresence.user", "link" : "ackcord\/data\/raw\/RawPresence.html#user:ackcord.data.raw.PartialUser", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawPresence.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawPresence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawPresence.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawPresence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawPresence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawPresence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawPresence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawPresence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawPresence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawPresence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawPresence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawPresence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawPresence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawPresence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawPresence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawPresence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawPresence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawPresence.html", "kind" : "case class"}, {"name" : "ackcord.data.raw.RawRole", "shortDescription" : "A raw role before going through the cache.", "members_case class" : [{"label" : "toRole", "tail" : "(guildId: GuildId): Role", "member" : "ackcord.data.raw.RawRole.toRole", "link" : "ackcord\/data\/raw\/RawRole.html#toRole(guildId:ackcord.data.GuildId):ackcord.data.Role", "kind" : "def"}, {"member" : "ackcord.data.raw.RawRole#<init>", "error" : "unsupported entity"}, {"label" : "mentionable", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawRole.mentionable", "link" : "ackcord\/data\/raw\/RawRole.html#mentionable:Boolean", "kind" : "val"}, {"label" : "managed", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawRole.managed", "link" : "ackcord\/data\/raw\/RawRole.html#managed:Boolean", "kind" : "val"}, {"label" : "permissions", "tail" : ": Permission", "member" : "ackcord.data.raw.RawRole.permissions", "link" : "ackcord\/data\/raw\/RawRole.html#permissions:ackcord.data.Permission", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.raw.RawRole.position", "link" : "ackcord\/data\/raw\/RawRole.html#position:Int", "kind" : "val"}, {"label" : "hoist", "tail" : ": Boolean", "member" : "ackcord.data.raw.RawRole.hoist", "link" : "ackcord\/data\/raw\/RawRole.html#hoist:Boolean", "kind" : "val"}, {"label" : "color", "tail" : ": Int", "member" : "ackcord.data.raw.RawRole.color", "link" : "ackcord\/data\/raw\/RawRole.html#color:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.raw.RawRole.name", "link" : "ackcord\/data\/raw\/RawRole.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": RoleId", "member" : "ackcord.data.raw.RawRole.id", "link" : "ackcord\/data\/raw\/RawRole.html#id:ackcord.data.RoleId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/raw\/RawRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/raw\/RawRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/raw\/RawRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/raw\/RawRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/raw\/RawRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/raw\/RawRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/raw\/RawRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/raw\/RawRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/raw\/RawRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/raw\/RawRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/raw\/RawRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/raw\/RawRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/raw\/RawRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/raw\/RawRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/raw\/RawRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/raw\/RawRole.html", "kind" : "case class"}], "ackcord.commands" : [{"name" : "ackcord.commands.ActionBuilder", "trait" : "ackcord\/commands\/ActionBuilder.html", "kind" : "trait", "members_trait" : [{"label" : "withSideEffects", "tail" : "(block: (O[A]) => Unit): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withSideEffects", "link" : "ackcord\/commands\/ActionBuilder.html#withSideEffects(block:O[A]=>Unit):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequestOpt", "tail" : "(block: (O[A]) => Option[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequestOpt", "link" : "ackcord\/commands\/ActionBuilder.html#withRequestOpt(block:O[A]=>Option[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequest", "tail" : "(block: (O[A]) => Request[Any]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequest", "link" : "ackcord\/commands\/ActionBuilder.html#withRequest(block:O[A]=>ackcord.requests.Request[Any]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOptRequest", "tail" : "(block: (O[A]) => OptFuture[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOptRequest", "link" : "ackcord\/commands\/ActionBuilder.html#asyncOptRequest[G[_]](block:O[A]=>ackcord.OptFuture[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOpt", "tail" : "(block: (O[A]) => OptFuture[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOpt", "link" : "ackcord\/commands\/ActionBuilder.html#asyncOpt(block:O[A]=>ackcord.OptFuture[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "async", "tail" : "(block: (O[A]) => Future[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.async", "link" : "ackcord\/commands\/ActionBuilder.html#async(block:O[A]=>scala.concurrent.Future[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamedOptRequest", "tail" : "(block: (O[A]) => OptionT[G, Request[Any]])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamedOptRequest", "link" : "ackcord\/commands\/ActionBuilder.html#streamedOptRequest[G[_]](block:O[A]=>cats.data.OptionT[G,ackcord.requests.Request[Any]])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamed", "tail" : "(block: (O[A]) => G[Unit])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamed", "link" : "ackcord\/commands\/ActionBuilder.html#streamed[G[_]](block:O[A]=>G[Unit])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: ActionFunction[O, O2, E]): ActionFunction[I, O2, E]", "member" : "ackcord.commands.ActionFunction.andThen", "link" : "ackcord\/commands\/ActionBuilder.html#andThen[O2[_]](that:ackcord.commands.ActionFunction[O,O2,E]):ackcord.commands.ActionFunction[I,O2,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ActionBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ActionBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ActionBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ActionBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ActionBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ActionBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ActionBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ActionBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ActionBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/ActionBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ActionBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/ActionBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/ActionBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ActionBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ActionBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ActionBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toSink", "tail" : "(sinkBlock: Sink[O[A], Mat]): Action[A, Mat]", "member" : "ackcord.commands.ActionBuilder.toSink", "link" : "ackcord\/commands\/ActionBuilder.html#toSink[Mat](sinkBlock:akka.stream.scaladsl.Sink[O[A],Mat]):ActionBuilder.this.Action[A,Mat]", "kind" : "abstract def"}, {"label" : "requests", "tail" : "(): requests.Requests", "member" : "ackcord.commands.ActionBuilder.requests", "link" : "ackcord\/commands\/ActionBuilder.html#requests:ackcord.requests.Requests", "kind" : "abstract def"}, {"member" : "ackcord.commands.ActionBuilder.Action", "error" : "unsupported entity"}, {"label" : "flow", "tail" : "(): Flow[I[A], Either[Option[E], O[A]], NotUsed]", "member" : "ackcord.commands.ActionFunction.flow", "link" : "ackcord\/commands\/ActionBuilder.html#flow[A]:akka.stream.scaladsl.Flow[I[A],Either[Option[E],O[A]],akka.NotUsed]", "kind" : "abstract def"}], "shortDescription" : "An ActionFunction from an input to an output."}, {"name" : "ackcord.commands.ActionFunction", "object" : "ackcord\/commands\/ActionFunction$.html", "members_object" : [{"label" : "flowViaEither", "tail" : "(flow1: Flow[I, Either[E, M], Mat1], flow2: Flow[M, Either[E, O], Mat2])(combine: (Mat1, Mat2) => Mat3): Flow[I, Either[E, O], Mat3]", "member" : "ackcord.commands.ActionFunction.flowViaEither", "link" : "ackcord\/commands\/ActionFunction$.html#flowViaEither[I,M,O,E,Mat1,Mat2,Mat3](flow1:akka.stream.scaladsl.Flow[I,Either[E,M],Mat1],flow2:akka.stream.scaladsl.Flow[M,Either[E,O],Mat2])(combine:(Mat1,Mat2)=>Mat3):akka.stream.scaladsl.Flow[I,Either[E,O],Mat3]", "kind" : "def"}, {"label" : "identity", "tail" : "(): ActionFunction[M, M, E]", "member" : "ackcord.commands.ActionFunction.identity", "link" : "ackcord\/commands\/ActionFunction$.html#identity[M[_],E]:ackcord.commands.ActionFunction[M,M,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ActionFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ActionFunction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ActionFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ActionFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ActionFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ActionFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ActionFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ActionFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ActionFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/ActionFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ActionFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/ActionFunction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/ActionFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ActionFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ActionFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ActionFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/ActionFunction.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(that: ActionFunction[O, O2, E]): ActionFunction[I, O2, E]", "member" : "ackcord.commands.ActionFunction.andThen", "link" : "ackcord\/commands\/ActionFunction.html#andThen[O2[_]](that:ackcord.commands.ActionFunction[O,O2,E]):ackcord.commands.ActionFunction[I,O2,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ActionFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ActionFunction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ActionFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ActionFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ActionFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ActionFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ActionFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ActionFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ActionFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/ActionFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ActionFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/ActionFunction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/ActionFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ActionFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ActionFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ActionFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flow", "tail" : "(): Flow[I[A], Either[Option[E], O[A]], NotUsed]", "member" : "ackcord.commands.ActionFunction.flow", "link" : "ackcord\/commands\/ActionFunction.html#flow[A]:akka.stream.scaladsl.Flow[I[A],Either[Option[E],O[A]],akka.NotUsed]", "kind" : "abstract def"}], "shortDescription" : "A mapping over action builders."}, {"name" : "ackcord.commands.ActionTransformer", "object" : "ackcord\/commands\/ActionTransformer$.html", "members_object" : [{"label" : "fromFuncK", "tail" : "(f: ~>[I, O]): ActionTransformer[I, O, E]", "member" : "ackcord.commands.ActionTransformer.fromFuncK", "link" : "ackcord\/commands\/ActionTransformer$.html#fromFuncK[I[_],O[_],E](f:I~>O):ackcord.commands.ActionTransformer[I,O,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ActionTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ActionTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ActionTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ActionTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ActionTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ActionTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ActionTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ActionTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ActionTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/ActionTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ActionTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/ActionTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/ActionTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ActionTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ActionTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ActionTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/ActionTransformer.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(that: ActionTransformer[O, O2, E]): ActionTransformer[I, O2, E]", "member" : "ackcord.commands.ActionTransformer.andThen", "link" : "ackcord\/commands\/ActionTransformer.html#andThen[O2[_]](that:ackcord.commands.ActionTransformer[O,O2,E]):ackcord.commands.ActionTransformer[I,O2,E]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: ActionFunction[O, O2, E]): ActionFunction[I, O2, E]", "member" : "ackcord.commands.ActionTransformer.andThen", "link" : "ackcord\/commands\/ActionTransformer.html#andThen[O2[_]](that:ackcord.commands.ActionFunction[O,O2,E]):ackcord.commands.ActionFunction[I,O2,E]", "kind" : "def"}, {"label" : "flow", "tail" : "(): Flow[I[A], Either[Option[E], O[A]], NotUsed]", "member" : "ackcord.commands.ActionTransformer.flow", "link" : "ackcord\/commands\/ActionTransformer.html#flow[A]:akka.stream.scaladsl.Flow[I[A],Either[Option[E],O[A]],akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ActionTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ActionTransformer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ActionTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ActionTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ActionTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ActionTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ActionTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ActionTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ActionTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ActionTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/ActionTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ActionTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/ActionTransformer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/ActionTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ActionTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ActionTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ActionTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flowMapper", "tail" : "(): Flow[I[A], O[A], NotUsed]", "member" : "ackcord.commands.ActionTransformer.flowMapper", "link" : "ackcord\/commands\/ActionTransformer.html#flowMapper[A]:akka.stream.scaladsl.Flow[I[A],O[A],akka.NotUsed]", "kind" : "abstract def"}], "shortDescription" : "An ActionFunction that can't fail, but might return a differentmessage type."}, {"name" : "ackcord.commands.CommandBuilder", "shortDescription" : "A CommandFunction from a command message to an output.", "object" : "ackcord\/commands\/CommandBuilder$.html", "members_object" : [{"label" : "rawBuilder", "tail" : "(requests: requests.Requests, defaultMustMention: Boolean, defaultMentionOrPrefix: Boolean): CommandBuilder[CommandMessage, NotUsed]", "member" : "ackcord.commands.CommandBuilder.rawBuilder", "link" : "ackcord\/commands\/CommandBuilder$.html#rawBuilder(requests:ackcord.requests.Requests,defaultMustMention:Boolean,defaultMentionOrPrefix:Boolean):ackcord.commands.CommandBuilder[ackcord.commands.CommandMessage,akka.NotUsed]", "kind" : "def"}, {"label" : "nonBot", "tail" : "(create: (User) => ~>[I, O]): CommandFunction[I, O]", "member" : "ackcord.commands.CommandBuilder.nonBot", "link" : "ackcord\/commands\/CommandBuilder$.html#nonBot[I[A]<:ackcord.commands.CommandMessage[A],O[_]](create:ackcord.data.User=>I~>O):ackcord.commands.CommandFunction[I,O]", "kind" : "def"}, {"label" : "needPermission", "tail" : "(neededPermission: Permission): CommandFunction[M, M]", "member" : "ackcord.commands.CommandBuilder.needPermission", "link" : "ackcord\/commands\/CommandBuilder$.html#needPermission[M[A]<:ackcord.commands.GuildCommandMessage[A]](neededPermission:ackcord.data.Permission):ackcord.commands.CommandFunction[M,M]", "kind" : "def"}, {"label" : "inOneGuild", "tail" : "(guildId: GuildId): CommandFunction[M, M]", "member" : "ackcord.commands.CommandBuilder.inOneGuild", "link" : "ackcord\/commands\/CommandBuilder$.html#inOneGuild[M[A]<:ackcord.commands.GuildCommandMessage[A]](guildId:ackcord.data.GuildId):ackcord.commands.CommandFunction[M,M]", "kind" : "def"}, {"label" : "inVoiceChannel", "tail" : "(create: (VoiceGuildChannel) => ~>[I, O]): CommandFunction[I, O]", "member" : "ackcord.commands.CommandBuilder.inVoiceChannel", "link" : "ackcord\/commands\/CommandBuilder$.html#inVoiceChannel[I[A]<:ackcord.commands.GuildCommandMessage[A]withackcord.commands.UserCommandMessage[A],O[_]](create:ackcord.data.VoiceGuildChannel=>I~>O):ackcord.commands.CommandFunction[I,O]", "kind" : "def"}, {"label" : "withGuildMember", "tail" : "(create: (GuildMember) => ~>[I, O]): CommandTransformer[I, O]", "member" : "ackcord.commands.CommandBuilder.withGuildMember", "link" : "ackcord\/commands\/CommandBuilder$.html#withGuildMember[I[A]<:ackcord.commands.GuildCommandMessage[A]withackcord.commands.UserCommandMessage[A],O[_]](create:ackcord.data.GuildMember=>I~>O):ackcord.commands.CommandTransformer[I,O]", "kind" : "def"}, {"label" : "onlyInGuild", "tail" : "(create: (TextGuildChannel, GuildGatewayMessage, Guild) => ~>[I, O]): CommandFunction[I, O]", "member" : "ackcord.commands.CommandBuilder.onlyInGuild", "link" : "ackcord\/commands\/CommandBuilder$.html#onlyInGuild[I[A]<:ackcord.commands.CommandMessage[A],O[_]](create:(ackcord.data.TextGuildChannel,ackcord.data.GuildGatewayMessage,ackcord.data.Guild)=>I~>O):ackcord.commands.CommandFunction[I,O]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandBuilder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandBuilder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "andThen", "tail" : "(f: CommandFunction[M, M2]): CommandBuilder[M2, A]", "member" : "ackcord.commands.CommandBuilder.andThen", "link" : "ackcord\/commands\/CommandBuilder.html#andThen[M2[_]](f:ackcord.commands.CommandFunction[M,M2]):ackcord.commands.CommandBuilder[M2,A]", "kind" : "def"}, {"label" : "toSink", "tail" : "(sinkBlock: Sink[M[A], Mat]): ComplexCommand[A, Mat]", "member" : "ackcord.commands.CommandBuilder.toSink", "link" : "ackcord\/commands\/CommandBuilder.html#toSink[Mat](sinkBlock:akka.stream.scaladsl.Sink[M[A],Mat]):ackcord.commands.ComplexCommand[A,Mat]", "kind" : "def"}, {"label" : "parsing", "tail" : "(newParser: MessageParser[B]): CommandBuilder[M, B]", "member" : "ackcord.commands.CommandBuilder.parsing", "link" : "ackcord\/commands\/CommandBuilder.html#parsing[B](implicitnewParser:ackcord.commands.MessageParser[B]):ackcord.commands.CommandBuilder[M,B]", "kind" : "def"}, {"label" : "namedAsync", "tail" : "(namedSymbols: (CacheSnapshot, Message) => Future[Seq[String]], namedAliases: (CacheSnapshot, Message) => Future[Seq[String]], mustMention: (CacheSnapshot, Message) => Future[Boolean], aliasesCaseSensitive: (CacheSnapshot, Message) => Future[Boolean], canExecute: (CacheSnapshot, Message) => Future[Boolean], mentionOrPrefix: (CacheSnapshot, Message) => Future[Boolean]): NamedCommandBuilder[M, A]", "member" : "ackcord.commands.CommandBuilder.namedAsync", "link" : "ackcord\/commands\/CommandBuilder.html#namedAsync(namedSymbols:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]],namedAliases:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]],mustMention:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],aliasesCaseSensitive:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],canExecute:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],mentionOrPrefix:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]):ackcord.commands.NamedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "namedFunction", "tail" : "(namedSymbols: (CacheSnapshot, Message) => Seq[String], namedAliases: (CacheSnapshot, Message) => Seq[String], mustMention: (CacheSnapshot, Message) => Boolean, aliasesCaseSensitive: (CacheSnapshot, Message) => Boolean, canExecute: (CacheSnapshot, Message) => Boolean, mentionOrPrefix: (CacheSnapshot, Message) => Boolean): NamedCommandBuilder[M, A]", "member" : "ackcord.commands.CommandBuilder.namedFunction", "link" : "ackcord\/commands\/CommandBuilder.html#namedFunction(namedSymbols:(ackcord.CacheSnapshot,ackcord.data.Message)=>Seq[String],namedAliases:(ackcord.CacheSnapshot,ackcord.data.Message)=>Seq[String],mustMention:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,aliasesCaseSensitive:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,canExecute:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,mentionOrPrefix:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean):ackcord.commands.NamedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "named", "tail" : "(namedSymbols: Seq[String], namedAliases: Seq[String], mustMention: Boolean, aliasesCaseSensitive: Boolean, mentionOrPrefix: Boolean): NamedCommandBuilder[M, A]", "member" : "ackcord.commands.CommandBuilder.named", "link" : "ackcord\/commands\/CommandBuilder.html#named(namedSymbols:Seq[String],namedAliases:Seq[String],mustMention:Boolean,aliasesCaseSensitive:Boolean,mentionOrPrefix:Boolean):ackcord.commands.NamedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "namedParser", "tail" : "(structuredPrefixParser: StructuredPrefixParser): NamedCommandBuilder[M, A]", "member" : "ackcord.commands.CommandBuilder.namedParser", "link" : "ackcord\/commands\/CommandBuilder.html#namedParser(structuredPrefixParser:ackcord.commands.StructuredPrefixParser):ackcord.commands.NamedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "flow", "tail" : "(): Flow[CommandMessage[C], Either[Option[CommandError], M[C]], NotUsed]", "member" : "ackcord.commands.CommandBuilder.flow", "link" : "ackcord\/commands\/CommandBuilder.html#flow[C]:akka.stream.scaladsl.Flow[ackcord.commands.CommandMessage[C],Either[Option[ackcord.commands.CommandError],M[C]],akka.NotUsed]", "kind" : "def"}, {"label" : "Action", "tail" : "", "member" : "ackcord.commands.CommandBuilder.Action", "link" : "ackcord\/commands\/CommandBuilder.html#Action[B,Mat]=ackcord.commands.ComplexCommand[B,Mat]", "kind" : "type"}, {"member" : "ackcord.commands.CommandBuilder#<init>", "error" : "unsupported entity"}, {"label" : "actionFunction", "tail" : ": ActionFunction[CommandMessage, M, CommandError]", "member" : "ackcord.commands.CommandBuilder.actionFunction", "link" : "ackcord\/commands\/CommandBuilder.html#actionFunction:ackcord.commands.ActionFunction[ackcord.commands.CommandMessage,M,ackcord.commands.CommandError]", "kind" : "val"}, {"label" : "parser", "tail" : ": MessageParser[A]", "member" : "ackcord.commands.CommandBuilder.parser", "link" : "ackcord\/commands\/CommandBuilder.html#parser:ackcord.commands.MessageParser[A]", "kind" : "val"}, {"label" : "defaultMentionOrPrefix", "tail" : ": Boolean", "member" : "ackcord.commands.CommandBuilder.defaultMentionOrPrefix", "link" : "ackcord\/commands\/CommandBuilder.html#defaultMentionOrPrefix:Boolean", "kind" : "val"}, {"label" : "defaultMustMention", "tail" : ": Boolean", "member" : "ackcord.commands.CommandBuilder.defaultMustMention", "link" : "ackcord\/commands\/CommandBuilder.html#defaultMustMention:Boolean", "kind" : "val"}, {"label" : "requests", "tail" : ": requests.Requests", "member" : "ackcord.commands.CommandBuilder.requests", "link" : "ackcord\/commands\/CommandBuilder.html#requests:ackcord.requests.Requests", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/CommandBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withSideEffects", "tail" : "(block: (M[A]) => Unit): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withSideEffects", "link" : "ackcord\/commands\/CommandBuilder.html#withSideEffects(block:O[A]=>Unit):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequestOpt", "tail" : "(block: (M[A]) => Option[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequestOpt", "link" : "ackcord\/commands\/CommandBuilder.html#withRequestOpt(block:O[A]=>Option[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequest", "tail" : "(block: (M[A]) => Request[Any]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequest", "link" : "ackcord\/commands\/CommandBuilder.html#withRequest(block:O[A]=>ackcord.requests.Request[Any]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOptRequest", "tail" : "(block: (M[A]) => OptFuture[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOptRequest", "link" : "ackcord\/commands\/CommandBuilder.html#asyncOptRequest[G[_]](block:O[A]=>ackcord.OptFuture[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOpt", "tail" : "(block: (M[A]) => OptFuture[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOpt", "link" : "ackcord\/commands\/CommandBuilder.html#asyncOpt(block:O[A]=>ackcord.OptFuture[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "async", "tail" : "(block: (M[A]) => Future[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.async", "link" : "ackcord\/commands\/CommandBuilder.html#async(block:O[A]=>scala.concurrent.Future[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamedOptRequest", "tail" : "(block: (M[A]) => OptionT[G, Request[Any]])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamedOptRequest", "link" : "ackcord\/commands\/CommandBuilder.html#streamedOptRequest[G[_]](block:O[A]=>cats.data.OptionT[G,ackcord.requests.Request[Any]])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamed", "tail" : "(block: (M[A]) => G[Unit])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamed", "link" : "ackcord\/commands\/CommandBuilder.html#streamed[G[_]](block:O[A]=>G[Unit])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/CommandBuilder.html", "kind" : "case class"}, {"name" : "ackcord.commands.CommandConnector", "shortDescription" : "", "members_class" : [{"label" : "bulkRunNamedWithHelp", "tail" : "(helpCommand: HelpCommand, commands: NamedDescribedCommand[_]*): Seq[(NamedDescribedCommand[_], CommandRegistration[_])]", "member" : "ackcord.commands.CommandConnector.bulkRunNamedWithHelp", "link" : "ackcord\/commands\/CommandConnector.html#bulkRunNamedWithHelp(helpCommand:ackcord.commands.HelpCommand,commands:ackcord.commands.NamedDescribedCommand[_]*):Seq[(ackcord.commands.NamedDescribedCommand[_],ackcord.commands.CommandRegistration[_])]", "kind" : "def"}, {"label" : "bulkRunNamed", "tail" : "(commands: NamedCommand[_]*): Seq[(NamedCommand[_], CommandRegistration[_])]", "member" : "ackcord.commands.CommandConnector.bulkRunNamed", "link" : "ackcord\/commands\/CommandConnector.html#bulkRunNamed(commands:ackcord.commands.NamedCommand[_]*):Seq[(ackcord.commands.NamedCommand[_],ackcord.commands.CommandRegistration[_])]", "kind" : "def"}, {"label" : "runNewNamedCommandWithHelp", "tail" : "(command: NamedDescribedComplexCommand[A, Mat], helpCommand: HelpCommand): CommandRegistration[Mat]", "member" : "ackcord.commands.CommandConnector.runNewNamedCommandWithHelp", "link" : "ackcord\/commands\/CommandConnector.html#runNewNamedCommandWithHelp[A,Mat](command:ackcord.commands.NamedDescribedComplexCommand[A,Mat],helpCommand:ackcord.commands.HelpCommand):ackcord.commands.CommandRegistration[Mat]", "kind" : "def"}, {"label" : "runNewNamedCommand", "tail" : "(command: NamedComplexCommand[A, Mat]): CommandRegistration[Mat]", "member" : "ackcord.commands.CommandConnector.runNewNamedCommand", "link" : "ackcord\/commands\/CommandConnector.html#runNewNamedCommand[A,Mat](command:ackcord.commands.NamedComplexCommand[A,Mat]):ackcord.commands.CommandRegistration[Mat]", "kind" : "def"}, {"label" : "runNewCommand", "tail" : "(prefix: PrefixParser, command: ComplexCommand[A, Mat]): CommandRegistration[Mat]", "member" : "ackcord.commands.CommandConnector.runNewCommand", "link" : "ackcord\/commands\/CommandConnector.html#runNewCommand[A,Mat](prefix:ackcord.commands.PrefixParser,command:ackcord.commands.ComplexCommand[A,Mat]):ackcord.commands.CommandRegistration[Mat]", "kind" : "def"}, {"label" : "newNamedCommand", "tail" : "(command: NamedComplexCommand[A, Mat]): RunnableGraph[CommandRegistration[Mat]]", "member" : "ackcord.commands.CommandConnector.newNamedCommand", "link" : "ackcord\/commands\/CommandConnector.html#newNamedCommand[A,Mat](command:ackcord.commands.NamedComplexCommand[A,Mat]):akka.stream.scaladsl.RunnableGraph[ackcord.commands.CommandRegistration[Mat]]", "kind" : "def"}, {"label" : "newCommand", "tail" : "(prefix: PrefixParser, command: ComplexCommand[A, Mat]): RunnableGraph[CommandRegistration[Mat]]", "member" : "ackcord.commands.CommandConnector.newCommand", "link" : "ackcord\/commands\/CommandConnector.html#newCommand[A,Mat](prefix:ackcord.commands.PrefixParser,command:ackcord.commands.ComplexCommand[A,Mat]):akka.stream.scaladsl.RunnableGraph[ackcord.commands.CommandRegistration[Mat]]", "kind" : "def"}, {"label" : "newNamedCommandWithErrors", "tail" : "(command: NamedComplexCommand[A, Mat]): Source[CommandError, CommandRegistration[Mat]]", "member" : "ackcord.commands.CommandConnector.newNamedCommandWithErrors", "link" : "ackcord\/commands\/CommandConnector.html#newNamedCommandWithErrors[A,Mat](command:ackcord.commands.NamedComplexCommand[A,Mat]):akka.stream.scaladsl.Source[ackcord.commands.CommandError,ackcord.commands.CommandRegistration[Mat]]", "kind" : "def"}, {"label" : "newCommandWithErrors", "tail" : "(prefix: PrefixParser, command: ComplexCommand[A, Mat]): Source[CommandError, CommandRegistration[Mat]]", "member" : "ackcord.commands.CommandConnector.newCommandWithErrors", "link" : "ackcord\/commands\/CommandConnector.html#newCommandWithErrors[A,Mat](prefix:ackcord.commands.PrefixParser,command:ackcord.commands.ComplexCommand[A,Mat]):akka.stream.scaladsl.Source[ackcord.commands.CommandError,ackcord.commands.CommandRegistration[Mat]]", "kind" : "def"}, {"member" : "ackcord.commands.CommandConnector#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandConnector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandConnector.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandConnector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandConnector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandConnector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandConnector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandConnector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandConnector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandConnector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandConnector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandConnector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandConnector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandConnector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandConnector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandConnector.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandConnector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandConnector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandConnector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandConnector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/commands\/CommandConnector.html", "kind" : "class"}, {"name" : "ackcord.commands.CommandController", "shortDescription" : "The base command controller that you will place your commands in.", "members_class" : [{"label" : "GuildVoiceCommand", "tail" : ": CommandBuilder[VoiceGuildMemberCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.GuildVoiceCommand", "link" : "ackcord\/commands\/CommandController.html#GuildVoiceCommand:ackcord.commands.CommandBuilder[ackcord.commands.VoiceGuildMemberCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "GuildCommand", "tail" : ": CommandBuilder[GuildMemberCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.GuildCommand", "link" : "ackcord\/commands\/CommandController.html#GuildCommand:ackcord.commands.CommandBuilder[ackcord.commands.GuildMemberCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "Command", "tail" : ": CommandBuilder[UserCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.Command", "link" : "ackcord\/commands\/CommandController.html#Command:ackcord.commands.CommandBuilder[ackcord.commands.UserCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "baseCommandBuilder", "tail" : ": CommandBuilder[CommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.baseCommandBuilder", "link" : "ackcord\/commands\/CommandController.html#baseCommandBuilder:ackcord.commands.CommandBuilder[ackcord.commands.CommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "defaultMentionOrPrefix", "tail" : "(): Boolean", "member" : "ackcord.commands.CommandController.defaultMentionOrPrefix", "link" : "ackcord\/commands\/CommandController.html#defaultMentionOrPrefix:Boolean", "kind" : "def"}, {"label" : "defaultMustMention", "tail" : "(): Boolean", "member" : "ackcord.commands.CommandController.defaultMustMention", "link" : "ackcord\/commands\/CommandController.html#defaultMustMention:Boolean", "kind" : "def"}, {"label" : "findCache", "tail" : "(message: CommandMessage[A]): CacheSnapshot", "member" : "ackcord.commands.CommandController.findCache", "link" : "ackcord\/commands\/CommandController.html#findCache[A](implicitmessage:ackcord.commands.CommandMessage[A]):ackcord.CacheSnapshot", "kind" : "implicit def"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "ackcord.commands.CommandController.ec", "link" : "ackcord\/commands\/CommandController.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"label" : "requestHelper", "tail" : ": requests.RequestsHelper", "member" : "ackcord.commands.CommandController.requestHelper", "link" : "ackcord\/commands\/CommandController.html#requestHelper:ackcord.requests.RequestsHelper", "kind" : "val"}, {"member" : "ackcord.commands.CommandController#<init>", "error" : "unsupported entity"}, {"label" : "requests", "tail" : ": requests.Requests", "member" : "ackcord.commands.CommandController.requests", "link" : "ackcord\/commands\/CommandController.html#requests:ackcord.requests.Requests", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandController.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandController.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandController.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandController.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandController.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandController.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandController.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandController.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandController.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandController.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandController.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandController.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandController.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandController.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandController.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandController.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandController.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandController.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandController.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/commands\/CommandController.html", "kind" : "class"}, {"name" : "ackcord.commands.CommandDescription", "shortDescription" : "Represents non essential information about a command intended to bedisplayed to an end user.", "members_case class" : [{"member" : "ackcord.commands.CommandDescription#<init>", "error" : "unsupported entity"}, {"label" : "extra", "tail" : ": Map[String, String]", "member" : "ackcord.commands.CommandDescription.extra", "link" : "ackcord\/commands\/CommandDescription.html#extra:Map[String,String]", "kind" : "val"}, {"label" : "usage", "tail" : ": String", "member" : "ackcord.commands.CommandDescription.usage", "link" : "ackcord\/commands\/CommandDescription.html#usage:String", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "ackcord.commands.CommandDescription.description", "link" : "ackcord\/commands\/CommandDescription.html#description:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.commands.CommandDescription.name", "link" : "ackcord\/commands\/CommandDescription.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/CommandDescription.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandDescription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandDescription.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandDescription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandDescription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandDescription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandDescription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandDescription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandDescription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandDescription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandDescription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandDescription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandDescription.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandDescription.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandDescription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandDescription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandDescription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/CommandDescription.html", "kind" : "case class"}, {"name" : "ackcord.commands.CommandError", "shortDescription" : "Represents an error encountered when executing an command.", "object" : "ackcord\/commands\/CommandError$.html", "members_object" : [{"label" : "mk", "tail" : "(error: String, message: CommandMessage[A]): CommandError", "member" : "ackcord.commands.CommandError.mk", "link" : "ackcord\/commands\/CommandError$.html#mk[A](error:String,message:ackcord.commands.CommandMessage[A]):ackcord.commands.CommandError", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandError$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandError$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandError$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandError$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandError$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandError$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandError$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.commands.CommandError#<init>", "error" : "unsupported entity"}, {"label" : "cache", "tail" : ": CacheSnapshot", "member" : "ackcord.commands.CommandError.cache", "link" : "ackcord\/commands\/CommandError.html#cache:ackcord.CacheSnapshot", "kind" : "val"}, {"label" : "channel", "tail" : ": TextChannel", "member" : "ackcord.commands.CommandError.channel", "link" : "ackcord\/commands\/CommandError.html#channel:ackcord.data.TextChannel", "kind" : "val"}, {"label" : "error", "tail" : ": String", "member" : "ackcord.commands.CommandError.error", "link" : "ackcord\/commands\/CommandError.html#error:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/CommandError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/CommandError.html", "kind" : "case class"}, {"name" : "ackcord.commands.CommandMessage", "object" : "ackcord\/commands\/CommandMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.commands.CommandMessage.Default", "link" : "ackcord\/commands\/CommandMessage$.html#Default[A]extendsCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "findCache", "tail" : "(message: CommandMessage[A]): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.findCache", "link" : "ackcord\/commands\/CommandMessage$.html#findCache[A](implicitmessage:ackcord.commands.CommandMessage[A]):ackcord.CacheSnapshot", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/CommandMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.CommandMessage.parsed", "link" : "ackcord\/commands\/CommandMessage.html#parsed:A", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): Message", "member" : "ackcord.commands.CommandMessage.message", "link" : "ackcord\/commands\/CommandMessage.html#message:ackcord.data.Message", "kind" : "abstract def"}, {"label" : "textChannel", "tail" : "(): TextChannel", "member" : "ackcord.commands.CommandMessage.textChannel", "link" : "ackcord\/commands\/CommandMessage.html#textChannel:ackcord.data.TextChannel", "kind" : "abstract def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.cache", "link" : "ackcord\/commands\/CommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "abstract def"}], "shortDescription" : "A message sent with an invocation of a command."}, {"name" : "ackcord.commands.CommandRegistration", "shortDescription" : "", "object" : "ackcord\/commands\/CommandRegistration$.html", "members_object" : [{"label" : "withRegistration", "tail" : "(source: Source[A, M]): Source[A, CommandRegistration[M]]", "member" : "ackcord.commands.CommandRegistration.withRegistration", "link" : "ackcord\/commands\/CommandRegistration$.html#withRegistration[A,M](source:akka.stream.scaladsl.Source[A,M]):akka.stream.scaladsl.Source[A,ackcord.commands.CommandRegistration[M]]", "kind" : "def"}, {"label" : "toSink", "tail" : "(source: Source[A, M]): RunnableGraph[CommandRegistration[M]]", "member" : "ackcord.commands.CommandRegistration.toSink", "link" : "ackcord\/commands\/CommandRegistration$.html#toSink[A,M](source:akka.stream.scaladsl.Source[A,M]):akka.stream.scaladsl.RunnableGraph[ackcord.commands.CommandRegistration[M]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandRegistration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandRegistration$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandRegistration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandRegistration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandRegistration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandRegistration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandRegistration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandRegistration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandRegistration$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/CommandRegistration$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandRegistration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/CommandRegistration$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/CommandRegistration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandRegistration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandRegistration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandRegistration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "stop", "tail" : "(): Unit", "member" : "ackcord.commands.CommandRegistration.stop", "link" : "ackcord\/commands\/CommandRegistration.html#stop():Unit", "kind" : "def"}, {"member" : "ackcord.commands.CommandRegistration#<init>", "error" : "unsupported entity"}, {"label" : "killSwitch", "tail" : ": UniqueKillSwitch", "member" : "ackcord.commands.CommandRegistration.killSwitch", "link" : "ackcord\/commands\/CommandRegistration.html#killSwitch:akka.stream.UniqueKillSwitch", "kind" : "val"}, {"label" : "onDone", "tail" : ": Future[Done]", "member" : "ackcord.commands.CommandRegistration.onDone", "link" : "ackcord\/commands\/CommandRegistration.html#onDone:scala.concurrent.Future[akka.Done]", "kind" : "val"}, {"label" : "materialized", "tail" : ": Mat", "member" : "ackcord.commands.CommandRegistration.materialized", "link" : "ackcord\/commands\/CommandRegistration.html#materialized:Mat", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/CommandRegistration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/CommandRegistration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/CommandRegistration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/CommandRegistration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/CommandRegistration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/CommandRegistration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/CommandRegistration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/CommandRegistration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/CommandRegistration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/CommandRegistration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/CommandRegistration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/CommandRegistration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/CommandRegistration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/CommandRegistration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/CommandRegistration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/CommandRegistration.html", "kind" : "case class"}, {"name" : "ackcord.commands.ComplexCommand", "shortDescription" : "A constructed command execution.", "members_case class" : [{"label" : "toNamed", "tail" : "(Parser: StructuredPrefixParser): NamedComplexCommand[A, Mat]", "member" : "ackcord.commands.ComplexCommand.toNamed", "link" : "ackcord\/commands\/ComplexCommand.html#toNamed(Parser:ackcord.commands.StructuredPrefixParser):ackcord.commands.NamedComplexCommand[A,Mat]", "kind" : "def"}, {"member" : "ackcord.commands.ComplexCommand#<init>", "error" : "unsupported entity"}, {"label" : "flow", "tail" : ": Flow[CommandMessage[A], CommandError, Mat]", "member" : "ackcord.commands.ComplexCommand.flow", "link" : "ackcord\/commands\/ComplexCommand.html#flow:akka.stream.scaladsl.Flow[ackcord.commands.CommandMessage[A],ackcord.commands.CommandError,Mat]", "kind" : "val"}, {"label" : "parser", "tail" : ": MessageParser[A]", "member" : "ackcord.commands.ComplexCommand.parser", "link" : "ackcord\/commands\/ComplexCommand.html#parser:ackcord.commands.MessageParser[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/ComplexCommand.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/ComplexCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/ComplexCommand.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/ComplexCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/ComplexCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/ComplexCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/ComplexCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/ComplexCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ComplexCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ComplexCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/ComplexCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/ComplexCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/ComplexCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/ComplexCommand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/ComplexCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/ComplexCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/ComplexCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/ComplexCommand.html", "kind" : "case class"}, {"name" : "ackcord.commands.DeriveMessageParser", "trait" : "ackcord\/commands\/DeriveMessageParser.html", "kind" : "trait", "members_trait" : [{"label" : "Auto", "tail" : "", "member" : "ackcord.commands.DeriveMessageParser.Auto", "link" : "ackcord\/commands\/DeriveMessageParser.html#Auto", "kind" : "object"}, {"label" : "coProductParser", "tail" : "(headParser: Lazy[MessageParser[Head]], tailParser: Lazy[MessageParser[Tail]]): MessageParser[:+:[Head, Tail]]", "member" : "ackcord.commands.DeriveMessageParser.coProductParser", "link" : "ackcord\/commands\/DeriveMessageParser.html#coProductParser[Head,Tail<:shapeless.Coproduct](implicitheadParser:shapeless.Lazy[ackcord.commands.MessageParser[Head]],implicittailParser:shapeless.Lazy[ackcord.commands.MessageParser[Tail]]):ackcord.commands.MessageParser[Head:+:Tail]", "kind" : "implicit def"}, {"label" : "cNilParser", "tail" : ": MessageParser[CNil]", "member" : "ackcord.commands.DeriveMessageParser.cNilParser", "link" : "ackcord\/commands\/DeriveMessageParser.html#cNilParser:ackcord.commands.MessageParser[shapeless.CNil]", "kind" : "implicit val"}, {"label" : "hListParser", "tail" : "(headParser: Lazy[MessageParser[Head]], tailParser: Lazy[MessageParser[Tail]]): MessageParser[::[Head, Tail]]", "member" : "ackcord.commands.DeriveMessageParser.hListParser", "link" : "ackcord\/commands\/DeriveMessageParser.html#hListParser[Head,Tail<:shapeless.HList](implicitheadParser:shapeless.Lazy[ackcord.commands.MessageParser[Head]],implicittailParser:shapeless.Lazy[ackcord.commands.MessageParser[Tail]]):ackcord.commands.MessageParser[Head::Tail]", "kind" : "implicit def"}, {"label" : "hNilParser", "tail" : ": MessageParser[HNil]", "member" : "ackcord.commands.DeriveMessageParser.hNilParser", "link" : "ackcord\/commands\/DeriveMessageParser.html#hNilParser:ackcord.commands.MessageParser[shapeless.HNil]", "kind" : "implicit lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/DeriveMessageParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/DeriveMessageParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/DeriveMessageParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/DeriveMessageParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/DeriveMessageParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/DeriveMessageParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/DeriveMessageParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/DeriveMessageParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/DeriveMessageParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/DeriveMessageParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/DeriveMessageParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/DeriveMessageParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/DeriveMessageParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/DeriveMessageParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/DeriveMessageParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/DeriveMessageParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/DeriveMessageParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/DeriveMessageParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/DeriveMessageParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.commands.GuildCommandMessage", "object" : "ackcord\/commands\/GuildCommandMessage$.html", "members_object" : [{"label" : "WithUser", "tail" : "", "member" : "ackcord.commands.GuildCommandMessage.WithUser", "link" : "ackcord\/commands\/GuildCommandMessage$.html#WithUser[A]extendsWrappedCommandMessage[A]withGuildCommandMessage[A]withUserCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Default", "tail" : "", "member" : "ackcord.commands.GuildCommandMessage.Default", "link" : "ackcord\/commands\/GuildCommandMessage$.html#Default[A]extendsWrappedCommandMessage[A]withGuildCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/GuildCommandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/GuildCommandMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/GuildCommandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/GuildCommandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/GuildCommandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/GuildCommandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/GuildCommandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/GuildCommandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/GuildCommandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/GuildCommandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/GuildCommandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/GuildCommandMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/GuildCommandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/GuildCommandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/GuildCommandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/GuildCommandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/GuildCommandMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/GuildCommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/GuildCommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/GuildCommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/GuildCommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/GuildCommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/GuildCommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/GuildCommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildCommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/GuildCommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/GuildCommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/GuildCommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/GuildCommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/GuildCommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/GuildCommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/GuildCommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/GuildCommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/GuildCommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "message", "tail" : "(): GuildGatewayMessage", "member" : "ackcord.commands.GuildCommandMessage.message", "link" : "ackcord\/commands\/GuildCommandMessage.html#message:ackcord.data.GuildGatewayMessage", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.commands.GuildCommandMessage.guild", "link" : "ackcord\/commands\/GuildCommandMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "textChannel", "tail" : "(): TextGuildChannel", "member" : "ackcord.commands.GuildCommandMessage.textChannel", "link" : "ackcord\/commands\/GuildCommandMessage.html#textChannel:ackcord.data.TextGuildChannel", "kind" : "abstract def"}, {"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.CommandMessage.parsed", "link" : "ackcord\/commands\/GuildCommandMessage.html#parsed:A", "kind" : "abstract def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.cache", "link" : "ackcord\/commands\/GuildCommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "abstract def"}], "shortDescription" : "A message sent with the invocation of a guild command"}, {"name" : "ackcord.commands.GuildMemberCommandMessage", "object" : "ackcord\/commands\/GuildMemberCommandMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.commands.GuildMemberCommandMessage.Default", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#Default[A]extendsWrappedCommandMessage[A]withGuildMemberCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/GuildMemberCommandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/GuildMemberCommandMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guildMember", "tail" : "(): GuildMember", "member" : "ackcord.commands.GuildMemberCommandMessage.guildMember", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#guildMember:ackcord.data.GuildMember", "kind" : "abstract def"}, {"label" : "user", "tail" : "(): User", "member" : "ackcord.commands.UserCommandMessage.user", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#user:ackcord.data.User", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): GuildGatewayMessage", "member" : "ackcord.commands.GuildCommandMessage.message", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#message:ackcord.data.GuildGatewayMessage", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.commands.GuildCommandMessage.guild", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "textChannel", "tail" : "(): TextGuildChannel", "member" : "ackcord.commands.GuildCommandMessage.textChannel", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#textChannel:ackcord.data.TextGuildChannel", "kind" : "abstract def"}, {"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.CommandMessage.parsed", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#parsed:A", "kind" : "abstract def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.cache", "link" : "ackcord\/commands\/GuildMemberCommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.commands.HelpCommand", "shortDescription" : "The basic structure for a help command.", "object" : "ackcord\/commands\/HelpCommand$.html", "members_class" : [{"label" : "unknownCmd", "tail" : "(command: String): Option[CreateMessageData]", "member" : "ackcord.commands.HelpCommand.unknownCmd", "link" : "ackcord\/commands\/HelpCommand.html#unknownCmd(command:String):Option[ackcord.requests.CreateMessageData]", "kind" : "def"}, {"label" : "removeEntry", "tail" : "(entry: HelpCommandEntry): Unit", "member" : "ackcord.commands.HelpCommand.removeEntry", "link" : "ackcord\/commands\/HelpCommand.html#removeEntry(entry:ackcord.commands.HelpCommand.HelpCommandEntry):Unit", "kind" : "def"}, {"label" : "filterCommands", "tail" : "(query: String)(m: UserCommandMessage[_]): Future[Seq[HelpCommandProcessedEntry]]", "member" : "ackcord.commands.HelpCommand.filterCommands", "link" : "ackcord\/commands\/HelpCommand.html#filterCommands(query:String)(implicitm:ackcord.commands.UserCommandMessage[_]):scala.concurrent.Future[Seq[ackcord.commands.HelpCommand.HelpCommandProcessedEntry]]", "kind" : "def"}, {"label" : "registerCommand", "tail" : "(prefix: StructuredPrefixParser, description: CommandDescription, done: Future[Done]): Unit", "member" : "ackcord.commands.HelpCommand.registerCommand", "link" : "ackcord\/commands\/HelpCommand.html#registerCommand(prefix:ackcord.commands.StructuredPrefixParser,description:ackcord.commands.CommandDescription,done:scala.concurrent.Future[akka.Done]):Unit", "kind" : "def"}, {"label" : "command", "tail" : ": ComplexCommand[Option[Args], NotUsed]", "member" : "ackcord.commands.HelpCommand.command", "link" : "ackcord\/commands\/HelpCommand.html#command:ackcord.commands.ComplexCommand[Option[ackcord.commands.HelpCommand.Args],akka.NotUsed]", "kind" : "val"}, {"label" : "registeredCommands", "tail" : ": Set[HelpCommandEntry]", "member" : "ackcord.commands.HelpCommand.registeredCommands", "link" : "ackcord\/commands\/HelpCommand.html#registeredCommands:scala.collection.mutable.Set[ackcord.commands.HelpCommand.HelpCommandEntry]", "kind" : "val"}, {"member" : "ackcord.commands.HelpCommand#<init>", "error" : "unsupported entity"}, {"label" : "GuildVoiceCommand", "tail" : ": CommandBuilder[VoiceGuildMemberCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.GuildVoiceCommand", "link" : "ackcord\/commands\/HelpCommand.html#GuildVoiceCommand:ackcord.commands.CommandBuilder[ackcord.commands.VoiceGuildMemberCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "GuildCommand", "tail" : ": CommandBuilder[GuildMemberCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.GuildCommand", "link" : "ackcord\/commands\/HelpCommand.html#GuildCommand:ackcord.commands.CommandBuilder[ackcord.commands.GuildMemberCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "Command", "tail" : ": CommandBuilder[UserCommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.Command", "link" : "ackcord\/commands\/HelpCommand.html#Command:ackcord.commands.CommandBuilder[ackcord.commands.UserCommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "baseCommandBuilder", "tail" : ": CommandBuilder[CommandMessage, NotUsed]", "member" : "ackcord.commands.CommandController.baseCommandBuilder", "link" : "ackcord\/commands\/HelpCommand.html#baseCommandBuilder:ackcord.commands.CommandBuilder[ackcord.commands.CommandMessage,akka.NotUsed]", "kind" : "val"}, {"label" : "defaultMentionOrPrefix", "tail" : "(): Boolean", "member" : "ackcord.commands.CommandController.defaultMentionOrPrefix", "link" : "ackcord\/commands\/HelpCommand.html#defaultMentionOrPrefix:Boolean", "kind" : "def"}, {"label" : "defaultMustMention", "tail" : "(): Boolean", "member" : "ackcord.commands.CommandController.defaultMustMention", "link" : "ackcord\/commands\/HelpCommand.html#defaultMustMention:Boolean", "kind" : "def"}, {"label" : "findCache", "tail" : "(message: CommandMessage[A]): CacheSnapshot", "member" : "ackcord.commands.CommandController.findCache", "link" : "ackcord\/commands\/HelpCommand.html#findCache[A](implicitmessage:ackcord.commands.CommandMessage[A]):ackcord.CacheSnapshot", "kind" : "implicit def"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "ackcord.commands.CommandController.ec", "link" : "ackcord\/commands\/HelpCommand.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"label" : "requestHelper", "tail" : ": requests.RequestsHelper", "member" : "ackcord.commands.CommandController.requestHelper", "link" : "ackcord\/commands\/HelpCommand.html#requestHelper:ackcord.requests.RequestsHelper", "kind" : "val"}, {"label" : "requests", "tail" : ": requests.Requests", "member" : "ackcord.commands.CommandController.requests", "link" : "ackcord\/commands\/HelpCommand.html#requests:ackcord.requests.Requests", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/HelpCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/HelpCommand.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/HelpCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/HelpCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/HelpCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/HelpCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/HelpCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/HelpCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/HelpCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/HelpCommand.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/HelpCommand.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/HelpCommand.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/HelpCommand.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/HelpCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/HelpCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/HelpCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createReplyAll", "tail" : "(message: Message, page: Int)(c: CacheSnapshot): Future[CreateMessageData]", "member" : "ackcord.commands.HelpCommand.createReplyAll", "link" : "ackcord\/commands\/HelpCommand.html#createReplyAll(message:ackcord.data.Message,page:Int)(implicitc:ackcord.CacheSnapshot):scala.concurrent.Future[ackcord.requests.CreateMessageData]", "kind" : "abstract def"}, {"label" : "createSearchReply", "tail" : "(message: Message, query: String, matches: Seq[HelpCommandProcessedEntry])(c: CacheSnapshot): Future[CreateMessageData]", "member" : "ackcord.commands.HelpCommand.createSearchReply", "link" : "ackcord\/commands\/HelpCommand.html#createSearchReply(message:ackcord.data.Message,query:String,matches:Seq[ackcord.commands.HelpCommand.HelpCommandProcessedEntry])(implicitc:ackcord.CacheSnapshot):scala.concurrent.Future[ackcord.requests.CreateMessageData]", "kind" : "abstract def"}], "members_object" : [{"label" : "Args", "tail" : "", "member" : "ackcord.commands.HelpCommand.Args", "link" : "ackcord\/commands\/HelpCommand$.html#Args", "kind" : "object"}, {"label" : "Args", "tail" : "", "member" : "ackcord.commands.HelpCommand.Args", "link" : "ackcord\/commands\/HelpCommand$.html#ArgsextendsAnyRef", "kind" : "sealed trait"}, {"label" : "HelpCommandProcessedEntry", "tail" : "", "member" : "ackcord.commands.HelpCommand.HelpCommandProcessedEntry", "link" : "ackcord\/commands\/HelpCommand$.html#HelpCommandProcessedEntryextendsProductwithSerializable", "kind" : "case class"}, {"label" : "HelpCommandEntry", "tail" : "", "member" : "ackcord.commands.HelpCommand.HelpCommandEntry", "link" : "ackcord\/commands\/HelpCommand$.html#HelpCommandEntryextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/HelpCommand$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/HelpCommand$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/HelpCommand$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/HelpCommand$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/HelpCommand$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/HelpCommand$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/HelpCommand$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/HelpCommand$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/HelpCommand$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/HelpCommand$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/HelpCommand$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/HelpCommand$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/HelpCommand$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/HelpCommand$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/HelpCommand$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/HelpCommand$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/HelpCommand$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/commands\/HelpCommand.html", "kind" : "class"}, {"name" : "ackcord.commands.MessageParser", "object" : "ackcord\/commands\/MessageParser$.html", "members_object" : [{"label" : "Auto", "tail" : "", "member" : "ackcord.commands.DeriveMessageParser.Auto", "link" : "ackcord\/commands\/DeriveMessageParser.html#Auto", "kind" : "object"}, {"label" : "parseEither", "tail" : "(args: List[String], parser: MessageParser[A])(c: CacheSnapshot): Either[String, (List[String], A)]", "member" : "ackcord.commands.MessageParser.parseEither", "link" : "ackcord\/commands\/MessageParser$.html#parseEither[A](args:List[String],parser:ackcord.commands.MessageParser[A])(implicitc:ackcord.CacheSnapshot):Either[String,(List[String],A)]", "kind" : "def"}, {"label" : "parseResultEither", "tail" : "(args: List[String], parser: MessageParser[A])(c: CacheSnapshot): Either[String, A]", "member" : "ackcord.commands.MessageParser.parseResultEither", "link" : "ackcord\/commands\/MessageParser$.html#parseResultEither[A](args:List[String],parser:ackcord.commands.MessageParser[A])(implicitc:ackcord.CacheSnapshot):Either[String,A]", "kind" : "def"}, {"label" : "messageParserMonad", "tail" : ": MonadError[MessageParser, String]", "member" : "ackcord.commands.MessageParser.messageParserMonad", "link" : "ackcord\/commands\/MessageParser$.html#messageParserMonad:cats.MonadError[ackcord.commands.MessageParser,String]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(parser: MessageParser[A]): MessageParser[A]", "member" : "ackcord.commands.MessageParser.apply", "link" : "ackcord\/commands\/MessageParser$.html#apply[A](implicitparser:ackcord.commands.MessageParser[A]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "remaining2String", "tail" : "(remaining: RemainingAsString): String", "member" : "ackcord.commands.MessageParser.remaining2String", "link" : "ackcord\/commands\/MessageParser$.html#remaining2String(remaining:ackcord.commands.MessageParser.RemainingAsString):String", "kind" : "implicit def"}, {"label" : "RemainingAsString", "tail" : "", "member" : "ackcord.commands.MessageParser.RemainingAsString", "link" : "ackcord\/commands\/MessageParser$.html#RemainingAsStringextendsProductwithSerializable", "kind" : "case class"}, {"label" : "coProductParser", "tail" : "(headParser: Lazy[MessageParser[Head]], tailParser: Lazy[MessageParser[Tail]]): MessageParser[:+:[Head, Tail]]", "member" : "ackcord.commands.DeriveMessageParser.coProductParser", "link" : "ackcord\/commands\/MessageParser$.html#coProductParser[Head,Tail<:shapeless.Coproduct](implicitheadParser:shapeless.Lazy[ackcord.commands.MessageParser[Head]],implicittailParser:shapeless.Lazy[ackcord.commands.MessageParser[Tail]]):ackcord.commands.MessageParser[Head:+:Tail]", "kind" : "implicit def"}, {"label" : "cNilParser", "tail" : ": MessageParser[CNil]", "member" : "ackcord.commands.DeriveMessageParser.cNilParser", "link" : "ackcord\/commands\/MessageParser$.html#cNilParser:ackcord.commands.MessageParser[shapeless.CNil]", "kind" : "implicit val"}, {"label" : "hListParser", "tail" : "(headParser: Lazy[MessageParser[Head]], tailParser: Lazy[MessageParser[Tail]]): MessageParser[::[Head, Tail]]", "member" : "ackcord.commands.DeriveMessageParser.hListParser", "link" : "ackcord\/commands\/MessageParser$.html#hListParser[Head,Tail<:shapeless.HList](implicitheadParser:shapeless.Lazy[ackcord.commands.MessageParser[Head]],implicittailParser:shapeless.Lazy[ackcord.commands.MessageParser[Tail]]):ackcord.commands.MessageParser[Head::Tail]", "kind" : "implicit def"}, {"label" : "hNilParser", "tail" : ": MessageParser[HNil]", "member" : "ackcord.commands.DeriveMessageParser.hNilParser", "link" : "ackcord\/commands\/MessageParser$.html#hNilParser:ackcord.commands.MessageParser[shapeless.HNil]", "kind" : "implicit lazy val"}, {"label" : "orElseWith", "tail" : "(parse1: MessageParser[A], parse2: MessageParser[B])(combine: (Either[A, B]) => C): MessageParser[C]", "member" : "ackcord.commands.MessageParserInstances.orElseWith", "link" : "ackcord\/commands\/MessageParser$.html#orElseWith[A,B,C](parse1:ackcord.commands.MessageParser[A],parse2:ackcord.commands.MessageParser[B])(combine:Either[A,B]=>C):ackcord.commands.MessageParser[C]", "kind" : "def"}, {"label" : "optional", "tail" : "(parser: MessageParser[A]): MessageParser[Option[A]]", "member" : "ackcord.commands.MessageParserInstances.optional", "link" : "ackcord\/commands\/MessageParser$.html#optional[A](implicitparser:ackcord.commands.MessageParser[A]):ackcord.commands.MessageParser[Option[A]]", "kind" : "implicit def"}, {"label" : "notUsedParser", "tail" : ": MessageParser[NotUsed]", "member" : "ackcord.commands.MessageParserInstances.notUsedParser", "link" : "ackcord\/commands\/MessageParser$.html#notUsedParser:ackcord.commands.MessageParser[akka.NotUsed]", "kind" : "implicit val"}, {"label" : "allStringsParser", "tail" : ": MessageParser[List[String]]", "member" : "ackcord.commands.MessageParserInstances.allStringsParser", "link" : "ackcord\/commands\/MessageParser$.html#allStringsParser:ackcord.commands.MessageParser[List[String]]", "kind" : "val"}, {"label" : "textGuildChannelParser", "tail" : ": MessageParser[TextGuildChannel]", "member" : "ackcord.commands.MessageParserInstances.textGuildChannelParser", "link" : "ackcord\/commands\/MessageParser$.html#textGuildChannelParser:ackcord.commands.MessageParser[ackcord.data.TextGuildChannel]", "kind" : "implicit val"}, {"label" : "guildChannelParser", "tail" : ": MessageParser[GuildChannel]", "member" : "ackcord.commands.MessageParserInstances.guildChannelParser", "link" : "ackcord\/commands\/MessageParser$.html#guildChannelParser:ackcord.commands.MessageParser[ackcord.data.GuildChannel]", "kind" : "implicit val"}, {"label" : "textChannelParser", "tail" : ": MessageParser[TextChannel]", "member" : "ackcord.commands.MessageParserInstances.textChannelParser", "link" : "ackcord\/commands\/MessageParser$.html#textChannelParser:ackcord.commands.MessageParser[ackcord.data.TextChannel]", "kind" : "implicit val"}, {"label" : "emojiParser", "tail" : ": MessageParser[Emoji]", "member" : "ackcord.commands.MessageParserInstances.emojiParser", "link" : "ackcord\/commands\/MessageParser$.html#emojiParser:ackcord.commands.MessageParser[ackcord.data.Emoji]", "kind" : "implicit val"}, {"label" : "roleParser", "tail" : ": MessageParser[Role]", "member" : "ackcord.commands.MessageParserInstances.roleParser", "link" : "ackcord\/commands\/MessageParser$.html#roleParser:ackcord.commands.MessageParser[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "channelParser", "tail" : ": MessageParser[Channel]", "member" : "ackcord.commands.MessageParserInstances.channelParser", "link" : "ackcord\/commands\/MessageParser$.html#channelParser:ackcord.commands.MessageParser[ackcord.data.Channel]", "kind" : "implicit val"}, {"label" : "userParser", "tail" : ": MessageParser[User]", "member" : "ackcord.commands.MessageParserInstances.userParser", "link" : "ackcord\/commands\/MessageParser$.html#userParser:ackcord.commands.MessageParser[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "emojiRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.emojiRegex", "link" : "ackcord\/commands\/MessageParser$.html#emojiRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "roleRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.roleRegex", "link" : "ackcord\/commands\/MessageParser$.html#roleRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "channelRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.channelRegex", "link" : "ackcord\/commands\/MessageParser$.html#channelRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "userRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.userRegex", "link" : "ackcord\/commands\/MessageParser$.html#userRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "booleanParser", "tail" : ": MessageParser[Boolean]", "member" : "ackcord.commands.MessageParserInstances.booleanParser", "link" : "ackcord\/commands\/MessageParser$.html#booleanParser:ackcord.commands.MessageParser[Boolean]", "kind" : "implicit val"}, {"label" : "doubleParser", "tail" : ": MessageParser[Double]", "member" : "ackcord.commands.MessageParserInstances.doubleParser", "link" : "ackcord\/commands\/MessageParser$.html#doubleParser:ackcord.commands.MessageParser[Double]", "kind" : "implicit val"}, {"label" : "floatParser", "tail" : ": MessageParser[Float]", "member" : "ackcord.commands.MessageParserInstances.floatParser", "link" : "ackcord\/commands\/MessageParser$.html#floatParser:ackcord.commands.MessageParser[Float]", "kind" : "implicit val"}, {"label" : "longParser", "tail" : ": MessageParser[Long]", "member" : "ackcord.commands.MessageParserInstances.longParser", "link" : "ackcord\/commands\/MessageParser$.html#longParser:ackcord.commands.MessageParser[Long]", "kind" : "implicit val"}, {"label" : "intParser", "tail" : ": MessageParser[Int]", "member" : "ackcord.commands.MessageParserInstances.intParser", "link" : "ackcord\/commands\/MessageParser$.html#intParser:ackcord.commands.MessageParser[Int]", "kind" : "implicit val"}, {"label" : "shortParser", "tail" : ": MessageParser[Short]", "member" : "ackcord.commands.MessageParserInstances.shortParser", "link" : "ackcord\/commands\/MessageParser$.html#shortParser:ackcord.commands.MessageParser[Short]", "kind" : "implicit val"}, {"label" : "byteParser", "tail" : ": MessageParser[Byte]", "member" : "ackcord.commands.MessageParserInstances.byteParser", "link" : "ackcord\/commands\/MessageParser$.html#byteParser:ackcord.commands.MessageParser[Byte]", "kind" : "implicit val"}, {"label" : "stringParser", "tail" : ": MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.stringParser", "link" : "ackcord\/commands\/MessageParser$.html#stringParser:ackcord.commands.MessageParser[String]", "kind" : "implicit val"}, {"label" : "remainingStringParser", "tail" : ": MessageParser[RemainingAsString]", "member" : "ackcord.commands.MessageParserInstances.remainingStringParser", "link" : "ackcord\/commands\/MessageParser$.html#remainingStringParser:ackcord.commands.MessageParser[ackcord.commands.MessageParser.RemainingAsString]", "kind" : "implicit val"}, {"label" : "withTryCustomError", "tail" : "(errorMessage: (String) => String)(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.withTryCustomError", "link" : "ackcord\/commands\/MessageParser$.html#withTryCustomError[A](errorMessage:String=>String)(f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: String): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fail", "link" : "ackcord\/commands\/MessageParser$.html#fail[A](e:String):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(f: (String) => Either[String, A]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromEither", "link" : "ackcord\/commands\/MessageParser$.html#fromEither[A](f:String=>Either[String,A]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(f: (String) => Try[A]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromTry", "link" : "ackcord\/commands\/MessageParser$.html#fromTry[A](f:String=>scala.util.Try[A]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "withTry", "tail" : "(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.withTry", "link" : "ackcord\/commands\/MessageParser$.html#withTry[A](f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromString", "tail" : "(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromString", "link" : "ackcord\/commands\/MessageParser$.html#fromString[A](f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(seq: Seq[MessageParser[A]]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.oneOf", "link" : "ackcord\/commands\/MessageParser$.html#oneOf[A](seq:Seq[ackcord.commands.MessageParser[A]]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "startsWith", "tail" : "(prefix: String, caseSensitive: Boolean, consumeAll: Boolean): MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.startsWith", "link" : "ackcord\/commands\/MessageParser$.html#startsWith(prefix:String,caseSensitive:Boolean,consumeAll:Boolean):ackcord.commands.MessageParser[String]", "kind" : "def"}, {"label" : "literal", "tail" : "(lit: String, caseSensitive: Boolean): MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.literal", "link" : "ackcord\/commands\/MessageParser$.html#literal(lit:String,caseSensitive:Boolean):ackcord.commands.MessageParser[String]", "kind" : "def"}, {"label" : "unit", "tail" : "(): MessageParser[Unit]", "member" : "ackcord.commands.MessageParserInstances.unit", "link" : "ackcord\/commands\/MessageParser$.html#unit:ackcord.commands.MessageParser[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/MessageParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/MessageParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/MessageParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/MessageParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/MessageParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/MessageParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/MessageParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/MessageParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/MessageParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/MessageParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/MessageParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/MessageParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/MessageParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/MessageParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/MessageParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/MessageParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/MessageParser.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(that: MessageParser[B]): MessageParser[(A, B)]", "member" : "ackcord.commands.MessageParser.andThen", "link" : "ackcord\/commands\/MessageParser.html#andThen[B](that:ackcord.commands.MessageParser[B]):ackcord.commands.MessageParser[(A,B)]", "kind" : "def"}, {"label" : "orElseWith", "tail" : "(that: MessageParser[B])(f: (Either[A, B]) => C): MessageParser[C]", "member" : "ackcord.commands.MessageParser.orElseWith", "link" : "ackcord\/commands\/MessageParser.html#orElseWith[B,C](that:ackcord.commands.MessageParser[B])(f:Either[A,B]=>C):ackcord.commands.MessageParser[C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: MessageParser[B]): MessageParser[Either[A, B]]", "member" : "ackcord.commands.MessageParser.orElse", "link" : "ackcord\/commands\/MessageParser.html#orElse[B](that:ackcord.commands.MessageParser[B]):ackcord.commands.MessageParser[Either[A,B]]", "kind" : "def"}, {"label" : "collectWithError", "tail" : "(error: String)(pf: PartialFunction[A, B]): MessageParser[B]", "member" : "ackcord.commands.MessageParser.collectWithError", "link" : "ackcord\/commands\/MessageParser.html#collectWithError[B](error:String)(pf:PartialFunction[A,B]):ackcord.commands.MessageParser[B]", "kind" : "def"}, {"label" : "filterWithError", "tail" : "(f: (A) => Boolean, error: String): MessageParser[A]", "member" : "ackcord.commands.MessageParser.filterWithError", "link" : "ackcord\/commands\/MessageParser.html#filterWithError(f:A=>Boolean,error:String):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/MessageParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/MessageParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/MessageParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/MessageParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/MessageParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/MessageParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/MessageParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/MessageParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/MessageParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/MessageParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/MessageParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/MessageParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/MessageParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/MessageParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/MessageParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/MessageParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(c: CacheSnapshot, F: Monad[F], E: ApplicativeHandle[F, String], S: MonadState[F, List[String]]): F[A]", "member" : "ackcord.commands.MessageParser.parse", "link" : "ackcord\/commands\/MessageParser.html#parse[F[_]](implicitc:ackcord.CacheSnapshot,implicitF:cats.Monad[F],implicitE:cats.mtl.ApplicativeHandle[F,String],implicitS:cats.mtl.MonadState[F,List[String]]):F[A]", "kind" : "abstract def"}], "shortDescription" : "MessageParser is a typeclass to simplify parsing messages."}, {"name" : "ackcord.commands.MessageParserInstances", "trait" : "ackcord\/commands\/MessageParserInstances.html", "kind" : "trait", "members_trait" : [{"label" : "orElseWith", "tail" : "(parse1: MessageParser[A], parse2: MessageParser[B])(combine: (Either[A, B]) => C): MessageParser[C]", "member" : "ackcord.commands.MessageParserInstances.orElseWith", "link" : "ackcord\/commands\/MessageParserInstances.html#orElseWith[A,B,C](parse1:ackcord.commands.MessageParser[A],parse2:ackcord.commands.MessageParser[B])(combine:Either[A,B]=>C):ackcord.commands.MessageParser[C]", "kind" : "def"}, {"label" : "optional", "tail" : "(parser: MessageParser[A]): MessageParser[Option[A]]", "member" : "ackcord.commands.MessageParserInstances.optional", "link" : "ackcord\/commands\/MessageParserInstances.html#optional[A](implicitparser:ackcord.commands.MessageParser[A]):ackcord.commands.MessageParser[Option[A]]", "kind" : "implicit def"}, {"label" : "notUsedParser", "tail" : ": MessageParser[NotUsed]", "member" : "ackcord.commands.MessageParserInstances.notUsedParser", "link" : "ackcord\/commands\/MessageParserInstances.html#notUsedParser:ackcord.commands.MessageParser[akka.NotUsed]", "kind" : "implicit val"}, {"label" : "allStringsParser", "tail" : ": MessageParser[List[String]]", "member" : "ackcord.commands.MessageParserInstances.allStringsParser", "link" : "ackcord\/commands\/MessageParserInstances.html#allStringsParser:ackcord.commands.MessageParser[List[String]]", "kind" : "val"}, {"label" : "textGuildChannelParser", "tail" : ": MessageParser[TextGuildChannel]", "member" : "ackcord.commands.MessageParserInstances.textGuildChannelParser", "link" : "ackcord\/commands\/MessageParserInstances.html#textGuildChannelParser:ackcord.commands.MessageParser[ackcord.data.TextGuildChannel]", "kind" : "implicit val"}, {"label" : "guildChannelParser", "tail" : ": MessageParser[GuildChannel]", "member" : "ackcord.commands.MessageParserInstances.guildChannelParser", "link" : "ackcord\/commands\/MessageParserInstances.html#guildChannelParser:ackcord.commands.MessageParser[ackcord.data.GuildChannel]", "kind" : "implicit val"}, {"label" : "textChannelParser", "tail" : ": MessageParser[TextChannel]", "member" : "ackcord.commands.MessageParserInstances.textChannelParser", "link" : "ackcord\/commands\/MessageParserInstances.html#textChannelParser:ackcord.commands.MessageParser[ackcord.data.TextChannel]", "kind" : "implicit val"}, {"label" : "emojiParser", "tail" : ": MessageParser[Emoji]", "member" : "ackcord.commands.MessageParserInstances.emojiParser", "link" : "ackcord\/commands\/MessageParserInstances.html#emojiParser:ackcord.commands.MessageParser[ackcord.data.Emoji]", "kind" : "implicit val"}, {"label" : "roleParser", "tail" : ": MessageParser[Role]", "member" : "ackcord.commands.MessageParserInstances.roleParser", "link" : "ackcord\/commands\/MessageParserInstances.html#roleParser:ackcord.commands.MessageParser[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "channelParser", "tail" : ": MessageParser[Channel]", "member" : "ackcord.commands.MessageParserInstances.channelParser", "link" : "ackcord\/commands\/MessageParserInstances.html#channelParser:ackcord.commands.MessageParser[ackcord.data.Channel]", "kind" : "implicit val"}, {"label" : "userParser", "tail" : ": MessageParser[User]", "member" : "ackcord.commands.MessageParserInstances.userParser", "link" : "ackcord\/commands\/MessageParserInstances.html#userParser:ackcord.commands.MessageParser[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "emojiRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.emojiRegex", "link" : "ackcord\/commands\/MessageParserInstances.html#emojiRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "roleRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.roleRegex", "link" : "ackcord\/commands\/MessageParserInstances.html#roleRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "channelRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.channelRegex", "link" : "ackcord\/commands\/MessageParserInstances.html#channelRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "userRegex", "tail" : ": Regex", "member" : "ackcord.commands.MessageParserInstances.userRegex", "link" : "ackcord\/commands\/MessageParserInstances.html#userRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "booleanParser", "tail" : ": MessageParser[Boolean]", "member" : "ackcord.commands.MessageParserInstances.booleanParser", "link" : "ackcord\/commands\/MessageParserInstances.html#booleanParser:ackcord.commands.MessageParser[Boolean]", "kind" : "implicit val"}, {"label" : "doubleParser", "tail" : ": MessageParser[Double]", "member" : "ackcord.commands.MessageParserInstances.doubleParser", "link" : "ackcord\/commands\/MessageParserInstances.html#doubleParser:ackcord.commands.MessageParser[Double]", "kind" : "implicit val"}, {"label" : "floatParser", "tail" : ": MessageParser[Float]", "member" : "ackcord.commands.MessageParserInstances.floatParser", "link" : "ackcord\/commands\/MessageParserInstances.html#floatParser:ackcord.commands.MessageParser[Float]", "kind" : "implicit val"}, {"label" : "longParser", "tail" : ": MessageParser[Long]", "member" : "ackcord.commands.MessageParserInstances.longParser", "link" : "ackcord\/commands\/MessageParserInstances.html#longParser:ackcord.commands.MessageParser[Long]", "kind" : "implicit val"}, {"label" : "intParser", "tail" : ": MessageParser[Int]", "member" : "ackcord.commands.MessageParserInstances.intParser", "link" : "ackcord\/commands\/MessageParserInstances.html#intParser:ackcord.commands.MessageParser[Int]", "kind" : "implicit val"}, {"label" : "shortParser", "tail" : ": MessageParser[Short]", "member" : "ackcord.commands.MessageParserInstances.shortParser", "link" : "ackcord\/commands\/MessageParserInstances.html#shortParser:ackcord.commands.MessageParser[Short]", "kind" : "implicit val"}, {"label" : "byteParser", "tail" : ": MessageParser[Byte]", "member" : "ackcord.commands.MessageParserInstances.byteParser", "link" : "ackcord\/commands\/MessageParserInstances.html#byteParser:ackcord.commands.MessageParser[Byte]", "kind" : "implicit val"}, {"label" : "stringParser", "tail" : ": MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.stringParser", "link" : "ackcord\/commands\/MessageParserInstances.html#stringParser:ackcord.commands.MessageParser[String]", "kind" : "implicit val"}, {"label" : "remainingStringParser", "tail" : ": MessageParser[RemainingAsString]", "member" : "ackcord.commands.MessageParserInstances.remainingStringParser", "link" : "ackcord\/commands\/MessageParserInstances.html#remainingStringParser:ackcord.commands.MessageParser[ackcord.commands.MessageParser.RemainingAsString]", "kind" : "implicit val"}, {"label" : "withTryCustomError", "tail" : "(errorMessage: (String) => String)(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.withTryCustomError", "link" : "ackcord\/commands\/MessageParserInstances.html#withTryCustomError[A](errorMessage:String=>String)(f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: String): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fail", "link" : "ackcord\/commands\/MessageParserInstances.html#fail[A](e:String):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(f: (String) => Either[String, A]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromEither", "link" : "ackcord\/commands\/MessageParserInstances.html#fromEither[A](f:String=>Either[String,A]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(f: (String) => Try[A]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromTry", "link" : "ackcord\/commands\/MessageParserInstances.html#fromTry[A](f:String=>scala.util.Try[A]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "withTry", "tail" : "(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.withTry", "link" : "ackcord\/commands\/MessageParserInstances.html#withTry[A](f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "fromString", "tail" : "(f: (String) => A): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.fromString", "link" : "ackcord\/commands\/MessageParserInstances.html#fromString[A](f:String=>A):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(seq: Seq[MessageParser[A]]): MessageParser[A]", "member" : "ackcord.commands.MessageParserInstances.oneOf", "link" : "ackcord\/commands\/MessageParserInstances.html#oneOf[A](seq:Seq[ackcord.commands.MessageParser[A]]):ackcord.commands.MessageParser[A]", "kind" : "def"}, {"label" : "startsWith", "tail" : "(prefix: String, caseSensitive: Boolean, consumeAll: Boolean): MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.startsWith", "link" : "ackcord\/commands\/MessageParserInstances.html#startsWith(prefix:String,caseSensitive:Boolean,consumeAll:Boolean):ackcord.commands.MessageParser[String]", "kind" : "def"}, {"label" : "literal", "tail" : "(lit: String, caseSensitive: Boolean): MessageParser[String]", "member" : "ackcord.commands.MessageParserInstances.literal", "link" : "ackcord\/commands\/MessageParserInstances.html#literal(lit:String,caseSensitive:Boolean):ackcord.commands.MessageParser[String]", "kind" : "def"}, {"label" : "unit", "tail" : "(): MessageParser[Unit]", "member" : "ackcord.commands.MessageParserInstances.unit", "link" : "ackcord\/commands\/MessageParserInstances.html#unit:ackcord.commands.MessageParser[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/MessageParserInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/MessageParserInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/MessageParserInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/MessageParserInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/MessageParserInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/MessageParserInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/MessageParserInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParserInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParserInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/MessageParserInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/MessageParserInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/MessageParserInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/MessageParserInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/MessageParserInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/MessageParserInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/MessageParserInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/MessageParserInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/MessageParserInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/MessageParserInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.commands.NamedCommandBuilder", "shortDescription" : "A CommandFunction from a command message to an output.", "members_case class" : [{"label" : "andThen", "tail" : "(f: CommandFunction[M, M2]): NamedCommandBuilder[M2, A]", "member" : "ackcord.commands.NamedCommandBuilder.andThen", "link" : "ackcord\/commands\/NamedCommandBuilder.html#andThen[M2[_]](f:ackcord.commands.CommandFunction[M,M2]):ackcord.commands.NamedCommandBuilder[M2,A]", "kind" : "def"}, {"label" : "toSink", "tail" : "(sinkBlock: Sink[M[A], Mat]): NamedComplexCommand[A, Mat]", "member" : "ackcord.commands.NamedCommandBuilder.toSink", "link" : "ackcord\/commands\/NamedCommandBuilder.html#toSink[Mat](sinkBlock:akka.stream.scaladsl.Sink[M[A],Mat]):ackcord.commands.NamedComplexCommand[A,Mat]", "kind" : "def"}, {"label" : "parsing", "tail" : "(newParser: MessageParser[B]): NamedCommandBuilder[M, B]", "member" : "ackcord.commands.NamedCommandBuilder.parsing", "link" : "ackcord\/commands\/NamedCommandBuilder.html#parsing[B](implicitnewParser:ackcord.commands.MessageParser[B]):ackcord.commands.NamedCommandBuilder[M,B]", "kind" : "def"}, {"label" : "described", "tail" : "(name: String, description: String, usage: String, extra: Map[String, String]): NamedDescribedCommandBuilder[M, A]", "member" : "ackcord.commands.NamedCommandBuilder.described", "link" : "ackcord\/commands\/NamedCommandBuilder.html#described(name:String,description:String,usage:String,extra:Map[String,String]):ackcord.commands.NamedDescribedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "described", "tail" : "(description: CommandDescription): NamedDescribedCommandBuilder[M, A]", "member" : "ackcord.commands.NamedCommandBuilder.described", "link" : "ackcord\/commands\/NamedCommandBuilder.html#described(description:ackcord.commands.CommandDescription):ackcord.commands.NamedDescribedCommandBuilder[M,A]", "kind" : "def"}, {"label" : "flow", "tail" : "(): Flow[CommandMessage[C], Either[Option[CommandError], M[C]], NotUsed]", "member" : "ackcord.commands.NamedCommandBuilder.flow", "link" : "ackcord\/commands\/NamedCommandBuilder.html#flow[C]:akka.stream.scaladsl.Flow[ackcord.commands.CommandMessage[C],Either[Option[ackcord.commands.CommandError],M[C]],akka.NotUsed]", "kind" : "def"}, {"label" : "Action", "tail" : "", "member" : "ackcord.commands.NamedCommandBuilder.Action", "link" : "ackcord\/commands\/NamedCommandBuilder.html#Action[B,Mat]=ackcord.commands.NamedComplexCommand[B,Mat]", "kind" : "type"}, {"member" : "ackcord.commands.NamedCommandBuilder#<init>", "error" : "unsupported entity"}, {"member" : "ackcord.commands.NamedCommandBuilder#<init>", "error" : "unsupported entity"}, {"label" : "actionFunction", "tail" : ": ActionFunction[CommandMessage, M, CommandError]", "member" : "ackcord.commands.NamedCommandBuilder.actionFunction", "link" : "ackcord\/commands\/NamedCommandBuilder.html#actionFunction:ackcord.commands.ActionFunction[ackcord.commands.CommandMessage,M,ackcord.commands.CommandError]", "kind" : "val"}, {"label" : "parser", "tail" : ": MessageParser[A]", "member" : "ackcord.commands.NamedCommandBuilder.parser", "link" : "ackcord\/commands\/NamedCommandBuilder.html#parser:ackcord.commands.MessageParser[A]", "kind" : "val"}, {"label" : "prefixParser", "tail" : ": StructuredPrefixParser", "member" : "ackcord.commands.NamedCommandBuilder.prefixParser", "link" : "ackcord\/commands\/NamedCommandBuilder.html#prefixParser:ackcord.commands.StructuredPrefixParser", "kind" : "val"}, {"label" : "defaultMentionOrPrefix", "tail" : ": Boolean", "member" : "ackcord.commands.NamedCommandBuilder.defaultMentionOrPrefix", "link" : "ackcord\/commands\/NamedCommandBuilder.html#defaultMentionOrPrefix:Boolean", "kind" : "val"}, {"label" : "defaultMustMention", "tail" : ": Boolean", "member" : "ackcord.commands.NamedCommandBuilder.defaultMustMention", "link" : "ackcord\/commands\/NamedCommandBuilder.html#defaultMustMention:Boolean", "kind" : "val"}, {"label" : "requests", "tail" : ": requests.Requests", "member" : "ackcord.commands.NamedCommandBuilder.requests", "link" : "ackcord\/commands\/NamedCommandBuilder.html#requests:ackcord.requests.Requests", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/NamedCommandBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withSideEffects", "tail" : "(block: (M[A]) => Unit): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withSideEffects", "link" : "ackcord\/commands\/NamedCommandBuilder.html#withSideEffects(block:O[A]=>Unit):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequestOpt", "tail" : "(block: (M[A]) => Option[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequestOpt", "link" : "ackcord\/commands\/NamedCommandBuilder.html#withRequestOpt(block:O[A]=>Option[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequest", "tail" : "(block: (M[A]) => Request[Any]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequest", "link" : "ackcord\/commands\/NamedCommandBuilder.html#withRequest(block:O[A]=>ackcord.requests.Request[Any]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOptRequest", "tail" : "(block: (M[A]) => OptFuture[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOptRequest", "link" : "ackcord\/commands\/NamedCommandBuilder.html#asyncOptRequest[G[_]](block:O[A]=>ackcord.OptFuture[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOpt", "tail" : "(block: (M[A]) => OptFuture[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOpt", "link" : "ackcord\/commands\/NamedCommandBuilder.html#asyncOpt(block:O[A]=>ackcord.OptFuture[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "async", "tail" : "(block: (M[A]) => Future[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.async", "link" : "ackcord\/commands\/NamedCommandBuilder.html#async(block:O[A]=>scala.concurrent.Future[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamedOptRequest", "tail" : "(block: (M[A]) => OptionT[G, Request[Any]])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamedOptRequest", "link" : "ackcord\/commands\/NamedCommandBuilder.html#streamedOptRequest[G[_]](block:O[A]=>cats.data.OptionT[G,ackcord.requests.Request[Any]])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamed", "tail" : "(block: (M[A]) => G[Unit])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamed", "link" : "ackcord\/commands\/NamedCommandBuilder.html#streamed[G[_]](block:O[A]=>G[Unit])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/NamedCommandBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/NamedCommandBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/NamedCommandBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/NamedCommandBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/NamedCommandBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/NamedCommandBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/NamedCommandBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedCommandBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedCommandBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedCommandBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/NamedCommandBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/NamedCommandBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/NamedCommandBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/NamedCommandBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/NamedCommandBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/NamedCommandBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/NamedCommandBuilder.html", "kind" : "case class"}, {"name" : "ackcord.commands.NamedComplexCommand", "shortDescription" : "A constructed command execution with a name.", "members_case class" : [{"label" : "toDescribed", "tail" : "(description: CommandDescription): NamedDescribedComplexCommand[A, Mat]", "member" : "ackcord.commands.NamedComplexCommand.toDescribed", "link" : "ackcord\/commands\/NamedComplexCommand.html#toDescribed(description:ackcord.commands.CommandDescription):ackcord.commands.NamedDescribedComplexCommand[A,Mat]", "kind" : "def"}, {"member" : "ackcord.commands.NamedComplexCommand#<init>", "error" : "unsupported entity"}, {"label" : "prefixParser", "tail" : ": StructuredPrefixParser", "member" : "ackcord.commands.NamedComplexCommand.prefixParser", "link" : "ackcord\/commands\/NamedComplexCommand.html#prefixParser:ackcord.commands.StructuredPrefixParser", "kind" : "val"}, {"label" : "command", "tail" : ": ComplexCommand[A, Mat]", "member" : "ackcord.commands.NamedComplexCommand.command", "link" : "ackcord\/commands\/NamedComplexCommand.html#command:ackcord.commands.ComplexCommand[A,Mat]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/NamedComplexCommand.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/NamedComplexCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/NamedComplexCommand.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/NamedComplexCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/NamedComplexCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/NamedComplexCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/NamedComplexCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/NamedComplexCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedComplexCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedComplexCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedComplexCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/NamedComplexCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/NamedComplexCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/NamedComplexCommand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/NamedComplexCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/NamedComplexCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/NamedComplexCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/NamedComplexCommand.html", "kind" : "case class"}, {"name" : "ackcord.commands.NamedDescribedCommandBuilder", "shortDescription" : "A CommandFunction from a command message to an output.", "members_case class" : [{"label" : "andThen", "tail" : "(f: CommandFunction[M, M2]): NamedDescribedCommandBuilder[M2, A]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.andThen", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#andThen[M2[_]](f:ackcord.commands.CommandFunction[M,M2]):ackcord.commands.NamedDescribedCommandBuilder[M2,A]", "kind" : "def"}, {"label" : "toSink", "tail" : "(sinkBlock: Sink[M[A], Mat]): NamedDescribedComplexCommand[A, Mat]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.toSink", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#toSink[Mat](sinkBlock:akka.stream.scaladsl.Sink[M[A],Mat]):ackcord.commands.NamedDescribedComplexCommand[A,Mat]", "kind" : "def"}, {"label" : "parsing", "tail" : "(newParser: MessageParser[B]): NamedDescribedCommandBuilder[M, B]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.parsing", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#parsing[B](implicitnewParser:ackcord.commands.MessageParser[B]):ackcord.commands.NamedDescribedCommandBuilder[M,B]", "kind" : "def"}, {"label" : "flow", "tail" : "(): Flow[CommandMessage[C], Either[Option[CommandError], M[C]], NotUsed]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.flow", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#flow[C]:akka.stream.scaladsl.Flow[ackcord.commands.CommandMessage[C],Either[Option[ackcord.commands.CommandError],M[C]],akka.NotUsed]", "kind" : "def"}, {"label" : "Action", "tail" : "", "member" : "ackcord.commands.NamedDescribedCommandBuilder.Action", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#Action[B,Mat]=ackcord.commands.NamedDescribedComplexCommand[B,Mat]", "kind" : "type"}, {"member" : "ackcord.commands.NamedDescribedCommandBuilder#<init>", "error" : "unsupported entity"}, {"member" : "ackcord.commands.NamedDescribedCommandBuilder#<init>", "error" : "unsupported entity"}, {"label" : "actionFunction", "tail" : ": ActionFunction[CommandMessage, M, CommandError]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.actionFunction", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#actionFunction:ackcord.commands.ActionFunction[ackcord.commands.CommandMessage,M,ackcord.commands.CommandError]", "kind" : "val"}, {"label" : "parser", "tail" : ": MessageParser[A]", "member" : "ackcord.commands.NamedDescribedCommandBuilder.parser", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#parser:ackcord.commands.MessageParser[A]", "kind" : "val"}, {"label" : "description", "tail" : ": CommandDescription", "member" : "ackcord.commands.NamedDescribedCommandBuilder.description", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#description:ackcord.commands.CommandDescription", "kind" : "val"}, {"label" : "prefixParser", "tail" : ": StructuredPrefixParser", "member" : "ackcord.commands.NamedDescribedCommandBuilder.prefixParser", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#prefixParser:ackcord.commands.StructuredPrefixParser", "kind" : "val"}, {"label" : "defaultMentionOrPrefix", "tail" : ": Boolean", "member" : "ackcord.commands.NamedDescribedCommandBuilder.defaultMentionOrPrefix", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#defaultMentionOrPrefix:Boolean", "kind" : "val"}, {"label" : "defaultMustMention", "tail" : ": Boolean", "member" : "ackcord.commands.NamedDescribedCommandBuilder.defaultMustMention", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#defaultMustMention:Boolean", "kind" : "val"}, {"label" : "requests", "tail" : ": requests.Requests", "member" : "ackcord.commands.NamedDescribedCommandBuilder.requests", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#requests:ackcord.requests.Requests", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withSideEffects", "tail" : "(block: (M[A]) => Unit): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withSideEffects", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#withSideEffects(block:O[A]=>Unit):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequestOpt", "tail" : "(block: (M[A]) => Option[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequestOpt", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#withRequestOpt(block:O[A]=>Option[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "withRequest", "tail" : "(block: (M[A]) => Request[Any]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.withRequest", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#withRequest(block:O[A]=>ackcord.requests.Request[Any]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOptRequest", "tail" : "(block: (M[A]) => OptFuture[Request[Any]]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOptRequest", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#asyncOptRequest[G[_]](block:O[A]=>ackcord.OptFuture[ackcord.requests.Request[Any]]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "asyncOpt", "tail" : "(block: (M[A]) => OptFuture[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.asyncOpt", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#asyncOpt(block:O[A]=>ackcord.OptFuture[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "async", "tail" : "(block: (M[A]) => Future[Unit]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.async", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#async(block:O[A]=>scala.concurrent.Future[Unit]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamedOptRequest", "tail" : "(block: (M[A]) => OptionT[G, Request[Any]])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamedOptRequest", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#streamedOptRequest[G[_]](block:O[A]=>cats.data.OptionT[G,ackcord.requests.Request[Any]])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "streamed", "tail" : "(block: (M[A]) => G[Unit])(streamable: util.Streamable[G]): Action[A, NotUsed]", "member" : "ackcord.commands.ActionBuilder.streamed", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#streamed[G[_]](block:O[A]=>G[Unit])(implicitstreamable:ackcord.util.Streamable[G]):ActionBuilder.this.Action[A,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/NamedDescribedCommandBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/NamedDescribedCommandBuilder.html", "kind" : "case class"}, {"name" : "ackcord.commands.NamedDescribedComplexCommand", "shortDescription" : "A constructed command execution with a name and a description.", "members_case class" : [{"member" : "ackcord.commands.NamedDescribedComplexCommand#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": CommandDescription", "member" : "ackcord.commands.NamedDescribedComplexCommand.description", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#description:ackcord.commands.CommandDescription", "kind" : "val"}, {"label" : "prefixParser", "tail" : ": StructuredPrefixParser", "member" : "ackcord.commands.NamedDescribedComplexCommand.prefixParser", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#prefixParser:ackcord.commands.StructuredPrefixParser", "kind" : "val"}, {"label" : "command", "tail" : ": ComplexCommand[A, Mat]", "member" : "ackcord.commands.NamedDescribedComplexCommand.command", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#command:ackcord.commands.ComplexCommand[A,Mat]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/NamedDescribedComplexCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/NamedDescribedComplexCommand.html", "kind" : "case class"}, {"name" : "ackcord.commands.PrefixParser", "object" : "ackcord\/commands\/PrefixParser$.html", "members_object" : [{"label" : "fromFunction", "tail" : "(f: (CacheSnapshot, Message) => MessageParser[Unit]): PrefixParser", "member" : "ackcord.commands.PrefixParser.fromFunction", "link" : "ackcord\/commands\/PrefixParser$.html#fromFunction(f:(ackcord.CacheSnapshot,ackcord.data.Message)=>ackcord.commands.MessageParser[Unit]):ackcord.commands.PrefixParser", "kind" : "def"}, {"label" : "fromFunctionAsync", "tail" : "(f: (CacheSnapshot, Message) => Future[MessageParser[Unit]]): PrefixParser", "member" : "ackcord.commands.PrefixParser.fromFunctionAsync", "link" : "ackcord\/commands\/PrefixParser$.html#fromFunctionAsync(f:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[ackcord.commands.MessageParser[Unit]]):ackcord.commands.PrefixParser", "kind" : "def"}, {"label" : "structuredAsync", "tail" : "(needsMention: (CacheSnapshot, Message) => Future[Boolean], symbols: (CacheSnapshot, Message) => Future[Seq[String]], aliases: (CacheSnapshot, Message) => Future[Seq[String]], caseSensitive: (CacheSnapshot, Message) => Future[Boolean], canExecute: (CacheSnapshot, Message) => Future[Boolean], mentionOrPrefix: (CacheSnapshot, Message) => Future[Boolean]): StructuredPrefixParser", "member" : "ackcord.commands.PrefixParser.structuredAsync", "link" : "ackcord\/commands\/PrefixParser$.html#structuredAsync(needsMention:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],symbols:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]],aliases:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]],caseSensitive:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],canExecute:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean],mentionOrPrefix:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]):ackcord.commands.StructuredPrefixParser", "kind" : "def"}, {"label" : "structuredFunction", "tail" : "(needsMention: (CacheSnapshot, Message) => Boolean, symbols: (CacheSnapshot, Message) => Seq[String], aliases: (CacheSnapshot, Message) => Seq[String], caseSensitive: (CacheSnapshot, Message) => Boolean, canExecute: (CacheSnapshot, Message) => Boolean, mentionOrPrefix: (CacheSnapshot, Message) => Boolean): StructuredPrefixParser", "member" : "ackcord.commands.PrefixParser.structuredFunction", "link" : "ackcord\/commands\/PrefixParser$.html#structuredFunction(needsMention:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,symbols:(ackcord.CacheSnapshot,ackcord.data.Message)=>Seq[String],aliases:(ackcord.CacheSnapshot,ackcord.data.Message)=>Seq[String],caseSensitive:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,canExecute:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean,mentionOrPrefix:(ackcord.CacheSnapshot,ackcord.data.Message)=>Boolean):ackcord.commands.StructuredPrefixParser", "kind" : "def"}, {"label" : "structured", "tail" : "(needsMention: Boolean, symbols: Seq[String], aliases: Seq[String], caseSensitive: Boolean, mentionOrPrefix: Boolean): StructuredPrefixParser", "member" : "ackcord.commands.PrefixParser.structured", "link" : "ackcord\/commands\/PrefixParser$.html#structured(needsMention:Boolean,symbols:Seq[String],aliases:Seq[String],caseSensitive:Boolean,mentionOrPrefix:Boolean):ackcord.commands.StructuredPrefixParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/PrefixParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/PrefixParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/PrefixParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/PrefixParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/PrefixParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/PrefixParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/PrefixParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/PrefixParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/PrefixParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/PrefixParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/PrefixParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/PrefixParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/PrefixParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/PrefixParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/PrefixParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/PrefixParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/PrefixParser.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/PrefixParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/PrefixParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/PrefixParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/PrefixParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/PrefixParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/PrefixParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/PrefixParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/PrefixParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/PrefixParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/PrefixParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/PrefixParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/PrefixParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/PrefixParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/PrefixParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/PrefixParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/PrefixParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/PrefixParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(message: Message)(c: CacheSnapshot, ec: ExecutionContext): Future[MessageParser[Unit]]", "member" : "ackcord.commands.PrefixParser.apply", "link" : "ackcord\/commands\/PrefixParser.html#apply(message:ackcord.data.Message)(implicitc:ackcord.CacheSnapshot,implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ackcord.commands.MessageParser[Unit]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.commands.StructuredPrefixParser", "shortDescription" : "Represents information about how a command can be invoked in a structural way.", "members_case class" : [{"label" : "apply", "tail" : "(message: Message)(c: CacheSnapshot, ec: ExecutionContext): Future[MessageParser[Unit]]", "member" : "ackcord.commands.StructuredPrefixParser.apply", "link" : "ackcord\/commands\/StructuredPrefixParser.html#apply(message:ackcord.data.Message)(implicitc:ackcord.CacheSnapshot,implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ackcord.commands.MessageParser[Unit]]", "kind" : "def"}, {"member" : "ackcord.commands.StructuredPrefixParser#<init>", "error" : "unsupported entity"}, {"label" : "mentionOrPrefix", "tail" : ": (CacheSnapshot, Message) => Future[Boolean]", "member" : "ackcord.commands.StructuredPrefixParser.mentionOrPrefix", "link" : "ackcord\/commands\/StructuredPrefixParser.html#mentionOrPrefix:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]", "kind" : "val"}, {"label" : "canExecute", "tail" : ": (CacheSnapshot, Message) => Future[Boolean]", "member" : "ackcord.commands.StructuredPrefixParser.canExecute", "link" : "ackcord\/commands\/StructuredPrefixParser.html#canExecute:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]", "kind" : "val"}, {"label" : "caseSensitive", "tail" : ": (CacheSnapshot, Message) => Future[Boolean]", "member" : "ackcord.commands.StructuredPrefixParser.caseSensitive", "link" : "ackcord\/commands\/StructuredPrefixParser.html#caseSensitive:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]", "kind" : "val"}, {"label" : "aliases", "tail" : ": (CacheSnapshot, Message) => Future[Seq[String]]", "member" : "ackcord.commands.StructuredPrefixParser.aliases", "link" : "ackcord\/commands\/StructuredPrefixParser.html#aliases:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]]", "kind" : "val"}, {"label" : "symbols", "tail" : ": (CacheSnapshot, Message) => Future[Seq[String]]", "member" : "ackcord.commands.StructuredPrefixParser.symbols", "link" : "ackcord\/commands\/StructuredPrefixParser.html#symbols:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Seq[String]]", "kind" : "val"}, {"label" : "needsMention", "tail" : ": (CacheSnapshot, Message) => Future[Boolean]", "member" : "ackcord.commands.StructuredPrefixParser.needsMention", "link" : "ackcord\/commands\/StructuredPrefixParser.html#needsMention:(ackcord.CacheSnapshot,ackcord.data.Message)=>scala.concurrent.Future[Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/commands\/StructuredPrefixParser.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/StructuredPrefixParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/StructuredPrefixParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/StructuredPrefixParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/StructuredPrefixParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/StructuredPrefixParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/StructuredPrefixParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/StructuredPrefixParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/StructuredPrefixParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/StructuredPrefixParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/StructuredPrefixParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/StructuredPrefixParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/StructuredPrefixParser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/StructuredPrefixParser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/StructuredPrefixParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/StructuredPrefixParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/StructuredPrefixParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/commands\/StructuredPrefixParser.html", "kind" : "case class"}, {"name" : "ackcord.commands.UserCommandMessage", "object" : "ackcord\/commands\/UserCommandMessage$.html", "members_object" : [{"label" : "Default", "tail" : "", "member" : "ackcord.commands.UserCommandMessage.Default", "link" : "ackcord\/commands\/UserCommandMessage$.html#Default[A]extendsWrappedCommandMessage[A]withUserCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/UserCommandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/UserCommandMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/UserCommandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/UserCommandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/UserCommandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/UserCommandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/UserCommandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/UserCommandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/UserCommandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/UserCommandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/UserCommandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/UserCommandMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/UserCommandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/UserCommandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/UserCommandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/UserCommandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/UserCommandMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/UserCommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/UserCommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/UserCommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/UserCommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/UserCommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/UserCommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/UserCommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/UserCommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/UserCommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/UserCommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/UserCommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/UserCommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/UserCommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/UserCommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/UserCommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/UserCommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/UserCommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "user", "tail" : "(): User", "member" : "ackcord.commands.UserCommandMessage.user", "link" : "ackcord\/commands\/UserCommandMessage.html#user:ackcord.data.User", "kind" : "abstract def"}, {"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.CommandMessage.parsed", "link" : "ackcord\/commands\/UserCommandMessage.html#parsed:A", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): Message", "member" : "ackcord.commands.CommandMessage.message", "link" : "ackcord\/commands\/UserCommandMessage.html#message:ackcord.data.Message", "kind" : "abstract def"}, {"label" : "textChannel", "tail" : "(): TextChannel", "member" : "ackcord.commands.CommandMessage.textChannel", "link" : "ackcord\/commands\/UserCommandMessage.html#textChannel:ackcord.data.TextChannel", "kind" : "abstract def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.cache", "link" : "ackcord\/commands\/UserCommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "abstract def"}], "shortDescription" : "A message sent with the invocation of command used by a user"}, {"name" : "ackcord.commands.VoiceGuildCommandMessage", "object" : "ackcord\/commands\/VoiceGuildCommandMessage$.html", "members_object" : [{"label" : "WithGuildMember", "tail" : "", "member" : "ackcord.commands.VoiceGuildCommandMessage.WithGuildMember", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#WithGuildMember[A]extendsWrappedCommandMessage[A]withVoiceGuildCommandMessage[A]withGuildMemberCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Default", "tail" : "", "member" : "ackcord.commands.VoiceGuildCommandMessage.Default", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#Default[A]extendsWrappedCommandMessage[A]withVoiceGuildCommandMessage[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/VoiceGuildCommandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/commands\/VoiceGuildCommandMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "voiceChannel", "tail" : "(): VoiceGuildChannel", "member" : "ackcord.commands.VoiceGuildCommandMessage.voiceChannel", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#voiceChannel:ackcord.data.VoiceGuildChannel", "kind" : "abstract def"}, {"label" : "user", "tail" : "(): User", "member" : "ackcord.commands.UserCommandMessage.user", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#user:ackcord.data.User", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): GuildGatewayMessage", "member" : "ackcord.commands.GuildCommandMessage.message", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#message:ackcord.data.GuildGatewayMessage", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(): Guild", "member" : "ackcord.commands.GuildCommandMessage.guild", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#guild:ackcord.data.Guild", "kind" : "abstract def"}, {"label" : "textChannel", "tail" : "(): TextGuildChannel", "member" : "ackcord.commands.GuildCommandMessage.textChannel", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#textChannel:ackcord.data.TextGuildChannel", "kind" : "abstract def"}, {"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.CommandMessage.parsed", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#parsed:A", "kind" : "abstract def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.CommandMessage.cache", "link" : "ackcord\/commands\/VoiceGuildCommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.commands.WrappedCommandMessage", "shortDescription" : "", "members_class" : [{"label" : "parsed", "tail" : "(): A", "member" : "ackcord.commands.WrappedCommandMessage.parsed", "link" : "ackcord\/commands\/WrappedCommandMessage.html#parsed:A", "kind" : "def"}, {"label" : "message", "tail" : "(): Message", "member" : "ackcord.commands.WrappedCommandMessage.message", "link" : "ackcord\/commands\/WrappedCommandMessage.html#message:ackcord.data.Message", "kind" : "def"}, {"label" : "textChannel", "tail" : "(): TextChannel", "member" : "ackcord.commands.WrappedCommandMessage.textChannel", "link" : "ackcord\/commands\/WrappedCommandMessage.html#textChannel:ackcord.data.TextChannel", "kind" : "def"}, {"label" : "cache", "tail" : "(): CacheSnapshot", "member" : "ackcord.commands.WrappedCommandMessage.cache", "link" : "ackcord\/commands\/WrappedCommandMessage.html#cache:ackcord.CacheSnapshot", "kind" : "def"}, {"member" : "ackcord.commands.WrappedCommandMessage#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/commands\/WrappedCommandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/commands\/WrappedCommandMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/commands\/WrappedCommandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/commands\/WrappedCommandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/commands\/WrappedCommandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/commands\/WrappedCommandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/commands\/WrappedCommandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/WrappedCommandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/WrappedCommandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/commands\/WrappedCommandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/commands\/WrappedCommandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/commands\/WrappedCommandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/commands\/WrappedCommandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/commands\/WrappedCommandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/commands\/WrappedCommandMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/commands\/WrappedCommandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/commands\/WrappedCommandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/commands\/WrappedCommandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/commands\/WrappedCommandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/commands\/WrappedCommandMessage.html", "kind" : "class"}], "ackcord.data" : [{"name" : "ackcord.data.Activity", "trait" : "ackcord\/data\/Activity.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Activity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Activity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Activity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Activity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Activity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Activity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Activity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Activity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Activity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Activity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Activity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Activity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/Activity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Activity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/Activity.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/Activity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Activity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Activity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Activity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "assets", "tail" : "(): Option[ActivityAsset]", "member" : "ackcord.data.Activity.assets", "link" : "ackcord\/data\/Activity.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "abstract def"}, {"label" : "details", "tail" : "(): Option[String]", "member" : "ackcord.data.Activity.details", "link" : "ackcord\/data\/Activity.html#details:Option[String]", "kind" : "abstract def"}, {"label" : "timestamps", "tail" : "(): Option[ActivityTimestamps]", "member" : "ackcord.data.Activity.timestamps", "link" : "ackcord\/data\/Activity.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.data.Activity.name", "link" : "ackcord\/data\/Activity.html#name:String", "kind" : "abstract def"}, {"label" : "createdAt", "tail" : "(): Instant", "member" : "ackcord.data.Activity.createdAt", "link" : "ackcord\/data\/Activity.html#createdAt:java.time.Instant", "kind" : "abstract def"}], "shortDescription" : "The text in a presence"}, {"name" : "ackcord.data.ActivityAsset", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.ActivityAsset#<init>", "error" : "unsupported entity"}, {"label" : "smallText", "tail" : ": Option[String]", "member" : "ackcord.data.ActivityAsset.smallText", "link" : "ackcord\/data\/ActivityAsset.html#smallText:Option[String]", "kind" : "val"}, {"label" : "smallImage", "tail" : ": Option[String]", "member" : "ackcord.data.ActivityAsset.smallImage", "link" : "ackcord\/data\/ActivityAsset.html#smallImage:Option[String]", "kind" : "val"}, {"label" : "largeText", "tail" : ": Option[String]", "member" : "ackcord.data.ActivityAsset.largeText", "link" : "ackcord\/data\/ActivityAsset.html#largeText:Option[String]", "kind" : "val"}, {"label" : "largeImage", "tail" : ": Option[String]", "member" : "ackcord.data.ActivityAsset.largeImage", "link" : "ackcord\/data\/ActivityAsset.html#largeImage:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ActivityAsset.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ActivityAsset.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ActivityAsset.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ActivityAsset.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ActivityAsset.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ActivityAsset.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ActivityAsset.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ActivityAsset.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityAsset.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityAsset.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityAsset.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ActivityAsset.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ActivityAsset.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ActivityAsset.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ActivityAsset.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ActivityAsset.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ActivityAsset.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ActivityAsset.html", "kind" : "case class"}, {"name" : "ackcord.data.ActivityEmoji", "shortDescription" : "The emoji of a custom status.", "members_case class" : [{"member" : "ackcord.data.ActivityEmoji#<init>", "error" : "unsupported entity"}, {"label" : "animated", "tail" : ": Option[Boolean]", "member" : "ackcord.data.ActivityEmoji.animated", "link" : "ackcord\/data\/ActivityEmoji.html#animated:Option[Boolean]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[EmojiId]", "member" : "ackcord.data.ActivityEmoji.id", "link" : "ackcord\/data\/ActivityEmoji.html#id:Option[ackcord.data.EmojiId]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.ActivityEmoji.name", "link" : "ackcord\/data\/ActivityEmoji.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ActivityEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ActivityEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ActivityEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ActivityEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ActivityEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ActivityEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ActivityEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ActivityEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ActivityEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ActivityEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ActivityEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ActivityEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ActivityEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ActivityEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ActivityEmoji.html", "kind" : "case class"}, {"name" : "ackcord.data.ActivityParty", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.ActivityParty#<init>", "error" : "unsupported entity"}, {"label" : "maxSize", "tail" : ": Option[Int]", "member" : "ackcord.data.ActivityParty.maxSize", "link" : "ackcord\/data\/ActivityParty.html#maxSize:Option[Int]", "kind" : "val"}, {"label" : "currentSize", "tail" : ": Option[Int]", "member" : "ackcord.data.ActivityParty.currentSize", "link" : "ackcord\/data\/ActivityParty.html#currentSize:Option[Int]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "ackcord.data.ActivityParty.id", "link" : "ackcord\/data\/ActivityParty.html#id:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ActivityParty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ActivityParty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ActivityParty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ActivityParty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ActivityParty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ActivityParty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ActivityParty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ActivityParty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityParty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityParty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityParty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ActivityParty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ActivityParty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ActivityParty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ActivityParty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ActivityParty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ActivityParty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ActivityParty.html", "kind" : "case class"}, {"name" : "ackcord.data.ActivityTimestamps", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.ActivityTimestamps#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Option[Instant]", "member" : "ackcord.data.ActivityTimestamps.end", "link" : "ackcord\/data\/ActivityTimestamps.html#end:Option[java.time.Instant]", "kind" : "val"}, {"label" : "start", "tail" : ": Option[Instant]", "member" : "ackcord.data.ActivityTimestamps.start", "link" : "ackcord\/data\/ActivityTimestamps.html#start:Option[java.time.Instant]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ActivityTimestamps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ActivityTimestamps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ActivityTimestamps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ActivityTimestamps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ActivityTimestamps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ActivityTimestamps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ActivityTimestamps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ActivityTimestamps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityTimestamps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityTimestamps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ActivityTimestamps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ActivityTimestamps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ActivityTimestamps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ActivityTimestamps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ActivityTimestamps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ActivityTimestamps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ActivityTimestamps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ActivityTimestamps.html", "kind" : "case class"}, {"name" : "ackcord.data.Attachment", "shortDescription" : "An attachment for a message", "members_case class" : [{"member" : "ackcord.data.Attachment#<init>", "error" : "unsupported entity"}, {"label" : "width", "tail" : ": Option[Int]", "member" : "ackcord.data.Attachment.width", "link" : "ackcord\/data\/Attachment.html#width:Option[Int]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Int]", "member" : "ackcord.data.Attachment.height", "link" : "ackcord\/data\/Attachment.html#height:Option[Int]", "kind" : "val"}, {"label" : "proxyUrl", "tail" : ": String", "member" : "ackcord.data.Attachment.proxyUrl", "link" : "ackcord\/data\/Attachment.html#proxyUrl:String", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "ackcord.data.Attachment.url", "link" : "ackcord\/data\/Attachment.html#url:String", "kind" : "val"}, {"label" : "size", "tail" : ": Int", "member" : "ackcord.data.Attachment.size", "link" : "ackcord\/data\/Attachment.html#size:Int", "kind" : "val"}, {"label" : "filename", "tail" : ": String", "member" : "ackcord.data.Attachment.filename", "link" : "ackcord\/data\/Attachment.html#filename:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Attachment]", "member" : "ackcord.data.Attachment.id", "link" : "ackcord\/data\/Attachment.html#id:ackcord.data.SnowflakeType[ackcord.data.Attachment]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Attachment.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Attachment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Attachment.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Attachment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Attachment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Attachment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Attachment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Attachment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Attachment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Attachment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Attachment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Attachment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Attachment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Attachment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Attachment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Attachment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Attachment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Attachment.html", "kind" : "case class"}, {"name" : "ackcord.data.AuditLog", "shortDescription" : "Root audit log object.", "members_case class" : [{"member" : "ackcord.data.AuditLog#<init>", "error" : "unsupported entity"}, {"label" : "integrations", "tail" : ": Seq[PartialIntegration]", "member" : "ackcord.data.AuditLog.integrations", "link" : "ackcord\/data\/AuditLog.html#integrations:Seq[ackcord.data.PartialIntegration]", "kind" : "val"}, {"label" : "auditLogEntries", "tail" : ": Seq[AuditLogEntry]", "member" : "ackcord.data.AuditLog.auditLogEntries", "link" : "ackcord\/data\/AuditLog.html#auditLogEntries:Seq[ackcord.data.AuditLogEntry]", "kind" : "val"}, {"label" : "users", "tail" : ": Seq[User]", "member" : "ackcord.data.AuditLog.users", "link" : "ackcord\/data\/AuditLog.html#users:Seq[ackcord.data.User]", "kind" : "val"}, {"label" : "webhooks", "tail" : ": Seq[Webhook]", "member" : "ackcord.data.AuditLog.webhooks", "link" : "ackcord\/data\/AuditLog.html#webhooks:Seq[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/AuditLog.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLog.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLog.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/AuditLog.html", "kind" : "case class"}, {"name" : "ackcord.data.AuditLogChange", "object" : "ackcord\/data\/AuditLogChange$.html", "members_object" : [{"label" : "ExpireGracePeriod", "tail" : "", "member" : "ackcord.data.AuditLogChange.ExpireGracePeriod", "link" : "ackcord\/data\/AuditLogChange$.html#ExpireGracePeriodextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "ExpireBehavior", "tail" : "", "member" : "ackcord.data.AuditLogChange.ExpireBehavior", "link" : "ackcord\/data\/AuditLogChange$.html#ExpireBehaviorextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "EnableEmoticons", "tail" : "", "member" : "ackcord.data.AuditLogChange.EnableEmoticons", "link" : "ackcord\/data\/AuditLogChange$.html#EnableEmoticonsextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "TypeString", "tail" : "", "member" : "ackcord.data.AuditLogChange.TypeString", "link" : "ackcord\/data\/AuditLogChange$.html#TypeStringextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "TypeInt", "tail" : "", "member" : "ackcord.data.AuditLogChange.TypeInt", "link" : "ackcord\/data\/AuditLogChange$.html#TypeIntextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "Id", "tail" : "", "member" : "ackcord.data.AuditLogChange.Id", "link" : "ackcord\/data\/AuditLogChange$.html#IdextendsAuditLogChange[ackcord.data.RawSnowflake]withProductwithSerializable", "kind" : "case class"}, {"label" : "AvatarHash", "tail" : "", "member" : "ackcord.data.AuditLogChange.AvatarHash", "link" : "ackcord\/data\/AuditLogChange$.html#AvatarHashextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "Nick", "tail" : "", "member" : "ackcord.data.AuditLogChange.Nick", "link" : "ackcord\/data\/AuditLogChange$.html#NickextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "Mute", "tail" : "", "member" : "ackcord.data.AuditLogChange.Mute", "link" : "ackcord\/data\/AuditLogChange$.html#MuteextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "Deaf", "tail" : "", "member" : "ackcord.data.AuditLogChange.Deaf", "link" : "ackcord\/data\/AuditLogChange$.html#DeafextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "Temporary", "tail" : "", "member" : "ackcord.data.AuditLogChange.Temporary", "link" : "ackcord\/data\/AuditLogChange$.html#TemporaryextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "MaxAge", "tail" : "", "member" : "ackcord.data.AuditLogChange.MaxAge", "link" : "ackcord\/data\/AuditLogChange$.html#MaxAgeextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "Uses", "tail" : "", "member" : "ackcord.data.AuditLogChange.Uses", "link" : "ackcord\/data\/AuditLogChange$.html#UsesextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "MaxUses", "tail" : "", "member" : "ackcord.data.AuditLogChange.MaxUses", "link" : "ackcord\/data\/AuditLogChange$.html#MaxUsesextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "InviterId", "tail" : "", "member" : "ackcord.data.AuditLogChange.InviterId", "link" : "ackcord\/data\/AuditLogChange$.html#InviterIdextendsAuditLogChange[ackcord.data.UserId]withProductwithSerializable", "kind" : "case class"}, {"label" : "InviteChannelId", "tail" : "", "member" : "ackcord.data.AuditLogChange.InviteChannelId", "link" : "ackcord\/data\/AuditLogChange$.html#InviteChannelIdextendsAuditLogChange[ackcord.data.GuildChannelId]withProductwithSerializable", "kind" : "case class"}, {"label" : "Code", "tail" : "", "member" : "ackcord.data.AuditLogChange.Code", "link" : "ackcord\/data\/AuditLogChange$.html#CodeextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "Deny", "tail" : "", "member" : "ackcord.data.AuditLogChange.Deny", "link" : "ackcord\/data\/AuditLogChange$.html#DenyextendsAuditLogChange[ackcord.data.Permission]withProductwithSerializable", "kind" : "case class"}, {"label" : "Allow", "tail" : "", "member" : "ackcord.data.AuditLogChange.Allow", "link" : "ackcord\/data\/AuditLogChange$.html#AllowextendsAuditLogChange[ackcord.data.Permission]withProductwithSerializable", "kind" : "case class"}, {"label" : "Mentionable", "tail" : "", "member" : "ackcord.data.AuditLogChange.Mentionable", "link" : "ackcord\/data\/AuditLogChange$.html#MentionableextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "Hoist", "tail" : "", "member" : "ackcord.data.AuditLogChange.Hoist", "link" : "ackcord\/data\/AuditLogChange$.html#HoistextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "Color", "tail" : "", "member" : "ackcord.data.AuditLogChange.Color", "link" : "ackcord\/data\/AuditLogChange$.html#ColorextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "Permissions", "tail" : "", "member" : "ackcord.data.AuditLogChange.Permissions", "link" : "ackcord\/data\/AuditLogChange$.html#PermissionsextendsAuditLogChange[ackcord.data.Permission]withProductwithSerializable", "kind" : "case class"}, {"label" : "RateLimitPerUser", "tail" : "", "member" : "ackcord.data.AuditLogChange.RateLimitPerUser", "link" : "ackcord\/data\/AuditLogChange$.html#RateLimitPerUserextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "ApplicationId", "tail" : "", "member" : "ackcord.data.AuditLogChange.ApplicationId", "link" : "ackcord\/data\/AuditLogChange$.html#ApplicationIdextendsAuditLogChange[ackcord.data.RawSnowflake]withProductwithSerializable", "kind" : "case class"}, {"label" : "NSFW", "tail" : "", "member" : "ackcord.data.AuditLogChange.NSFW", "link" : "ackcord\/data\/AuditLogChange$.html#NSFWextendsAuditLogChange[Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "PermissionOverwrites", "tail" : "", "member" : "ackcord.data.AuditLogChange.PermissionOverwrites", "link" : "ackcord\/data\/AuditLogChange$.html#PermissionOverwritesextendsAuditLogChange[Seq[ackcord.data.PermissionOverwrite]]withProductwithSerializable", "kind" : "case class"}, {"label" : "Bitrate", "tail" : "", "member" : "ackcord.data.AuditLogChange.Bitrate", "link" : "ackcord\/data\/AuditLogChange$.html#BitrateextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "Topic", "tail" : "", "member" : "ackcord.data.AuditLogChange.Topic", "link" : "ackcord\/data\/AuditLogChange$.html#TopicextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "Position", "tail" : "", "member" : "ackcord.data.AuditLogChange.Position", "link" : "ackcord\/data\/AuditLogChange$.html#PositionextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "SystemChannelId", "tail" : "", "member" : "ackcord.data.AuditLogChange.SystemChannelId", "link" : "ackcord\/data\/AuditLogChange$.html#SystemChannelIdextendsAuditLogChange[ackcord.data.TextGuildChannelId]withProductwithSerializable", "kind" : "case class"}, {"label" : "WidgetChannelId", "tail" : "", "member" : "ackcord.data.AuditLogChange.WidgetChannelId", "link" : "ackcord\/data\/AuditLogChange$.html#WidgetChannelIdextendsAuditLogChange[ackcord.data.GuildChannelId]withProductwithSerializable", "kind" : "case class"}, {"label" : "WidgetEnabled", "tail" : "", "member" : "ackcord.data.AuditLogChange.WidgetEnabled", "link" : "ackcord\/data\/AuditLogChange$.html#WidgetEnabledextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "PruneDeleteDays", "tail" : "", "member" : "ackcord.data.AuditLogChange.PruneDeleteDays", "link" : "ackcord\/data\/AuditLogChange$.html#PruneDeleteDaysextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "PartialRole", "tail" : "", "member" : "ackcord.data.AuditLogChange.PartialRole", "link" : "ackcord\/data\/AuditLogChange$.html#PartialRoleextendsProductwithSerializable", "kind" : "case class"}, {"label" : "$Remove", "tail" : "", "member" : "ackcord.data.AuditLogChange.$Remove", "link" : "ackcord\/data\/AuditLogChange$.html#$RemoveextendsAuditLogChange[Seq[ackcord.data.AuditLogChange.PartialRole]]withProductwithSerializable", "kind" : "case class"}, {"label" : "$Add", "tail" : "", "member" : "ackcord.data.AuditLogChange.$Add", "link" : "ackcord\/data\/AuditLogChange$.html#$AddextendsAuditLogChange[Seq[ackcord.data.AuditLogChange.PartialRole]]withProductwithSerializable", "kind" : "case class"}, {"label" : "VanityUrlCode", "tail" : "", "member" : "ackcord.data.AuditLogChange.VanityUrlCode", "link" : "ackcord\/data\/AuditLogChange$.html#VanityUrlCodeextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "DefaultMessageNotification", "tail" : "", "member" : "ackcord.data.AuditLogChange.DefaultMessageNotification", "link" : "ackcord\/data\/AuditLogChange$.html#DefaultMessageNotificationextendsAuditLogChange[ackcord.data.NotificationLevel]withProductwithSerializable", "kind" : "case class"}, {"label" : "ExplicitContentFilter", "tail" : "", "member" : "ackcord.data.AuditLogChange.ExplicitContentFilter", "link" : "ackcord\/data\/AuditLogChange$.html#ExplicitContentFilterextendsAuditLogChange[ackcord.data.FilterLevel]withProductwithSerializable", "kind" : "case class"}, {"label" : "VerificationLevel", "tail" : "", "member" : "ackcord.data.AuditLogChange.VerificationLevel", "link" : "ackcord\/data\/AuditLogChange$.html#VerificationLevelextendsAuditLogChange[ackcord.data.VerificationLevel]withProductwithSerializable", "kind" : "case class"}, {"label" : "MfaLevel", "tail" : "", "member" : "ackcord.data.AuditLogChange.MfaLevel", "link" : "ackcord\/data\/AuditLogChange$.html#MfaLevelextendsAuditLogChange[ackcord.data.MFALevel]withProductwithSerializable", "kind" : "case class"}, {"label" : "AfkTimeout", "tail" : "", "member" : "ackcord.data.AuditLogChange.AfkTimeout", "link" : "ackcord\/data\/AuditLogChange$.html#AfkTimeoutextendsAuditLogChange[Int]withProductwithSerializable", "kind" : "case class"}, {"label" : "AfkChannelId", "tail" : "", "member" : "ackcord.data.AuditLogChange.AfkChannelId", "link" : "ackcord\/data\/AuditLogChange$.html#AfkChannelIdextendsAuditLogChange[ackcord.data.VoiceGuildChannelId]withProductwithSerializable", "kind" : "case class"}, {"label" : "Region", "tail" : "", "member" : "ackcord.data.AuditLogChange.Region", "link" : "ackcord\/data\/AuditLogChange$.html#RegionextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "OwnerId", "tail" : "", "member" : "ackcord.data.AuditLogChange.OwnerId", "link" : "ackcord\/data\/AuditLogChange$.html#OwnerIdextendsAuditLogChange[ackcord.data.UserId]withProductwithSerializable", "kind" : "case class"}, {"label" : "SplashHash", "tail" : "", "member" : "ackcord.data.AuditLogChange.SplashHash", "link" : "ackcord\/data\/AuditLogChange$.html#SplashHashextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "IconHash", "tail" : "", "member" : "ackcord.data.AuditLogChange.IconHash", "link" : "ackcord\/data\/AuditLogChange$.html#IconHashextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "Name", "tail" : "", "member" : "ackcord.data.AuditLogChange.Name", "link" : "ackcord\/data\/AuditLogChange$.html#NameextendsAuditLogChange[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLogChange$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLogChange$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLogChange$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLogChange$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLogChange$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLogChange$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLogChange$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLogChange$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLogChange$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/AuditLogChange$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLogChange$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/AuditLogChange$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/AuditLogChange$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLogChange$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLogChange$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLogChange$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/data\/AuditLogChange.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLogChange.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLogChange.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLogChange.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLogChange.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLogChange.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLogChange.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLogChange.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogChange.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLogChange.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLogChange.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/AuditLogChange.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLogChange.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/AuditLogChange.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/AuditLogChange.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLogChange.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLogChange.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLogChange.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "oldValue", "tail" : "(): Option[A]", "member" : "ackcord.data.AuditLogChange.oldValue", "link" : "ackcord\/data\/AuditLogChange.html#oldValue:Option[A]", "kind" : "abstract def"}, {"label" : "newValue", "tail" : "(): Option[A]", "member" : "ackcord.data.AuditLogChange.newValue", "link" : "ackcord\/data\/AuditLogChange.html#newValue:Option[A]", "kind" : "abstract def"}], "shortDescription" : "Some sort of change"}, {"name" : "ackcord.data.AuditLogEntry", "shortDescription" : "An individual audit log event", "members_case class" : [{"member" : "ackcord.data.AuditLogEntry#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.data.AuditLogEntry.reason", "link" : "ackcord\/data\/AuditLogEntry.html#reason:Option[String]", "kind" : "val"}, {"label" : "options", "tail" : ": Option[OptionalAuditLogInfo]", "member" : "ackcord.data.AuditLogEntry.options", "link" : "ackcord\/data\/AuditLogEntry.html#options:Option[ackcord.data.OptionalAuditLogInfo]", "kind" : "val"}, {"label" : "actionType", "tail" : ": AuditLogEvent", "member" : "ackcord.data.AuditLogEntry.actionType", "link" : "ackcord\/data\/AuditLogEntry.html#actionType:ackcord.data.AuditLogEvent", "kind" : "val"}, {"label" : "id", "tail" : ": RawSnowflake", "member" : "ackcord.data.AuditLogEntry.id", "link" : "ackcord\/data\/AuditLogEntry.html#id:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.AuditLogEntry.userId", "link" : "ackcord\/data\/AuditLogEntry.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "changes", "tail" : ": Option[Seq[AuditLogChange[_]]]", "member" : "ackcord.data.AuditLogEntry.changes", "link" : "ackcord\/data\/AuditLogEntry.html#changes:Option[Seq[ackcord.data.AuditLogChange[_]]]", "kind" : "val"}, {"label" : "targetId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.AuditLogEntry.targetId", "link" : "ackcord\/data\/AuditLogEntry.html#targetId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/AuditLogEntry.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/AuditLogEntry.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLogEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLogEntry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLogEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLogEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLogEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLogEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLogEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLogEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLogEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLogEntry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLogEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLogEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLogEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/AuditLogEntry.html", "kind" : "case class"}, {"name" : "ackcord.data.AuditLogEvent", "shortDescription" : "A type of change that an entry can represent", "object" : "ackcord\/data\/AuditLogEvent$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.AuditLogEvent.value", "link" : "ackcord\/data\/AuditLogEvent.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLogEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLogEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLogEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLogEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLogEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLogEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLogEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLogEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLogEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/AuditLogEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLogEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/AuditLogEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/AuditLogEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLogEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLogEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLogEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): AuditLogEvent", "member" : "ackcord.data.AuditLogEvent.createUnknown", "link" : "ackcord\/data\/AuditLogEvent$.html#createUnknown(value:Int):ackcord.data.AuditLogEvent", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.AuditLogEvent.Unknown", "link" : "ackcord\/data\/AuditLogEvent$.html#UnknownextendsAuditLogEventwithProductwithSerializable", "kind" : "case class"}, {"label" : "values", "tail" : "(): IndexedSeq[AuditLogEvent]", "member" : "ackcord.data.AuditLogEvent.values", "link" : "ackcord\/data\/AuditLogEvent$.html#values:IndexedSeq[ackcord.data.AuditLogEvent]", "kind" : "def"}, {"label" : "IntegrationDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.IntegrationDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#IntegrationDelete", "kind" : "case object"}, {"label" : "IntegrationUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.IntegrationUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#IntegrationUpdate", "kind" : "case object"}, {"label" : "IntegrationCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.IntegrationCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#IntegrationCreate", "kind" : "case object"}, {"label" : "MessageUnpin", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MessageUnpin", "link" : "ackcord\/data\/AuditLogEvent$.html#MessageUnpin", "kind" : "case object"}, {"label" : "MessagePin", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MessagePin", "link" : "ackcord\/data\/AuditLogEvent$.html#MessagePin", "kind" : "case object"}, {"label" : "MessageBulkDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MessageBulkDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#MessageBulkDelete", "kind" : "case object"}, {"label" : "MessageDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MessageDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#MessageDelete", "kind" : "case object"}, {"label" : "EmojiDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.EmojiDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#EmojiDelete", "kind" : "case object"}, {"label" : "EmojiUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.EmojiUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#EmojiUpdate", "kind" : "case object"}, {"label" : "EmojiCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.EmojiCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#EmojiCreate", "kind" : "case object"}, {"label" : "WebhookDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.WebhookDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#WebhookDelete", "kind" : "case object"}, {"label" : "WebhookUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.WebhookUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#WebhookUpdate", "kind" : "case object"}, {"label" : "WebhookCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.WebhookCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#WebhookCreate", "kind" : "case object"}, {"label" : "InviteDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.InviteDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#InviteDelete", "kind" : "case object"}, {"label" : "InviteUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.InviteUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#InviteUpdate", "kind" : "case object"}, {"label" : "InviteCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.InviteCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#InviteCreate", "kind" : "case object"}, {"label" : "RoleDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.RoleDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#RoleDelete", "kind" : "case object"}, {"label" : "RoleUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.RoleUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#RoleUpdate", "kind" : "case object"}, {"label" : "RoleCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.RoleCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#RoleCreate", "kind" : "case object"}, {"label" : "BotAdd", "tail" : "", "member" : "ackcord.data.AuditLogEvent.BotAdd", "link" : "ackcord\/data\/AuditLogEvent$.html#BotAdd", "kind" : "case object"}, {"label" : "MemberDisconnect", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberDisconnect", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberDisconnect", "kind" : "case object"}, {"label" : "MemberMove", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberMove", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberMove", "kind" : "case object"}, {"label" : "MemberRoleUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberRoleUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberRoleUpdate", "kind" : "case object"}, {"label" : "MemberUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberUpdate", "kind" : "case object"}, {"label" : "MemberBanRemove", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberBanRemove", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberBanRemove", "kind" : "case object"}, {"label" : "MemberBanAdd", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberBanAdd", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberBanAdd", "kind" : "case object"}, {"label" : "MemberPrune", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberPrune", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberPrune", "kind" : "case object"}, {"label" : "MemberKick", "tail" : "", "member" : "ackcord.data.AuditLogEvent.MemberKick", "link" : "ackcord\/data\/AuditLogEvent$.html#MemberKick", "kind" : "case object"}, {"label" : "ChannelOverwriteDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelOverwriteDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelOverwriteDelete", "kind" : "case object"}, {"label" : "ChannelOverwriteUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelOverwriteUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelOverwriteUpdate", "kind" : "case object"}, {"label" : "ChannelOverwriteCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelOverwriteCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelOverwriteCreate", "kind" : "case object"}, {"label" : "ChannelDelete", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelDelete", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelDelete", "kind" : "case object"}, {"label" : "ChannelUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelUpdate", "kind" : "case object"}, {"label" : "ChannelCreate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.ChannelCreate", "link" : "ackcord\/data\/AuditLogEvent$.html#ChannelCreate", "kind" : "case object"}, {"label" : "GuildUpdate", "tail" : "", "member" : "ackcord.data.AuditLogEvent.GuildUpdate", "link" : "ackcord\/data\/AuditLogEvent$.html#GuildUpdate", "kind" : "case object"}, {"label" : "codec", "tail" : ": Codec[AuditLogEvent]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/AuditLogEvent$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[AuditLogEvent]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/AuditLogEvent$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], AuditLogEvent]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/AuditLogEvent$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[AuditLogEvent]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/AuditLogEvent$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): AuditLogEvent", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/AuditLogEvent$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, AuditLogEvent]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/AuditLogEvent$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/AuditLogEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/AuditLogEvent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/AuditLogEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/AuditLogEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/AuditLogEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/AuditLogEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/AuditLogEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/AuditLogEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/AuditLogEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/AuditLogEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/AuditLogEvent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/AuditLogEvent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/AuditLogEvent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/AuditLogEvent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/AuditLogEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/AuditLogEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/AuditLogEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/AuditLogEvent.html", "kind" : "class"}, {"name" : "ackcord.data.Author", "trait" : "ackcord\/data\/Author.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Author.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Author.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Author.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Author.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Author.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Author.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Author.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Author.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Author.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Author.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Author.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Author.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/Author.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Author.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/Author.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/Author.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Author.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Author.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Author.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "username", "tail" : "(): String", "member" : "ackcord.data.Author.username", "link" : "ackcord\/data\/Author.html#username:String", "kind" : "abstract def"}, {"label" : "isUser", "tail" : "(): Boolean", "member" : "ackcord.data.Author.isUser", "link" : "ackcord\/data\/Author.html#isUser:Boolean", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): SnowflakeType[A]", "member" : "ackcord.data.Author.id", "link" : "ackcord\/data\/Author.html#id:ackcord.data.SnowflakeType[A]", "kind" : "abstract def"}], "shortDescription" : "A author of a message."}, {"name" : "ackcord.data.Ban", "shortDescription" : "Represents a banned user.", "members_case class" : [{"label" : "user", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Ban.user", "link" : "ackcord\/data\/Ban.html#user(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"member" : "ackcord.data.Ban#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.Ban.userId", "link" : "ackcord\/data\/Ban.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.data.Ban.reason", "link" : "ackcord\/data\/Ban.html#reason:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Ban.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Ban.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Ban.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Ban.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Ban.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Ban.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Ban.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Ban.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Ban.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Ban.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Ban.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Ban.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Ban.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Ban.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Ban.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Ban.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Ban.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Ban.html", "kind" : "case class"}, {"name" : "ackcord.data.Channel", "trait" : "ackcord\/data\/Channel.html", "kind" : "trait", "members_trait" : [{"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/Channel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Channel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Channel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Channel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Channel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Channel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Channel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Channel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Channel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Channel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Channel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Channel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Channel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/Channel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Channel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/Channel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/Channel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Channel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Channel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Channel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.Channel.channelType", "link" : "ackcord\/data\/Channel.html#channelType:ackcord.data.ChannelType", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): ChannelId", "member" : "ackcord.data.Channel.id", "link" : "ackcord\/data\/Channel.html#id:ackcord.data.ChannelId", "kind" : "abstract def"}], "shortDescription" : "Base channel type"}, {"name" : "ackcord.data.ChannelId", "shortDescription" : "", "object" : "ackcord\/data\/package$$ChannelId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Channel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$ChannelId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Channel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$ChannelId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Channel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$ChannelId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$ChannelId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$ChannelId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$ChannelId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$ChannelId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$ChannelId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$ChannelId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$ChannelId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$ChannelId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$ChannelId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$ChannelId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$ChannelId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$ChannelId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$ChannelId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$ChannelId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$ChannelId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$ChannelId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$ChannelId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$ChannelId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$ChannelId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.ChannelIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "asChannelId", "tail" : "(): SnowflakeType[A]", "member" : "ackcord.data.ChannelIdSyntax.asChannelId", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#asChannelId[A<:ackcord.data.Channel]:ackcord.data.package.SnowflakeType[A]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[Channel]", "member" : "ackcord.data.ChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Channel]", "kind" : "def"}, {"member" : "ackcord.data.ChannelIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$ChannelIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$ChannelIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.ChannelMention", "shortDescription" : "Basic info of a channel in a cross posted message.", "members_case class" : [{"member" : "ackcord.data.ChannelMention#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.ChannelMention.name", "link" : "ackcord\/data\/ChannelMention.html#name:String", "kind" : "val"}, {"label" : "type", "tail" : ": ChannelType", "member" : "ackcord.data.ChannelMention.type", "link" : "ackcord\/data\/ChannelMention.html#type:ackcord.data.ChannelType", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.ChannelMention.guildId", "link" : "ackcord\/data\/ChannelMention.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": TextChannelId", "member" : "ackcord.data.ChannelMention.id", "link" : "ackcord\/data\/ChannelMention.html#id:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ChannelMention.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ChannelMention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ChannelMention.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ChannelMention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ChannelMention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ChannelMention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ChannelMention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ChannelMention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelMention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelMention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelMention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ChannelMention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ChannelMention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ChannelMention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ChannelMention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ChannelMention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ChannelMention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ChannelMention.html", "kind" : "case class"}, {"name" : "ackcord.data.ChannelType", "shortDescription" : "Different type of channels", "object" : "ackcord\/data\/ChannelType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.ChannelType.value", "link" : "ackcord\/data\/ChannelType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ChannelType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ChannelType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ChannelType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ChannelType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ChannelType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ChannelType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ChannelType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ChannelType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ChannelType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ChannelType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ChannelType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ChannelType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ChannelType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ChannelType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ChannelType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ChannelType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): ChannelType", "member" : "ackcord.data.ChannelType.createUnknown", "link" : "ackcord\/data\/ChannelType$.html#createUnknown(value:Int):ackcord.data.ChannelType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.ChannelType.Unknown", "link" : "ackcord\/data\/ChannelType$.html#UnknownextendsChannelTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildStore", "tail" : "", "member" : "ackcord.data.ChannelType.GuildStore", "link" : "ackcord\/data\/ChannelType$.html#GuildStore", "kind" : "case object"}, {"label" : "GuildNews", "tail" : "", "member" : "ackcord.data.ChannelType.GuildNews", "link" : "ackcord\/data\/ChannelType$.html#GuildNews", "kind" : "case object"}, {"label" : "GuildCategory", "tail" : "", "member" : "ackcord.data.ChannelType.GuildCategory", "link" : "ackcord\/data\/ChannelType$.html#GuildCategory", "kind" : "case object"}, {"label" : "GroupDm", "tail" : "", "member" : "ackcord.data.ChannelType.GroupDm", "link" : "ackcord\/data\/ChannelType$.html#GroupDm", "kind" : "case object"}, {"label" : "GuildVoice", "tail" : "", "member" : "ackcord.data.ChannelType.GuildVoice", "link" : "ackcord\/data\/ChannelType$.html#GuildVoice", "kind" : "case object"}, {"label" : "DM", "tail" : "", "member" : "ackcord.data.ChannelType.DM", "link" : "ackcord\/data\/ChannelType$.html#DM", "kind" : "case object"}, {"label" : "GuildText", "tail" : "", "member" : "ackcord.data.ChannelType.GuildText", "link" : "ackcord\/data\/ChannelType$.html#GuildText", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[ChannelType]", "member" : "ackcord.data.ChannelType.values", "link" : "ackcord\/data\/ChannelType$.html#values:IndexedSeq[ackcord.data.ChannelType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[ChannelType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/ChannelType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[ChannelType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/ChannelType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], ChannelType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/ChannelType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[ChannelType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/ChannelType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): ChannelType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/ChannelType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, ChannelType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/ChannelType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ChannelType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ChannelType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ChannelType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ChannelType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ChannelType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ChannelType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ChannelType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ChannelType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ChannelType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ChannelType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ChannelType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ChannelType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ChannelType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ChannelType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ChannelType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ChannelType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ChannelType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/ChannelType.html", "kind" : "class"}, {"name" : "ackcord.data.ClientStatus", "shortDescription" : "The status of a user per platform.", "members_case class" : [{"member" : "ackcord.data.ClientStatus#<init>", "error" : "unsupported entity"}, {"label" : "web", "tail" : ": Option[PresenceStatus]", "member" : "ackcord.data.ClientStatus.web", "link" : "ackcord\/data\/ClientStatus.html#web:Option[ackcord.data.PresenceStatus]", "kind" : "val"}, {"label" : "mobile", "tail" : ": Option[PresenceStatus]", "member" : "ackcord.data.ClientStatus.mobile", "link" : "ackcord\/data\/ClientStatus.html#mobile:Option[ackcord.data.PresenceStatus]", "kind" : "val"}, {"label" : "desktop", "tail" : ": Option[PresenceStatus]", "member" : "ackcord.data.ClientStatus.desktop", "link" : "ackcord\/data\/ClientStatus.html#desktop:Option[ackcord.data.PresenceStatus]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ClientStatus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ClientStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ClientStatus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ClientStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ClientStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ClientStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ClientStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ClientStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ClientStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ClientStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ClientStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ClientStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ClientStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ClientStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ClientStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ClientStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ClientStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ClientStatus.html", "kind" : "case class"}, {"name" : "ackcord.data.Connection", "shortDescription" : "A connection that a user has attached.", "members_case class" : [{"member" : "ackcord.data.Connection#<init>", "error" : "unsupported entity"}, {"label" : "visibility", "tail" : ": ConnectionVisibility", "member" : "ackcord.data.Connection.visibility", "link" : "ackcord\/data\/Connection.html#visibility:ackcord.data.ConnectionVisibility", "kind" : "val"}, {"label" : "showActivity", "tail" : ": Boolean", "member" : "ackcord.data.Connection.showActivity", "link" : "ackcord\/data\/Connection.html#showActivity:Boolean", "kind" : "val"}, {"label" : "friendSync", "tail" : ": Boolean", "member" : "ackcord.data.Connection.friendSync", "link" : "ackcord\/data\/Connection.html#friendSync:Boolean", "kind" : "val"}, {"label" : "verified", "tail" : ": Boolean", "member" : "ackcord.data.Connection.verified", "link" : "ackcord\/data\/Connection.html#verified:Boolean", "kind" : "val"}, {"label" : "integrations", "tail" : ": Option[Seq[Integration]]", "member" : "ackcord.data.Connection.integrations", "link" : "ackcord\/data\/Connection.html#integrations:Option[Seq[ackcord.data.Integration]]", "kind" : "val"}, {"label" : "revoked", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Connection.revoked", "link" : "ackcord\/data\/Connection.html#revoked:Option[Boolean]", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "ackcord.data.Connection.type", "link" : "ackcord\/data\/Connection.html#type:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Connection.name", "link" : "ackcord\/data\/Connection.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "ackcord.data.Connection.id", "link" : "ackcord\/data\/Connection.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Connection.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Connection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Connection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Connection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Connection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Connection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Connection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Connection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Connection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Connection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Connection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Connection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Connection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Connection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Connection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Connection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Connection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Connection.html", "kind" : "case class"}, {"name" : "ackcord.data.ConnectionVisibility", "shortDescription" : "", "object" : "ackcord\/data\/ConnectionVisibility$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.ConnectionVisibility.value", "link" : "ackcord\/data\/ConnectionVisibility.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ConnectionVisibility.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ConnectionVisibility.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ConnectionVisibility.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ConnectionVisibility.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ConnectionVisibility.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ConnectionVisibility.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ConnectionVisibility.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ConnectionVisibility.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ConnectionVisibility.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ConnectionVisibility.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ConnectionVisibility.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ConnectionVisibility.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ConnectionVisibility.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ConnectionVisibility.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ConnectionVisibility.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ConnectionVisibility.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): ConnectionVisibility", "member" : "ackcord.data.ConnectionVisibility.createUnknown", "link" : "ackcord\/data\/ConnectionVisibility$.html#createUnknown(value:Int):ackcord.data.ConnectionVisibility", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.ConnectionVisibility.Unknown", "link" : "ackcord\/data\/ConnectionVisibility$.html#UnknownextendsConnectionVisibilitywithProductwithSerializable", "kind" : "case class"}, {"label" : "Everyone", "tail" : "", "member" : "ackcord.data.ConnectionVisibility.Everyone", "link" : "ackcord\/data\/ConnectionVisibility$.html#Everyone", "kind" : "case object"}, {"label" : "NoneVisibility", "tail" : "", "member" : "ackcord.data.ConnectionVisibility.NoneVisibility", "link" : "ackcord\/data\/ConnectionVisibility$.html#NoneVisibility", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[ConnectionVisibility]", "member" : "ackcord.data.ConnectionVisibility.values", "link" : "ackcord\/data\/ConnectionVisibility$.html#values:IndexedSeq[ackcord.data.ConnectionVisibility]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[ConnectionVisibility]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/ConnectionVisibility$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[ConnectionVisibility]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/ConnectionVisibility$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], ConnectionVisibility]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/ConnectionVisibility$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[ConnectionVisibility]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/ConnectionVisibility$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): ConnectionVisibility", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/ConnectionVisibility$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, ConnectionVisibility]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/ConnectionVisibility$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ConnectionVisibility$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ConnectionVisibility$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ConnectionVisibility$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ConnectionVisibility$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ConnectionVisibility$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ConnectionVisibility$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ConnectionVisibility$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ConnectionVisibility$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ConnectionVisibility$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ConnectionVisibility$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ConnectionVisibility$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ConnectionVisibility$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ConnectionVisibility$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ConnectionVisibility$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ConnectionVisibility$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ConnectionVisibility$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ConnectionVisibility$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/ConnectionVisibility.html", "kind" : "class"}, {"name" : "ackcord.data.CreatedInvite", "shortDescription" : "A newly created invite.", "members_case class" : [{"member" : "ackcord.data.CreatedInvite#<init>", "error" : "unsupported entity"}, {"label" : "targetUserType", "tail" : ": Option[Int]", "member" : "ackcord.data.CreatedInvite.targetUserType", "link" : "ackcord\/data\/CreatedInvite.html#targetUserType:Option[Int]", "kind" : "val"}, {"label" : "targetUser", "tail" : ": Option[InviteTargetUser]", "member" : "ackcord.data.CreatedInvite.targetUser", "link" : "ackcord\/data\/CreatedInvite.html#targetUser:Option[ackcord.data.InviteTargetUser]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.CreatedInvite.createdAt", "link" : "ackcord\/data\/CreatedInvite.html#createdAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "temporary", "tail" : ": Boolean", "member" : "ackcord.data.CreatedInvite.temporary", "link" : "ackcord\/data\/CreatedInvite.html#temporary:Boolean", "kind" : "val"}, {"label" : "maxAge", "tail" : ": Int", "member" : "ackcord.data.CreatedInvite.maxAge", "link" : "ackcord\/data\/CreatedInvite.html#maxAge:Int", "kind" : "val"}, {"label" : "maxUses", "tail" : ": Int", "member" : "ackcord.data.CreatedInvite.maxUses", "link" : "ackcord\/data\/CreatedInvite.html#maxUses:Int", "kind" : "val"}, {"label" : "uses", "tail" : ": Int", "member" : "ackcord.data.CreatedInvite.uses", "link" : "ackcord\/data\/CreatedInvite.html#uses:Int", "kind" : "val"}, {"label" : "inviter", "tail" : ": Option[User]", "member" : "ackcord.data.CreatedInvite.inviter", "link" : "ackcord\/data\/CreatedInvite.html#inviter:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "channelId", "tail" : ": GuildChannelId", "member" : "ackcord.data.CreatedInvite.channelId", "link" : "ackcord\/data\/CreatedInvite.html#channelId:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.CreatedInvite.guildId", "link" : "ackcord\/data\/CreatedInvite.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.data.CreatedInvite.code", "link" : "ackcord\/data\/CreatedInvite.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/CreatedInvite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/CreatedInvite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/CreatedInvite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/CreatedInvite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/CreatedInvite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/CreatedInvite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/CreatedInvite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/CreatedInvite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/CreatedInvite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/CreatedInvite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/CreatedInvite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/CreatedInvite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/CreatedInvite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/CreatedInvite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/CreatedInvite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/CreatedInvite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/CreatedInvite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/CreatedInvite.html", "kind" : "case class"}, {"name" : "ackcord.data.DiscordProtocol", "object" : "ackcord\/data\/DiscordProtocol$.html", "members_object" : [{"label" : "teamMemberCodec", "tail" : ": Codec[TeamMember]", "member" : "ackcord.data.DiscordProtocol.teamMemberCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#teamMemberCodec:io.circe.Codec[ackcord.data.TeamMember]", "kind" : "implicit val"}, {"label" : "teamCodec", "tail" : ": Codec[Team]", "member" : "ackcord.data.DiscordProtocol.teamCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#teamCodec:io.circe.Codec[ackcord.data.Team]", "kind" : "implicit val"}, {"label" : "clientStatusCodec", "tail" : ": Codec[ClientStatus]", "member" : "ackcord.data.DiscordProtocol.clientStatusCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#clientStatusCodec:io.circe.Codec[ackcord.data.ClientStatus]", "kind" : "implicit val"}, {"label" : "rawBanCodec", "tail" : ": Codec[RawBan]", "member" : "ackcord.data.DiscordProtocol.rawBanCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawBanCodec:io.circe.Codec[ackcord.data.raw.RawBan]", "kind" : "implicit val"}, {"label" : "auditLogChangeDecoder", "tail" : ": Decoder[AuditLogChange[_]]", "member" : "ackcord.data.DiscordProtocol.auditLogChangeDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#auditLogChangeDecoder:io.circe.Decoder[ackcord.data.AuditLogChange[_]]", "kind" : "implicit val"}, {"label" : "guildWidgetMemberCodec", "tail" : ": Codec[GuildWidgetMember]", "member" : "ackcord.data.DiscordProtocol.guildWidgetMemberCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#guildWidgetMemberCodec:io.circe.Codec[ackcord.data.GuildWidgetMember]", "kind" : "implicit val"}, {"label" : "guildWidgetChannelCodec", "tail" : ": Codec[GuildWidgetChannel]", "member" : "ackcord.data.DiscordProtocol.guildWidgetChannelCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#guildWidgetChannelCodec:io.circe.Codec[ackcord.data.GuildWidgetChannel]", "kind" : "implicit val"}, {"label" : "guildWidgetCodec", "tail" : ": Codec[GuildWidget]", "member" : "ackcord.data.DiscordProtocol.guildWidgetCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#guildWidgetCodec:io.circe.Codec[ackcord.data.GuildWidget]", "kind" : "implicit val"}, {"label" : "templateCodec", "tail" : ": Codec[Template]", "member" : "ackcord.data.DiscordProtocol.templateCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#templateCodec:io.circe.Codec[ackcord.data.Template]", "kind" : "implicit val"}, {"label" : "partialRoleCodec", "tail" : ": Codec[PartialRole]", "member" : "ackcord.data.DiscordProtocol.partialRoleCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#partialRoleCodec:io.circe.Codec[ackcord.data.AuditLogChange.PartialRole]", "kind" : "implicit val"}, {"label" : "optionalAuditLogInfoDecoder", "tail" : ": Decoder[OptionalAuditLogInfo]", "member" : "ackcord.data.DiscordProtocol.optionalAuditLogInfoDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#optionalAuditLogInfoDecoder:io.circe.Decoder[ackcord.data.OptionalAuditLogInfo]", "kind" : "implicit val"}, {"label" : "auditLogEntryDecoder", "tail" : ": Decoder[AuditLogEntry]", "member" : "ackcord.data.DiscordProtocol.auditLogEntryDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#auditLogEntryDecoder:io.circe.Decoder[ackcord.data.AuditLogEntry]", "kind" : "implicit val"}, {"label" : "auditLogDecoder", "tail" : ": Decoder[AuditLog]", "member" : "ackcord.data.DiscordProtocol.auditLogDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#auditLogDecoder:io.circe.Decoder[ackcord.data.AuditLog]", "kind" : "implicit val"}, {"label" : "webhookDecoder", "tail" : ": Decoder[Webhook]", "member" : "ackcord.data.DiscordProtocol.webhookDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#webhookDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "implicit val"}, {"label" : "connectionCodec", "tail" : ": Codec[Connection]", "member" : "ackcord.data.DiscordProtocol.connectionCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#connectionCodec:io.circe.Codec[ackcord.data.Connection]", "kind" : "implicit val"}, {"label" : "rawEmojiCodec", "tail" : ": Codec[RawEmoji]", "member" : "ackcord.data.DiscordProtocol.rawEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawEmojiCodec:io.circe.Codec[ackcord.data.raw.RawEmoji]", "kind" : "implicit val"}, {"label" : "voiceRegionCodec", "tail" : ": Codec[VoiceRegion]", "member" : "ackcord.data.DiscordProtocol.voiceRegionCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#voiceRegionCodec:io.circe.Codec[ackcord.data.VoiceRegion]", "kind" : "implicit val"}, {"label" : "integrationCodec", "tail" : ": Codec[Integration]", "member" : "ackcord.data.DiscordProtocol.integrationCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#integrationCodec:io.circe.Codec[ackcord.data.Integration]", "kind" : "implicit val"}, {"label" : "integrationApplicationCodec", "tail" : ": Codec[IntegrationApplication]", "member" : "ackcord.data.DiscordProtocol.integrationApplicationCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#integrationApplicationCodec:io.circe.Codec[ackcord.data.IntegrationApplication]", "kind" : "implicit val"}, {"label" : "partialIntegrationCodec", "tail" : ": Codec[PartialIntegration]", "member" : "ackcord.data.DiscordProtocol.partialIntegrationCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#partialIntegrationCodec:io.circe.Codec[ackcord.data.PartialIntegration]", "kind" : "implicit val"}, {"label" : "integrationAccountCodec", "tail" : ": Codec[IntegrationAccount]", "member" : "ackcord.data.DiscordProtocol.integrationAccountCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#integrationAccountCodec:io.circe.Codec[ackcord.data.IntegrationAccount]", "kind" : "implicit val"}, {"label" : "guildWidgetSettingsCodec", "tail" : ": Codec[GuildWidgetSettings]", "member" : "ackcord.data.DiscordProtocol.guildWidgetSettingsCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#guildWidgetSettingsCodec:io.circe.Codec[ackcord.data.GuildWidgetSettings]", "kind" : "implicit val"}, {"label" : "inviteWithMetadataCodec", "tail" : ": Codec[InviteWithMetadata]", "member" : "ackcord.data.DiscordProtocol.inviteWithMetadataCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#inviteWithMetadataCodec:io.circe.Codec[ackcord.data.InviteWithMetadata]", "kind" : "implicit val"}, {"label" : "inviteCodec", "tail" : ": Codec[Invite]", "member" : "ackcord.data.DiscordProtocol.inviteCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#inviteCodec:io.circe.Codec[ackcord.data.Invite]", "kind" : "implicit val"}, {"label" : "inviteTargetUserCodec", "tail" : ": Codec[InviteTargetUser]", "member" : "ackcord.data.DiscordProtocol.inviteTargetUserCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#inviteTargetUserCodec:io.circe.Codec[ackcord.data.InviteTargetUser]", "kind" : "implicit val"}, {"label" : "inviteChannelCodec", "tail" : ": Codec[InviteChannel]", "member" : "ackcord.data.DiscordProtocol.inviteChannelCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#inviteChannelCodec:io.circe.Codec[ackcord.data.InviteChannel]", "kind" : "implicit val"}, {"label" : "inviteGuildCodec", "tail" : ": Codec[InviteGuild]", "member" : "ackcord.data.DiscordProtocol.inviteGuildCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#inviteGuildCodec:io.circe.Codec[ackcord.data.InviteGuild]", "kind" : "implicit val"}, {"label" : "voiceStateCodec", "tail" : ": Codec[VoiceState]", "member" : "ackcord.data.DiscordProtocol.voiceStateCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#voiceStateCodec:io.circe.Codec[ackcord.data.VoiceState]", "kind" : "implicit val"}, {"label" : "rawMessageDecoder", "tail" : ": Decoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageDecoder", "link" : "ackcord\/data\/DiscordProtocol$.html#rawMessageDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "rawMessageEncoder", "tail" : ": Encoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageEncoder", "link" : "ackcord\/data\/DiscordProtocol$.html#rawMessageEncoder:io.circe.Encoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "messageReferenceCodec", "tail" : ": Codec[MessageReference]", "member" : "ackcord.data.DiscordProtocol.messageReferenceCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#messageReferenceCodec:io.circe.Codec[ackcord.data.MessageReference]", "kind" : "implicit val"}, {"label" : "channelMentionCodec", "tail" : ": Codec[ChannelMention]", "member" : "ackcord.data.DiscordProtocol.channelMentionCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#channelMentionCodec:io.circe.Codec[ackcord.data.ChannelMention]", "kind" : "implicit val"}, {"label" : "partialRawGuildMemberCodec", "tail" : ": Codec[PartialRawGuildMember]", "member" : "ackcord.data.DiscordProtocol.partialRawGuildMemberCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#partialRawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.PartialRawGuildMember]", "kind" : "implicit val"}, {"label" : "messageApplicationCodec", "tail" : ": Codec[MessageApplication]", "member" : "ackcord.data.DiscordProtocol.messageApplicationCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#messageApplicationCodec:io.circe.Codec[ackcord.data.MessageApplication]", "kind" : "implicit val"}, {"label" : "rawMessageActivityCodec", "tail" : ": Codec[RawMessageActivity]", "member" : "ackcord.data.DiscordProtocol.rawMessageActivityCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawMessageActivityCodec:io.circe.Codec[ackcord.data.raw.RawMessageActivity]", "kind" : "implicit val"}, {"label" : "reactionCodec", "tail" : ": Codec[Reaction]", "member" : "ackcord.data.DiscordProtocol.reactionCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#reactionCodec:io.circe.Codec[ackcord.data.Reaction]", "kind" : "implicit val"}, {"label" : "partialEmojiCodec", "tail" : ": Codec[PartialEmoji]", "member" : "ackcord.data.DiscordProtocol.partialEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#partialEmojiCodec:io.circe.Codec[ackcord.data.PartialEmoji]", "kind" : "implicit val"}, {"label" : "outgoingEmbedCodec", "tail" : ": Codec[OutgoingEmbed]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedCodec:io.circe.Codec[ackcord.data.OutgoingEmbed]", "kind" : "implicit val"}, {"label" : "outgoingEmbedAuthorCodec", "tail" : ": Codec[OutgoingEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedAuthorCodec:io.circe.Codec[ackcord.data.OutgoingEmbedAuthor]", "kind" : "implicit val"}, {"label" : "outgoingEmbedThumbnailCodec", "tail" : ": Codec[OutgoingEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedThumbnailCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedThumbnailCodec:io.circe.Codec[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "outgoingEmbedVideoCodec", "tail" : ": Codec[OutgoingEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedVideoCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedVideoCodec:io.circe.Codec[ackcord.data.OutgoingEmbedVideo]", "kind" : "implicit val"}, {"label" : "outgoingEmbedImageCodec", "tail" : ": Codec[OutgoingEmbedImage]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedImageCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedImageCodec:io.circe.Codec[ackcord.data.OutgoingEmbedImage]", "kind" : "implicit val"}, {"label" : "outgoingEmbedFooterCodec", "tail" : ": Codec[OutgoingEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedFooterCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#outgoingEmbedFooterCodec:io.circe.Codec[ackcord.data.OutgoingEmbedFooter]", "kind" : "implicit val"}, {"label" : "receivedEmbedCodec", "tail" : ": Codec[ReceivedEmbed]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedCodec:io.circe.Codec[ackcord.data.ReceivedEmbed]", "kind" : "implicit val"}, {"label" : "receivedEmbedAuthorCodec", "tail" : ": Codec[ReceivedEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedAuthorCodec:io.circe.Codec[ackcord.data.ReceivedEmbedAuthor]", "kind" : "implicit val"}, {"label" : "receivedEmbedProviderCodec", "tail" : ": Codec[ReceivedEmbedProvider]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedProviderCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedProviderCodec:io.circe.Codec[ackcord.data.ReceivedEmbedProvider]", "kind" : "implicit val"}, {"label" : "receivedEmbedVideoCodec", "tail" : ": Codec[ReceivedEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedVideoCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedVideoCodec:io.circe.Codec[ackcord.data.ReceivedEmbedVideo]", "kind" : "implicit val"}, {"label" : "receivedEmbedThumbnailCodec", "tail" : ": Codec[ReceivedEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedThumbnailCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedThumbnailCodec:io.circe.Codec[ackcord.data.ReceivedEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "receivedEmbedImageCodec", "tail" : ": Codec[ReceivedEmbedImage]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedImageCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedImageCodec:io.circe.Codec[ackcord.data.ReceivedEmbedImage]", "kind" : "implicit val"}, {"label" : "receivedEmbedFooterCodec", "tail" : ": Codec[ReceivedEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedFooterCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#receivedEmbedFooterCodec:io.circe.Codec[ackcord.data.ReceivedEmbedFooter]", "kind" : "implicit val"}, {"label" : "embedFieldCodec", "tail" : ": Codec[EmbedField]", "member" : "ackcord.data.DiscordProtocol.embedFieldCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#embedFieldCodec:io.circe.Codec[ackcord.data.EmbedField]", "kind" : "implicit val"}, {"label" : "attachementCodec", "tail" : ": Codec[Attachment]", "member" : "ackcord.data.DiscordProtocol.attachementCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#attachementCodec:io.circe.Codec[ackcord.data.Attachment]", "kind" : "implicit val"}, {"label" : "rawGuildMemberCodec", "tail" : ": Codec[RawGuildMember]", "member" : "ackcord.data.DiscordProtocol.rawGuildMemberCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.RawGuildMember]", "kind" : "implicit val"}, {"label" : "rawRoleCodec", "tail" : ": Codec[RawRole]", "member" : "ackcord.data.DiscordProtocol.rawRoleCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawRoleCodec:io.circe.Codec[ackcord.data.raw.RawRole]", "kind" : "implicit val"}, {"label" : "roleCodec", "tail" : ": Codec[Role]", "member" : "ackcord.data.DiscordProtocol.roleCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#roleCodec:io.circe.Codec[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "webhookAuthorCodec", "tail" : ": Codec[WebhookAuthor]", "member" : "ackcord.data.DiscordProtocol.webhookAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#webhookAuthorCodec:io.circe.Codec[ackcord.data.WebhookAuthor]", "kind" : "implicit val"}, {"label" : "userCodec", "tail" : ": Codec[User]", "member" : "ackcord.data.DiscordProtocol.userCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#userCodec:io.circe.Codec[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "permissionValueCodec", "tail" : ": Codec[PermissionOverwrite]", "member" : "ackcord.data.DiscordProtocol.permissionValueCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#permissionValueCodec:io.circe.Codec[ackcord.data.PermissionOverwrite]", "kind" : "implicit val"}, {"label" : "unavailableGuildCodec", "tail" : ": Codec[UnavailableGuild]", "member" : "ackcord.data.DiscordProtocol.unavailableGuildCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#unavailableGuildCodec:io.circe.Codec[ackcord.data.UnavailableGuild]", "kind" : "implicit val"}, {"label" : "rawPresenceCodec", "tail" : ": Codec[RawPresence]", "member" : "ackcord.data.DiscordProtocol.rawPresenceCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawPresenceCodec:io.circe.Codec[ackcord.data.raw.RawPresence]", "kind" : "implicit val"}, {"label" : "activityEmojiCodec", "tail" : ": Codec[ActivityEmoji]", "member" : "ackcord.data.DiscordProtocol.activityEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#activityEmojiCodec:io.circe.Codec[ackcord.data.ActivityEmoji]", "kind" : "implicit val"}, {"label" : "rawActivityPartyCodec", "tail" : ": Codec[RawActivityParty]", "member" : "ackcord.data.DiscordProtocol.rawActivityPartyCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawActivityPartyCodec:io.circe.Codec[ackcord.data.raw.RawActivityParty]", "kind" : "implicit val"}, {"label" : "activityAssetCodec", "tail" : ": Codec[ActivityAsset]", "member" : "ackcord.data.DiscordProtocol.activityAssetCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#activityAssetCodec:io.circe.Codec[ackcord.data.ActivityAsset]", "kind" : "implicit val"}, {"label" : "activityTimestampsCodec", "tail" : ": Codec[ActivityTimestamps]", "member" : "ackcord.data.DiscordProtocol.activityTimestampsCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#activityTimestampsCodec:io.circe.Codec[ackcord.data.ActivityTimestamps]", "kind" : "implicit val"}, {"label" : "rawActivityCodec", "tail" : ": Codec[RawActivity]", "member" : "ackcord.data.DiscordProtocol.rawActivityCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawActivityCodec:io.circe.Codec[ackcord.data.raw.RawActivity]", "kind" : "implicit val"}, {"label" : "partialUserCodec", "tail" : ": Codec[PartialUser]", "member" : "ackcord.data.DiscordProtocol.partialUserCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#partialUserCodec:io.circe.Codec[ackcord.data.raw.PartialUser]", "kind" : "implicit val"}, {"label" : "rawGuildPreviewCodec", "tail" : ": Codec[GuildPreview]", "member" : "ackcord.data.DiscordProtocol.rawGuildPreviewCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawGuildPreviewCodec:io.circe.Codec[ackcord.data.GuildPreview]", "kind" : "implicit val"}, {"label" : "rawGuildCodec", "tail" : ": Codec[RawGuild]", "member" : "ackcord.data.DiscordProtocol.rawGuildCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawGuildCodec:io.circe.Codec[ackcord.data.raw.RawGuild]", "kind" : "implicit val"}, {"label" : "rawChannelCodec", "tail" : ": Codec[RawChannel]", "member" : "ackcord.data.DiscordProtocol.rawChannelCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#rawChannelCodec:io.circe.Codec[ackcord.data.raw.RawChannel]", "kind" : "implicit val"}, {"label" : "imageDataCodec", "tail" : ": Codec[ImageData]", "member" : "ackcord.data.DiscordProtocol.imageDataCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#imageDataCodec:io.circe.Codec[ackcord.data.ImageData]", "kind" : "implicit val"}, {"label" : "offsetDateTimeCodec", "tail" : ": Codec[OffsetDateTime]", "member" : "ackcord.data.DiscordProtocol.offsetDateTimeCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#offsetDateTimeCodec:io.circe.Codec[java.time.OffsetDateTime]", "kind" : "implicit val"}, {"label" : "systemChannelFlagsCodec", "tail" : ": Codec[SystemChannelFlags]", "member" : "ackcord.data.DiscordProtocol.systemChannelFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#systemChannelFlagsCodec:io.circe.Codec[ackcord.data.SystemChannelFlags]", "kind" : "implicit val"}, {"label" : "messageFlagsCodec", "tail" : ": Codec[MessageFlags]", "member" : "ackcord.data.DiscordProtocol.messageFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#messageFlagsCodec:io.circe.Codec[ackcord.data.MessageFlags]", "kind" : "implicit val"}, {"label" : "userFlagsCodec", "tail" : ": Codec[UserFlags]", "member" : "ackcord.data.DiscordProtocol.userFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#userFlagsCodec:io.circe.Codec[ackcord.data.UserFlags]", "kind" : "implicit val"}, {"label" : "permissionCodec", "tail" : ": Codec[Permission]", "member" : "ackcord.data.DiscordProtocol.permissionCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#permissionCodec:io.circe.Codec[ackcord.data.Permission]", "kind" : "implicit val"}, {"label" : "instantCodec", "tail" : ": Codec[Instant]", "member" : "ackcord.data.DiscordProtocol.instantCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#instantCodec:io.circe.Codec[java.time.Instant]", "kind" : "implicit val"}, {"label" : "snowflakeTypeCodec", "tail" : "(): Codec[SnowflakeType[A]]", "member" : "ackcord.data.DiscordProtocol.snowflakeTypeCodec", "link" : "ackcord\/data\/DiscordProtocol$.html#snowflakeTypeCodec[A]:io.circe.Codec[ackcord.data.SnowflakeType[A]]", "kind" : "implicit def"}, {"label" : "circeConfiguration", "tail" : ": Configuration", "member" : "ackcord.data.DiscordProtocol.circeConfiguration", "link" : "ackcord\/data\/DiscordProtocol$.html#circeConfiguration:io.circe.generic.extras.Configuration", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/DiscordProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/DiscordProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/DiscordProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/DiscordProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/DiscordProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/DiscordProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/DiscordProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/DiscordProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/DiscordProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/DiscordProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/DiscordProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/DiscordProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/DiscordProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/DiscordProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/DiscordProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/DiscordProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/data\/DiscordProtocol.html", "kind" : "trait", "members_trait" : [{"label" : "teamMemberCodec", "tail" : ": Codec[TeamMember]", "member" : "ackcord.data.DiscordProtocol.teamMemberCodec", "link" : "ackcord\/data\/DiscordProtocol.html#teamMemberCodec:io.circe.Codec[ackcord.data.TeamMember]", "kind" : "implicit val"}, {"label" : "teamCodec", "tail" : ": Codec[Team]", "member" : "ackcord.data.DiscordProtocol.teamCodec", "link" : "ackcord\/data\/DiscordProtocol.html#teamCodec:io.circe.Codec[ackcord.data.Team]", "kind" : "implicit val"}, {"label" : "clientStatusCodec", "tail" : ": Codec[ClientStatus]", "member" : "ackcord.data.DiscordProtocol.clientStatusCodec", "link" : "ackcord\/data\/DiscordProtocol.html#clientStatusCodec:io.circe.Codec[ackcord.data.ClientStatus]", "kind" : "implicit val"}, {"label" : "rawBanCodec", "tail" : ": Codec[RawBan]", "member" : "ackcord.data.DiscordProtocol.rawBanCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawBanCodec:io.circe.Codec[ackcord.data.raw.RawBan]", "kind" : "implicit val"}, {"label" : "auditLogChangeDecoder", "tail" : ": Decoder[AuditLogChange[_]]", "member" : "ackcord.data.DiscordProtocol.auditLogChangeDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#auditLogChangeDecoder:io.circe.Decoder[ackcord.data.AuditLogChange[_]]", "kind" : "implicit val"}, {"label" : "guildWidgetMemberCodec", "tail" : ": Codec[GuildWidgetMember]", "member" : "ackcord.data.DiscordProtocol.guildWidgetMemberCodec", "link" : "ackcord\/data\/DiscordProtocol.html#guildWidgetMemberCodec:io.circe.Codec[ackcord.data.GuildWidgetMember]", "kind" : "implicit val"}, {"label" : "guildWidgetChannelCodec", "tail" : ": Codec[GuildWidgetChannel]", "member" : "ackcord.data.DiscordProtocol.guildWidgetChannelCodec", "link" : "ackcord\/data\/DiscordProtocol.html#guildWidgetChannelCodec:io.circe.Codec[ackcord.data.GuildWidgetChannel]", "kind" : "implicit val"}, {"label" : "guildWidgetCodec", "tail" : ": Codec[GuildWidget]", "member" : "ackcord.data.DiscordProtocol.guildWidgetCodec", "link" : "ackcord\/data\/DiscordProtocol.html#guildWidgetCodec:io.circe.Codec[ackcord.data.GuildWidget]", "kind" : "implicit val"}, {"label" : "templateCodec", "tail" : ": Codec[Template]", "member" : "ackcord.data.DiscordProtocol.templateCodec", "link" : "ackcord\/data\/DiscordProtocol.html#templateCodec:io.circe.Codec[ackcord.data.Template]", "kind" : "implicit val"}, {"label" : "partialRoleCodec", "tail" : ": Codec[PartialRole]", "member" : "ackcord.data.DiscordProtocol.partialRoleCodec", "link" : "ackcord\/data\/DiscordProtocol.html#partialRoleCodec:io.circe.Codec[ackcord.data.AuditLogChange.PartialRole]", "kind" : "implicit val"}, {"label" : "optionalAuditLogInfoDecoder", "tail" : ": Decoder[OptionalAuditLogInfo]", "member" : "ackcord.data.DiscordProtocol.optionalAuditLogInfoDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#optionalAuditLogInfoDecoder:io.circe.Decoder[ackcord.data.OptionalAuditLogInfo]", "kind" : "implicit val"}, {"label" : "auditLogEntryDecoder", "tail" : ": Decoder[AuditLogEntry]", "member" : "ackcord.data.DiscordProtocol.auditLogEntryDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#auditLogEntryDecoder:io.circe.Decoder[ackcord.data.AuditLogEntry]", "kind" : "implicit val"}, {"label" : "auditLogDecoder", "tail" : ": Decoder[AuditLog]", "member" : "ackcord.data.DiscordProtocol.auditLogDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#auditLogDecoder:io.circe.Decoder[ackcord.data.AuditLog]", "kind" : "implicit val"}, {"label" : "webhookDecoder", "tail" : ": Decoder[Webhook]", "member" : "ackcord.data.DiscordProtocol.webhookDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#webhookDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "implicit val"}, {"label" : "connectionCodec", "tail" : ": Codec[Connection]", "member" : "ackcord.data.DiscordProtocol.connectionCodec", "link" : "ackcord\/data\/DiscordProtocol.html#connectionCodec:io.circe.Codec[ackcord.data.Connection]", "kind" : "implicit val"}, {"label" : "rawEmojiCodec", "tail" : ": Codec[RawEmoji]", "member" : "ackcord.data.DiscordProtocol.rawEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawEmojiCodec:io.circe.Codec[ackcord.data.raw.RawEmoji]", "kind" : "implicit val"}, {"label" : "voiceRegionCodec", "tail" : ": Codec[VoiceRegion]", "member" : "ackcord.data.DiscordProtocol.voiceRegionCodec", "link" : "ackcord\/data\/DiscordProtocol.html#voiceRegionCodec:io.circe.Codec[ackcord.data.VoiceRegion]", "kind" : "implicit val"}, {"label" : "integrationCodec", "tail" : ": Codec[Integration]", "member" : "ackcord.data.DiscordProtocol.integrationCodec", "link" : "ackcord\/data\/DiscordProtocol.html#integrationCodec:io.circe.Codec[ackcord.data.Integration]", "kind" : "implicit val"}, {"label" : "integrationApplicationCodec", "tail" : ": Codec[IntegrationApplication]", "member" : "ackcord.data.DiscordProtocol.integrationApplicationCodec", "link" : "ackcord\/data\/DiscordProtocol.html#integrationApplicationCodec:io.circe.Codec[ackcord.data.IntegrationApplication]", "kind" : "implicit val"}, {"label" : "partialIntegrationCodec", "tail" : ": Codec[PartialIntegration]", "member" : "ackcord.data.DiscordProtocol.partialIntegrationCodec", "link" : "ackcord\/data\/DiscordProtocol.html#partialIntegrationCodec:io.circe.Codec[ackcord.data.PartialIntegration]", "kind" : "implicit val"}, {"label" : "integrationAccountCodec", "tail" : ": Codec[IntegrationAccount]", "member" : "ackcord.data.DiscordProtocol.integrationAccountCodec", "link" : "ackcord\/data\/DiscordProtocol.html#integrationAccountCodec:io.circe.Codec[ackcord.data.IntegrationAccount]", "kind" : "implicit val"}, {"label" : "guildWidgetSettingsCodec", "tail" : ": Codec[GuildWidgetSettings]", "member" : "ackcord.data.DiscordProtocol.guildWidgetSettingsCodec", "link" : "ackcord\/data\/DiscordProtocol.html#guildWidgetSettingsCodec:io.circe.Codec[ackcord.data.GuildWidgetSettings]", "kind" : "implicit val"}, {"label" : "inviteWithMetadataCodec", "tail" : ": Codec[InviteWithMetadata]", "member" : "ackcord.data.DiscordProtocol.inviteWithMetadataCodec", "link" : "ackcord\/data\/DiscordProtocol.html#inviteWithMetadataCodec:io.circe.Codec[ackcord.data.InviteWithMetadata]", "kind" : "implicit val"}, {"label" : "inviteCodec", "tail" : ": Codec[Invite]", "member" : "ackcord.data.DiscordProtocol.inviteCodec", "link" : "ackcord\/data\/DiscordProtocol.html#inviteCodec:io.circe.Codec[ackcord.data.Invite]", "kind" : "implicit val"}, {"label" : "inviteTargetUserCodec", "tail" : ": Codec[InviteTargetUser]", "member" : "ackcord.data.DiscordProtocol.inviteTargetUserCodec", "link" : "ackcord\/data\/DiscordProtocol.html#inviteTargetUserCodec:io.circe.Codec[ackcord.data.InviteTargetUser]", "kind" : "implicit val"}, {"label" : "inviteChannelCodec", "tail" : ": Codec[InviteChannel]", "member" : "ackcord.data.DiscordProtocol.inviteChannelCodec", "link" : "ackcord\/data\/DiscordProtocol.html#inviteChannelCodec:io.circe.Codec[ackcord.data.InviteChannel]", "kind" : "implicit val"}, {"label" : "inviteGuildCodec", "tail" : ": Codec[InviteGuild]", "member" : "ackcord.data.DiscordProtocol.inviteGuildCodec", "link" : "ackcord\/data\/DiscordProtocol.html#inviteGuildCodec:io.circe.Codec[ackcord.data.InviteGuild]", "kind" : "implicit val"}, {"label" : "voiceStateCodec", "tail" : ": Codec[VoiceState]", "member" : "ackcord.data.DiscordProtocol.voiceStateCodec", "link" : "ackcord\/data\/DiscordProtocol.html#voiceStateCodec:io.circe.Codec[ackcord.data.VoiceState]", "kind" : "implicit val"}, {"label" : "rawMessageDecoder", "tail" : ": Decoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageDecoder", "link" : "ackcord\/data\/DiscordProtocol.html#rawMessageDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "rawMessageEncoder", "tail" : ": Encoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageEncoder", "link" : "ackcord\/data\/DiscordProtocol.html#rawMessageEncoder:io.circe.Encoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "messageReferenceCodec", "tail" : ": Codec[MessageReference]", "member" : "ackcord.data.DiscordProtocol.messageReferenceCodec", "link" : "ackcord\/data\/DiscordProtocol.html#messageReferenceCodec:io.circe.Codec[ackcord.data.MessageReference]", "kind" : "implicit val"}, {"label" : "channelMentionCodec", "tail" : ": Codec[ChannelMention]", "member" : "ackcord.data.DiscordProtocol.channelMentionCodec", "link" : "ackcord\/data\/DiscordProtocol.html#channelMentionCodec:io.circe.Codec[ackcord.data.ChannelMention]", "kind" : "implicit val"}, {"label" : "partialRawGuildMemberCodec", "tail" : ": Codec[PartialRawGuildMember]", "member" : "ackcord.data.DiscordProtocol.partialRawGuildMemberCodec", "link" : "ackcord\/data\/DiscordProtocol.html#partialRawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.PartialRawGuildMember]", "kind" : "implicit val"}, {"label" : "messageApplicationCodec", "tail" : ": Codec[MessageApplication]", "member" : "ackcord.data.DiscordProtocol.messageApplicationCodec", "link" : "ackcord\/data\/DiscordProtocol.html#messageApplicationCodec:io.circe.Codec[ackcord.data.MessageApplication]", "kind" : "implicit val"}, {"label" : "rawMessageActivityCodec", "tail" : ": Codec[RawMessageActivity]", "member" : "ackcord.data.DiscordProtocol.rawMessageActivityCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawMessageActivityCodec:io.circe.Codec[ackcord.data.raw.RawMessageActivity]", "kind" : "implicit val"}, {"label" : "reactionCodec", "tail" : ": Codec[Reaction]", "member" : "ackcord.data.DiscordProtocol.reactionCodec", "link" : "ackcord\/data\/DiscordProtocol.html#reactionCodec:io.circe.Codec[ackcord.data.Reaction]", "kind" : "implicit val"}, {"label" : "partialEmojiCodec", "tail" : ": Codec[PartialEmoji]", "member" : "ackcord.data.DiscordProtocol.partialEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol.html#partialEmojiCodec:io.circe.Codec[ackcord.data.PartialEmoji]", "kind" : "implicit val"}, {"label" : "outgoingEmbedCodec", "tail" : ": Codec[OutgoingEmbed]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedCodec:io.circe.Codec[ackcord.data.OutgoingEmbed]", "kind" : "implicit val"}, {"label" : "outgoingEmbedAuthorCodec", "tail" : ": Codec[OutgoingEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedAuthorCodec:io.circe.Codec[ackcord.data.OutgoingEmbedAuthor]", "kind" : "implicit val"}, {"label" : "outgoingEmbedThumbnailCodec", "tail" : ": Codec[OutgoingEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedThumbnailCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedThumbnailCodec:io.circe.Codec[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "outgoingEmbedVideoCodec", "tail" : ": Codec[OutgoingEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedVideoCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedVideoCodec:io.circe.Codec[ackcord.data.OutgoingEmbedVideo]", "kind" : "implicit val"}, {"label" : "outgoingEmbedImageCodec", "tail" : ": Codec[OutgoingEmbedImage]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedImageCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedImageCodec:io.circe.Codec[ackcord.data.OutgoingEmbedImage]", "kind" : "implicit val"}, {"label" : "outgoingEmbedFooterCodec", "tail" : ": Codec[OutgoingEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedFooterCodec", "link" : "ackcord\/data\/DiscordProtocol.html#outgoingEmbedFooterCodec:io.circe.Codec[ackcord.data.OutgoingEmbedFooter]", "kind" : "implicit val"}, {"label" : "receivedEmbedCodec", "tail" : ": Codec[ReceivedEmbed]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedCodec:io.circe.Codec[ackcord.data.ReceivedEmbed]", "kind" : "implicit val"}, {"label" : "receivedEmbedAuthorCodec", "tail" : ": Codec[ReceivedEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedAuthorCodec:io.circe.Codec[ackcord.data.ReceivedEmbedAuthor]", "kind" : "implicit val"}, {"label" : "receivedEmbedProviderCodec", "tail" : ": Codec[ReceivedEmbedProvider]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedProviderCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedProviderCodec:io.circe.Codec[ackcord.data.ReceivedEmbedProvider]", "kind" : "implicit val"}, {"label" : "receivedEmbedVideoCodec", "tail" : ": Codec[ReceivedEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedVideoCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedVideoCodec:io.circe.Codec[ackcord.data.ReceivedEmbedVideo]", "kind" : "implicit val"}, {"label" : "receivedEmbedThumbnailCodec", "tail" : ": Codec[ReceivedEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedThumbnailCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedThumbnailCodec:io.circe.Codec[ackcord.data.ReceivedEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "receivedEmbedImageCodec", "tail" : ": Codec[ReceivedEmbedImage]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedImageCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedImageCodec:io.circe.Codec[ackcord.data.ReceivedEmbedImage]", "kind" : "implicit val"}, {"label" : "receivedEmbedFooterCodec", "tail" : ": Codec[ReceivedEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedFooterCodec", "link" : "ackcord\/data\/DiscordProtocol.html#receivedEmbedFooterCodec:io.circe.Codec[ackcord.data.ReceivedEmbedFooter]", "kind" : "implicit val"}, {"label" : "embedFieldCodec", "tail" : ": Codec[EmbedField]", "member" : "ackcord.data.DiscordProtocol.embedFieldCodec", "link" : "ackcord\/data\/DiscordProtocol.html#embedFieldCodec:io.circe.Codec[ackcord.data.EmbedField]", "kind" : "implicit val"}, {"label" : "attachementCodec", "tail" : ": Codec[Attachment]", "member" : "ackcord.data.DiscordProtocol.attachementCodec", "link" : "ackcord\/data\/DiscordProtocol.html#attachementCodec:io.circe.Codec[ackcord.data.Attachment]", "kind" : "implicit val"}, {"label" : "rawGuildMemberCodec", "tail" : ": Codec[RawGuildMember]", "member" : "ackcord.data.DiscordProtocol.rawGuildMemberCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.RawGuildMember]", "kind" : "implicit val"}, {"label" : "rawRoleCodec", "tail" : ": Codec[RawRole]", "member" : "ackcord.data.DiscordProtocol.rawRoleCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawRoleCodec:io.circe.Codec[ackcord.data.raw.RawRole]", "kind" : "implicit val"}, {"label" : "roleCodec", "tail" : ": Codec[Role]", "member" : "ackcord.data.DiscordProtocol.roleCodec", "link" : "ackcord\/data\/DiscordProtocol.html#roleCodec:io.circe.Codec[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "webhookAuthorCodec", "tail" : ": Codec[WebhookAuthor]", "member" : "ackcord.data.DiscordProtocol.webhookAuthorCodec", "link" : "ackcord\/data\/DiscordProtocol.html#webhookAuthorCodec:io.circe.Codec[ackcord.data.WebhookAuthor]", "kind" : "implicit val"}, {"label" : "userCodec", "tail" : ": Codec[User]", "member" : "ackcord.data.DiscordProtocol.userCodec", "link" : "ackcord\/data\/DiscordProtocol.html#userCodec:io.circe.Codec[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "permissionValueCodec", "tail" : ": Codec[PermissionOverwrite]", "member" : "ackcord.data.DiscordProtocol.permissionValueCodec", "link" : "ackcord\/data\/DiscordProtocol.html#permissionValueCodec:io.circe.Codec[ackcord.data.PermissionOverwrite]", "kind" : "implicit val"}, {"label" : "unavailableGuildCodec", "tail" : ": Codec[UnavailableGuild]", "member" : "ackcord.data.DiscordProtocol.unavailableGuildCodec", "link" : "ackcord\/data\/DiscordProtocol.html#unavailableGuildCodec:io.circe.Codec[ackcord.data.UnavailableGuild]", "kind" : "implicit val"}, {"label" : "rawPresenceCodec", "tail" : ": Codec[RawPresence]", "member" : "ackcord.data.DiscordProtocol.rawPresenceCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawPresenceCodec:io.circe.Codec[ackcord.data.raw.RawPresence]", "kind" : "implicit val"}, {"label" : "activityEmojiCodec", "tail" : ": Codec[ActivityEmoji]", "member" : "ackcord.data.DiscordProtocol.activityEmojiCodec", "link" : "ackcord\/data\/DiscordProtocol.html#activityEmojiCodec:io.circe.Codec[ackcord.data.ActivityEmoji]", "kind" : "implicit val"}, {"label" : "rawActivityPartyCodec", "tail" : ": Codec[RawActivityParty]", "member" : "ackcord.data.DiscordProtocol.rawActivityPartyCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawActivityPartyCodec:io.circe.Codec[ackcord.data.raw.RawActivityParty]", "kind" : "implicit val"}, {"label" : "activityAssetCodec", "tail" : ": Codec[ActivityAsset]", "member" : "ackcord.data.DiscordProtocol.activityAssetCodec", "link" : "ackcord\/data\/DiscordProtocol.html#activityAssetCodec:io.circe.Codec[ackcord.data.ActivityAsset]", "kind" : "implicit val"}, {"label" : "activityTimestampsCodec", "tail" : ": Codec[ActivityTimestamps]", "member" : "ackcord.data.DiscordProtocol.activityTimestampsCodec", "link" : "ackcord\/data\/DiscordProtocol.html#activityTimestampsCodec:io.circe.Codec[ackcord.data.ActivityTimestamps]", "kind" : "implicit val"}, {"label" : "rawActivityCodec", "tail" : ": Codec[RawActivity]", "member" : "ackcord.data.DiscordProtocol.rawActivityCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawActivityCodec:io.circe.Codec[ackcord.data.raw.RawActivity]", "kind" : "implicit val"}, {"label" : "partialUserCodec", "tail" : ": Codec[PartialUser]", "member" : "ackcord.data.DiscordProtocol.partialUserCodec", "link" : "ackcord\/data\/DiscordProtocol.html#partialUserCodec:io.circe.Codec[ackcord.data.raw.PartialUser]", "kind" : "implicit val"}, {"label" : "rawGuildPreviewCodec", "tail" : ": Codec[GuildPreview]", "member" : "ackcord.data.DiscordProtocol.rawGuildPreviewCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawGuildPreviewCodec:io.circe.Codec[ackcord.data.GuildPreview]", "kind" : "implicit val"}, {"label" : "rawGuildCodec", "tail" : ": Codec[RawGuild]", "member" : "ackcord.data.DiscordProtocol.rawGuildCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawGuildCodec:io.circe.Codec[ackcord.data.raw.RawGuild]", "kind" : "implicit val"}, {"label" : "rawChannelCodec", "tail" : ": Codec[RawChannel]", "member" : "ackcord.data.DiscordProtocol.rawChannelCodec", "link" : "ackcord\/data\/DiscordProtocol.html#rawChannelCodec:io.circe.Codec[ackcord.data.raw.RawChannel]", "kind" : "implicit val"}, {"label" : "imageDataCodec", "tail" : ": Codec[ImageData]", "member" : "ackcord.data.DiscordProtocol.imageDataCodec", "link" : "ackcord\/data\/DiscordProtocol.html#imageDataCodec:io.circe.Codec[ackcord.data.ImageData]", "kind" : "implicit val"}, {"label" : "offsetDateTimeCodec", "tail" : ": Codec[OffsetDateTime]", "member" : "ackcord.data.DiscordProtocol.offsetDateTimeCodec", "link" : "ackcord\/data\/DiscordProtocol.html#offsetDateTimeCodec:io.circe.Codec[java.time.OffsetDateTime]", "kind" : "implicit val"}, {"label" : "systemChannelFlagsCodec", "tail" : ": Codec[SystemChannelFlags]", "member" : "ackcord.data.DiscordProtocol.systemChannelFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol.html#systemChannelFlagsCodec:io.circe.Codec[ackcord.data.SystemChannelFlags]", "kind" : "implicit val"}, {"label" : "messageFlagsCodec", "tail" : ": Codec[MessageFlags]", "member" : "ackcord.data.DiscordProtocol.messageFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol.html#messageFlagsCodec:io.circe.Codec[ackcord.data.MessageFlags]", "kind" : "implicit val"}, {"label" : "userFlagsCodec", "tail" : ": Codec[UserFlags]", "member" : "ackcord.data.DiscordProtocol.userFlagsCodec", "link" : "ackcord\/data\/DiscordProtocol.html#userFlagsCodec:io.circe.Codec[ackcord.data.UserFlags]", "kind" : "implicit val"}, {"label" : "permissionCodec", "tail" : ": Codec[Permission]", "member" : "ackcord.data.DiscordProtocol.permissionCodec", "link" : "ackcord\/data\/DiscordProtocol.html#permissionCodec:io.circe.Codec[ackcord.data.Permission]", "kind" : "implicit val"}, {"label" : "instantCodec", "tail" : ": Codec[Instant]", "member" : "ackcord.data.DiscordProtocol.instantCodec", "link" : "ackcord\/data\/DiscordProtocol.html#instantCodec:io.circe.Codec[java.time.Instant]", "kind" : "implicit val"}, {"label" : "snowflakeTypeCodec", "tail" : "(): Codec[SnowflakeType[A]]", "member" : "ackcord.data.DiscordProtocol.snowflakeTypeCodec", "link" : "ackcord\/data\/DiscordProtocol.html#snowflakeTypeCodec[A]:io.circe.Codec[ackcord.data.SnowflakeType[A]]", "kind" : "implicit def"}, {"label" : "circeConfiguration", "tail" : ": Configuration", "member" : "ackcord.data.DiscordProtocol.circeConfiguration", "link" : "ackcord\/data\/DiscordProtocol.html#circeConfiguration:io.circe.generic.extras.Configuration", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/DiscordProtocol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/DiscordProtocol.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/DiscordProtocol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/DiscordProtocol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/DiscordProtocol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/DiscordProtocol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/DiscordProtocol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DiscordProtocol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/DiscordProtocol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/DiscordProtocol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/DiscordProtocol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/DiscordProtocol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/DiscordProtocol.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/DiscordProtocol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/DiscordProtocol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/DiscordProtocol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/DiscordProtocol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.data.DMChannel", "shortDescription" : "A DM text channel", "members_case class" : [{"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.DMChannel.channelType", "link" : "ackcord\/data\/DMChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.DMChannel#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.DMChannel.userId", "link" : "ackcord\/data\/DMChannel.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "lastMessageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.DMChannel.lastMessageId", "link" : "ackcord\/data\/DMChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[DMChannel]", "member" : "ackcord.data.DMChannel.id", "link" : "ackcord\/data\/DMChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.DMChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/DMChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/DMChannel.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/DMChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/DMChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/DMChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/DMChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/DMChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/DMChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/DMChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/DMChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/DMChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DMChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DMChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/DMChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/DMChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/DMChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/DMChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/DMChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/DMChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/DMChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/DMChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.EmbedField", "shortDescription" : "A field for an embed", "members_case class" : [{"member" : "ackcord.data.EmbedField#<init>", "error" : "unsupported entity"}, {"label" : "inline", "tail" : ": Option[Boolean]", "member" : "ackcord.data.EmbedField.inline", "link" : "ackcord\/data\/EmbedField.html#inline:Option[Boolean]", "kind" : "val"}, {"label" : "value", "tail" : ": String", "member" : "ackcord.data.EmbedField.value", "link" : "ackcord\/data\/EmbedField.html#value:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.EmbedField.name", "link" : "ackcord\/data\/EmbedField.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/EmbedField.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/EmbedField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/EmbedField.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/EmbedField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/EmbedField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/EmbedField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/EmbedField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/EmbedField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedField.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/EmbedField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/EmbedField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/EmbedField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/EmbedField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/EmbedField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/EmbedField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/EmbedField.html", "kind" : "case class"}, {"name" : "ackcord.data.EmbedType", "shortDescription" : "", "object" : "ackcord\/data\/EmbedType$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.data.EmbedType.value", "link" : "ackcord\/data\/EmbedType.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/EmbedType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/EmbedType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/EmbedType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/EmbedType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/EmbedType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/EmbedType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/EmbedType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/EmbedType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/EmbedType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/EmbedType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/EmbedType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/EmbedType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/EmbedType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/EmbedType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/EmbedType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/EmbedType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: String): EmbedType", "member" : "ackcord.data.EmbedType.createUnknown", "link" : "ackcord\/data\/EmbedType$.html#createUnknown(value:String):ackcord.data.EmbedType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.EmbedType.Unknown", "link" : "ackcord\/data\/EmbedType$.html#UnknownextendsEmbedTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "Link", "tail" : "", "member" : "ackcord.data.EmbedType.Link", "link" : "ackcord\/data\/EmbedType$.html#Link", "kind" : "case object"}, {"label" : "Article", "tail" : "", "member" : "ackcord.data.EmbedType.Article", "link" : "ackcord\/data\/EmbedType$.html#Article", "kind" : "case object"}, {"label" : "GifV", "tail" : "", "member" : "ackcord.data.EmbedType.GifV", "link" : "ackcord\/data\/EmbedType$.html#GifV", "kind" : "case object"}, {"label" : "Video", "tail" : "", "member" : "ackcord.data.EmbedType.Video", "link" : "ackcord\/data\/EmbedType$.html#Video", "kind" : "case object"}, {"label" : "Image", "tail" : "", "member" : "ackcord.data.EmbedType.Image", "link" : "ackcord\/data\/EmbedType$.html#Image", "kind" : "case object"}, {"label" : "Rich", "tail" : "", "member" : "ackcord.data.EmbedType.Rich", "link" : "ackcord\/data\/EmbedType$.html#Rich", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[EmbedType]", "member" : "ackcord.data.EmbedType.values", "link" : "ackcord\/data\/EmbedType$.html#values:IndexedSeq[ackcord.data.EmbedType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[EmbedType]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/EmbedType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[EmbedType]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/data\/EmbedType$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], EmbedType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/EmbedType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[EmbedType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/EmbedType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): EmbedType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/EmbedType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, EmbedType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/EmbedType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/EmbedType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/EmbedType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/EmbedType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/EmbedType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/EmbedType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/EmbedType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/EmbedType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/EmbedType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/EmbedType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/EmbedType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/EmbedType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/EmbedType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/EmbedType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/EmbedType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/EmbedType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/EmbedType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/EmbedType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/EmbedType.html", "kind" : "class"}, {"name" : "ackcord.data.Emoji", "shortDescription" : "An emoji in a guild.", "members_case class" : [{"label" : "creator", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Emoji.creator", "link" : "ackcord\/data\/Emoji.html#creator(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "asString", "tail" : "(): String", "member" : "ackcord.data.Emoji.asString", "link" : "ackcord\/data\/Emoji.html#asString:String", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Emoji.mention", "link" : "ackcord\/data\/Emoji.html#mention:String", "kind" : "def"}, {"member" : "ackcord.data.Emoji#<init>", "error" : "unsupported entity"}, {"label" : "available", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Emoji.available", "link" : "ackcord\/data\/Emoji.html#available:Option[Boolean]", "kind" : "val"}, {"label" : "animated", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Emoji.animated", "link" : "ackcord\/data\/Emoji.html#animated:Option[Boolean]", "kind" : "val"}, {"label" : "managed", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Emoji.managed", "link" : "ackcord\/data\/Emoji.html#managed:Option[Boolean]", "kind" : "val"}, {"label" : "requireColons", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Emoji.requireColons", "link" : "ackcord\/data\/Emoji.html#requireColons:Option[Boolean]", "kind" : "val"}, {"label" : "userId", "tail" : ": Option[UserId]", "member" : "ackcord.data.Emoji.userId", "link" : "ackcord\/data\/Emoji.html#userId:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.Emoji.roles", "link" : "ackcord\/data\/Emoji.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Emoji.name", "link" : "ackcord\/data\/Emoji.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": EmojiId", "member" : "ackcord.data.Emoji.id", "link" : "ackcord\/data\/Emoji.html#id:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Emoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Emoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Emoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Emoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Emoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Emoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Emoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Emoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Emoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Emoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Emoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Emoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Emoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Emoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Emoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Emoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Emoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Emoji.html", "kind" : "case class"}, {"name" : "ackcord.data.EmojiId", "shortDescription" : "", "object" : "ackcord\/data\/package$$EmojiId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[EmojiId]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$EmojiId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[EmojiId]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$EmojiId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[EmojiId]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$EmojiId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$EmojiId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$EmojiId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$EmojiId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$EmojiId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$EmojiId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$EmojiId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$EmojiId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$EmojiId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$EmojiId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$EmojiId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$EmojiId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$EmojiId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$EmojiId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$EmojiId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$EmojiId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$EmojiId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$EmojiId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$EmojiId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$EmojiId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.EmojiIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[Emoji]", "member" : "ackcord.data.EmojiIdSyntax.resolve", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#resolve(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[Emoji]", "member" : "ackcord.data.EmojiIdSyntax.resolve", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Emoji]", "kind" : "def"}, {"member" : "ackcord.data.EmojiIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$EmojiIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$EmojiIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.FilterLevel", "shortDescription" : "The different explicit content filter levels to use for a guild.", "object" : "ackcord\/data\/FilterLevel$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.FilterLevel.value", "link" : "ackcord\/data\/FilterLevel.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/FilterLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/FilterLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/FilterLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/FilterLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/FilterLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/FilterLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/FilterLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/FilterLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/FilterLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/FilterLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/FilterLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/FilterLevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/FilterLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/FilterLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/FilterLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/FilterLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): FilterLevel", "member" : "ackcord.data.FilterLevel.createUnknown", "link" : "ackcord\/data\/FilterLevel$.html#createUnknown(value:Int):ackcord.data.FilterLevel", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.FilterLevel.Unknown", "link" : "ackcord\/data\/FilterLevel$.html#UnknownextendsFilterLevelwithProductwithSerializable", "kind" : "case class"}, {"label" : "values", "tail" : "(): IndexedSeq[FilterLevel]", "member" : "ackcord.data.FilterLevel.values", "link" : "ackcord\/data\/FilterLevel$.html#values:IndexedSeq[ackcord.data.FilterLevel]", "kind" : "def"}, {"label" : "AllMembers", "tail" : "", "member" : "ackcord.data.FilterLevel.AllMembers", "link" : "ackcord\/data\/FilterLevel$.html#AllMembers", "kind" : "case object"}, {"label" : "MembersWithoutRoles", "tail" : "", "member" : "ackcord.data.FilterLevel.MembersWithoutRoles", "link" : "ackcord\/data\/FilterLevel$.html#MembersWithoutRoles", "kind" : "case object"}, {"label" : "Disabled", "tail" : "", "member" : "ackcord.data.FilterLevel.Disabled", "link" : "ackcord\/data\/FilterLevel$.html#Disabled", "kind" : "case object"}, {"label" : "codec", "tail" : ": Codec[FilterLevel]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/FilterLevel$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[FilterLevel]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/FilterLevel$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], FilterLevel]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/FilterLevel$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[FilterLevel]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/FilterLevel$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): FilterLevel", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/FilterLevel$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, FilterLevel]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/FilterLevel$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/FilterLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/FilterLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/FilterLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/FilterLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/FilterLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/FilterLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/FilterLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/FilterLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/FilterLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/FilterLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/FilterLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/FilterLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/FilterLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/FilterLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/FilterLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/FilterLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/FilterLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/FilterLevel.html", "kind" : "class"}, {"name" : "ackcord.data.GetGuild", "trait" : "ackcord\/data\/GetGuild.html", "kind" : "trait", "members_trait" : [{"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/GetGuild.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GetGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GetGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GetGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GetGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GetGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GetGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GetGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GetGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GetGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GetGuild.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GetGuild.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GetGuild.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GetGuild.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GetGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GetGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GetGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guildId", "tail" : "(): GuildId", "member" : "ackcord.data.GetGuild.guildId", "link" : "ackcord\/data\/GetGuild.html#guildId:ackcord.data.GuildId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.GetGuildOpt", "trait" : "ackcord\/data\/GetGuildOpt.html", "kind" : "trait", "members_trait" : [{"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuildOpt.guild", "link" : "ackcord\/data\/GetGuildOpt.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GetGuildOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GetGuildOpt.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GetGuildOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GetGuildOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GetGuildOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GetGuildOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GetGuildOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuildOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuildOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetGuildOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GetGuildOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GetGuildOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GetGuildOpt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GetGuildOpt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GetGuildOpt.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GetGuildOpt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GetGuildOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GetGuildOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GetGuildOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guildId", "tail" : "(): Option[GuildId]", "member" : "ackcord.data.GetGuildOpt.guildId", "link" : "ackcord\/data\/GetGuildOpt.html#guildId:Option[ackcord.data.GuildId]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.GetUser", "trait" : "ackcord\/data\/GetUser.html", "kind" : "trait", "members_trait" : [{"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/GetUser.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GetUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GetUser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GetUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GetUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GetUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GetUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GetUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GetUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GetUser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GetUser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GetUser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GetUser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GetUser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GetUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GetUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GetUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "userId", "tail" : "(): UserId", "member" : "ackcord.data.GetUser.userId", "link" : "ackcord\/data\/GetUser.html#userId:ackcord.data.UserId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.GetVoiceChannelOpt", "trait" : "ackcord\/data\/GetVoiceChannelOpt.html", "kind" : "trait", "members_trait" : [{"label" : "voiceChannel", "tail" : "(snapshot: CacheSnapshot): Option[VoiceGuildChannel]", "member" : "ackcord.data.GetVoiceChannelOpt.voiceChannel", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#voiceChannel(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GetVoiceChannelOpt.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channelId", "tail" : "(): Option[VoiceGuildChannelId]", "member" : "ackcord.data.GetVoiceChannelOpt.channelId", "link" : "ackcord\/data\/GetVoiceChannelOpt.html#channelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.GroupDMChannel", "shortDescription" : "A group DM text channel", "members_case class" : [{"label" : "owner", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.GroupDMChannel.owner", "link" : "ackcord\/data\/GroupDMChannel.html#owner(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.GroupDMChannel.channelType", "link" : "ackcord\/data\/GroupDMChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.GroupDMChannel#<init>", "error" : "unsupported entity"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.GroupDMChannel.icon", "link" : "ackcord\/data\/GroupDMChannel.html#icon:Option[String]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.GroupDMChannel.applicationId", "link" : "ackcord\/data\/GroupDMChannel.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "ownerId", "tail" : ": UserId", "member" : "ackcord.data.GroupDMChannel.ownerId", "link" : "ackcord\/data\/GroupDMChannel.html#ownerId:ackcord.data.UserId", "kind" : "val"}, {"label" : "lastMessageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.GroupDMChannel.lastMessageId", "link" : "ackcord\/data\/GroupDMChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "users", "tail" : ": Seq[UserId]", "member" : "ackcord.data.GroupDMChannel.users", "link" : "ackcord\/data\/GroupDMChannel.html#users:Seq[ackcord.data.UserId]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GroupDMChannel.name", "link" : "ackcord\/data\/GroupDMChannel.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[GroupDMChannel]", "member" : "ackcord.data.GroupDMChannel.id", "link" : "ackcord\/data\/GroupDMChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.GroupDMChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GroupDMChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/GroupDMChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/GroupDMChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GroupDMChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GroupDMChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GroupDMChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GroupDMChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GroupDMChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GroupDMChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GroupDMChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GroupDMChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GroupDMChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GroupDMChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GroupDMChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GroupDMChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GroupDMChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GroupDMChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GroupDMChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GroupDMChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GroupDMChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.Guild", "shortDescription" : "A guild or server in Discord.", "members_case class" : [{"label" : "systemChannel", "tail" : "(): Option[TextGuildChannel]", "member" : "ackcord.data.Guild.systemChannel", "link" : "ackcord\/data\/Guild.html#systemChannel:Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "widgetChannel", "tail" : "(): Option[GuildChannel]", "member" : "ackcord.data.Guild.widgetChannel", "link" : "ackcord\/data\/Guild.html#widgetChannel:Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "afkChannel", "tail" : "(): Option[VoiceGuildChannel]", "member" : "ackcord.data.Guild.afkChannel", "link" : "ackcord\/data\/Guild.html#afkChannel:Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "owner", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Guild.owner", "link" : "ackcord\/data\/Guild.html#owner(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "mentionEveryone", "tail" : "(): String", "member" : "ackcord.data.Guild.mentionEveryone", "link" : "ackcord\/data\/Guild.html#mentionEveryone:String", "kind" : "def"}, {"label" : "everyoneRole", "tail" : "(): Role", "member" : "ackcord.data.Guild.everyoneRole", "link" : "ackcord\/data\/Guild.html#everyoneRole:ackcord.data.Role", "kind" : "def"}, {"label" : "unavailable", "tail" : "(): Option[Boolean]", "member" : "ackcord.data.Guild.unavailable", "link" : "ackcord\/data\/Guild.html#unavailable:Option[Boolean]", "kind" : "def"}, {"member" : "ackcord.data.Guild#<init>", "error" : "unsupported entity"}, {"label" : "approximatePresenceCount", "tail" : ": Option[Int]", "member" : "ackcord.data.Guild.approximatePresenceCount", "link" : "ackcord\/data\/Guild.html#approximatePresenceCount:Option[Int]", "kind" : "val"}, {"label" : "approximateMemberCount", "tail" : ": Option[Int]", "member" : "ackcord.data.Guild.approximateMemberCount", "link" : "ackcord\/data\/Guild.html#approximateMemberCount:Option[Int]", "kind" : "val"}, {"label" : "maxVideoChannelUsers", "tail" : ": Option[Int]", "member" : "ackcord.data.Guild.maxVideoChannelUsers", "link" : "ackcord\/data\/Guild.html#maxVideoChannelUsers:Option[Int]", "kind" : "val"}, {"label" : "publicUpdatesChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.Guild.publicUpdatesChannelId", "link" : "ackcord\/data\/Guild.html#publicUpdatesChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "preferredLocale", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.preferredLocale", "link" : "ackcord\/data\/Guild.html#preferredLocale:Option[String]", "kind" : "val"}, {"label" : "premiumSubscriptionCount", "tail" : ": Option[Int]", "member" : "ackcord.data.Guild.premiumSubscriptionCount", "link" : "ackcord\/data\/Guild.html#premiumSubscriptionCount:Option[Int]", "kind" : "val"}, {"label" : "premiumTier", "tail" : ": PremiumTier", "member" : "ackcord.data.Guild.premiumTier", "link" : "ackcord\/data\/Guild.html#premiumTier:ackcord.data.PremiumTier", "kind" : "val"}, {"label" : "banner", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.banner", "link" : "ackcord\/data\/Guild.html#banner:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.description", "link" : "ackcord\/data\/Guild.html#description:Option[String]", "kind" : "val"}, {"label" : "vanityUrlCode", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.vanityUrlCode", "link" : "ackcord\/data\/Guild.html#vanityUrlCode:Option[String]", "kind" : "val"}, {"label" : "maxMembers", "tail" : ": Option[Int]", "member" : "ackcord.data.Guild.maxMembers", "link" : "ackcord\/data\/Guild.html#maxMembers:Option[Int]", "kind" : "val"}, {"label" : "maxPresences", "tail" : ": Int", "member" : "ackcord.data.Guild.maxPresences", "link" : "ackcord\/data\/Guild.html#maxPresences:Int", "kind" : "val"}, {"label" : "presences", "tail" : ": SnowflakeMap[User, Presence]", "member" : "ackcord.data.Guild.presences", "link" : "ackcord\/data\/Guild.html#presences:ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.Presence]", "kind" : "val"}, {"label" : "channels", "tail" : ": SnowflakeMap[GuildChannel, GuildChannel]", "member" : "ackcord.data.Guild.channels", "link" : "ackcord\/data\/Guild.html#channels:ackcord.SnowflakeMap[ackcord.data.GuildChannel,ackcord.data.GuildChannel]", "kind" : "val"}, {"label" : "members", "tail" : ": SnowflakeMap[User, GuildMember]", "member" : "ackcord.data.Guild.members", "link" : "ackcord\/data\/Guild.html#members:ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.GuildMember]", "kind" : "val"}, {"label" : "voiceStates", "tail" : ": SnowflakeMap[User, VoiceState]", "member" : "ackcord.data.Guild.voiceStates", "link" : "ackcord\/data\/Guild.html#voiceStates:ackcord.SnowflakeMap[ackcord.data.User,ackcord.data.VoiceState]", "kind" : "val"}, {"label" : "memberCount", "tail" : ": Int", "member" : "ackcord.data.Guild.memberCount", "link" : "ackcord\/data\/Guild.html#memberCount:Int", "kind" : "val"}, {"label" : "large", "tail" : ": Boolean", "member" : "ackcord.data.Guild.large", "link" : "ackcord\/data\/Guild.html#large:Boolean", "kind" : "val"}, {"label" : "joinedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.Guild.joinedAt", "link" : "ackcord\/data\/Guild.html#joinedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "rulesChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.Guild.rulesChannelId", "link" : "ackcord\/data\/Guild.html#rulesChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "systemChannelFlags", "tail" : ": SystemChannelFlags", "member" : "ackcord.data.Guild.systemChannelFlags", "link" : "ackcord\/data\/Guild.html#systemChannelFlags:ackcord.data.SystemChannelFlags", "kind" : "val"}, {"label" : "systemChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.data.Guild.systemChannelId", "link" : "ackcord\/data\/Guild.html#systemChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "widgetChannelId", "tail" : ": Option[GuildChannelId]", "member" : "ackcord.data.Guild.widgetChannelId", "link" : "ackcord\/data\/Guild.html#widgetChannelId:Option[ackcord.data.GuildChannelId]", "kind" : "val"}, {"label" : "widgetEnabled", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Guild.widgetEnabled", "link" : "ackcord\/data\/Guild.html#widgetEnabled:Option[Boolean]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.Guild.applicationId", "link" : "ackcord\/data\/Guild.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "mfaLevel", "tail" : ": MFALevel", "member" : "ackcord.data.Guild.mfaLevel", "link" : "ackcord\/data\/Guild.html#mfaLevel:ackcord.data.MFALevel", "kind" : "val"}, {"label" : "features", "tail" : ": Seq[GuildFeature]", "member" : "ackcord.data.Guild.features", "link" : "ackcord\/data\/Guild.html#features:Seq[ackcord.data.GuildFeature]", "kind" : "val"}, {"label" : "emojis", "tail" : ": SnowflakeMap[Emoji, Emoji]", "member" : "ackcord.data.Guild.emojis", "link" : "ackcord\/data\/Guild.html#emojis:ackcord.SnowflakeMap[ackcord.data.Emoji,ackcord.data.Emoji]", "kind" : "val"}, {"label" : "roles", "tail" : ": SnowflakeMap[Role, Role]", "member" : "ackcord.data.Guild.roles", "link" : "ackcord\/data\/Guild.html#roles:ackcord.SnowflakeMap[ackcord.data.Role,ackcord.data.Role]", "kind" : "val"}, {"label" : "explicitContentFilter", "tail" : ": FilterLevel", "member" : "ackcord.data.Guild.explicitContentFilter", "link" : "ackcord\/data\/Guild.html#explicitContentFilter:ackcord.data.FilterLevel", "kind" : "val"}, {"label" : "defaultMessageNotifications", "tail" : ": NotificationLevel", "member" : "ackcord.data.Guild.defaultMessageNotifications", "link" : "ackcord\/data\/Guild.html#defaultMessageNotifications:ackcord.data.NotificationLevel", "kind" : "val"}, {"label" : "verificationLevel", "tail" : ": VerificationLevel", "member" : "ackcord.data.Guild.verificationLevel", "link" : "ackcord\/data\/Guild.html#verificationLevel:ackcord.data.VerificationLevel", "kind" : "val"}, {"label" : "afkTimeout", "tail" : ": Int", "member" : "ackcord.data.Guild.afkTimeout", "link" : "ackcord\/data\/Guild.html#afkTimeout:Int", "kind" : "val"}, {"label" : "afkChannelId", "tail" : ": Option[VoiceGuildChannelId]", "member" : "ackcord.data.Guild.afkChannelId", "link" : "ackcord\/data\/Guild.html#afkChannelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "region", "tail" : ": String", "member" : "ackcord.data.Guild.region", "link" : "ackcord\/data\/Guild.html#region:String", "kind" : "val"}, {"label" : "permissions", "tail" : ": Option[Permission]", "member" : "ackcord.data.Guild.permissions", "link" : "ackcord\/data\/Guild.html#permissions:Option[ackcord.data.Permission]", "kind" : "val"}, {"label" : "ownerId", "tail" : ": UserId", "member" : "ackcord.data.Guild.ownerId", "link" : "ackcord\/data\/Guild.html#ownerId:ackcord.data.UserId", "kind" : "val"}, {"label" : "isOwner", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Guild.isOwner", "link" : "ackcord\/data\/Guild.html#isOwner:Option[Boolean]", "kind" : "val"}, {"label" : "discoverySplash", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.discoverySplash", "link" : "ackcord\/data\/Guild.html#discoverySplash:Option[String]", "kind" : "val"}, {"label" : "splash", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.splash", "link" : "ackcord\/data\/Guild.html#splash:Option[String]", "kind" : "val"}, {"label" : "iconHash", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.iconHash", "link" : "ackcord\/data\/Guild.html#iconHash:Option[String]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.Guild.icon", "link" : "ackcord\/data\/Guild.html#icon:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Guild.name", "link" : "ackcord\/data\/Guild.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.Guild.id", "link" : "ackcord\/data\/Guild.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Guild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Guild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Guild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Guild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Guild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Guild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Guild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Guild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Guild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Guild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Guild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Guild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Guild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Guild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Guild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Guild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Guild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Guild.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildCategory", "shortDescription" : "A category in a guild", "members_case class" : [{"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.GuildCategory.channelType", "link" : "ackcord\/data\/GuildCategory.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.GuildCategory#<init>", "error" : "unsupported entity"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.GuildCategory.parentId", "link" : "ackcord\/data\/GuildCategory.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Boolean", "member" : "ackcord.data.GuildCategory.nsfw", "link" : "ackcord\/data\/GuildCategory.html#nsfw:Boolean", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.GuildCategory.permissionOverwrites", "link" : "ackcord\/data\/GuildCategory.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.GuildCategory.position", "link" : "ackcord\/data\/GuildCategory.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GuildCategory.name", "link" : "ackcord\/data\/GuildCategory.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.GuildCategory.guildId", "link" : "ackcord\/data\/GuildCategory.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[GuildCategory]", "member" : "ackcord.data.GuildCategory.id", "link" : "ackcord\/data\/GuildCategory.html#id:ackcord.data.SnowflakeType[ackcord.data.GuildCategory]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildCategory.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/GuildCategory.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/GuildCategory.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/GuildCategory.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildCategory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildCategory.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildCategory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildCategory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildCategory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildCategory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildCategory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildCategory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildCategory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildCategory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildCategory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildCategory.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildCategory.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildCategory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildCategory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildCategory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildCategory.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildChannel", "trait" : "ackcord\/data\/GuildChannel.html", "kind" : "trait", "members_trait" : [{"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/GuildChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/GuildChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/GuildChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GuildChannel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GuildChannel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GuildChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parentId", "tail" : "(): Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.GuildChannel.parentId", "link" : "ackcord\/data\/GuildChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "abstract def"}, {"label" : "nsfw", "tail" : "(): Boolean", "member" : "ackcord.data.GuildChannel.nsfw", "link" : "ackcord\/data\/GuildChannel.html#nsfw:Boolean", "kind" : "abstract def"}, {"label" : "permissionOverwrites", "tail" : "(): SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.GuildChannel.permissionOverwrites", "link" : "ackcord\/data\/GuildChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.data.GuildChannel.name", "link" : "ackcord\/data\/GuildChannel.html#name:String", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): Int", "member" : "ackcord.data.GuildChannel.position", "link" : "ackcord\/data\/GuildChannel.html#position:Int", "kind" : "abstract def"}, {"label" : "guildId", "tail" : "(): GuildId", "member" : "ackcord.data.GuildChannel.guildId", "link" : "ackcord\/data\/GuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): GuildChannelId", "member" : "ackcord.data.GuildChannel.id", "link" : "ackcord\/data\/GuildChannel.html#id:ackcord.data.GuildChannelId", "kind" : "abstract def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.Channel.channelType", "link" : "ackcord\/data\/GuildChannel.html#channelType:ackcord.data.ChannelType", "kind" : "abstract def"}], "shortDescription" : "A channel within a guild"}, {"name" : "ackcord.data.GuildChannelId", "shortDescription" : "", "object" : "ackcord\/data\/package$$GuildChannelId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[GuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildChannelId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[GuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildChannelId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[GuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildChannelId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$GuildChannelId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$GuildChannelId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$GuildChannelId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$GuildChannelId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$GuildChannelId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$GuildChannelId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$GuildChannelId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildChannelId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildChannelId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildChannelId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$GuildChannelId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$GuildChannelId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$GuildChannelId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$GuildChannelId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$GuildChannelId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$GuildChannelId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$GuildChannelId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$GuildChannelId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$GuildChannelId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.GuildChannelIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[GuildChannel]", "member" : "ackcord.data.GuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#resolve(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[GuildChannel]", "member" : "ackcord.data.GuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"member" : "ackcord.data.GuildChannelIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$GuildChannelIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$GuildChannelIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.GuildFeature", "shortDescription" : "", "object" : "ackcord\/data\/GuildFeature$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.data.GuildFeature.value", "link" : "ackcord\/data\/GuildFeature.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildFeature.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GuildFeature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildFeature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GuildFeature.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GuildFeature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: String): GuildFeature", "member" : "ackcord.data.GuildFeature.createUnknown", "link" : "ackcord\/data\/GuildFeature$.html#createUnknown(value:String):ackcord.data.GuildFeature", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.GuildFeature.Unknown", "link" : "ackcord\/data\/GuildFeature$.html#UnknownextendsGuildFeaturewithProductwithSerializable", "kind" : "case class"}, {"label" : "WelcomeScreenEnabled", "tail" : "", "member" : "ackcord.data.GuildFeature.WelcomeScreenEnabled", "link" : "ackcord\/data\/GuildFeature$.html#WelcomeScreenEnabled", "kind" : "case object"}, {"label" : "Banner", "tail" : "", "member" : "ackcord.data.GuildFeature.Banner", "link" : "ackcord\/data\/GuildFeature$.html#Banner", "kind" : "case object"}, {"label" : "AnimatedIcon", "tail" : "", "member" : "ackcord.data.GuildFeature.AnimatedIcon", "link" : "ackcord\/data\/GuildFeature$.html#AnimatedIcon", "kind" : "case object"}, {"label" : "Featureable", "tail" : "", "member" : "ackcord.data.GuildFeature.Featureable", "link" : "ackcord\/data\/GuildFeature$.html#Featureable", "kind" : "case object"}, {"label" : "Discoverable", "tail" : "", "member" : "ackcord.data.GuildFeature.Discoverable", "link" : "ackcord\/data\/GuildFeature$.html#Discoverable", "kind" : "case object"}, {"label" : "News", "tail" : "", "member" : "ackcord.data.GuildFeature.News", "link" : "ackcord\/data\/GuildFeature$.html#News", "kind" : "case object"}, {"label" : "Commerce", "tail" : "", "member" : "ackcord.data.GuildFeature.Commerce", "link" : "ackcord\/data\/GuildFeature$.html#Commerce", "kind" : "case object"}, {"label" : "Community", "tail" : "", "member" : "ackcord.data.GuildFeature.Community", "link" : "ackcord\/data\/GuildFeature$.html#Community", "kind" : "case object"}, {"label" : "Partnered", "tail" : "", "member" : "ackcord.data.GuildFeature.Partnered", "link" : "ackcord\/data\/GuildFeature$.html#Partnered", "kind" : "case object"}, {"label" : "Verified", "tail" : "", "member" : "ackcord.data.GuildFeature.Verified", "link" : "ackcord\/data\/GuildFeature$.html#Verified", "kind" : "case object"}, {"label" : "VanityUrl", "tail" : "", "member" : "ackcord.data.GuildFeature.VanityUrl", "link" : "ackcord\/data\/GuildFeature$.html#VanityUrl", "kind" : "case object"}, {"label" : "VipRegions", "tail" : "", "member" : "ackcord.data.GuildFeature.VipRegions", "link" : "ackcord\/data\/GuildFeature$.html#VipRegions", "kind" : "case object"}, {"label" : "InviteSplash", "tail" : "", "member" : "ackcord.data.GuildFeature.InviteSplash", "link" : "ackcord\/data\/GuildFeature$.html#InviteSplash", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[GuildFeature]", "member" : "ackcord.data.GuildFeature.values", "link" : "ackcord\/data\/GuildFeature$.html#values:IndexedSeq[ackcord.data.GuildFeature]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[GuildFeature]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/GuildFeature$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[GuildFeature]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/data\/GuildFeature$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], GuildFeature]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/GuildFeature$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[GuildFeature]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/GuildFeature$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): GuildFeature", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/GuildFeature$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, GuildFeature]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/GuildFeature$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildFeature$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildFeature$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildFeature$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildFeature$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildFeature$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildFeature$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildFeature$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildFeature$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildFeature$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildFeature$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/GuildFeature$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildFeature$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/GuildFeature$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/GuildFeature$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildFeature$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildFeature$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildFeature$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/GuildFeature.html", "kind" : "class"}, {"name" : "ackcord.data.GuildGatewayMessage", "shortDescription" : "A message sent with additional guild info.", "members_case class" : [{"label" : "formatMentions", "tail" : "(c: CacheSnapshot): String", "member" : "ackcord.data.GuildGatewayMessage.formatMentions", "link" : "ackcord\/data\/GuildGatewayMessage.html#formatMentions(implicitc:ackcord.CacheSnapshot):String", "kind" : "def"}, {"label" : "channelMentions", "tail" : "(): Seq[TextGuildChannelId]", "member" : "ackcord.data.GuildGatewayMessage.channelMentions", "link" : "ackcord\/data\/GuildGatewayMessage.html#channelMentions:Seq[ackcord.data.TextGuildChannelId]", "kind" : "def"}, {"label" : "guildMember", "tail" : "(c: CacheSnapshot): Option[GuildMember]", "member" : "ackcord.data.GuildGatewayMessage.guildMember", "link" : "ackcord\/data\/GuildGatewayMessage.html#guildMember(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "guild", "tail" : "(c: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GuildGatewayMessage.guild", "link" : "ackcord\/data\/GuildGatewayMessage.html#guild(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"member" : "ackcord.data.GuildGatewayMessage#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Option[MessageFlags]", "member" : "ackcord.data.GuildGatewayMessage.flags", "link" : "ackcord\/data\/GuildGatewayMessage.html#flags:Option[ackcord.data.MessageFlags]", "kind" : "val"}, {"label" : "messageReference", "tail" : ": Option[MessageReference]", "member" : "ackcord.data.GuildGatewayMessage.messageReference", "link" : "ackcord\/data\/GuildGatewayMessage.html#messageReference:Option[ackcord.data.MessageReference]", "kind" : "val"}, {"label" : "application", "tail" : ": Option[MessageApplication]", "member" : "ackcord.data.GuildGatewayMessage.application", "link" : "ackcord\/data\/GuildGatewayMessage.html#application:Option[ackcord.data.MessageApplication]", "kind" : "val"}, {"label" : "activity", "tail" : ": Option[MessageActivity]", "member" : "ackcord.data.GuildGatewayMessage.activity", "link" : "ackcord\/data\/GuildGatewayMessage.html#activity:Option[ackcord.data.MessageActivity]", "kind" : "val"}, {"label" : "messageType", "tail" : ": MessageType", "member" : "ackcord.data.GuildGatewayMessage.messageType", "link" : "ackcord\/data\/GuildGatewayMessage.html#messageType:ackcord.data.MessageType", "kind" : "val"}, {"label" : "pinned", "tail" : ": Boolean", "member" : "ackcord.data.GuildGatewayMessage.pinned", "link" : "ackcord\/data\/GuildGatewayMessage.html#pinned:Boolean", "kind" : "val"}, {"label" : "nonce", "tail" : ": Option[String]", "member" : "ackcord.data.GuildGatewayMessage.nonce", "link" : "ackcord\/data\/GuildGatewayMessage.html#nonce:Option[String]", "kind" : "val"}, {"label" : "reactions", "tail" : ": Seq[Reaction]", "member" : "ackcord.data.GuildGatewayMessage.reactions", "link" : "ackcord\/data\/GuildGatewayMessage.html#reactions:Seq[ackcord.data.Reaction]", "kind" : "val"}, {"label" : "embeds", "tail" : ": Seq[ReceivedEmbed]", "member" : "ackcord.data.GuildGatewayMessage.embeds", "link" : "ackcord\/data\/GuildGatewayMessage.html#embeds:Seq[ackcord.data.ReceivedEmbed]", "kind" : "val"}, {"label" : "attachment", "tail" : ": Seq[Attachment]", "member" : "ackcord.data.GuildGatewayMessage.attachment", "link" : "ackcord\/data\/GuildGatewayMessage.html#attachment:Seq[ackcord.data.Attachment]", "kind" : "val"}, {"label" : "mentionChannels", "tail" : ": Seq[ChannelMention]", "member" : "ackcord.data.GuildGatewayMessage.mentionChannels", "link" : "ackcord\/data\/GuildGatewayMessage.html#mentionChannels:Seq[ackcord.data.ChannelMention]", "kind" : "val"}, {"label" : "mentionRoles", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.GuildGatewayMessage.mentionRoles", "link" : "ackcord\/data\/GuildGatewayMessage.html#mentionRoles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "mentions", "tail" : ": Seq[UserId]", "member" : "ackcord.data.GuildGatewayMessage.mentions", "link" : "ackcord\/data\/GuildGatewayMessage.html#mentions:Seq[ackcord.data.UserId]", "kind" : "val"}, {"label" : "mentionEveryone", "tail" : ": Boolean", "member" : "ackcord.data.GuildGatewayMessage.mentionEveryone", "link" : "ackcord\/data\/GuildGatewayMessage.html#mentionEveryone:Boolean", "kind" : "val"}, {"label" : "tts", "tail" : ": Boolean", "member" : "ackcord.data.GuildGatewayMessage.tts", "link" : "ackcord\/data\/GuildGatewayMessage.html#tts:Boolean", "kind" : "val"}, {"label" : "editedTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.GuildGatewayMessage.editedTimestamp", "link" : "ackcord\/data\/GuildGatewayMessage.html#editedTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "timestamp", "tail" : ": OffsetDateTime", "member" : "ackcord.data.GuildGatewayMessage.timestamp", "link" : "ackcord\/data\/GuildGatewayMessage.html#timestamp:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "ackcord.data.GuildGatewayMessage.content", "link" : "ackcord\/data\/GuildGatewayMessage.html#content:String", "kind" : "val"}, {"label" : "member", "tail" : ": Option[GuildMember]", "member" : "ackcord.data.GuildGatewayMessage.member", "link" : "ackcord\/data\/GuildGatewayMessage.html#member:Option[ackcord.data.GuildMember]", "kind" : "val"}, {"label" : "authorUsername", "tail" : ": String", "member" : "ackcord.data.GuildGatewayMessage.authorUsername", "link" : "ackcord\/data\/GuildGatewayMessage.html#authorUsername:String", "kind" : "val"}, {"label" : "isAuthorUser", "tail" : ": Boolean", "member" : "ackcord.data.GuildGatewayMessage.isAuthorUser", "link" : "ackcord\/data\/GuildGatewayMessage.html#isAuthorUser:Boolean", "kind" : "val"}, {"label" : "authorId", "tail" : ": RawSnowflake", "member" : "ackcord.data.GuildGatewayMessage.authorId", "link" : "ackcord\/data\/GuildGatewayMessage.html#authorId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.GuildGatewayMessage.guildId", "link" : "ackcord\/data\/GuildGatewayMessage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextGuildChannelId", "member" : "ackcord.data.GuildGatewayMessage.channelId", "link" : "ackcord\/data\/GuildGatewayMessage.html#channelId:ackcord.data.TextGuildChannelId", "kind" : "val"}, {"label" : "id", "tail" : ": MessageId", "member" : "ackcord.data.GuildGatewayMessage.id", "link" : "ackcord\/data\/GuildGatewayMessage.html#id:ackcord.data.MessageId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildGatewayMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "authorUser", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Message.authorUser", "link" : "ackcord\/data\/GuildGatewayMessage.html#authorUser(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "authorUserId", "tail" : "(): Option[UserId]", "member" : "ackcord.data.Message.authorUserId", "link" : "ackcord\/data\/GuildGatewayMessage.html#authorUserId:Option[ackcord.data.UserId]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildGatewayMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildGatewayMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildGatewayMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildGatewayMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildGatewayMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildGatewayMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildGatewayMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildGatewayMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildGatewayMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildGatewayMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildGatewayMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildGatewayMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildGatewayMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildGatewayMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildGatewayMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildGatewayMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildGatewayMessage.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildId", "shortDescription" : "", "object" : "ackcord\/data\/package$$GuildId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Guild]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Guild]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Guild]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$GuildId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$GuildId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$GuildId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$GuildId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$GuildId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$GuildId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$GuildId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$GuildId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$GuildId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$GuildId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$GuildId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$GuildId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$GuildId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$GuildId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$GuildId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$GuildId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$GuildId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$GuildId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.GuildIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GuildIdSyntax.resolve", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"member" : "ackcord.data.GuildIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$GuildIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$GuildIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$GuildIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.GuildMember", "shortDescription" : "Represents a user in a guild.", "members_case class" : [{"label" : "hasRoleAboveId", "tail" : "(guild: Guild, other: GuildMember): Boolean", "member" : "ackcord.data.GuildMember.hasRoleAboveId", "link" : "ackcord\/data\/GuildMember.html#hasRoleAboveId(guild:ackcord.data.Guild,other:ackcord.data.GuildMember):Boolean", "kind" : "def"}, {"label" : "hasRoleAboveId", "tail" : "(guild: Guild, others: Seq[RoleId]): Boolean", "member" : "ackcord.data.GuildMember.hasRoleAboveId", "link" : "ackcord\/data\/GuildMember.html#hasRoleAboveId(guild:ackcord.data.Guild,others:Seq[ackcord.data.RoleId]):Boolean", "kind" : "def"}, {"label" : "channelPermissionsId", "tail" : "(guild: Guild, channelId: GuildChannelId): Permission", "member" : "ackcord.data.GuildMember.channelPermissionsId", "link" : "ackcord\/data\/GuildMember.html#channelPermissionsId(guild:ackcord.data.Guild,channelId:ackcord.data.GuildChannelId):ackcord.data.Permission", "kind" : "def"}, {"label" : "permissionsWithOverridesId", "tail" : "(guild: Guild, guildPermissions: Permission, channelId: GuildChannelId): Permission", "member" : "ackcord.data.GuildMember.permissionsWithOverridesId", "link" : "ackcord\/data\/GuildMember.html#permissionsWithOverridesId(guild:ackcord.data.Guild,guildPermissions:ackcord.data.Permission,channelId:ackcord.data.GuildChannelId):ackcord.data.Permission", "kind" : "def"}, {"label" : "permissions", "tail" : "(guild: Guild): Permission", "member" : "ackcord.data.GuildMember.permissions", "link" : "ackcord\/data\/GuildMember.html#permissions(guild:ackcord.data.Guild):ackcord.data.Permission", "kind" : "def"}, {"member" : "ackcord.data.GuildMember#<init>", "error" : "unsupported entity"}, {"label" : "mute", "tail" : ": Boolean", "member" : "ackcord.data.GuildMember.mute", "link" : "ackcord\/data\/GuildMember.html#mute:Boolean", "kind" : "val"}, {"label" : "deaf", "tail" : ": Boolean", "member" : "ackcord.data.GuildMember.deaf", "link" : "ackcord\/data\/GuildMember.html#deaf:Boolean", "kind" : "val"}, {"label" : "premiumSince", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.GuildMember.premiumSince", "link" : "ackcord\/data\/GuildMember.html#premiumSince:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "joinedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.GuildMember.joinedAt", "link" : "ackcord\/data\/GuildMember.html#joinedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "roleIds", "tail" : ": Seq[RoleId]", "member" : "ackcord.data.GuildMember.roleIds", "link" : "ackcord\/data\/GuildMember.html#roleIds:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "nick", "tail" : ": Option[String]", "member" : "ackcord.data.GuildMember.nick", "link" : "ackcord\/data\/GuildMember.html#nick:Option[String]", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.GuildMember.guildId", "link" : "ackcord\/data\/GuildMember.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.GuildMember.userId", "link" : "ackcord\/data\/GuildMember.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/GuildMember.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/GuildMember.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildMember.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildPreview", "shortDescription" : "A preview of a public guild", "members_case class" : [{"member" : "ackcord.data.GuildPreview#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.GuildPreview.description", "link" : "ackcord\/data\/GuildPreview.html#description:Option[String]", "kind" : "val"}, {"label" : "approximatePresenceCount", "tail" : ": Int", "member" : "ackcord.data.GuildPreview.approximatePresenceCount", "link" : "ackcord\/data\/GuildPreview.html#approximatePresenceCount:Int", "kind" : "val"}, {"label" : "approximateMemberCount", "tail" : ": Int", "member" : "ackcord.data.GuildPreview.approximateMemberCount", "link" : "ackcord\/data\/GuildPreview.html#approximateMemberCount:Int", "kind" : "val"}, {"label" : "features", "tail" : ": Seq[GuildFeature]", "member" : "ackcord.data.GuildPreview.features", "link" : "ackcord\/data\/GuildPreview.html#features:Seq[ackcord.data.GuildFeature]", "kind" : "val"}, {"label" : "emojis", "tail" : ": Seq[RawEmoji]", "member" : "ackcord.data.GuildPreview.emojis", "link" : "ackcord\/data\/GuildPreview.html#emojis:Seq[ackcord.data.raw.RawEmoji]", "kind" : "val"}, {"label" : "discoverySplash", "tail" : ": Option[String]", "member" : "ackcord.data.GuildPreview.discoverySplash", "link" : "ackcord\/data\/GuildPreview.html#discoverySplash:Option[String]", "kind" : "val"}, {"label" : "splash", "tail" : ": Option[String]", "member" : "ackcord.data.GuildPreview.splash", "link" : "ackcord\/data\/GuildPreview.html#splash:Option[String]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.GuildPreview.icon", "link" : "ackcord\/data\/GuildPreview.html#icon:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GuildPreview.name", "link" : "ackcord\/data\/GuildPreview.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.GuildPreview.id", "link" : "ackcord\/data\/GuildPreview.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildPreview.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildPreview.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildPreview.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildPreview.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildPreview.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildPreview.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildPreview.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildPreview.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildPreview.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildPreview.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildPreview.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildPreview.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildPreview.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildPreview.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildPreview.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildPreview.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildPreview.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildPreview.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildStoreChannel", "shortDescription" : "A store channel in a guild", "members_case class" : [{"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.GuildStoreChannel.channelType", "link" : "ackcord\/data\/GuildStoreChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.GuildStoreChannel#<init>", "error" : "unsupported entity"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.GuildStoreChannel.parentId", "link" : "ackcord\/data\/GuildStoreChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Boolean", "member" : "ackcord.data.GuildStoreChannel.nsfw", "link" : "ackcord\/data\/GuildStoreChannel.html#nsfw:Boolean", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.GuildStoreChannel.permissionOverwrites", "link" : "ackcord\/data\/GuildStoreChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.GuildStoreChannel.position", "link" : "ackcord\/data\/GuildStoreChannel.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GuildStoreChannel.name", "link" : "ackcord\/data\/GuildStoreChannel.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.GuildStoreChannel.guildId", "link" : "ackcord\/data\/GuildStoreChannel.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[GuildStoreChannel]", "member" : "ackcord.data.GuildStoreChannel.id", "link" : "ackcord\/data\/GuildStoreChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.GuildStoreChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildStoreChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/GuildStoreChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/GuildStoreChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/GuildStoreChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildStoreChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildStoreChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildStoreChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildStoreChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildStoreChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildStoreChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildStoreChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildStoreChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildStoreChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildStoreChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildStoreChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildStoreChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildStoreChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildStoreChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildStoreChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildStoreChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildStoreChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildWidget", "shortDescription" : "The object returned when getting the widget for a guild", "members_case class" : [{"member" : "ackcord.data.GuildWidget#<init>", "error" : "unsupported entity"}, {"label" : "presenceCount", "tail" : ": Int", "member" : "ackcord.data.GuildWidget.presenceCount", "link" : "ackcord\/data\/GuildWidget.html#presenceCount:Int", "kind" : "val"}, {"label" : "members", "tail" : ": Seq[GuildWidgetMember]", "member" : "ackcord.data.GuildWidget.members", "link" : "ackcord\/data\/GuildWidget.html#members:Seq[ackcord.data.GuildWidgetMember]", "kind" : "val"}, {"label" : "channels", "tail" : ": Seq[GuildWidgetChannel]", "member" : "ackcord.data.GuildWidget.channels", "link" : "ackcord\/data\/GuildWidget.html#channels:Seq[ackcord.data.GuildWidgetChannel]", "kind" : "val"}, {"label" : "instantInvite", "tail" : ": String", "member" : "ackcord.data.GuildWidget.instantInvite", "link" : "ackcord\/data\/GuildWidget.html#instantInvite:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GuildWidget.name", "link" : "ackcord\/data\/GuildWidget.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.GuildWidget.id", "link" : "ackcord\/data\/GuildWidget.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildWidget.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildWidget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildWidget.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildWidget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildWidget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildWidget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildWidget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildWidget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildWidget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildWidget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildWidget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildWidget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildWidget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildWidget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildWidget.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildWidgetChannel", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.GuildWidgetChannel#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.GuildWidgetChannel.position", "link" : "ackcord\/data\/GuildWidgetChannel.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.GuildWidgetChannel.name", "link" : "ackcord\/data\/GuildWidgetChannel.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildChannelId", "member" : "ackcord.data.GuildWidgetChannel.id", "link" : "ackcord\/data\/GuildWidgetChannel.html#id:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildWidgetChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildWidgetChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildWidgetChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildWidgetChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildWidgetChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildWidgetChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildWidgetChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildWidgetChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildWidgetChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildWidgetChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildWidgetChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildWidgetChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildWidgetChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildWidgetChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildWidgetChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildWidgetMember", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.GuildWidgetMember#<init>", "error" : "unsupported entity"}, {"label" : "avatarUrl", "tail" : ": String", "member" : "ackcord.data.GuildWidgetMember.avatarUrl", "link" : "ackcord\/data\/GuildWidgetMember.html#avatarUrl:String", "kind" : "val"}, {"label" : "status", "tail" : ": PresenceStatus", "member" : "ackcord.data.GuildWidgetMember.status", "link" : "ackcord\/data\/GuildWidgetMember.html#status:ackcord.data.PresenceStatus", "kind" : "val"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.GuildWidgetMember.avatar", "link" : "ackcord\/data\/GuildWidgetMember.html#avatar:Option[String]", "kind" : "val"}, {"label" : "discriminator", "tail" : ": String", "member" : "ackcord.data.GuildWidgetMember.discriminator", "link" : "ackcord\/data\/GuildWidgetMember.html#discriminator:String", "kind" : "val"}, {"label" : "username", "tail" : ": String", "member" : "ackcord.data.GuildWidgetMember.username", "link" : "ackcord\/data\/GuildWidgetMember.html#username:String", "kind" : "val"}, {"label" : "id", "tail" : ": UserId", "member" : "ackcord.data.GuildWidgetMember.id", "link" : "ackcord\/data\/GuildWidgetMember.html#id:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildWidgetMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildWidgetMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildWidgetMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildWidgetMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildWidgetMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildWidgetMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildWidgetMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildWidgetMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildWidgetMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildWidgetMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildWidgetMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildWidgetMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildWidgetMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildWidgetMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildWidgetMember.html", "kind" : "case class"}, {"name" : "ackcord.data.GuildWidgetSettings", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.GuildWidgetSettings#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": Option[GuildChannelId]", "member" : "ackcord.data.GuildWidgetSettings.channelId", "link" : "ackcord\/data\/GuildWidgetSettings.html#channelId:Option[ackcord.data.GuildChannelId]", "kind" : "val"}, {"label" : "enabled", "tail" : ": Boolean", "member" : "ackcord.data.GuildWidgetSettings.enabled", "link" : "ackcord\/data\/GuildWidgetSettings.html#enabled:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/GuildWidgetSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/GuildWidgetSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/GuildWidgetSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/GuildWidgetSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/GuildWidgetSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/GuildWidgetSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/GuildWidgetSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/GuildWidgetSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/GuildWidgetSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/GuildWidgetSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/GuildWidgetSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/GuildWidgetSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/GuildWidgetSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/GuildWidgetSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/GuildWidgetSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/GuildWidgetSettings.html", "kind" : "case class"}, {"name" : "ackcord.data.ImageData", "shortDescription" : "", "object" : "ackcord\/data\/ImageData$.html", "members_class" : [{"member" : "ackcord.data.ImageData#<init>", "error" : "unsupported entity"}, {"label" : "rawData", "tail" : ": String", "member" : "ackcord.data.ImageData.rawData", "link" : "ackcord\/data\/ImageData.html#rawData:String", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/ImageData.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/ImageData.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ImageData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ImageData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/ImageData.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/ImageData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/ImageData.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "forData", "tail" : "(imageType: ImageFormat, data: Array[Byte]): ImageData", "member" : "ackcord.data.ImageData.forData", "link" : "ackcord\/data\/ImageData$.html#forData(imageType:ackcord.data.ImageFormat,data:Array[Byte]):ackcord.data.ImageData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ImageData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ImageData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ImageData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ImageData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ImageData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ImageData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ImageData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ImageData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ImageData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ImageData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ImageData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ImageData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ImageData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ImageData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ImageData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ImageData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/ImageData.html", "kind" : "class"}, {"name" : "ackcord.data.ImageFormat", "object" : "ackcord\/data\/ImageFormat$.html", "members_object" : [{"label" : "GIF", "tail" : "", "member" : "ackcord.data.ImageFormat.GIF", "link" : "ackcord\/data\/ImageFormat$.html#GIF", "kind" : "case object"}, {"label" : "WebP", "tail" : "", "member" : "ackcord.data.ImageFormat.WebP", "link" : "ackcord\/data\/ImageFormat$.html#WebP", "kind" : "case object"}, {"label" : "PNG", "tail" : "", "member" : "ackcord.data.ImageFormat.PNG", "link" : "ackcord\/data\/ImageFormat$.html#PNG", "kind" : "case object"}, {"label" : "JPEG", "tail" : "", "member" : "ackcord.data.ImageFormat.JPEG", "link" : "ackcord\/data\/ImageFormat$.html#JPEG", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ImageFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ImageFormat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ImageFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ImageFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ImageFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ImageFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ImageFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ImageFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ImageFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ImageFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ImageFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ImageFormat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ImageFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ImageFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ImageFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ImageFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/data\/ImageFormat.html", "kind" : "trait", "members_trait" : [{"label" : "extension", "tail" : "(): String", "member" : "ackcord.data.ImageFormat.extension", "link" : "ackcord\/data\/ImageFormat.html#extension:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ImageFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ImageFormat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ImageFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ImageFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ImageFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ImageFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ImageFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ImageFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ImageFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ImageFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/ImageFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ImageFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/ImageFormat.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/ImageFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ImageFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ImageFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ImageFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "base64Name", "tail" : "(): String", "member" : "ackcord.data.ImageFormat.base64Name", "link" : "ackcord\/data\/ImageFormat.html#base64Name:String", "kind" : "abstract def"}, {"label" : "extensions", "tail" : "(): Seq[String]", "member" : "ackcord.data.ImageFormat.extensions", "link" : "ackcord\/data\/ImageFormat.html#extensions:Seq[String]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.Integration", "shortDescription" : "A server integration", "members_case class" : [{"member" : "ackcord.data.Integration#<init>", "error" : "unsupported entity"}, {"label" : "application", "tail" : ": Option[IntegrationApplication]", "member" : "ackcord.data.Integration.application", "link" : "ackcord\/data\/Integration.html#application:Option[ackcord.data.IntegrationApplication]", "kind" : "val"}, {"label" : "revoked", "tail" : ": Boolean", "member" : "ackcord.data.Integration.revoked", "link" : "ackcord\/data\/Integration.html#revoked:Boolean", "kind" : "val"}, {"label" : "subscriberCount", "tail" : ": Int", "member" : "ackcord.data.Integration.subscriberCount", "link" : "ackcord\/data\/Integration.html#subscriberCount:Int", "kind" : "val"}, {"label" : "syncedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.Integration.syncedAt", "link" : "ackcord\/data\/Integration.html#syncedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "account", "tail" : ": IntegrationAccount", "member" : "ackcord.data.Integration.account", "link" : "ackcord\/data\/Integration.html#account:ackcord.data.IntegrationAccount", "kind" : "val"}, {"label" : "user", "tail" : ": Option[User]", "member" : "ackcord.data.Integration.user", "link" : "ackcord\/data\/Integration.html#user:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "expireGracePeriod", "tail" : ": Int", "member" : "ackcord.data.Integration.expireGracePeriod", "link" : "ackcord\/data\/Integration.html#expireGracePeriod:Int", "kind" : "val"}, {"label" : "expireBehavior", "tail" : ": IntegrationExpireBehavior", "member" : "ackcord.data.Integration.expireBehavior", "link" : "ackcord\/data\/Integration.html#expireBehavior:ackcord.data.IntegrationExpireBehavior", "kind" : "val"}, {"label" : "enableEmoticons", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Integration.enableEmoticons", "link" : "ackcord\/data\/Integration.html#enableEmoticons:Option[Boolean]", "kind" : "val"}, {"label" : "roleId", "tail" : ": RoleId", "member" : "ackcord.data.Integration.roleId", "link" : "ackcord\/data\/Integration.html#roleId:ackcord.data.RoleId", "kind" : "val"}, {"label" : "syncing", "tail" : ": Boolean", "member" : "ackcord.data.Integration.syncing", "link" : "ackcord\/data\/Integration.html#syncing:Boolean", "kind" : "val"}, {"label" : "enabled", "tail" : ": Boolean", "member" : "ackcord.data.Integration.enabled", "link" : "ackcord\/data\/Integration.html#enabled:Boolean", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "ackcord.data.Integration.type", "link" : "ackcord\/data\/Integration.html#type:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Integration.name", "link" : "ackcord\/data\/Integration.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": IntegrationId", "member" : "ackcord.data.Integration.id", "link" : "ackcord\/data\/Integration.html#id:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Integration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Integration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Integration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Integration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Integration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Integration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Integration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Integration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Integration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Integration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Integration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Integration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Integration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Integration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Integration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Integration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Integration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Integration.html", "kind" : "case class"}, {"name" : "ackcord.data.IntegrationAccount", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.IntegrationAccount#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.IntegrationAccount.name", "link" : "ackcord\/data\/IntegrationAccount.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "ackcord.data.IntegrationAccount.id", "link" : "ackcord\/data\/IntegrationAccount.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/IntegrationAccount.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationAccount.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationAccount.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationAccount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationAccount.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationAccount.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationAccount.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationAccount.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationAccount.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationAccount.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationAccount.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationAccount.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationAccount.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationAccount.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationAccount.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationAccount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationAccount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/IntegrationAccount.html", "kind" : "case class"}, {"name" : "ackcord.data.IntegrationApplication", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.IntegrationApplication#<init>", "error" : "unsupported entity"}, {"label" : "bot", "tail" : ": Option[User]", "member" : "ackcord.data.IntegrationApplication.bot", "link" : "ackcord\/data\/IntegrationApplication.html#bot:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "summary", "tail" : ": String", "member" : "ackcord.data.IntegrationApplication.summary", "link" : "ackcord\/data\/IntegrationApplication.html#summary:String", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "ackcord.data.IntegrationApplication.description", "link" : "ackcord\/data\/IntegrationApplication.html#description:String", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.IntegrationApplication.icon", "link" : "ackcord\/data\/IntegrationApplication.html#icon:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.IntegrationApplication.name", "link" : "ackcord\/data\/IntegrationApplication.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": RawSnowflake", "member" : "ackcord.data.IntegrationApplication.id", "link" : "ackcord\/data\/IntegrationApplication.html#id:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/IntegrationApplication.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationApplication.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationApplication.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationApplication.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationApplication.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationApplication.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationApplication.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationApplication.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationApplication.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationApplication.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationApplication.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationApplication.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationApplication.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationApplication.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationApplication.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationApplication.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationApplication.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/IntegrationApplication.html", "kind" : "case class"}, {"name" : "ackcord.data.IntegrationExpireBehavior", "shortDescription" : "", "object" : "ackcord\/data\/IntegrationExpireBehavior$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.IntegrationExpireBehavior.value", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationExpireBehavior.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationExpireBehavior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): IntegrationExpireBehavior", "member" : "ackcord.data.IntegrationExpireBehavior.createUnknown", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#createUnknown(value:Int):ackcord.data.IntegrationExpireBehavior", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.IntegrationExpireBehavior.Unknown", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#UnknownextendsIntegrationExpireBehaviorwithProductwithSerializable", "kind" : "case class"}, {"label" : "Kick", "tail" : "", "member" : "ackcord.data.IntegrationExpireBehavior.Kick", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#Kick", "kind" : "case object"}, {"label" : "RemoveRole", "tail" : "", "member" : "ackcord.data.IntegrationExpireBehavior.RemoveRole", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#RemoveRole", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[IntegrationExpireBehavior]", "member" : "ackcord.data.IntegrationExpireBehavior.values", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#values:IndexedSeq[ackcord.data.IntegrationExpireBehavior]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[IntegrationExpireBehavior]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[IntegrationExpireBehavior]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], IntegrationExpireBehavior]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[IntegrationExpireBehavior]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): IntegrationExpireBehavior", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, IntegrationExpireBehavior]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationExpireBehavior$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/IntegrationExpireBehavior.html", "kind" : "class"}, {"name" : "ackcord.data.IntegrationId", "shortDescription" : "", "object" : "ackcord\/data\/package$$IntegrationId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Integration]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$IntegrationId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Integration]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$IntegrationId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Integration]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$IntegrationId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$IntegrationId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$IntegrationId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$IntegrationId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$IntegrationId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$IntegrationId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$IntegrationId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$IntegrationId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$IntegrationId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$IntegrationId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$IntegrationId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$IntegrationId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$IntegrationId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$IntegrationId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$IntegrationId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$IntegrationId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$IntegrationId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$IntegrationId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$IntegrationId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$IntegrationId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.IntegrationType", "shortDescription" : "", "object" : "ackcord\/data\/IntegrationType$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.data.IntegrationType.value", "link" : "ackcord\/data\/IntegrationType.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/IntegrationType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/IntegrationType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/IntegrationType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: String): IntegrationType", "member" : "ackcord.data.IntegrationType.createUnknown", "link" : "ackcord\/data\/IntegrationType$.html#createUnknown(value:String):ackcord.data.IntegrationType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.IntegrationType.Unknown", "link" : "ackcord\/data\/IntegrationType$.html#UnknownextendsIntegrationTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "Discord", "tail" : "", "member" : "ackcord.data.IntegrationType.Discord", "link" : "ackcord\/data\/IntegrationType$.html#Discord", "kind" : "case object"}, {"label" : "Youtube", "tail" : "", "member" : "ackcord.data.IntegrationType.Youtube", "link" : "ackcord\/data\/IntegrationType$.html#Youtube", "kind" : "case object"}, {"label" : "Twitch", "tail" : "", "member" : "ackcord.data.IntegrationType.Twitch", "link" : "ackcord\/data\/IntegrationType$.html#Twitch", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[IntegrationType]", "member" : "ackcord.data.IntegrationType.values", "link" : "ackcord\/data\/IntegrationType$.html#values:IndexedSeq[ackcord.data.IntegrationType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[IntegrationType]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/IntegrationType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[IntegrationType]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/data\/IntegrationType$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], IntegrationType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/IntegrationType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[IntegrationType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/IntegrationType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): IntegrationType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/IntegrationType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, IntegrationType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/IntegrationType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/IntegrationType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/IntegrationType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/IntegrationType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/IntegrationType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/IntegrationType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/IntegrationType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/IntegrationType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/IntegrationType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/IntegrationType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/IntegrationType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/IntegrationType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/IntegrationType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/IntegrationType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/IntegrationType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/IntegrationType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/IntegrationType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/IntegrationType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/IntegrationType.html", "kind" : "class"}, {"name" : "ackcord.data.Invite", "shortDescription" : "A simple invite.", "members_case class" : [{"member" : "ackcord.data.Invite#<init>", "error" : "unsupported entity"}, {"label" : "approximateMemberCount", "tail" : ": Option[Int]", "member" : "ackcord.data.Invite.approximateMemberCount", "link" : "ackcord\/data\/Invite.html#approximateMemberCount:Option[Int]", "kind" : "val"}, {"label" : "approximatePresenceCount", "tail" : ": Option[Int]", "member" : "ackcord.data.Invite.approximatePresenceCount", "link" : "ackcord\/data\/Invite.html#approximatePresenceCount:Option[Int]", "kind" : "val"}, {"label" : "targetUserType", "tail" : ": Option[Int]", "member" : "ackcord.data.Invite.targetUserType", "link" : "ackcord\/data\/Invite.html#targetUserType:Option[Int]", "kind" : "val"}, {"label" : "targetUser", "tail" : ": Option[InviteTargetUser]", "member" : "ackcord.data.Invite.targetUser", "link" : "ackcord\/data\/Invite.html#targetUser:Option[ackcord.data.InviteTargetUser]", "kind" : "val"}, {"label" : "inviter", "tail" : ": Option[User]", "member" : "ackcord.data.Invite.inviter", "link" : "ackcord\/data\/Invite.html#inviter:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "channel", "tail" : ": InviteChannel", "member" : "ackcord.data.Invite.channel", "link" : "ackcord\/data\/Invite.html#channel:ackcord.data.InviteChannel", "kind" : "val"}, {"label" : "guild", "tail" : ": Option[InviteGuild]", "member" : "ackcord.data.Invite.guild", "link" : "ackcord\/data\/Invite.html#guild:Option[ackcord.data.InviteGuild]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.data.Invite.code", "link" : "ackcord\/data\/Invite.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Invite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Invite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Invite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Invite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Invite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Invite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Invite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Invite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Invite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Invite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Invite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Invite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Invite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Invite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Invite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Invite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Invite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Invite.html", "kind" : "case class"}, {"name" : "ackcord.data.InviteChannel", "shortDescription" : "A partial channel with the information used by an invite", "members_case class" : [{"member" : "ackcord.data.InviteChannel#<init>", "error" : "unsupported entity"}, {"label" : "type", "tail" : ": ChannelType", "member" : "ackcord.data.InviteChannel.type", "link" : "ackcord\/data\/InviteChannel.html#type:ackcord.data.ChannelType", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.InviteChannel.name", "link" : "ackcord\/data\/InviteChannel.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildChannelId", "member" : "ackcord.data.InviteChannel.id", "link" : "ackcord\/data\/InviteChannel.html#id:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/InviteChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/InviteChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/InviteChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/InviteChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/InviteChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/InviteChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/InviteChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/InviteChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/InviteChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/InviteChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/InviteChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/InviteChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/InviteChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/InviteChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/InviteChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.InviteGuild", "shortDescription" : "A partial guild with the information used by an invite", "members_case class" : [{"member" : "ackcord.data.InviteGuild#<init>", "error" : "unsupported entity"}, {"label" : "vanityUrlCode", "tail" : ": Option[String]", "member" : "ackcord.data.InviteGuild.vanityUrlCode", "link" : "ackcord\/data\/InviteGuild.html#vanityUrlCode:Option[String]", "kind" : "val"}, {"label" : "verificationLevel", "tail" : ": VerificationLevel", "member" : "ackcord.data.InviteGuild.verificationLevel", "link" : "ackcord\/data\/InviteGuild.html#verificationLevel:ackcord.data.VerificationLevel", "kind" : "val"}, {"label" : "features", "tail" : ": Seq[GuildFeature]", "member" : "ackcord.data.InviteGuild.features", "link" : "ackcord\/data\/InviteGuild.html#features:Seq[ackcord.data.GuildFeature]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.InviteGuild.icon", "link" : "ackcord\/data\/InviteGuild.html#icon:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.InviteGuild.description", "link" : "ackcord\/data\/InviteGuild.html#description:Option[String]", "kind" : "val"}, {"label" : "banner", "tail" : ": Option[String]", "member" : "ackcord.data.InviteGuild.banner", "link" : "ackcord\/data\/InviteGuild.html#banner:Option[String]", "kind" : "val"}, {"label" : "splash", "tail" : ": Option[String]", "member" : "ackcord.data.InviteGuild.splash", "link" : "ackcord\/data\/InviteGuild.html#splash:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.InviteGuild.name", "link" : "ackcord\/data\/InviteGuild.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.InviteGuild.id", "link" : "ackcord\/data\/InviteGuild.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/InviteGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/InviteGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/InviteGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/InviteGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/InviteGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/InviteGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/InviteGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/InviteGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/InviteGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/InviteGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/InviteGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/InviteGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/InviteGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/InviteGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/InviteGuild.html", "kind" : "case class"}, {"name" : "ackcord.data.InviteTargetUser", "shortDescription" : "The target user of an invite.", "members_case class" : [{"member" : "ackcord.data.InviteTargetUser#<init>", "error" : "unsupported entity"}, {"label" : "discriminator", "tail" : ": String", "member" : "ackcord.data.InviteTargetUser.discriminator", "link" : "ackcord\/data\/InviteTargetUser.html#discriminator:String", "kind" : "val"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.InviteTargetUser.avatar", "link" : "ackcord\/data\/InviteTargetUser.html#avatar:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.InviteTargetUser.name", "link" : "ackcord\/data\/InviteTargetUser.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": UserId", "member" : "ackcord.data.InviteTargetUser.id", "link" : "ackcord\/data\/InviteTargetUser.html#id:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/InviteTargetUser.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/InviteTargetUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/InviteTargetUser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/InviteTargetUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/InviteTargetUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/InviteTargetUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/InviteTargetUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/InviteTargetUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteTargetUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteTargetUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteTargetUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/InviteTargetUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/InviteTargetUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/InviteTargetUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/InviteTargetUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/InviteTargetUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/InviteTargetUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/InviteTargetUser.html", "kind" : "case class"}, {"name" : "ackcord.data.InviteWithMetadata", "shortDescription" : "An invite with extra information.", "members_case class" : [{"member" : "ackcord.data.InviteWithMetadata#<init>", "error" : "unsupported entity"}, {"label" : "createdAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.InviteWithMetadata.createdAt", "link" : "ackcord\/data\/InviteWithMetadata.html#createdAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "temporary", "tail" : ": Boolean", "member" : "ackcord.data.InviteWithMetadata.temporary", "link" : "ackcord\/data\/InviteWithMetadata.html#temporary:Boolean", "kind" : "val"}, {"label" : "maxAge", "tail" : ": Int", "member" : "ackcord.data.InviteWithMetadata.maxAge", "link" : "ackcord\/data\/InviteWithMetadata.html#maxAge:Int", "kind" : "val"}, {"label" : "maxUses", "tail" : ": Int", "member" : "ackcord.data.InviteWithMetadata.maxUses", "link" : "ackcord\/data\/InviteWithMetadata.html#maxUses:Int", "kind" : "val"}, {"label" : "uses", "tail" : ": Int", "member" : "ackcord.data.InviteWithMetadata.uses", "link" : "ackcord\/data\/InviteWithMetadata.html#uses:Int", "kind" : "val"}, {"label" : "approximateMemberCount", "tail" : ": Option[Int]", "member" : "ackcord.data.InviteWithMetadata.approximateMemberCount", "link" : "ackcord\/data\/InviteWithMetadata.html#approximateMemberCount:Option[Int]", "kind" : "val"}, {"label" : "approximatePresenceCount", "tail" : ": Option[Int]", "member" : "ackcord.data.InviteWithMetadata.approximatePresenceCount", "link" : "ackcord\/data\/InviteWithMetadata.html#approximatePresenceCount:Option[Int]", "kind" : "val"}, {"label" : "targetUserType", "tail" : ": Option[Int]", "member" : "ackcord.data.InviteWithMetadata.targetUserType", "link" : "ackcord\/data\/InviteWithMetadata.html#targetUserType:Option[Int]", "kind" : "val"}, {"label" : "targetUser", "tail" : ": Option[InviteTargetUser]", "member" : "ackcord.data.InviteWithMetadata.targetUser", "link" : "ackcord\/data\/InviteWithMetadata.html#targetUser:Option[ackcord.data.InviteTargetUser]", "kind" : "val"}, {"label" : "inviter", "tail" : ": Option[User]", "member" : "ackcord.data.InviteWithMetadata.inviter", "link" : "ackcord\/data\/InviteWithMetadata.html#inviter:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "channel", "tail" : ": InviteChannel", "member" : "ackcord.data.InviteWithMetadata.channel", "link" : "ackcord\/data\/InviteWithMetadata.html#channel:ackcord.data.InviteChannel", "kind" : "val"}, {"label" : "guild", "tail" : ": Option[InviteGuild]", "member" : "ackcord.data.InviteWithMetadata.guild", "link" : "ackcord\/data\/InviteWithMetadata.html#guild:Option[ackcord.data.InviteGuild]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.data.InviteWithMetadata.code", "link" : "ackcord\/data\/InviteWithMetadata.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/InviteWithMetadata.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/InviteWithMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/InviteWithMetadata.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/InviteWithMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/InviteWithMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/InviteWithMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/InviteWithMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/InviteWithMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteWithMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteWithMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/InviteWithMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/InviteWithMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/InviteWithMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/InviteWithMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/InviteWithMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/InviteWithMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/InviteWithMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/InviteWithMetadata.html", "kind" : "case class"}, {"name" : "ackcord.data.Message", "trait" : "ackcord\/data\/Message.html", "kind" : "trait", "members_trait" : [{"label" : "authorUser", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Message.authorUser", "link" : "ackcord\/data\/Message.html#authorUser(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "authorUserId", "tail" : "(): Option[UserId]", "member" : "ackcord.data.Message.authorUserId", "link" : "ackcord\/data\/Message.html#authorUserId:Option[ackcord.data.UserId]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Message.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/Message.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "formatMentions", "tail" : "(c: CacheSnapshot): String", "member" : "ackcord.data.Message.formatMentions", "link" : "ackcord\/data\/Message.html#formatMentions(implicitc:ackcord.CacheSnapshot):String", "kind" : "abstract def"}, {"label" : "guildMember", "tail" : "(c: CacheSnapshot): Option[GuildMember]", "member" : "ackcord.data.Message.guildMember", "link" : "ackcord\/data\/Message.html#guildMember(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildMember]", "kind" : "abstract def"}, {"label" : "guild", "tail" : "(c: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.Message.guild", "link" : "ackcord\/data\/Message.html#guild(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "abstract def"}, {"label" : "flags", "tail" : "(): Option[MessageFlags]", "member" : "ackcord.data.Message.flags", "link" : "ackcord\/data\/Message.html#flags:Option[ackcord.data.MessageFlags]", "kind" : "abstract def"}, {"label" : "messageReference", "tail" : "(): Option[MessageReference]", "member" : "ackcord.data.Message.messageReference", "link" : "ackcord\/data\/Message.html#messageReference:Option[ackcord.data.MessageReference]", "kind" : "abstract def"}, {"label" : "application", "tail" : "(): Option[MessageApplication]", "member" : "ackcord.data.Message.application", "link" : "ackcord\/data\/Message.html#application:Option[ackcord.data.MessageApplication]", "kind" : "abstract def"}, {"label" : "activity", "tail" : "(): Option[MessageActivity]", "member" : "ackcord.data.Message.activity", "link" : "ackcord\/data\/Message.html#activity:Option[ackcord.data.MessageActivity]", "kind" : "abstract def"}, {"label" : "messageType", "tail" : "(): MessageType", "member" : "ackcord.data.Message.messageType", "link" : "ackcord\/data\/Message.html#messageType:ackcord.data.MessageType", "kind" : "abstract def"}, {"label" : "pinned", "tail" : "(): Boolean", "member" : "ackcord.data.Message.pinned", "link" : "ackcord\/data\/Message.html#pinned:Boolean", "kind" : "abstract def"}, {"label" : "nonce", "tail" : "(): Option[String]", "member" : "ackcord.data.Message.nonce", "link" : "ackcord\/data\/Message.html#nonce:Option[String]", "kind" : "abstract def"}, {"label" : "reactions", "tail" : "(): Seq[Reaction]", "member" : "ackcord.data.Message.reactions", "link" : "ackcord\/data\/Message.html#reactions:Seq[ackcord.data.Reaction]", "kind" : "abstract def"}, {"label" : "embeds", "tail" : "(): Seq[ReceivedEmbed]", "member" : "ackcord.data.Message.embeds", "link" : "ackcord\/data\/Message.html#embeds:Seq[ackcord.data.ReceivedEmbed]", "kind" : "abstract def"}, {"label" : "attachment", "tail" : "(): Seq[Attachment]", "member" : "ackcord.data.Message.attachment", "link" : "ackcord\/data\/Message.html#attachment:Seq[ackcord.data.Attachment]", "kind" : "abstract def"}, {"label" : "mentionChannels", "tail" : "(): Seq[ChannelMention]", "member" : "ackcord.data.Message.mentionChannels", "link" : "ackcord\/data\/Message.html#mentionChannels:Seq[ackcord.data.ChannelMention]", "kind" : "abstract def"}, {"label" : "mentions", "tail" : "(): Seq[UserId]", "member" : "ackcord.data.Message.mentions", "link" : "ackcord\/data\/Message.html#mentions:Seq[ackcord.data.UserId]", "kind" : "abstract def"}, {"label" : "mentionEveryone", "tail" : "(): Boolean", "member" : "ackcord.data.Message.mentionEveryone", "link" : "ackcord\/data\/Message.html#mentionEveryone:Boolean", "kind" : "abstract def"}, {"label" : "tts", "tail" : "(): Boolean", "member" : "ackcord.data.Message.tts", "link" : "ackcord\/data\/Message.html#tts:Boolean", "kind" : "abstract def"}, {"label" : "editedTimestamp", "tail" : "(): Option[OffsetDateTime]", "member" : "ackcord.data.Message.editedTimestamp", "link" : "ackcord\/data\/Message.html#editedTimestamp:Option[java.time.OffsetDateTime]", "kind" : "abstract def"}, {"label" : "timestamp", "tail" : "(): OffsetDateTime", "member" : "ackcord.data.Message.timestamp", "link" : "ackcord\/data\/Message.html#timestamp:java.time.OffsetDateTime", "kind" : "abstract def"}, {"label" : "content", "tail" : "(): String", "member" : "ackcord.data.Message.content", "link" : "ackcord\/data\/Message.html#content:String", "kind" : "abstract def"}, {"label" : "authorUsername", "tail" : "(): String", "member" : "ackcord.data.Message.authorUsername", "link" : "ackcord\/data\/Message.html#authorUsername:String", "kind" : "abstract def"}, {"label" : "authorId", "tail" : "(): RawSnowflake", "member" : "ackcord.data.Message.authorId", "link" : "ackcord\/data\/Message.html#authorId:ackcord.data.RawSnowflake", "kind" : "abstract def"}, {"label" : "isAuthorUser", "tail" : "(): Boolean", "member" : "ackcord.data.Message.isAuthorUser", "link" : "ackcord\/data\/Message.html#isAuthorUser:Boolean", "kind" : "abstract def"}, {"label" : "channelId", "tail" : "(): TextChannelId", "member" : "ackcord.data.Message.channelId", "link" : "ackcord\/data\/Message.html#channelId:ackcord.data.TextChannelId", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): MessageId", "member" : "ackcord.data.Message.id", "link" : "ackcord\/data\/Message.html#id:ackcord.data.MessageId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.data.MessageActivity", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.MessageActivity#<init>", "error" : "unsupported entity"}, {"label" : "partyId", "tail" : ": Option[String]", "member" : "ackcord.data.MessageActivity.partyId", "link" : "ackcord\/data\/MessageActivity.html#partyId:Option[String]", "kind" : "val"}, {"label" : "activityType", "tail" : ": MessageActivityType", "member" : "ackcord.data.MessageActivity.activityType", "link" : "ackcord\/data\/MessageActivity.html#activityType:ackcord.data.MessageActivityType", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/MessageActivity.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageActivity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageActivity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageActivity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageActivity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageActivity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageActivity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageActivity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageActivity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageActivity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageActivity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageActivity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageActivity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageActivity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/MessageActivity.html", "kind" : "case class"}, {"name" : "ackcord.data.MessageActivityType", "shortDescription" : "", "object" : "ackcord\/data\/MessageActivityType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.MessageActivityType.value", "link" : "ackcord\/data\/MessageActivityType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageActivityType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageActivityType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageActivityType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageActivityType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageActivityType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageActivityType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageActivityType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageActivityType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageActivityType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MessageActivityType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageActivityType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MessageActivityType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MessageActivityType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageActivityType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageActivityType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageActivityType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): MessageActivityType", "member" : "ackcord.data.MessageActivityType.createUnknown", "link" : "ackcord\/data\/MessageActivityType$.html#createUnknown(value:Int):ackcord.data.MessageActivityType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.MessageActivityType.Unknown", "link" : "ackcord\/data\/MessageActivityType$.html#UnknownextendsMessageActivityTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "JoinRequest", "tail" : "", "member" : "ackcord.data.MessageActivityType.JoinRequest", "link" : "ackcord\/data\/MessageActivityType$.html#JoinRequest", "kind" : "case object"}, {"label" : "Listen", "tail" : "", "member" : "ackcord.data.MessageActivityType.Listen", "link" : "ackcord\/data\/MessageActivityType$.html#Listen", "kind" : "case object"}, {"label" : "Spectate", "tail" : "", "member" : "ackcord.data.MessageActivityType.Spectate", "link" : "ackcord\/data\/MessageActivityType$.html#Spectate", "kind" : "case object"}, {"label" : "Join", "tail" : "", "member" : "ackcord.data.MessageActivityType.Join", "link" : "ackcord\/data\/MessageActivityType$.html#Join", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[MessageActivityType]", "member" : "ackcord.data.MessageActivityType.values", "link" : "ackcord\/data\/MessageActivityType$.html#values:IndexedSeq[ackcord.data.MessageActivityType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[MessageActivityType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/MessageActivityType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[MessageActivityType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/MessageActivityType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], MessageActivityType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/MessageActivityType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[MessageActivityType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/MessageActivityType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): MessageActivityType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/MessageActivityType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, MessageActivityType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/MessageActivityType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageActivityType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageActivityType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageActivityType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageActivityType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageActivityType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageActivityType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageActivityType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageActivityType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageActivityType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageActivityType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MessageActivityType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageActivityType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MessageActivityType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MessageActivityType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageActivityType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageActivityType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageActivityType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/MessageActivityType.html", "kind" : "class"}, {"name" : "ackcord.data.MessageApplication", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.MessageApplication#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.MessageApplication.name", "link" : "ackcord\/data\/MessageApplication.html#name:String", "kind" : "val"}, {"label" : "icon", "tail" : ": String", "member" : "ackcord.data.MessageApplication.icon", "link" : "ackcord\/data\/MessageApplication.html#icon:String", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "ackcord.data.MessageApplication.description", "link" : "ackcord\/data\/MessageApplication.html#description:String", "kind" : "val"}, {"label" : "coverImage", "tail" : ": Option[String]", "member" : "ackcord.data.MessageApplication.coverImage", "link" : "ackcord\/data\/MessageApplication.html#coverImage:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": RawSnowflake", "member" : "ackcord.data.MessageApplication.id", "link" : "ackcord\/data\/MessageApplication.html#id:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/MessageApplication.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageApplication.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageApplication.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageApplication.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageApplication.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageApplication.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageApplication.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageApplication.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageApplication.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageApplication.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageApplication.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageApplication.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageApplication.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageApplication.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageApplication.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageApplication.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageApplication.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/MessageApplication.html", "kind" : "case class"}, {"name" : "ackcord.data.MessageFlags", "shortDescription" : "", "object" : "ackcord\/data\/package$$MessageFlags$.html", "members_object" : [{"label" : "Urgent", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.Urgent", "link" : "ackcord\/data\/package$$MessageFlags$.html#Urgent:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "SourceMessageDeleted", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.SourceMessageDeleted", "link" : "ackcord\/data\/package$$MessageFlags$.html#SourceMessageDeleted:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "SuppressEmbeds", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.SuppressEmbeds", "link" : "ackcord\/data\/package$$MessageFlags$.html#SuppressEmbeds:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "IsCrosspost", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.IsCrosspost", "link" : "ackcord\/data\/package$$MessageFlags$.html#IsCrosspost:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "Crossposted", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.Crossposted", "link" : "ackcord\/data\/package$$MessageFlags$.html#Crossposted:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "None", "tail" : ": MessageFlags", "member" : "ackcord.data.MessageFlags.None", "link" : "ackcord\/data\/package$$MessageFlags$.html#None:ackcord.data.MessageFlags.MessageFlags", "kind" : "val"}, {"label" : "fromInt", "tail" : "(int: Int): MessageFlags", "member" : "ackcord.data.MessageFlags.fromInt", "link" : "ackcord\/data\/package$$MessageFlags$.html#fromInt(int:Int):ackcord.data.MessageFlags.MessageFlags", "kind" : "def"}, {"label" : "apply", "tail" : "(flags: MessageFlags*): MessageFlags", "member" : "ackcord.data.MessageFlags.apply", "link" : "ackcord\/data\/package$$MessageFlags$.html#apply(flags:ackcord.data.MessageFlags.MessageFlags*):ackcord.data.MessageFlags.MessageFlags", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$MessageFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$MessageFlags$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$MessageFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$MessageFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$MessageFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$MessageFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$MessageFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$MessageFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$MessageFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$MessageFlags$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$MessageFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$MessageFlags$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$MessageFlags$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$MessageFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$MessageFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$MessageFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.data.MessageFlags.MessageFlags", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.data.MessageFlagsSyntax", "shortDescription" : "", "members_class" : [{"label" : "isNone", "tail" : "(): Boolean", "member" : "ackcord.data.MessageFlagsSyntax.isNone", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#isNone:Boolean", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(other: MessageFlags): Boolean", "member" : "ackcord.data.MessageFlagsSyntax.hasFlag", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#hasFlag(other:ackcord.data.package.MessageFlags):Boolean", "kind" : "def"}, {"label" : "--", "tail" : "(other: MessageFlags): MessageFlags", "member" : "ackcord.data.MessageFlagsSyntax.--", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#--(other:ackcord.data.package.MessageFlags):ackcord.data.package.MessageFlags", "kind" : "def"}, {"label" : "++", "tail" : "(other: MessageFlags): MessageFlags", "member" : "ackcord.data.MessageFlagsSyntax.++", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#++(other:ackcord.data.package.MessageFlags):ackcord.data.package.MessageFlags", "kind" : "def"}, {"label" : "toInt", "tail" : "(): Int", "member" : "ackcord.data.MessageFlagsSyntax.toInt", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#toInt:Int", "kind" : "def"}, {"member" : "ackcord.data.MessageFlagsSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$MessageFlagsSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$MessageFlagsSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.MessageId", "shortDescription" : "", "object" : "ackcord\/data\/package$$MessageId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Message]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$MessageId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Message]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$MessageId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Message]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$MessageId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$MessageId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$MessageId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$MessageId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$MessageId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$MessageId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$MessageId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$MessageId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$MessageId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$MessageId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$MessageId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$MessageId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$MessageId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$MessageId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$MessageId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$MessageId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$MessageId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$MessageId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.MessageIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(channelId: TextChannelId)(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.MessageIdSyntax.resolve", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#resolve(channelId:ackcord.data.package.TextChannelId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.MessageIdSyntax.resolve", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"member" : "ackcord.data.MessageIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$MessageIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$MessageIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$MessageIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.MessageReference", "shortDescription" : "A reference to another message.", "members_case class" : [{"member" : "ackcord.data.MessageReference#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.MessageReference.guildId", "link" : "ackcord\/data\/MessageReference.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.data.MessageReference.channelId", "link" : "ackcord\/data\/MessageReference.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "messageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.MessageReference.messageId", "link" : "ackcord\/data\/MessageReference.html#messageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/MessageReference.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageReference.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/MessageReference.html", "kind" : "case class"}, {"name" : "ackcord.data.MessageType", "shortDescription" : "An enum of all the different message types.", "object" : "ackcord\/data\/MessageType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.MessageType.value", "link" : "ackcord\/data\/MessageType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MessageType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MessageType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MessageType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): MessageType", "member" : "ackcord.data.MessageType.createUnknown", "link" : "ackcord\/data\/MessageType$.html#createUnknown(value:Int):ackcord.data.MessageType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.MessageType.Unknown", "link" : "ackcord\/data\/MessageType$.html#UnknownextendsMessageTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "GuildDiscoveryRequalified", "tail" : "", "member" : "ackcord.data.MessageType.GuildDiscoveryRequalified", "link" : "ackcord\/data\/MessageType$.html#GuildDiscoveryRequalified", "kind" : "case object"}, {"label" : "GuildDiscoveryDisqualified", "tail" : "", "member" : "ackcord.data.MessageType.GuildDiscoveryDisqualified", "link" : "ackcord\/data\/MessageType$.html#GuildDiscoveryDisqualified", "kind" : "case object"}, {"label" : "ChannelFollowAdd", "tail" : "", "member" : "ackcord.data.MessageType.ChannelFollowAdd", "link" : "ackcord\/data\/MessageType$.html#ChannelFollowAdd", "kind" : "case object"}, {"label" : "UserPremiumGuildTier3", "tail" : "", "member" : "ackcord.data.MessageType.UserPremiumGuildTier3", "link" : "ackcord\/data\/MessageType$.html#UserPremiumGuildTier3", "kind" : "case object"}, {"label" : "UserPremiumGuildTier2", "tail" : "", "member" : "ackcord.data.MessageType.UserPremiumGuildTier2", "link" : "ackcord\/data\/MessageType$.html#UserPremiumGuildTier2", "kind" : "case object"}, {"label" : "UserPremiumGuildTier1", "tail" : "", "member" : "ackcord.data.MessageType.UserPremiumGuildTier1", "link" : "ackcord\/data\/MessageType$.html#UserPremiumGuildTier1", "kind" : "case object"}, {"label" : "UserPremiumGuildSubscription", "tail" : "", "member" : "ackcord.data.MessageType.UserPremiumGuildSubscription", "link" : "ackcord\/data\/MessageType$.html#UserPremiumGuildSubscription", "kind" : "case object"}, {"label" : "GuildMemberJoin", "tail" : "", "member" : "ackcord.data.MessageType.GuildMemberJoin", "link" : "ackcord\/data\/MessageType$.html#GuildMemberJoin", "kind" : "case object"}, {"label" : "ChannelPinnedMessage", "tail" : "", "member" : "ackcord.data.MessageType.ChannelPinnedMessage", "link" : "ackcord\/data\/MessageType$.html#ChannelPinnedMessage", "kind" : "case object"}, {"label" : "ChannelIconChange", "tail" : "", "member" : "ackcord.data.MessageType.ChannelIconChange", "link" : "ackcord\/data\/MessageType$.html#ChannelIconChange", "kind" : "case object"}, {"label" : "ChannelNameChange", "tail" : "", "member" : "ackcord.data.MessageType.ChannelNameChange", "link" : "ackcord\/data\/MessageType$.html#ChannelNameChange", "kind" : "case object"}, {"label" : "Call", "tail" : "", "member" : "ackcord.data.MessageType.Call", "link" : "ackcord\/data\/MessageType$.html#Call", "kind" : "case object"}, {"label" : "RecipientRemove", "tail" : "", "member" : "ackcord.data.MessageType.RecipientRemove", "link" : "ackcord\/data\/MessageType$.html#RecipientRemove", "kind" : "case object"}, {"label" : "RecipientAdd", "tail" : "", "member" : "ackcord.data.MessageType.RecipientAdd", "link" : "ackcord\/data\/MessageType$.html#RecipientAdd", "kind" : "case object"}, {"label" : "Default", "tail" : "", "member" : "ackcord.data.MessageType.Default", "link" : "ackcord\/data\/MessageType$.html#Default", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[MessageType]", "member" : "ackcord.data.MessageType.values", "link" : "ackcord\/data\/MessageType$.html#values:IndexedSeq[ackcord.data.MessageType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[MessageType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/MessageType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[MessageType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/MessageType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], MessageType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/MessageType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[MessageType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/MessageType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): MessageType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/MessageType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, MessageType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/MessageType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MessageType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MessageType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MessageType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MessageType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MessageType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MessageType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MessageType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MessageType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MessageType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MessageType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MessageType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MessageType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MessageType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MessageType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MessageType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MessageType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MessageType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/MessageType.html", "kind" : "class"}, {"name" : "ackcord.data.MFALevel", "shortDescription" : "", "object" : "ackcord\/data\/MFALevel$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.MFALevel.value", "link" : "ackcord\/data\/MFALevel.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MFALevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MFALevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MFALevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MFALevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MFALevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MFALevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MFALevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MFALevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MFALevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MFALevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MFALevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MFALevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MFALevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MFALevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MFALevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MFALevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): MFALevel", "member" : "ackcord.data.MFALevel.createUnknown", "link" : "ackcord\/data\/MFALevel$.html#createUnknown(value:Int):ackcord.data.MFALevel", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.MFALevel.Unknown", "link" : "ackcord\/data\/MFALevel$.html#UnknownextendsMFALevelwithProductwithSerializable", "kind" : "case class"}, {"label" : "Elevated", "tail" : "", "member" : "ackcord.data.MFALevel.Elevated", "link" : "ackcord\/data\/MFALevel$.html#Elevated", "kind" : "case object"}, {"label" : "NoneMFA", "tail" : "", "member" : "ackcord.data.MFALevel.NoneMFA", "link" : "ackcord\/data\/MFALevel$.html#NoneMFA", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[MFALevel]", "member" : "ackcord.data.MFALevel.values", "link" : "ackcord\/data\/MFALevel$.html#values:IndexedSeq[ackcord.data.MFALevel]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[MFALevel]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/MFALevel$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[MFALevel]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/MFALevel$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], MFALevel]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/MFALevel$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[MFALevel]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/MFALevel$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): MFALevel", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/MFALevel$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, MFALevel]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/MFALevel$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/MFALevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/MFALevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/MFALevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/MFALevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/MFALevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/MFALevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/MFALevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/MFALevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/MFALevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/MFALevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/MFALevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/MFALevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/MFALevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/MFALevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/MFALevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/MFALevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/MFALevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/MFALevel.html", "kind" : "class"}, {"name" : "ackcord.data.NewsTextGuildChannel", "shortDescription" : "A news channel in a guild.", "members_case class" : [{"label" : "rateLimitPerUser", "tail" : "(): Option[Int]", "member" : "ackcord.data.NewsTextGuildChannel.rateLimitPerUser", "link" : "ackcord\/data\/NewsTextGuildChannel.html#rateLimitPerUser:Option[Int]", "kind" : "def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.NewsTextGuildChannel.channelType", "link" : "ackcord\/data\/NewsTextGuildChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.NewsTextGuildChannel#<init>", "error" : "unsupported entity"}, {"label" : "lastPinTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.NewsTextGuildChannel.lastPinTimestamp", "link" : "ackcord\/data\/NewsTextGuildChannel.html#lastPinTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.NewsTextGuildChannel.parentId", "link" : "ackcord\/data\/NewsTextGuildChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Boolean", "member" : "ackcord.data.NewsTextGuildChannel.nsfw", "link" : "ackcord\/data\/NewsTextGuildChannel.html#nsfw:Boolean", "kind" : "val"}, {"label" : "lastMessageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.NewsTextGuildChannel.lastMessageId", "link" : "ackcord\/data\/NewsTextGuildChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "topic", "tail" : ": Option[String]", "member" : "ackcord.data.NewsTextGuildChannel.topic", "link" : "ackcord\/data\/NewsTextGuildChannel.html#topic:Option[String]", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.NewsTextGuildChannel.permissionOverwrites", "link" : "ackcord\/data\/NewsTextGuildChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.NewsTextGuildChannel.position", "link" : "ackcord\/data\/NewsTextGuildChannel.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.NewsTextGuildChannel.name", "link" : "ackcord\/data\/NewsTextGuildChannel.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.NewsTextGuildChannel.guildId", "link" : "ackcord\/data\/NewsTextGuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[NewsTextGuildChannel]", "member" : "ackcord.data.NewsTextGuildChannel.id", "link" : "ackcord\/data\/NewsTextGuildChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.NewsTextGuildChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/NewsTextGuildChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/NewsTextGuildChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/NewsTextGuildChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/NewsTextGuildChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/NewsTextGuildChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/NewsTextGuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/NewsTextGuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/NewsTextGuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/NewsTextGuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/NewsTextGuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/NewsTextGuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/NewsTextGuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NewsTextGuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NewsTextGuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NewsTextGuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/NewsTextGuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/NewsTextGuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/NewsTextGuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/NewsTextGuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/NewsTextGuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/NewsTextGuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/NewsTextGuildChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.NormalTextGuildChannel", "shortDescription" : "A normal text channel in a guild", "members_case class" : [{"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.NormalTextGuildChannel.channelType", "link" : "ackcord\/data\/NormalTextGuildChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.NormalTextGuildChannel#<init>", "error" : "unsupported entity"}, {"label" : "lastPinTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.NormalTextGuildChannel.lastPinTimestamp", "link" : "ackcord\/data\/NormalTextGuildChannel.html#lastPinTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.NormalTextGuildChannel.parentId", "link" : "ackcord\/data\/NormalTextGuildChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Boolean", "member" : "ackcord.data.NormalTextGuildChannel.nsfw", "link" : "ackcord\/data\/NormalTextGuildChannel.html#nsfw:Boolean", "kind" : "val"}, {"label" : "rateLimitPerUser", "tail" : ": Option[Int]", "member" : "ackcord.data.NormalTextGuildChannel.rateLimitPerUser", "link" : "ackcord\/data\/NormalTextGuildChannel.html#rateLimitPerUser:Option[Int]", "kind" : "val"}, {"label" : "lastMessageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.NormalTextGuildChannel.lastMessageId", "link" : "ackcord\/data\/NormalTextGuildChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "topic", "tail" : ": Option[String]", "member" : "ackcord.data.NormalTextGuildChannel.topic", "link" : "ackcord\/data\/NormalTextGuildChannel.html#topic:Option[String]", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.NormalTextGuildChannel.permissionOverwrites", "link" : "ackcord\/data\/NormalTextGuildChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.NormalTextGuildChannel.position", "link" : "ackcord\/data\/NormalTextGuildChannel.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.NormalTextGuildChannel.name", "link" : "ackcord\/data\/NormalTextGuildChannel.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.NormalTextGuildChannel.guildId", "link" : "ackcord\/data\/NormalTextGuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[NormalTextGuildChannel]", "member" : "ackcord.data.NormalTextGuildChannel.id", "link" : "ackcord\/data\/NormalTextGuildChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.NormalTextGuildChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/NormalTextGuildChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/NormalTextGuildChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/NormalTextGuildChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/NormalTextGuildChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/NormalTextGuildChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/NormalTextGuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/NormalTextGuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/NormalTextGuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/NormalTextGuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/NormalTextGuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/NormalTextGuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/NormalTextGuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NormalTextGuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NormalTextGuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NormalTextGuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/NormalTextGuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/NormalTextGuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/NormalTextGuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/NormalTextGuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/NormalTextGuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/NormalTextGuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/NormalTextGuildChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.NotificationLevel", "shortDescription" : "The different notification levels that can be used for a guild", "object" : "ackcord\/data\/NotificationLevel$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.NotificationLevel.value", "link" : "ackcord\/data\/NotificationLevel.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/NotificationLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/NotificationLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/NotificationLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/NotificationLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/NotificationLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/NotificationLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/NotificationLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/NotificationLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/NotificationLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/NotificationLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/NotificationLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/NotificationLevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/NotificationLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/NotificationLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/NotificationLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/NotificationLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): NotificationLevel", "member" : "ackcord.data.NotificationLevel.createUnknown", "link" : "ackcord\/data\/NotificationLevel$.html#createUnknown(value:Int):ackcord.data.NotificationLevel", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.NotificationLevel.Unknown", "link" : "ackcord\/data\/NotificationLevel$.html#UnknownextendsNotificationLevelwithProductwithSerializable", "kind" : "case class"}, {"label" : "values", "tail" : "(): IndexedSeq[NotificationLevel]", "member" : "ackcord.data.NotificationLevel.values", "link" : "ackcord\/data\/NotificationLevel$.html#values:IndexedSeq[ackcord.data.NotificationLevel]", "kind" : "def"}, {"label" : "OnlyMentions", "tail" : "", "member" : "ackcord.data.NotificationLevel.OnlyMentions", "link" : "ackcord\/data\/NotificationLevel$.html#OnlyMentions", "kind" : "case object"}, {"label" : "AllMessages", "tail" : "", "member" : "ackcord.data.NotificationLevel.AllMessages", "link" : "ackcord\/data\/NotificationLevel$.html#AllMessages", "kind" : "case object"}, {"label" : "codec", "tail" : ": Codec[NotificationLevel]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/NotificationLevel$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[NotificationLevel]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/NotificationLevel$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], NotificationLevel]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/NotificationLevel$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[NotificationLevel]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/NotificationLevel$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): NotificationLevel", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/NotificationLevel$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, NotificationLevel]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/NotificationLevel$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/NotificationLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/NotificationLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/NotificationLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/NotificationLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/NotificationLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/NotificationLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/NotificationLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/NotificationLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/NotificationLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/NotificationLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/NotificationLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/NotificationLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/NotificationLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/NotificationLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/NotificationLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/NotificationLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/NotificationLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/NotificationLevel.html", "kind" : "class"}, {"name" : "ackcord.data.OptionalAuditLogInfo", "shortDescription" : "Extra data for an entry", "members_case class" : [{"member" : "ackcord.data.OptionalAuditLogInfo#<init>", "error" : "unsupported entity"}, {"label" : "roleName", "tail" : ": Option[String]", "member" : "ackcord.data.OptionalAuditLogInfo.roleName", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#roleName:Option[String]", "kind" : "val"}, {"label" : "type", "tail" : ": Option[PermissionOverwriteType]", "member" : "ackcord.data.OptionalAuditLogInfo.type", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#type:Option[ackcord.data.PermissionOverwriteType]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[UserOrRoleId]", "member" : "ackcord.data.OptionalAuditLogInfo.id", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#id:Option[ackcord.data.UserOrRoleId]", "kind" : "val"}, {"label" : "count", "tail" : ": Option[String]", "member" : "ackcord.data.OptionalAuditLogInfo.count", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#count:Option[String]", "kind" : "val"}, {"label" : "messageId", "tail" : ": Option[MessageId]", "member" : "ackcord.data.OptionalAuditLogInfo.messageId", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#messageId:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "channelId", "tail" : ": Option[TextChannelId]", "member" : "ackcord.data.OptionalAuditLogInfo.channelId", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#channelId:Option[ackcord.data.TextChannelId]", "kind" : "val"}, {"label" : "membersRemoved", "tail" : ": Option[String]", "member" : "ackcord.data.OptionalAuditLogInfo.membersRemoved", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#membersRemoved:Option[String]", "kind" : "val"}, {"label" : "deleteMemberDays", "tail" : ": Option[String]", "member" : "ackcord.data.OptionalAuditLogInfo.deleteMemberDays", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#deleteMemberDays:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OptionalAuditLogInfo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OptionalAuditLogInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OptionalAuditLogInfo.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbed", "shortDescription" : "An outgoing embed.", "members_case class" : [{"label" : "totalCharAmount", "tail" : "(): Int", "member" : "ackcord.data.OutgoingEmbed.totalCharAmount", "link" : "ackcord\/data\/OutgoingEmbed.html#totalCharAmount:Int", "kind" : "def"}, {"member" : "ackcord.data.OutgoingEmbed#<init>", "error" : "unsupported entity"}, {"label" : "fields", "tail" : ": Seq[EmbedField]", "member" : "ackcord.data.OutgoingEmbed.fields", "link" : "ackcord\/data\/OutgoingEmbed.html#fields:Seq[ackcord.data.EmbedField]", "kind" : "val"}, {"label" : "author", "tail" : ": Option[OutgoingEmbedAuthor]", "member" : "ackcord.data.OutgoingEmbed.author", "link" : "ackcord\/data\/OutgoingEmbed.html#author:Option[ackcord.data.OutgoingEmbedAuthor]", "kind" : "val"}, {"label" : "thumbnail", "tail" : ": Option[OutgoingEmbedThumbnail]", "member" : "ackcord.data.OutgoingEmbed.thumbnail", "link" : "ackcord\/data\/OutgoingEmbed.html#thumbnail:Option[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "val"}, {"label" : "video", "tail" : ": Option[OutgoingEmbedVideo]", "member" : "ackcord.data.OutgoingEmbed.video", "link" : "ackcord\/data\/OutgoingEmbed.html#video:Option[ackcord.data.OutgoingEmbedVideo]", "kind" : "val"}, {"label" : "image", "tail" : ": Option[OutgoingEmbedImage]", "member" : "ackcord.data.OutgoingEmbed.image", "link" : "ackcord\/data\/OutgoingEmbed.html#image:Option[ackcord.data.OutgoingEmbedImage]", "kind" : "val"}, {"label" : "footer", "tail" : ": Option[OutgoingEmbedFooter]", "member" : "ackcord.data.OutgoingEmbed.footer", "link" : "ackcord\/data\/OutgoingEmbed.html#footer:Option[ackcord.data.OutgoingEmbedFooter]", "kind" : "val"}, {"label" : "color", "tail" : ": Option[Int]", "member" : "ackcord.data.OutgoingEmbed.color", "link" : "ackcord\/data\/OutgoingEmbed.html#color:Option[Int]", "kind" : "val"}, {"label" : "timestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.OutgoingEmbed.timestamp", "link" : "ackcord\/data\/OutgoingEmbed.html#timestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbed.url", "link" : "ackcord\/data\/OutgoingEmbed.html#url:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbed.description", "link" : "ackcord\/data\/OutgoingEmbed.html#description:Option[String]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbed.title", "link" : "ackcord\/data\/OutgoingEmbed.html#title:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbed.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbedAuthor", "shortDescription" : "The author part of an outgoing embed", "members_case class" : [{"member" : "ackcord.data.OutgoingEmbedAuthor#<init>", "error" : "unsupported entity"}, {"label" : "iconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbedAuthor.iconUrl", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#iconUrl:Option[String]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbedAuthor.url", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#url:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.OutgoingEmbedAuthor.name", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedAuthor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbedAuthor.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbedFooter", "shortDescription" : "The footer part of an outgoing embed.", "members_case class" : [{"member" : "ackcord.data.OutgoingEmbedFooter#<init>", "error" : "unsupported entity"}, {"label" : "iconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.OutgoingEmbedFooter.iconUrl", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#iconUrl:Option[String]", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "ackcord.data.OutgoingEmbedFooter.text", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#text:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbedFooter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedFooter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbedFooter.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbedImage", "shortDescription" : "The image part of an outgoing embed.", "members_case class" : [{"member" : "ackcord.data.OutgoingEmbedImage#<init>", "error" : "unsupported entity"}, {"label" : "url", "tail" : ": String", "member" : "ackcord.data.OutgoingEmbedImage.url", "link" : "ackcord\/data\/OutgoingEmbedImage.html#url:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbedImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbedImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbedImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbedImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbedImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbedImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbedImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbedImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbedImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbedImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbedImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbedImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbedImage.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbedThumbnail", "shortDescription" : "The thumbnail part of an outgoing embed.", "members_case class" : [{"member" : "ackcord.data.OutgoingEmbedThumbnail#<init>", "error" : "unsupported entity"}, {"label" : "url", "tail" : ": String", "member" : "ackcord.data.OutgoingEmbedThumbnail.url", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#url:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedThumbnail.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbedThumbnail.html", "kind" : "case class"}, {"name" : "ackcord.data.OutgoingEmbedVideo", "shortDescription" : "The video part of an outgoing embed.", "members_case class" : [{"member" : "ackcord.data.OutgoingEmbedVideo#<init>", "error" : "unsupported entity"}, {"label" : "url", "tail" : ": String", "member" : "ackcord.data.OutgoingEmbedVideo.url", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#url:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/OutgoingEmbedVideo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/OutgoingEmbedVideo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/OutgoingEmbedVideo.html", "kind" : "case class"}, {"name" : "ackcord.data.PartialEmoji", "shortDescription" : "A partial emoji found in reactions", "members_case class" : [{"member" : "ackcord.data.PartialEmoji#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.data.PartialEmoji.name", "link" : "ackcord\/data\/PartialEmoji.html#name:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[EmojiId]", "member" : "ackcord.data.PartialEmoji.id", "link" : "ackcord\/data\/PartialEmoji.html#id:Option[ackcord.data.EmojiId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PartialEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PartialEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PartialEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PartialEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PartialEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PartialEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PartialEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PartialEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PartialEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PartialEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PartialEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PartialEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PartialEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PartialEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PartialEmoji.html", "kind" : "case class"}, {"name" : "ackcord.data.PartialIntegration", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.PartialIntegration#<init>", "error" : "unsupported entity"}, {"label" : "account", "tail" : ": IntegrationAccount", "member" : "ackcord.data.PartialIntegration.account", "link" : "ackcord\/data\/PartialIntegration.html#account:ackcord.data.IntegrationAccount", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "ackcord.data.PartialIntegration.type", "link" : "ackcord\/data\/PartialIntegration.html#type:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PartialIntegration.name", "link" : "ackcord\/data\/PartialIntegration.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": IntegrationId", "member" : "ackcord.data.PartialIntegration.id", "link" : "ackcord\/data\/PartialIntegration.html#id:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PartialIntegration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PartialIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PartialIntegration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PartialIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PartialIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PartialIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PartialIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PartialIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PartialIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PartialIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PartialIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PartialIntegration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PartialIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PartialIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PartialIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PartialIntegration.html", "kind" : "case class"}, {"name" : "ackcord.data.Permission", "shortDescription" : "", "object" : "ackcord\/data\/package$$Permission$.html", "members_object" : [{"label" : "All", "tail" : ": Permission", "member" : "ackcord.data.Permission.All", "link" : "ackcord\/data\/package$$Permission$.html#All:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "None", "tail" : ": Permission", "member" : "ackcord.data.Permission.None", "link" : "ackcord\/data\/package$$Permission$.html#None:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageEmojis", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageEmojis", "link" : "ackcord\/data\/package$$Permission$.html#ManageEmojis:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageWebhooks", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageWebhooks", "link" : "ackcord\/data\/package$$Permission$.html#ManageWebhooks:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageRoles", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageRoles", "link" : "ackcord\/data\/package$$Permission$.html#ManageRoles:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageNicknames", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageNicknames", "link" : "ackcord\/data\/package$$Permission$.html#ManageNicknames:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ChangeNickname", "tail" : ": Permission", "member" : "ackcord.data.Permission.ChangeNickname", "link" : "ackcord\/data\/package$$Permission$.html#ChangeNickname:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "Stream", "tail" : ": Permission", "member" : "ackcord.data.Permission.Stream", "link" : "ackcord\/data\/package$$Permission$.html#Stream:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "PrioritySpeaker", "tail" : ": Permission", "member" : "ackcord.data.Permission.PrioritySpeaker", "link" : "ackcord\/data\/package$$Permission$.html#PrioritySpeaker:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "UseVad", "tail" : ": Permission", "member" : "ackcord.data.Permission.UseVad", "link" : "ackcord\/data\/package$$Permission$.html#UseVad:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "MoveMembers", "tail" : ": Permission", "member" : "ackcord.data.Permission.MoveMembers", "link" : "ackcord\/data\/package$$Permission$.html#MoveMembers:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "DeafenMembers", "tail" : ": Permission", "member" : "ackcord.data.Permission.DeafenMembers", "link" : "ackcord\/data\/package$$Permission$.html#DeafenMembers:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "MuteMembers", "tail" : ": Permission", "member" : "ackcord.data.Permission.MuteMembers", "link" : "ackcord\/data\/package$$Permission$.html#MuteMembers:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "Speak", "tail" : ": Permission", "member" : "ackcord.data.Permission.Speak", "link" : "ackcord\/data\/package$$Permission$.html#Speak:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "Connect", "tail" : ": Permission", "member" : "ackcord.data.Permission.Connect", "link" : "ackcord\/data\/package$$Permission$.html#Connect:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ViewGuildInsights", "tail" : ": Permission", "member" : "ackcord.data.Permission.ViewGuildInsights", "link" : "ackcord\/data\/package$$Permission$.html#ViewGuildInsights:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "UseExternalEmojis", "tail" : ": Permission", "member" : "ackcord.data.Permission.UseExternalEmojis", "link" : "ackcord\/data\/package$$Permission$.html#UseExternalEmojis:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "MentionEveryone", "tail" : ": Permission", "member" : "ackcord.data.Permission.MentionEveryone", "link" : "ackcord\/data\/package$$Permission$.html#MentionEveryone:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ReadMessageHistory", "tail" : ": Permission", "member" : "ackcord.data.Permission.ReadMessageHistory", "link" : "ackcord\/data\/package$$Permission$.html#ReadMessageHistory:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "AttachFiles", "tail" : ": Permission", "member" : "ackcord.data.Permission.AttachFiles", "link" : "ackcord\/data\/package$$Permission$.html#AttachFiles:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "EmbedLinks", "tail" : ": Permission", "member" : "ackcord.data.Permission.EmbedLinks", "link" : "ackcord\/data\/package$$Permission$.html#EmbedLinks:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageMessages", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageMessages", "link" : "ackcord\/data\/package$$Permission$.html#ManageMessages:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "SendTtsMessages", "tail" : ": Permission", "member" : "ackcord.data.Permission.SendTtsMessages", "link" : "ackcord\/data\/package$$Permission$.html#SendTtsMessages:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "SendMessages", "tail" : ": Permission", "member" : "ackcord.data.Permission.SendMessages", "link" : "ackcord\/data\/package$$Permission$.html#SendMessages:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ViewChannel", "tail" : ": Permission", "member" : "ackcord.data.Permission.ViewChannel", "link" : "ackcord\/data\/package$$Permission$.html#ViewChannel:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ViewAuditLog", "tail" : ": Permission", "member" : "ackcord.data.Permission.ViewAuditLog", "link" : "ackcord\/data\/package$$Permission$.html#ViewAuditLog:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "AddReactions", "tail" : ": Permission", "member" : "ackcord.data.Permission.AddReactions", "link" : "ackcord\/data\/package$$Permission$.html#AddReactions:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageGuild", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageGuild", "link" : "ackcord\/data\/package$$Permission$.html#ManageGuild:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "ManageChannels", "tail" : ": Permission", "member" : "ackcord.data.Permission.ManageChannels", "link" : "ackcord\/data\/package$$Permission$.html#ManageChannels:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "Administrator", "tail" : ": Permission", "member" : "ackcord.data.Permission.Administrator", "link" : "ackcord\/data\/package$$Permission$.html#Administrator:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "BanMembers", "tail" : ": Permission", "member" : "ackcord.data.Permission.BanMembers", "link" : "ackcord\/data\/package$$Permission$.html#BanMembers:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "KickMembers", "tail" : ": Permission", "member" : "ackcord.data.Permission.KickMembers", "link" : "ackcord\/data\/package$$Permission$.html#KickMembers:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "CreateInstantInvite", "tail" : ": Permission", "member" : "ackcord.data.Permission.CreateInstantInvite", "link" : "ackcord\/data\/package$$Permission$.html#CreateInstantInvite:ackcord.data.Permission.Permission", "kind" : "val"}, {"label" : "fromBigInt", "tail" : "(bigInt: BigInt): Permission", "member" : "ackcord.data.Permission.fromBigInt", "link" : "ackcord\/data\/package$$Permission$.html#fromBigInt(bigInt:BigInt):ackcord.data.Permission.Permission", "kind" : "def"}, {"label" : "apply", "tail" : "(permissions: Permission*): Permission", "member" : "ackcord.data.Permission.apply", "link" : "ackcord\/data\/package$$Permission$.html#apply(permissions:ackcord.data.Permission.Permission*):ackcord.data.Permission.Permission", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$Permission$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$Permission$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$Permission$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$Permission$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$Permission$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$Permission$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$Permission$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$Permission$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$Permission$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$Permission$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$Permission$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$Permission$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$Permission$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$Permission$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$Permission$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$Permission$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$Permission$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$Permission$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$Permission$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.data.Permission.Permission", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.data.PermissionOverwrite", "shortDescription" : "Represents a permission overwrite in a channel for a user or a guild.", "members_case class" : [{"label" : "role", "tail" : "(guild: Guild): Option[Role]", "member" : "ackcord.data.PermissionOverwrite.role", "link" : "ackcord\/data\/PermissionOverwrite.html#role(guild:ackcord.data.Guild):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "member", "tail" : "(guild: Guild): Option[GuildMember]", "member" : "ackcord.data.PermissionOverwrite.member", "link" : "ackcord\/data\/PermissionOverwrite.html#member(guild:ackcord.data.Guild):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "user", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.PermissionOverwrite.user", "link" : "ackcord\/data\/PermissionOverwrite.html#user(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"member" : "ackcord.data.PermissionOverwrite#<init>", "error" : "unsupported entity"}, {"label" : "deny", "tail" : ": Permission", "member" : "ackcord.data.PermissionOverwrite.deny", "link" : "ackcord\/data\/PermissionOverwrite.html#deny:ackcord.data.Permission", "kind" : "val"}, {"label" : "allow", "tail" : ": Permission", "member" : "ackcord.data.PermissionOverwrite.allow", "link" : "ackcord\/data\/PermissionOverwrite.html#allow:ackcord.data.Permission", "kind" : "val"}, {"label" : "type", "tail" : ": PermissionOverwriteType", "member" : "ackcord.data.PermissionOverwrite.type", "link" : "ackcord\/data\/PermissionOverwrite.html#type:ackcord.data.PermissionOverwriteType", "kind" : "val"}, {"label" : "id", "tail" : ": UserOrRoleId", "member" : "ackcord.data.PermissionOverwrite.id", "link" : "ackcord\/data\/PermissionOverwrite.html#id:ackcord.data.UserOrRoleId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PermissionOverwrite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PermissionOverwrite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PermissionOverwrite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PermissionOverwrite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PermissionOverwrite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PermissionOverwrite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PermissionOverwrite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PermissionOverwrite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwrite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwrite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwrite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PermissionOverwrite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PermissionOverwrite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PermissionOverwrite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PermissionOverwrite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PermissionOverwrite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PermissionOverwrite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PermissionOverwrite.html", "kind" : "case class"}, {"name" : "ackcord.data.PermissionOverwriteType", "shortDescription" : "Permission overwrites can apply to both users and role.", "object" : "ackcord\/data\/PermissionOverwriteType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.PermissionOverwriteType.value", "link" : "ackcord\/data\/PermissionOverwriteType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PermissionOverwriteType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PermissionOverwriteType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PermissionOverwriteType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PermissionOverwriteType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PermissionOverwriteType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PermissionOverwriteType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PermissionOverwriteType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PermissionOverwriteType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PermissionOverwriteType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PermissionOverwriteType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PermissionOverwriteType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PermissionOverwriteType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PermissionOverwriteType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PermissionOverwriteType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PermissionOverwriteType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PermissionOverwriteType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): PermissionOverwriteType", "member" : "ackcord.data.PermissionOverwriteType.createUnknown", "link" : "ackcord\/data\/PermissionOverwriteType$.html#createUnknown(value:Int):ackcord.data.PermissionOverwriteType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.PermissionOverwriteType.Unknown", "link" : "ackcord\/data\/PermissionOverwriteType$.html#UnknownextendsPermissionOverwriteTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "Member", "tail" : "", "member" : "ackcord.data.PermissionOverwriteType.Member", "link" : "ackcord\/data\/PermissionOverwriteType$.html#Member", "kind" : "case object"}, {"label" : "Role", "tail" : "", "member" : "ackcord.data.PermissionOverwriteType.Role", "link" : "ackcord\/data\/PermissionOverwriteType$.html#Role", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[PermissionOverwriteType]", "member" : "ackcord.data.PermissionOverwriteType.values", "link" : "ackcord\/data\/PermissionOverwriteType$.html#values:IndexedSeq[ackcord.data.PermissionOverwriteType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[PermissionOverwriteType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/PermissionOverwriteType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[PermissionOverwriteType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/PermissionOverwriteType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], PermissionOverwriteType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/PermissionOverwriteType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[PermissionOverwriteType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/PermissionOverwriteType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): PermissionOverwriteType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/PermissionOverwriteType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, PermissionOverwriteType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/PermissionOverwriteType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PermissionOverwriteType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PermissionOverwriteType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PermissionOverwriteType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PermissionOverwriteType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PermissionOverwriteType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PermissionOverwriteType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PermissionOverwriteType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PermissionOverwriteType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PermissionOverwriteType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PermissionOverwriteType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PermissionOverwriteType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PermissionOverwriteType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PermissionOverwriteType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PermissionOverwriteType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PermissionOverwriteType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PermissionOverwriteType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PermissionOverwriteType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/PermissionOverwriteType.html", "kind" : "class"}, {"name" : "ackcord.data.PermissionSyntax", "shortDescription" : "", "members_class" : [{"label" : "isNone", "tail" : "(): Boolean", "member" : "ackcord.data.PermissionSyntax.isNone", "link" : "ackcord\/data\/package$$PermissionSyntax.html#isNone:Boolean", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(other: Permission): Boolean", "member" : "ackcord.data.PermissionSyntax.hasPermissions", "link" : "ackcord\/data\/package$$PermissionSyntax.html#hasPermissions(other:ackcord.data.package.Permission):Boolean", "kind" : "def"}, {"label" : "togglePermissions", "tail" : "(other: Permission): Permission", "member" : "ackcord.data.PermissionSyntax.togglePermissions", "link" : "ackcord\/data\/package$$PermissionSyntax.html#togglePermissions(other:ackcord.data.package.Permission):ackcord.data.package.Permission", "kind" : "def"}, {"label" : "--", "tail" : "(other: Permission): Permission", "member" : "ackcord.data.PermissionSyntax.--", "link" : "ackcord\/data\/package$$PermissionSyntax.html#--(other:ackcord.data.package.Permission):ackcord.data.package.Permission", "kind" : "def"}, {"label" : "removePermissions", "tail" : "(other: Permission): Permission", "member" : "ackcord.data.PermissionSyntax.removePermissions", "link" : "ackcord\/data\/package$$PermissionSyntax.html#removePermissions(other:ackcord.data.package.Permission):ackcord.data.package.Permission", "kind" : "def"}, {"label" : "++", "tail" : "(other: Permission): Permission", "member" : "ackcord.data.PermissionSyntax.++", "link" : "ackcord\/data\/package$$PermissionSyntax.html#++(other:ackcord.data.package.Permission):ackcord.data.package.Permission", "kind" : "def"}, {"label" : "addPermissions", "tail" : "(other: Permission): Permission", "member" : "ackcord.data.PermissionSyntax.addPermissions", "link" : "ackcord\/data\/package$$PermissionSyntax.html#addPermissions(other:ackcord.data.package.Permission):ackcord.data.package.Permission", "kind" : "def"}, {"label" : "toBigInt", "tail" : "(): BigInt", "member" : "ackcord.data.PermissionSyntax.toBigInt", "link" : "ackcord\/data\/package$$PermissionSyntax.html#toBigInt:BigInt", "kind" : "def"}, {"member" : "ackcord.data.PermissionSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$PermissionSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$PermissionSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$PermissionSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$PermissionSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$PermissionSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$PermissionSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$PermissionSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$PermissionSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.PremiumTier", "shortDescription" : "", "object" : "ackcord\/data\/PremiumTier$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.PremiumTier.value", "link" : "ackcord\/data\/PremiumTier.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PremiumTier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PremiumTier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PremiumTier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PremiumTier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PremiumTier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PremiumTier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PremiumTier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PremiumTier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PremiumTier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PremiumTier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PremiumTier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PremiumTier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PremiumTier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PremiumTier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PremiumTier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PremiumTier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): PremiumTier", "member" : "ackcord.data.PremiumTier.createUnknown", "link" : "ackcord\/data\/PremiumTier$.html#createUnknown(value:Int):ackcord.data.PremiumTier", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.PremiumTier.Unknown", "link" : "ackcord\/data\/PremiumTier$.html#UnknownextendsPremiumTierwithProductwithSerializable", "kind" : "case class"}, {"label" : "Tier3", "tail" : "", "member" : "ackcord.data.PremiumTier.Tier3", "link" : "ackcord\/data\/PremiumTier$.html#Tier3", "kind" : "case object"}, {"label" : "Tier2", "tail" : "", "member" : "ackcord.data.PremiumTier.Tier2", "link" : "ackcord\/data\/PremiumTier$.html#Tier2", "kind" : "case object"}, {"label" : "Tier1", "tail" : "", "member" : "ackcord.data.PremiumTier.Tier1", "link" : "ackcord\/data\/PremiumTier$.html#Tier1", "kind" : "case object"}, {"label" : "None", "tail" : "", "member" : "ackcord.data.PremiumTier.None", "link" : "ackcord\/data\/PremiumTier$.html#None", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[PremiumTier]", "member" : "ackcord.data.PremiumTier.values", "link" : "ackcord\/data\/PremiumTier$.html#values:IndexedSeq[ackcord.data.PremiumTier]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[PremiumTier]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/PremiumTier$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[PremiumTier]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/PremiumTier$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], PremiumTier]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/PremiumTier$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[PremiumTier]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/PremiumTier$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): PremiumTier", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/PremiumTier$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, PremiumTier]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/PremiumTier$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PremiumTier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PremiumTier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PremiumTier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PremiumTier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PremiumTier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PremiumTier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PremiumTier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumTier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PremiumTier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PremiumTier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PremiumTier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PremiumTier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PremiumTier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PremiumTier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PremiumTier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PremiumTier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PremiumTier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/PremiumTier.html", "kind" : "class"}, {"name" : "ackcord.data.PremiumType", "shortDescription" : "", "object" : "ackcord\/data\/PremiumType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.PremiumType.value", "link" : "ackcord\/data\/PremiumType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PremiumType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PremiumType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PremiumType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PremiumType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PremiumType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PremiumType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PremiumType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PremiumType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PremiumType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PremiumType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PremiumType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PremiumType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PremiumType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PremiumType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PremiumType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PremiumType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): PremiumType", "member" : "ackcord.data.PremiumType.createUnknown", "link" : "ackcord\/data\/PremiumType$.html#createUnknown(value:Int):ackcord.data.PremiumType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.PremiumType.Unknown", "link" : "ackcord\/data\/PremiumType$.html#UnknownextendsPremiumTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "Nitro", "tail" : "", "member" : "ackcord.data.PremiumType.Nitro", "link" : "ackcord\/data\/PremiumType$.html#Nitro", "kind" : "case object"}, {"label" : "NitroClassic", "tail" : "", "member" : "ackcord.data.PremiumType.NitroClassic", "link" : "ackcord\/data\/PremiumType$.html#NitroClassic", "kind" : "case object"}, {"label" : "None", "tail" : "", "member" : "ackcord.data.PremiumType.None", "link" : "ackcord\/data\/PremiumType$.html#None", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[PremiumType]", "member" : "ackcord.data.PremiumType.values", "link" : "ackcord\/data\/PremiumType$.html#values:IndexedSeq[ackcord.data.PremiumType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[PremiumType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/PremiumType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[PremiumType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/PremiumType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], PremiumType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/PremiumType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[PremiumType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/PremiumType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): PremiumType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/PremiumType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, PremiumType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/PremiumType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PremiumType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PremiumType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PremiumType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PremiumType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PremiumType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PremiumType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PremiumType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PremiumType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PremiumType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PremiumType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PremiumType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PremiumType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PremiumType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PremiumType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PremiumType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PremiumType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PremiumType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/PremiumType.html", "kind" : "class"}, {"name" : "ackcord.data.Presence", "shortDescription" : "The presence for a user", "members_case class" : [{"member" : "ackcord.data.Presence#<init>", "error" : "unsupported entity"}, {"label" : "clientStatus", "tail" : ": ClientStatus", "member" : "ackcord.data.Presence.clientStatus", "link" : "ackcord\/data\/Presence.html#clientStatus:ackcord.data.ClientStatus", "kind" : "val"}, {"label" : "activities", "tail" : ": Seq[Activity]", "member" : "ackcord.data.Presence.activities", "link" : "ackcord\/data\/Presence.html#activities:Seq[ackcord.data.Activity]", "kind" : "val"}, {"label" : "status", "tail" : ": PresenceStatus", "member" : "ackcord.data.Presence.status", "link" : "ackcord\/data\/Presence.html#status:ackcord.data.PresenceStatus", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.Presence.userId", "link" : "ackcord\/data\/Presence.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Presence.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/Presence.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Presence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Presence.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Presence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Presence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Presence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Presence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Presence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Presence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Presence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Presence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Presence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Presence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Presence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Presence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Presence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Presence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Presence.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceCompeting", "shortDescription" : "The presence of someone competing in something", "members_case class" : [{"member" : "ackcord.data.PresenceCompeting#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.PresenceCompeting.assets", "link" : "ackcord\/data\/PresenceCompeting.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceCompeting.details", "link" : "ackcord\/data\/PresenceCompeting.html#details:Option[String]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceCompeting.timestamps", "link" : "ackcord\/data\/PresenceCompeting.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceCompeting.createdAt", "link" : "ackcord\/data\/PresenceCompeting.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceCompeting.name", "link" : "ackcord\/data\/PresenceCompeting.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceCompeting.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceCompeting.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceCompeting.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceCompeting.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceCompeting.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceCompeting.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceCompeting.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceCompeting.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCompeting.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCompeting.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCompeting.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceCompeting.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceCompeting.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceCompeting.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceCompeting.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceCompeting.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceCompeting.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceCompeting.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceCustom", "shortDescription" : "", "members_case class" : [{"label" : "assets", "tail" : "(): Option[ActivityAsset]", "member" : "ackcord.data.PresenceCustom.assets", "link" : "ackcord\/data\/PresenceCustom.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "def"}, {"label" : "details", "tail" : "(): Option[String]", "member" : "ackcord.data.PresenceCustom.details", "link" : "ackcord\/data\/PresenceCustom.html#details:Option[String]", "kind" : "def"}, {"label" : "timestamps", "tail" : "(): Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceCustom.timestamps", "link" : "ackcord\/data\/PresenceCustom.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "def"}, {"member" : "ackcord.data.PresenceCustom#<init>", "error" : "unsupported entity"}, {"label" : "emoji", "tail" : ": Option[ActivityEmoji]", "member" : "ackcord.data.PresenceCustom.emoji", "link" : "ackcord\/data\/PresenceCustom.html#emoji:Option[ackcord.data.ActivityEmoji]", "kind" : "val"}, {"label" : "state", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceCustom.state", "link" : "ackcord\/data\/PresenceCustom.html#state:Option[String]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceCustom.createdAt", "link" : "ackcord\/data\/PresenceCustom.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceCustom.name", "link" : "ackcord\/data\/PresenceCustom.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceCustom.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceCustom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceCustom.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceCustom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceCustom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceCustom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceCustom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceCustom.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCustom.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCustom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceCustom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceCustom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceCustom.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceCustom.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceCustom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceCustom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceCustom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceCustom.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceGame", "shortDescription" : "The presence of someone playing a game", "members_case class" : [{"member" : "ackcord.data.PresenceGame#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.PresenceGame.assets", "link" : "ackcord\/data\/PresenceGame.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "party", "tail" : ": Option[ActivityParty]", "member" : "ackcord.data.PresenceGame.party", "link" : "ackcord\/data\/PresenceGame.html#party:Option[ackcord.data.ActivityParty]", "kind" : "val"}, {"label" : "state", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceGame.state", "link" : "ackcord\/data\/PresenceGame.html#state:Option[String]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceGame.details", "link" : "ackcord\/data\/PresenceGame.html#details:Option[String]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.PresenceGame.applicationId", "link" : "ackcord\/data\/PresenceGame.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceGame.timestamps", "link" : "ackcord\/data\/PresenceGame.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceGame.createdAt", "link" : "ackcord\/data\/PresenceGame.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceGame.name", "link" : "ackcord\/data\/PresenceGame.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceGame.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceGame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceGame.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceGame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceGame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceGame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceGame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceGame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceGame.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceGame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceGame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceGame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceGame.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceGame.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceGame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceGame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceGame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceGame.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceListening", "shortDescription" : "The presence of someone listening to music", "members_case class" : [{"member" : "ackcord.data.PresenceListening#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.PresenceListening.assets", "link" : "ackcord\/data\/PresenceListening.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceListening.details", "link" : "ackcord\/data\/PresenceListening.html#details:Option[String]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceListening.timestamps", "link" : "ackcord\/data\/PresenceListening.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceListening.createdAt", "link" : "ackcord\/data\/PresenceListening.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceListening.name", "link" : "ackcord\/data\/PresenceListening.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceListening.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceListening.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceListening.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceListening.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceListening.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceListening.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceListening.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceListening.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceListening.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceListening.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceListening.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceListening.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceListening.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceListening.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceListening.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceListening.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceListening.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceListening.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceStatus", "shortDescription" : "The different statuses a user can have", "object" : "ackcord\/data\/PresenceStatus$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.data.PresenceStatus.value", "link" : "ackcord\/data\/PresenceStatus.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceStatus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PresenceStatus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceStatus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PresenceStatus.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PresenceStatus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: String): PresenceStatus", "member" : "ackcord.data.PresenceStatus.createUnknown", "link" : "ackcord\/data\/PresenceStatus$.html#createUnknown(value:String):ackcord.data.PresenceStatus", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.PresenceStatus.Unknown", "link" : "ackcord\/data\/PresenceStatus$.html#UnknownextendsPresenceStatuswithProductwithSerializable", "kind" : "case class"}, {"label" : "Offline", "tail" : "", "member" : "ackcord.data.PresenceStatus.Offline", "link" : "ackcord\/data\/PresenceStatus$.html#Offline", "kind" : "case object"}, {"label" : "Invisible", "tail" : "", "member" : "ackcord.data.PresenceStatus.Invisible", "link" : "ackcord\/data\/PresenceStatus$.html#Invisible", "kind" : "case object"}, {"label" : "Idle", "tail" : "", "member" : "ackcord.data.PresenceStatus.Idle", "link" : "ackcord\/data\/PresenceStatus$.html#Idle", "kind" : "case object"}, {"label" : "DoNotDisturb", "tail" : "", "member" : "ackcord.data.PresenceStatus.DoNotDisturb", "link" : "ackcord\/data\/PresenceStatus$.html#DoNotDisturb", "kind" : "case object"}, {"label" : "Online", "tail" : "", "member" : "ackcord.data.PresenceStatus.Online", "link" : "ackcord\/data\/PresenceStatus$.html#Online", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[PresenceStatus]", "member" : "ackcord.data.PresenceStatus.values", "link" : "ackcord\/data\/PresenceStatus$.html#values:IndexedSeq[ackcord.data.PresenceStatus]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[PresenceStatus]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/PresenceStatus$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[PresenceStatus]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/data\/PresenceStatus$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], PresenceStatus]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/PresenceStatus$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[PresenceStatus]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/PresenceStatus$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): PresenceStatus", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/PresenceStatus$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, PresenceStatus]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/PresenceStatus$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceStatus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceStatus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceStatus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceStatus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceStatus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceStatus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceStatus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStatus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceStatus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceStatus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/PresenceStatus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceStatus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/PresenceStatus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/PresenceStatus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceStatus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceStatus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceStatus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/PresenceStatus.html", "kind" : "class"}, {"name" : "ackcord.data.PresenceStreaming", "shortDescription" : "The presence of someone streaming", "members_case class" : [{"member" : "ackcord.data.PresenceStreaming#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.PresenceStreaming.assets", "link" : "ackcord\/data\/PresenceStreaming.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "party", "tail" : ": Option[ActivityParty]", "member" : "ackcord.data.PresenceStreaming.party", "link" : "ackcord\/data\/PresenceStreaming.html#party:Option[ackcord.data.ActivityParty]", "kind" : "val"}, {"label" : "state", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceStreaming.state", "link" : "ackcord\/data\/PresenceStreaming.html#state:Option[String]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceStreaming.details", "link" : "ackcord\/data\/PresenceStreaming.html#details:Option[String]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.PresenceStreaming.applicationId", "link" : "ackcord\/data\/PresenceStreaming.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceStreaming.timestamps", "link" : "ackcord\/data\/PresenceStreaming.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceStreaming.createdAt", "link" : "ackcord\/data\/PresenceStreaming.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "uri", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceStreaming.uri", "link" : "ackcord\/data\/PresenceStreaming.html#uri:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceStreaming.name", "link" : "ackcord\/data\/PresenceStreaming.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceStreaming.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceStreaming.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceStreaming.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceStreaming.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceStreaming.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceStreaming.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceStreaming.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceStreaming.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStreaming.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStreaming.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceStreaming.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceStreaming.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceStreaming.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceStreaming.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceStreaming.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceStreaming.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceStreaming.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceStreaming.html", "kind" : "case class"}, {"name" : "ackcord.data.PresenceWatching", "shortDescription" : "The presence of someone watching something", "members_case class" : [{"member" : "ackcord.data.PresenceWatching#<init>", "error" : "unsupported entity"}, {"label" : "assets", "tail" : ": Option[ActivityAsset]", "member" : "ackcord.data.PresenceWatching.assets", "link" : "ackcord\/data\/PresenceWatching.html#assets:Option[ackcord.data.ActivityAsset]", "kind" : "val"}, {"label" : "details", "tail" : ": Option[String]", "member" : "ackcord.data.PresenceWatching.details", "link" : "ackcord\/data\/PresenceWatching.html#details:Option[String]", "kind" : "val"}, {"label" : "timestamps", "tail" : ": Option[ActivityTimestamps]", "member" : "ackcord.data.PresenceWatching.timestamps", "link" : "ackcord\/data\/PresenceWatching.html#timestamps:Option[ackcord.data.ActivityTimestamps]", "kind" : "val"}, {"label" : "createdAt", "tail" : ": Instant", "member" : "ackcord.data.PresenceWatching.createdAt", "link" : "ackcord\/data\/PresenceWatching.html#createdAt:java.time.Instant", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.PresenceWatching.name", "link" : "ackcord\/data\/PresenceWatching.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/PresenceWatching.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/PresenceWatching.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/PresenceWatching.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/PresenceWatching.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/PresenceWatching.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/PresenceWatching.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/PresenceWatching.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/PresenceWatching.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceWatching.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceWatching.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/PresenceWatching.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/PresenceWatching.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/PresenceWatching.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/PresenceWatching.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/PresenceWatching.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/PresenceWatching.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/PresenceWatching.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/PresenceWatching.html", "kind" : "case class"}, {"name" : "ackcord.data.RawSnowflake", "shortDescription" : "", "object" : "ackcord\/data\/package$$RawSnowflake$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Any]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RawSnowflake$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Any]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RawSnowflake$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Any]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RawSnowflake$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$RawSnowflake$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$RawSnowflake$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$RawSnowflake$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$RawSnowflake$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$RawSnowflake$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$RawSnowflake$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$RawSnowflake$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RawSnowflake$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RawSnowflake$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RawSnowflake$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$RawSnowflake$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$RawSnowflake$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$RawSnowflake$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$RawSnowflake$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$RawSnowflake$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$RawSnowflake$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$RawSnowflake$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$RawSnowflake$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$RawSnowflake$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.Reaction", "shortDescription" : "A reaction to a message", "members_case class" : [{"member" : "ackcord.data.Reaction#<init>", "error" : "unsupported entity"}, {"label" : "emoji", "tail" : ": PartialEmoji", "member" : "ackcord.data.Reaction.emoji", "link" : "ackcord\/data\/Reaction.html#emoji:ackcord.data.PartialEmoji", "kind" : "val"}, {"label" : "me", "tail" : ": Boolean", "member" : "ackcord.data.Reaction.me", "link" : "ackcord\/data\/Reaction.html#me:Boolean", "kind" : "val"}, {"label" : "count", "tail" : ": Int", "member" : "ackcord.data.Reaction.count", "link" : "ackcord\/data\/Reaction.html#count:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Reaction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Reaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Reaction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Reaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Reaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Reaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Reaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Reaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Reaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Reaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Reaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Reaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Reaction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Reaction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Reaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Reaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Reaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Reaction.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbed", "shortDescription" : "A received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): OutgoingEmbed", "member" : "ackcord.data.ReceivedEmbed.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbed.html#toOutgoing:ackcord.data.OutgoingEmbed", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbed#<init>", "error" : "unsupported entity"}, {"label" : "fields", "tail" : ": Option[Seq[EmbedField]]", "member" : "ackcord.data.ReceivedEmbed.fields", "link" : "ackcord\/data\/ReceivedEmbed.html#fields:Option[Seq[ackcord.data.EmbedField]]", "kind" : "val"}, {"label" : "author", "tail" : ": Option[ReceivedEmbedAuthor]", "member" : "ackcord.data.ReceivedEmbed.author", "link" : "ackcord\/data\/ReceivedEmbed.html#author:Option[ackcord.data.ReceivedEmbedAuthor]", "kind" : "val"}, {"label" : "provider", "tail" : ": Option[ReceivedEmbedProvider]", "member" : "ackcord.data.ReceivedEmbed.provider", "link" : "ackcord\/data\/ReceivedEmbed.html#provider:Option[ackcord.data.ReceivedEmbedProvider]", "kind" : "val"}, {"label" : "video", "tail" : ": Option[ReceivedEmbedVideo]", "member" : "ackcord.data.ReceivedEmbed.video", "link" : "ackcord\/data\/ReceivedEmbed.html#video:Option[ackcord.data.ReceivedEmbedVideo]", "kind" : "val"}, {"label" : "thumbnail", "tail" : ": Option[ReceivedEmbedThumbnail]", "member" : "ackcord.data.ReceivedEmbed.thumbnail", "link" : "ackcord\/data\/ReceivedEmbed.html#thumbnail:Option[ackcord.data.ReceivedEmbedThumbnail]", "kind" : "val"}, {"label" : "image", "tail" : ": Option[ReceivedEmbedImage]", "member" : "ackcord.data.ReceivedEmbed.image", "link" : "ackcord\/data\/ReceivedEmbed.html#image:Option[ackcord.data.ReceivedEmbedImage]", "kind" : "val"}, {"label" : "footer", "tail" : ": Option[ReceivedEmbedFooter]", "member" : "ackcord.data.ReceivedEmbed.footer", "link" : "ackcord\/data\/ReceivedEmbed.html#footer:Option[ackcord.data.ReceivedEmbedFooter]", "kind" : "val"}, {"label" : "color", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbed.color", "link" : "ackcord\/data\/ReceivedEmbed.html#color:Option[Int]", "kind" : "val"}, {"label" : "timestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.ReceivedEmbed.timestamp", "link" : "ackcord\/data\/ReceivedEmbed.html#timestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbed.url", "link" : "ackcord\/data\/ReceivedEmbed.html#url:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbed.description", "link" : "ackcord\/data\/ReceivedEmbed.html#description:Option[String]", "kind" : "val"}, {"label" : "type", "tail" : ": Option[EmbedType]", "member" : "ackcord.data.ReceivedEmbed.type", "link" : "ackcord\/data\/ReceivedEmbed.html#type:Option[ackcord.data.EmbedType]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbed.title", "link" : "ackcord\/data\/ReceivedEmbed.html#title:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbed.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedAuthor", "shortDescription" : "The author part of a received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): Option[OutgoingEmbedAuthor]", "member" : "ackcord.data.ReceivedEmbedAuthor.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#toOutgoing:Option[ackcord.data.OutgoingEmbedAuthor]", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbedAuthor#<init>", "error" : "unsupported entity"}, {"label" : "proxyIconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedAuthor.proxyIconUrl", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#proxyIconUrl:Option[String]", "kind" : "val"}, {"label" : "iconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedAuthor.iconUrl", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#iconUrl:Option[String]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedAuthor.url", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#url:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedAuthor.name", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#name:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedAuthor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedAuthor.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedFooter", "shortDescription" : "The footer part of a received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): OutgoingEmbedFooter", "member" : "ackcord.data.ReceivedEmbedFooter.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#toOutgoing:ackcord.data.OutgoingEmbedFooter", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbedFooter#<init>", "error" : "unsupported entity"}, {"label" : "proxyIconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedFooter.proxyIconUrl", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#proxyIconUrl:Option[String]", "kind" : "val"}, {"label" : "iconUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedFooter.iconUrl", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#iconUrl:Option[String]", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "ackcord.data.ReceivedEmbedFooter.text", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#text:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedFooter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedFooter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedFooter.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedImage", "shortDescription" : "The image part of a received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): Option[OutgoingEmbedImage]", "member" : "ackcord.data.ReceivedEmbedImage.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbedImage.html#toOutgoing:Option[ackcord.data.OutgoingEmbedImage]", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbedImage#<init>", "error" : "unsupported entity"}, {"label" : "width", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedImage.width", "link" : "ackcord\/data\/ReceivedEmbedImage.html#width:Option[Int]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedImage.height", "link" : "ackcord\/data\/ReceivedEmbedImage.html#height:Option[Int]", "kind" : "val"}, {"label" : "proxyUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedImage.proxyUrl", "link" : "ackcord\/data\/ReceivedEmbedImage.html#proxyUrl:Option[String]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedImage.url", "link" : "ackcord\/data\/ReceivedEmbedImage.html#url:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedImage.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedProvider", "shortDescription" : "The provider part of a received embed.", "members_case class" : [{"member" : "ackcord.data.ReceivedEmbedProvider#<init>", "error" : "unsupported entity"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedProvider.url", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#url:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedProvider.name", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#name:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedProvider.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedThumbnail", "shortDescription" : "The thumbnail part of a received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): Option[OutgoingEmbedThumbnail]", "member" : "ackcord.data.ReceivedEmbedThumbnail.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#toOutgoing:Option[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbedThumbnail#<init>", "error" : "unsupported entity"}, {"label" : "width", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedThumbnail.width", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#width:Option[Int]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedThumbnail.height", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#height:Option[Int]", "kind" : "val"}, {"label" : "proxyUrl", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedThumbnail.proxyUrl", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#proxyUrl:Option[String]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedThumbnail.url", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#url:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedThumbnail.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedThumbnail.html", "kind" : "case class"}, {"name" : "ackcord.data.ReceivedEmbedVideo", "shortDescription" : "The video part of a received embed.", "members_case class" : [{"label" : "toOutgoing", "tail" : "(): Option[OutgoingEmbedVideo]", "member" : "ackcord.data.ReceivedEmbedVideo.toOutgoing", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#toOutgoing:Option[ackcord.data.OutgoingEmbedVideo]", "kind" : "def"}, {"member" : "ackcord.data.ReceivedEmbedVideo#<init>", "error" : "unsupported entity"}, {"label" : "width", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedVideo.width", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#width:Option[Int]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Int]", "member" : "ackcord.data.ReceivedEmbedVideo.height", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#height:Option[Int]", "kind" : "val"}, {"label" : "url", "tail" : ": Option[String]", "member" : "ackcord.data.ReceivedEmbedVideo.url", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#url:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/ReceivedEmbedVideo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/ReceivedEmbedVideo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/ReceivedEmbedVideo.html", "kind" : "case class"}, {"name" : "ackcord.data.Role", "shortDescription" : "A role in a guild.", "members_case class" : [{"label" : "isBelow", "tail" : "(other: Role): Boolean", "member" : "ackcord.data.Role.isBelow", "link" : "ackcord\/data\/Role.html#isBelow(other:ackcord.data.Role):Boolean", "kind" : "def"}, {"label" : "isAbove", "tail" : "(other: Role): Boolean", "member" : "ackcord.data.Role.isAbove", "link" : "ackcord\/data\/Role.html#isAbove(other:ackcord.data.Role):Boolean", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Role.mention", "link" : "ackcord\/data\/Role.html#mention:String", "kind" : "def"}, {"member" : "ackcord.data.Role#<init>", "error" : "unsupported entity"}, {"label" : "mentionable", "tail" : ": Boolean", "member" : "ackcord.data.Role.mentionable", "link" : "ackcord\/data\/Role.html#mentionable:Boolean", "kind" : "val"}, {"label" : "managed", "tail" : ": Boolean", "member" : "ackcord.data.Role.managed", "link" : "ackcord\/data\/Role.html#managed:Boolean", "kind" : "val"}, {"label" : "permissions", "tail" : ": Permission", "member" : "ackcord.data.Role.permissions", "link" : "ackcord\/data\/Role.html#permissions:ackcord.data.Permission", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.Role.position", "link" : "ackcord\/data\/Role.html#position:Int", "kind" : "val"}, {"label" : "hoist", "tail" : ": Boolean", "member" : "ackcord.data.Role.hoist", "link" : "ackcord\/data\/Role.html#hoist:Boolean", "kind" : "val"}, {"label" : "color", "tail" : ": Int", "member" : "ackcord.data.Role.color", "link" : "ackcord\/data\/Role.html#color:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Role.name", "link" : "ackcord\/data\/Role.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.Role.guildId", "link" : "ackcord\/data\/Role.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": RoleId", "member" : "ackcord.data.Role.id", "link" : "ackcord\/data\/Role.html#id:ackcord.data.RoleId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Role.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/Role.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Role.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Role.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Role.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Role.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Role.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Role.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Role.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Role.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Role.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Role.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Role.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Role.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Role.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Role.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Role.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Role.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Role.html", "kind" : "case class"}, {"name" : "ackcord.data.RoleId", "shortDescription" : "", "object" : "ackcord\/data\/package$$RoleId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[Role]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RoleId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[Role]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RoleId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[Role]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$RoleId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$RoleId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$RoleId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$RoleId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$RoleId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$RoleId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$RoleId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$RoleId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RoleId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RoleId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$RoleId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$RoleId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$RoleId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$RoleId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$RoleId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$RoleId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$RoleId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$RoleId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$RoleId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$RoleId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.RoleIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[Role]", "member" : "ackcord.data.RoleIdSyntax.resolve", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#resolve(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[Role]", "member" : "ackcord.data.RoleIdSyntax.resolve", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Role]", "kind" : "def"}, {"member" : "ackcord.data.RoleIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$RoleIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$RoleIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$RoleIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.SnowflakeType", "shortDescription" : "", "object" : "ackcord\/data\/package$$SnowflakeType$.html", "members_object" : [{"label" : "fromInstant", "tail" : "(instant: Instant): SnowflakeType[A]", "member" : "ackcord.data.SnowflakeType.fromInstant", "link" : "ackcord\/data\/package$$SnowflakeType$.html#fromInstant[A](instant:java.time.Instant):ackcord.data.SnowflakeType.SnowflakeType[A]", "kind" : "def"}, {"label" : "epoch", "tail" : "(): SnowflakeType[A]", "member" : "ackcord.data.SnowflakeType.epoch", "link" : "ackcord\/data\/package$$SnowflakeType$.html#epoch[A]:ackcord.data.SnowflakeType.SnowflakeType[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[A]", "member" : "ackcord.data.SnowflakeType.apply", "link" : "ackcord\/data\/package$$SnowflakeType$.html#apply[A](other:ackcord.data.SnowflakeType.SnowflakeType[_]):ackcord.data.SnowflakeType.SnowflakeType[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[A]", "member" : "ackcord.data.SnowflakeType.apply", "link" : "ackcord\/data\/package$$SnowflakeType$.html#apply[A](content:String):ackcord.data.SnowflakeType.SnowflakeType[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[A]", "member" : "ackcord.data.SnowflakeType.apply", "link" : "ackcord\/data\/package$$SnowflakeType$.html#apply[A](long:Long):ackcord.data.SnowflakeType.SnowflakeType[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$SnowflakeType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$SnowflakeType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$SnowflakeType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$SnowflakeType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$SnowflakeType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$SnowflakeType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$SnowflakeType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SnowflakeType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SnowflakeType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SnowflakeType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$SnowflakeType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$SnowflakeType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$SnowflakeType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$SnowflakeType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$SnowflakeType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$SnowflakeType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$SnowflakeType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$SnowflakeType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$SnowflakeType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.data.SnowflakeType.SnowflakeType", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.data.SnowflakeTypeSyntax", "shortDescription" : "", "members_class" : [{"label" : "toUnsignedLong", "tail" : "(): Long", "member" : "ackcord.data.SnowflakeTypeSyntax.toUnsignedLong", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#toUnsignedLong:Long", "kind" : "def"}, {"label" : "asString", "tail" : "(): String", "member" : "ackcord.data.SnowflakeTypeSyntax.asString", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#asString:String", "kind" : "def"}, {"label" : "creationDate", "tail" : "(): Instant", "member" : "ackcord.data.SnowflakeTypeSyntax.creationDate", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#creationDate:java.time.Instant", "kind" : "def"}, {"member" : "ackcord.data.SnowflakeTypeSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$SnowflakeTypeSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.SparseMessage", "shortDescription" : "A message missing the guild info.", "members_case class" : [{"label" : "formatMentions", "tail" : "(c: CacheSnapshot): String", "member" : "ackcord.data.SparseMessage.formatMentions", "link" : "ackcord\/data\/SparseMessage.html#formatMentions(implicitc:ackcord.CacheSnapshot):String", "kind" : "def"}, {"label" : "guildMember", "tail" : "(c: CacheSnapshot): Option[GuildMember]", "member" : "ackcord.data.SparseMessage.guildMember", "link" : "ackcord\/data\/SparseMessage.html#guildMember(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "guild", "tail" : "(c: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.SparseMessage.guild", "link" : "ackcord\/data\/SparseMessage.html#guild(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"member" : "ackcord.data.SparseMessage#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Option[MessageFlags]", "member" : "ackcord.data.SparseMessage.flags", "link" : "ackcord\/data\/SparseMessage.html#flags:Option[ackcord.data.MessageFlags]", "kind" : "val"}, {"label" : "messageReference", "tail" : ": Option[MessageReference]", "member" : "ackcord.data.SparseMessage.messageReference", "link" : "ackcord\/data\/SparseMessage.html#messageReference:Option[ackcord.data.MessageReference]", "kind" : "val"}, {"label" : "application", "tail" : ": Option[MessageApplication]", "member" : "ackcord.data.SparseMessage.application", "link" : "ackcord\/data\/SparseMessage.html#application:Option[ackcord.data.MessageApplication]", "kind" : "val"}, {"label" : "activity", "tail" : ": Option[MessageActivity]", "member" : "ackcord.data.SparseMessage.activity", "link" : "ackcord\/data\/SparseMessage.html#activity:Option[ackcord.data.MessageActivity]", "kind" : "val"}, {"label" : "messageType", "tail" : ": MessageType", "member" : "ackcord.data.SparseMessage.messageType", "link" : "ackcord\/data\/SparseMessage.html#messageType:ackcord.data.MessageType", "kind" : "val"}, {"label" : "pinned", "tail" : ": Boolean", "member" : "ackcord.data.SparseMessage.pinned", "link" : "ackcord\/data\/SparseMessage.html#pinned:Boolean", "kind" : "val"}, {"label" : "nonce", "tail" : ": Option[String]", "member" : "ackcord.data.SparseMessage.nonce", "link" : "ackcord\/data\/SparseMessage.html#nonce:Option[String]", "kind" : "val"}, {"label" : "reactions", "tail" : ": Seq[Reaction]", "member" : "ackcord.data.SparseMessage.reactions", "link" : "ackcord\/data\/SparseMessage.html#reactions:Seq[ackcord.data.Reaction]", "kind" : "val"}, {"label" : "embeds", "tail" : ": Seq[ReceivedEmbed]", "member" : "ackcord.data.SparseMessage.embeds", "link" : "ackcord\/data\/SparseMessage.html#embeds:Seq[ackcord.data.ReceivedEmbed]", "kind" : "val"}, {"label" : "attachment", "tail" : ": Seq[Attachment]", "member" : "ackcord.data.SparseMessage.attachment", "link" : "ackcord\/data\/SparseMessage.html#attachment:Seq[ackcord.data.Attachment]", "kind" : "val"}, {"label" : "mentionChannels", "tail" : ": Seq[ChannelMention]", "member" : "ackcord.data.SparseMessage.mentionChannels", "link" : "ackcord\/data\/SparseMessage.html#mentionChannels:Seq[ackcord.data.ChannelMention]", "kind" : "val"}, {"label" : "mentions", "tail" : ": Seq[UserId]", "member" : "ackcord.data.SparseMessage.mentions", "link" : "ackcord\/data\/SparseMessage.html#mentions:Seq[ackcord.data.UserId]", "kind" : "val"}, {"label" : "mentionEveryone", "tail" : ": Boolean", "member" : "ackcord.data.SparseMessage.mentionEveryone", "link" : "ackcord\/data\/SparseMessage.html#mentionEveryone:Boolean", "kind" : "val"}, {"label" : "tts", "tail" : ": Boolean", "member" : "ackcord.data.SparseMessage.tts", "link" : "ackcord\/data\/SparseMessage.html#tts:Boolean", "kind" : "val"}, {"label" : "editedTimestamp", "tail" : ": Option[OffsetDateTime]", "member" : "ackcord.data.SparseMessage.editedTimestamp", "link" : "ackcord\/data\/SparseMessage.html#editedTimestamp:Option[java.time.OffsetDateTime]", "kind" : "val"}, {"label" : "timestamp", "tail" : ": OffsetDateTime", "member" : "ackcord.data.SparseMessage.timestamp", "link" : "ackcord\/data\/SparseMessage.html#timestamp:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "ackcord.data.SparseMessage.content", "link" : "ackcord\/data\/SparseMessage.html#content:String", "kind" : "val"}, {"label" : "authorUsername", "tail" : ": String", "member" : "ackcord.data.SparseMessage.authorUsername", "link" : "ackcord\/data\/SparseMessage.html#authorUsername:String", "kind" : "val"}, {"label" : "isAuthorUser", "tail" : ": Boolean", "member" : "ackcord.data.SparseMessage.isAuthorUser", "link" : "ackcord\/data\/SparseMessage.html#isAuthorUser:Boolean", "kind" : "val"}, {"label" : "authorId", "tail" : ": RawSnowflake", "member" : "ackcord.data.SparseMessage.authorId", "link" : "ackcord\/data\/SparseMessage.html#authorId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.data.SparseMessage.channelId", "link" : "ackcord\/data\/SparseMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "id", "tail" : ": MessageId", "member" : "ackcord.data.SparseMessage.id", "link" : "ackcord\/data\/SparseMessage.html#id:ackcord.data.MessageId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/SparseMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "authorUser", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.Message.authorUser", "link" : "ackcord\/data\/SparseMessage.html#authorUser(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "authorUserId", "tail" : "(): Option[UserId]", "member" : "ackcord.data.Message.authorUserId", "link" : "ackcord\/data\/SparseMessage.html#authorUserId:Option[ackcord.data.UserId]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/SparseMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/SparseMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/SparseMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/SparseMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/SparseMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/SparseMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/SparseMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/SparseMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/SparseMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/SparseMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/SparseMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/SparseMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/SparseMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/SparseMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/SparseMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/SparseMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/SparseMessage.html", "kind" : "case class"}, {"name" : "ackcord.data.SystemChannelFlags", "shortDescription" : "", "object" : "ackcord\/data\/package$$SystemChannelFlags$.html", "members_object" : [{"label" : "SupressPremiumSubscribtions", "tail" : ": SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlags.SupressPremiumSubscribtions", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#SupressPremiumSubscribtions:ackcord.data.SystemChannelFlags.SystemChannelFlags", "kind" : "val"}, {"label" : "SupressJoinNotifications", "tail" : ": SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlags.SupressJoinNotifications", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#SupressJoinNotifications:ackcord.data.SystemChannelFlags.SystemChannelFlags", "kind" : "val"}, {"label" : "None", "tail" : ": SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlags.None", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#None:ackcord.data.SystemChannelFlags.SystemChannelFlags", "kind" : "val"}, {"label" : "fromInt", "tail" : "(int: Int): SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlags.fromInt", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#fromInt(int:Int):ackcord.data.SystemChannelFlags.SystemChannelFlags", "kind" : "def"}, {"label" : "apply", "tail" : "(flags: SystemChannelFlags*): SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlags.apply", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#apply(flags:ackcord.data.SystemChannelFlags.SystemChannelFlags*):ackcord.data.SystemChannelFlags.SystemChannelFlags", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$SystemChannelFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.data.SystemChannelFlags.SystemChannelFlags", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.data.SystemChannelFlagsSyntax", "shortDescription" : "", "members_class" : [{"label" : "isNone", "tail" : "(): Boolean", "member" : "ackcord.data.SystemChannelFlagsSyntax.isNone", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#isNone:Boolean", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(other: SystemChannelFlags): Boolean", "member" : "ackcord.data.SystemChannelFlagsSyntax.hasFlag", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#hasFlag(other:ackcord.data.package.SystemChannelFlags):Boolean", "kind" : "def"}, {"label" : "--", "tail" : "(other: SystemChannelFlags): SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlagsSyntax.--", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#--(other:ackcord.data.package.SystemChannelFlags):ackcord.data.package.SystemChannelFlags", "kind" : "def"}, {"label" : "++", "tail" : "(other: SystemChannelFlags): SystemChannelFlags", "member" : "ackcord.data.SystemChannelFlagsSyntax.++", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#++(other:ackcord.data.package.SystemChannelFlags):ackcord.data.package.SystemChannelFlags", "kind" : "def"}, {"label" : "toInt", "tail" : "(): Int", "member" : "ackcord.data.SystemChannelFlagsSyntax.toInt", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#toInt:Int", "kind" : "def"}, {"member" : "ackcord.data.SystemChannelFlagsSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$SystemChannelFlagsSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.Team", "shortDescription" : "A discord team.", "members_case class" : [{"member" : "ackcord.data.Team#<init>", "error" : "unsupported entity"}, {"label" : "ownerUserId", "tail" : ": UserId", "member" : "ackcord.data.Team.ownerUserId", "link" : "ackcord\/data\/Team.html#ownerUserId:ackcord.data.UserId", "kind" : "val"}, {"label" : "members", "tail" : ": Seq[TeamMember]", "member" : "ackcord.data.Team.members", "link" : "ackcord\/data\/Team.html#members:Seq[ackcord.data.TeamMember]", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Team]", "member" : "ackcord.data.Team.id", "link" : "ackcord\/data\/Team.html#id:ackcord.data.SnowflakeType[ackcord.data.Team]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.data.Team.icon", "link" : "ackcord\/data\/Team.html#icon:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Team.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Team.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Team.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Team.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Team.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Team.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Team.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Team.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Team.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Team.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Team.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Team.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Team.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Team.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Team.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Team.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Team.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Team.html", "kind" : "case class"}, {"name" : "ackcord.data.TeamMember", "shortDescription" : "A member of a team.", "members_case class" : [{"member" : "ackcord.data.TeamMember#<init>", "error" : "unsupported entity"}, {"label" : "user", "tail" : ": PartialUser", "member" : "ackcord.data.TeamMember.user", "link" : "ackcord\/data\/TeamMember.html#user:ackcord.data.raw.PartialUser", "kind" : "val"}, {"label" : "teamId", "tail" : ": SnowflakeType[Team]", "member" : "ackcord.data.TeamMember.teamId", "link" : "ackcord\/data\/TeamMember.html#teamId:ackcord.data.SnowflakeType[ackcord.data.Team]", "kind" : "val"}, {"label" : "permissions", "tail" : ": Seq[String]", "member" : "ackcord.data.TeamMember.permissions", "link" : "ackcord\/data\/TeamMember.html#permissions:Seq[String]", "kind" : "val"}, {"label" : "membershipState", "tail" : ": TeamMembershipState", "member" : "ackcord.data.TeamMember.membershipState", "link" : "ackcord\/data\/TeamMember.html#membershipState:ackcord.data.TeamMembershipState", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/TeamMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/TeamMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/TeamMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/TeamMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/TeamMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/TeamMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/TeamMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/TeamMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/TeamMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/TeamMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/TeamMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/TeamMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/TeamMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/TeamMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/TeamMember.html", "kind" : "case class"}, {"name" : "ackcord.data.TeamMembershipState", "shortDescription" : "", "object" : "ackcord\/data\/TeamMembershipState$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.TeamMembershipState.value", "link" : "ackcord\/data\/TeamMembershipState.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/TeamMembershipState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/TeamMembershipState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/TeamMembershipState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/TeamMembershipState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/TeamMembershipState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/TeamMembershipState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/TeamMembershipState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/TeamMembershipState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/TeamMembershipState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/TeamMembershipState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/TeamMembershipState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/TeamMembershipState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/TeamMembershipState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/TeamMembershipState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/TeamMembershipState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/TeamMembershipState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): TeamMembershipState", "member" : "ackcord.data.TeamMembershipState.createUnknown", "link" : "ackcord\/data\/TeamMembershipState$.html#createUnknown(value:Int):ackcord.data.TeamMembershipState", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.TeamMembershipState.Unknown", "link" : "ackcord\/data\/TeamMembershipState$.html#UnknownextendsTeamMembershipStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Accepted", "tail" : "", "member" : "ackcord.data.TeamMembershipState.Accepted", "link" : "ackcord\/data\/TeamMembershipState$.html#Accepted", "kind" : "case object"}, {"label" : "Invited", "tail" : "", "member" : "ackcord.data.TeamMembershipState.Invited", "link" : "ackcord\/data\/TeamMembershipState$.html#Invited", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[TeamMembershipState]", "member" : "ackcord.data.TeamMembershipState.values", "link" : "ackcord\/data\/TeamMembershipState$.html#values:IndexedSeq[ackcord.data.TeamMembershipState]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[TeamMembershipState]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/TeamMembershipState$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[TeamMembershipState]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/TeamMembershipState$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], TeamMembershipState]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/TeamMembershipState$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[TeamMembershipState]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/TeamMembershipState$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): TeamMembershipState", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/TeamMembershipState$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, TeamMembershipState]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/TeamMembershipState$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/TeamMembershipState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/TeamMembershipState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/TeamMembershipState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/TeamMembershipState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/TeamMembershipState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/TeamMembershipState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/TeamMembershipState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TeamMembershipState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/TeamMembershipState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/TeamMembershipState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/TeamMembershipState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/TeamMembershipState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/TeamMembershipState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/TeamMembershipState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/TeamMembershipState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/TeamMembershipState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/TeamMembershipState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/TeamMembershipState.html", "kind" : "class"}, {"name" : "ackcord.data.Template", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.data.Template#<init>", "error" : "unsupported entity"}, {"label" : "isDirty", "tail" : ": Option[Boolean]", "member" : "ackcord.data.Template.isDirty", "link" : "ackcord\/data\/Template.html#isDirty:Option[Boolean]", "kind" : "val"}, {"label" : "serializedSourceGuild", "tail" : ": RawGuild", "member" : "ackcord.data.Template.serializedSourceGuild", "link" : "ackcord\/data\/Template.html#serializedSourceGuild:ackcord.data.raw.RawGuild", "kind" : "val"}, {"label" : "sourceGuildId", "tail" : ": GuildId", "member" : "ackcord.data.Template.sourceGuildId", "link" : "ackcord\/data\/Template.html#sourceGuildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "updatedAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.Template.updatedAt", "link" : "ackcord\/data\/Template.html#updatedAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "createdAt", "tail" : ": OffsetDateTime", "member" : "ackcord.data.Template.createdAt", "link" : "ackcord\/data\/Template.html#createdAt:java.time.OffsetDateTime", "kind" : "val"}, {"label" : "creator", "tail" : ": User", "member" : "ackcord.data.Template.creator", "link" : "ackcord\/data\/Template.html#creator:ackcord.data.User", "kind" : "val"}, {"label" : "creatorId", "tail" : ": UserId", "member" : "ackcord.data.Template.creatorId", "link" : "ackcord\/data\/Template.html#creatorId:ackcord.data.UserId", "kind" : "val"}, {"label" : "usageCount", "tail" : ": Int", "member" : "ackcord.data.Template.usageCount", "link" : "ackcord\/data\/Template.html#usageCount:Int", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "ackcord.data.Template.description", "link" : "ackcord\/data\/Template.html#description:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.Template.name", "link" : "ackcord\/data\/Template.html#name:String", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.data.Template.code", "link" : "ackcord\/data\/Template.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Template.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Template.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Template.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Template.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Template.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Template.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Template.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Template.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Template.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Template.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Template.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Template.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Template.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Template.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Template.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Template.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Template.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Template.html", "kind" : "case class"}, {"name" : "ackcord.data.TextChannel", "trait" : "ackcord\/data\/TextChannel.html", "kind" : "trait", "members_trait" : [{"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/TextChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/TextChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/TextChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/TextChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/TextChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/TextChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/TextChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/TextChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/TextChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/TextChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/TextChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/TextChannel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/TextChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/TextChannel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/TextChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/TextChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/TextChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/TextChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lastMessageId", "tail" : "(): Option[MessageId]", "member" : "ackcord.data.TextChannel.lastMessageId", "link" : "ackcord\/data\/TextChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): TextChannelId", "member" : "ackcord.data.TextChannel.id", "link" : "ackcord\/data\/TextChannel.html#id:ackcord.data.TextChannelId", "kind" : "abstract def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.Channel.channelType", "link" : "ackcord\/data\/TextChannel.html#channelType:ackcord.data.ChannelType", "kind" : "abstract def"}], "shortDescription" : "A text channel that has text messages"}, {"name" : "ackcord.data.TextChannelId", "shortDescription" : "", "object" : "ackcord\/data\/package$$TextChannelId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[TextChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextChannelId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[TextChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextChannelId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[TextChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextChannelId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$TextChannelId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$TextChannelId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$TextChannelId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$TextChannelId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$TextChannelId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$TextChannelId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$TextChannelId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextChannelId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextChannelId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextChannelId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$TextChannelId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$TextChannelId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$TextChannelId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$TextChannelId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$TextChannelId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$TextChannelId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$TextChannelId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$TextChannelId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$TextChannelId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.TextChannelIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[TextChannel]", "member" : "ackcord.data.TextChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.TextChannel]", "kind" : "def"}, {"member" : "ackcord.data.TextChannelIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$TextChannelIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$TextChannelIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.TextGuildChannel", "trait" : "ackcord\/data\/TextGuildChannel.html", "kind" : "trait", "members_trait" : [{"label" : "lastMessage", "tail" : "(c: CacheSnapshot): Option[Message]", "member" : "ackcord.data.TextChannel.lastMessage", "link" : "ackcord\/data\/TextGuildChannel.html#lastMessage(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.Message]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/TextGuildChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/TextGuildChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/TextGuildChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/TextGuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/TextGuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/TextGuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/TextGuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/TextGuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/TextGuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/TextGuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextGuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextGuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/TextGuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/TextGuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/TextGuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/TextGuildChannel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/TextGuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/TextGuildChannel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/TextGuildChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/TextGuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/TextGuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/TextGuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lastPinTimestamp", "tail" : "(): Option[OffsetDateTime]", "member" : "ackcord.data.TextGuildChannel.lastPinTimestamp", "link" : "ackcord\/data\/TextGuildChannel.html#lastPinTimestamp:Option[java.time.OffsetDateTime]", "kind" : "abstract def"}, {"label" : "rateLimitPerUser", "tail" : "(): Option[Int]", "member" : "ackcord.data.TextGuildChannel.rateLimitPerUser", "link" : "ackcord\/data\/TextGuildChannel.html#rateLimitPerUser:Option[Int]", "kind" : "abstract def"}, {"label" : "topic", "tail" : "(): Option[String]", "member" : "ackcord.data.TextGuildChannel.topic", "link" : "ackcord\/data\/TextGuildChannel.html#topic:Option[String]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): TextGuildChannelId", "member" : "ackcord.data.TextGuildChannel.id", "link" : "ackcord\/data\/TextGuildChannel.html#id:ackcord.data.TextGuildChannelId", "kind" : "abstract def"}, {"label" : "lastMessageId", "tail" : "(): Option[MessageId]", "member" : "ackcord.data.TextChannel.lastMessageId", "link" : "ackcord\/data\/TextGuildChannel.html#lastMessageId:Option[ackcord.data.MessageId]", "kind" : "abstract def"}, {"label" : "parentId", "tail" : "(): Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.GuildChannel.parentId", "link" : "ackcord\/data\/TextGuildChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "abstract def"}, {"label" : "nsfw", "tail" : "(): Boolean", "member" : "ackcord.data.GuildChannel.nsfw", "link" : "ackcord\/data\/TextGuildChannel.html#nsfw:Boolean", "kind" : "abstract def"}, {"label" : "permissionOverwrites", "tail" : "(): SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.GuildChannel.permissionOverwrites", "link" : "ackcord\/data\/TextGuildChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.data.GuildChannel.name", "link" : "ackcord\/data\/TextGuildChannel.html#name:String", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): Int", "member" : "ackcord.data.GuildChannel.position", "link" : "ackcord\/data\/TextGuildChannel.html#position:Int", "kind" : "abstract def"}, {"label" : "guildId", "tail" : "(): GuildId", "member" : "ackcord.data.GuildChannel.guildId", "link" : "ackcord\/data\/TextGuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "abstract def"}, {"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.Channel.channelType", "link" : "ackcord\/data\/TextGuildChannel.html#channelType:ackcord.data.ChannelType", "kind" : "abstract def"}], "shortDescription" : "A texual channel in a guild"}, {"name" : "ackcord.data.TextGuildChannelId", "shortDescription" : "", "object" : "ackcord\/data\/package$$TextGuildChannelId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[TextGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[TextGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[TextGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$TextGuildChannelId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.TextGuildChannelIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[TextGuildChannel]", "member" : "ackcord.data.TextGuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#resolve(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[TextGuildChannel]", "member" : "ackcord.data.TextGuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"member" : "ackcord.data.TextGuildChannelIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$TextGuildChannelIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.UnavailableGuild", "shortDescription" : "A guild which is not available.", "members_case class" : [{"member" : "ackcord.data.UnavailableGuild#<init>", "error" : "unsupported entity"}, {"label" : "unavailable", "tail" : ": Option[Boolean]", "member" : "ackcord.data.UnavailableGuild.unavailable", "link" : "ackcord\/data\/UnavailableGuild.html#unavailable:Option[Boolean]", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.data.UnavailableGuild.id", "link" : "ackcord\/data\/UnavailableGuild.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/UnavailableGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/UnavailableGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/UnavailableGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/UnavailableGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/UnavailableGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/UnavailableGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/UnavailableGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/UnavailableGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnavailableGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnavailableGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnavailableGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/UnavailableGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/UnavailableGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/UnavailableGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/UnavailableGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/UnavailableGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/UnavailableGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/UnavailableGuild.html", "kind" : "case class"}, {"name" : "ackcord.data.UnknownStatusGuild", "trait" : "ackcord\/data\/UnknownStatusGuild.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/UnknownStatusGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/UnknownStatusGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/UnknownStatusGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/UnknownStatusGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/UnknownStatusGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/UnknownStatusGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/UnknownStatusGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnknownStatusGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnknownStatusGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnknownStatusGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/UnknownStatusGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/UnknownStatusGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/UnknownStatusGuild.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/UnknownStatusGuild.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/UnknownStatusGuild.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/UnknownStatusGuild.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/UnknownStatusGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/UnknownStatusGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/UnknownStatusGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unavailable", "tail" : "(): Option[Boolean]", "member" : "ackcord.data.UnknownStatusGuild.unavailable", "link" : "ackcord\/data\/UnknownStatusGuild.html#unavailable:Option[Boolean]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): GuildId", "member" : "ackcord.data.UnknownStatusGuild.id", "link" : "ackcord\/data\/UnknownStatusGuild.html#id:ackcord.data.GuildId", "kind" : "abstract def"}], "shortDescription" : "A guild which that status of is unknown."}, {"name" : "ackcord.data.UnsupportedChannel", "shortDescription" : "A channel that is of a type that AckCord knows about, but doesn't implement.", "members_case class" : [{"member" : "ackcord.data.UnsupportedChannel#<init>", "error" : "unsupported entity"}, {"label" : "channelType", "tail" : ": ChannelType", "member" : "ackcord.data.UnsupportedChannel.channelType", "link" : "ackcord\/data\/UnsupportedChannel.html#channelType:ackcord.data.ChannelType", "kind" : "val"}, {"label" : "id", "tail" : ": ChannelId", "member" : "ackcord.data.UnsupportedChannel.id", "link" : "ackcord\/data\/UnsupportedChannel.html#id:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/UnsupportedChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/UnsupportedChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/UnsupportedChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/UnsupportedChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/UnsupportedChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/UnsupportedChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/UnsupportedChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/UnsupportedChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/UnsupportedChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnsupportedChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnsupportedChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UnsupportedChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/UnsupportedChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/UnsupportedChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/UnsupportedChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/UnsupportedChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/UnsupportedChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/UnsupportedChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/UnsupportedChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.User", "shortDescription" : "A Discord user.", "members_case class" : [{"label" : "isUser", "tail" : "(): Boolean", "member" : "ackcord.data.User.isUser", "link" : "ackcord\/data\/User.html#isUser:Boolean", "kind" : "def"}, {"label" : "mentionNick", "tail" : "(): String", "member" : "ackcord.data.User.mentionNick", "link" : "ackcord\/data\/User.html#mentionNick:String", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.User.mention", "link" : "ackcord\/data\/User.html#mention:String", "kind" : "def"}, {"member" : "ackcord.data.User#<init>", "error" : "unsupported entity"}, {"label" : "publicFlags", "tail" : ": Option[UserFlags]", "member" : "ackcord.data.User.publicFlags", "link" : "ackcord\/data\/User.html#publicFlags:Option[ackcord.data.UserFlags]", "kind" : "val"}, {"label" : "premiumType", "tail" : ": Option[PremiumType]", "member" : "ackcord.data.User.premiumType", "link" : "ackcord\/data\/User.html#premiumType:Option[ackcord.data.PremiumType]", "kind" : "val"}, {"label" : "flags", "tail" : ": Option[UserFlags]", "member" : "ackcord.data.User.flags", "link" : "ackcord\/data\/User.html#flags:Option[ackcord.data.UserFlags]", "kind" : "val"}, {"label" : "email", "tail" : ": Option[String]", "member" : "ackcord.data.User.email", "link" : "ackcord\/data\/User.html#email:Option[String]", "kind" : "val"}, {"label" : "verified", "tail" : ": Option[Boolean]", "member" : "ackcord.data.User.verified", "link" : "ackcord\/data\/User.html#verified:Option[Boolean]", "kind" : "val"}, {"label" : "locale", "tail" : ": Option[String]", "member" : "ackcord.data.User.locale", "link" : "ackcord\/data\/User.html#locale:Option[String]", "kind" : "val"}, {"label" : "mfaEnabled", "tail" : ": Option[Boolean]", "member" : "ackcord.data.User.mfaEnabled", "link" : "ackcord\/data\/User.html#mfaEnabled:Option[Boolean]", "kind" : "val"}, {"label" : "system", "tail" : ": Option[Boolean]", "member" : "ackcord.data.User.system", "link" : "ackcord\/data\/User.html#system:Option[Boolean]", "kind" : "val"}, {"label" : "bot", "tail" : ": Option[Boolean]", "member" : "ackcord.data.User.bot", "link" : "ackcord\/data\/User.html#bot:Option[Boolean]", "kind" : "val"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.User.avatar", "link" : "ackcord\/data\/User.html#avatar:Option[String]", "kind" : "val"}, {"label" : "discriminator", "tail" : ": String", "member" : "ackcord.data.User.discriminator", "link" : "ackcord\/data\/User.html#discriminator:String", "kind" : "val"}, {"label" : "username", "tail" : ": String", "member" : "ackcord.data.User.username", "link" : "ackcord\/data\/User.html#username:String", "kind" : "val"}, {"label" : "id", "tail" : ": UserId", "member" : "ackcord.data.User.id", "link" : "ackcord\/data\/User.html#id:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/User.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/User.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/User.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/User.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/User.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/User.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/User.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/User.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/User.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/User.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/User.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/User.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/User.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/User.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/User.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/User.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/User.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/User.html", "kind" : "case class"}, {"name" : "ackcord.data.UserFlags", "shortDescription" : "", "object" : "ackcord\/data\/package$$UserFlags$.html", "members_object" : [{"label" : "EarlyVerifiedBotDeveloper", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.EarlyVerifiedBotDeveloper", "link" : "ackcord\/data\/package$$UserFlags$.html#EarlyVerifiedBotDeveloper:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "VerifiedBot", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.VerifiedBot", "link" : "ackcord\/data\/package$$UserFlags$.html#VerifiedBot:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "BugHunterLevel2", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.BugHunterLevel2", "link" : "ackcord\/data\/package$$UserFlags$.html#BugHunterLevel2:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "System", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.System", "link" : "ackcord\/data\/package$$UserFlags$.html#System:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "TeamUser", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.TeamUser", "link" : "ackcord\/data\/package$$UserFlags$.html#TeamUser:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "EarlySupporter", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.EarlySupporter", "link" : "ackcord\/data\/package$$UserFlags$.html#EarlySupporter:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "HouseBalance", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.HouseBalance", "link" : "ackcord\/data\/package$$UserFlags$.html#HouseBalance:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "HouseBrilliance", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.HouseBrilliance", "link" : "ackcord\/data\/package$$UserFlags$.html#HouseBrilliance:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "HouseBravery", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.HouseBravery", "link" : "ackcord\/data\/package$$UserFlags$.html#HouseBravery:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "BugHunter", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.BugHunter", "link" : "ackcord\/data\/package$$UserFlags$.html#BugHunter:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "HypeSquadEvents", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.HypeSquadEvents", "link" : "ackcord\/data\/package$$UserFlags$.html#HypeSquadEvents:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "PartneredServerOwner", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.PartneredServerOwner", "link" : "ackcord\/data\/package$$UserFlags$.html#PartneredServerOwner:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "DiscordEmployee", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.DiscordEmployee", "link" : "ackcord\/data\/package$$UserFlags$.html#DiscordEmployee:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "None", "tail" : ": UserFlags", "member" : "ackcord.data.UserFlags.None", "link" : "ackcord\/data\/package$$UserFlags$.html#None:ackcord.data.UserFlags.UserFlags", "kind" : "val"}, {"label" : "fromInt", "tail" : "(int: Int): UserFlags", "member" : "ackcord.data.UserFlags.fromInt", "link" : "ackcord\/data\/package$$UserFlags$.html#fromInt(int:Int):ackcord.data.UserFlags.UserFlags", "kind" : "def"}, {"label" : "apply", "tail" : "(flags: UserFlags*): UserFlags", "member" : "ackcord.data.UserFlags.apply", "link" : "ackcord\/data\/package$$UserFlags$.html#apply(flags:ackcord.data.UserFlags.UserFlags*):ackcord.data.UserFlags.UserFlags", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$UserFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$UserFlags$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$UserFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$UserFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$UserFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$UserFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$UserFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$UserFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$UserFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$UserFlags$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$UserFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$UserFlags$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$UserFlags$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$UserFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$UserFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$UserFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "ackcord.data.UserFlags.UserFlags", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "ackcord.data.UserFlagsSyntax", "shortDescription" : "", "members_class" : [{"label" : "isNone", "tail" : "(): Boolean", "member" : "ackcord.data.UserFlagsSyntax.isNone", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#isNone:Boolean", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(other: UserFlags): Boolean", "member" : "ackcord.data.UserFlagsSyntax.hasFlag", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#hasFlag(other:ackcord.data.package.UserFlags):Boolean", "kind" : "def"}, {"label" : "--", "tail" : "(other: UserFlags): UserFlags", "member" : "ackcord.data.UserFlagsSyntax.--", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#--(other:ackcord.data.package.UserFlags):ackcord.data.package.UserFlags", "kind" : "def"}, {"label" : "++", "tail" : "(other: UserFlags): UserFlags", "member" : "ackcord.data.UserFlagsSyntax.++", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#++(other:ackcord.data.package.UserFlags):ackcord.data.package.UserFlags", "kind" : "def"}, {"label" : "toInt", "tail" : "(): Int", "member" : "ackcord.data.UserFlagsSyntax.toInt", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#toInt:Int", "kind" : "def"}, {"member" : "ackcord.data.UserFlagsSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$UserFlagsSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$UserFlagsSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.UserId", "shortDescription" : "", "object" : "ackcord\/data\/package$$UserId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[User]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[User]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[User]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$UserId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$UserId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$UserId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$UserId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$UserId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$UserId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$UserId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$UserId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$UserId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$UserId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$UserId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$UserId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$UserId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$UserId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$UserId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$UserId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.UserIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolveMember", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[GuildMember]", "member" : "ackcord.data.UserIdSyntax.resolveMember", "link" : "ackcord\/data\/package$$UserIdSyntax.html#resolveMember(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[User]", "member" : "ackcord.data.UserIdSyntax.resolve", "link" : "ackcord\/data\/package$$UserIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"member" : "ackcord.data.UserIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$UserIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$UserIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$UserIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$UserIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$UserIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$UserIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$UserIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$UserIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.UserOrRole", "trait" : "ackcord\/data\/UserOrRole.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/UserOrRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/UserOrRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/UserOrRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/UserOrRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/UserOrRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/UserOrRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/UserOrRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UserOrRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UserOrRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/UserOrRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/UserOrRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/UserOrRole.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/UserOrRole.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/UserOrRole.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/UserOrRole.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/UserOrRole.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/UserOrRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/UserOrRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/UserOrRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.data.UserOrRoleId", "shortDescription" : "", "object" : "ackcord\/data\/package$$UserOrRoleId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[UserOrRole]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[UserOrRole]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[UserOrRole]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$UserOrRoleId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$UserOrRoleId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.VerificationLevel", "shortDescription" : "The different verification levels that can be used for a guild.", "object" : "ackcord\/data\/VerificationLevel$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.VerificationLevel.value", "link" : "ackcord\/data\/VerificationLevel.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/VerificationLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/VerificationLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/VerificationLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/VerificationLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/VerificationLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/VerificationLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/VerificationLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/VerificationLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/VerificationLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/VerificationLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/VerificationLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/VerificationLevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/VerificationLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/VerificationLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/VerificationLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/VerificationLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): VerificationLevel", "member" : "ackcord.data.VerificationLevel.createUnknown", "link" : "ackcord\/data\/VerificationLevel$.html#createUnknown(value:Int):ackcord.data.VerificationLevel", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.VerificationLevel.Unknown", "link" : "ackcord\/data\/VerificationLevel$.html#UnknownextendsVerificationLevelwithProductwithSerializable", "kind" : "case class"}, {"label" : "values", "tail" : "(): IndexedSeq[VerificationLevel]", "member" : "ackcord.data.VerificationLevel.values", "link" : "ackcord\/data\/VerificationLevel$.html#values:IndexedSeq[ackcord.data.VerificationLevel]", "kind" : "def"}, {"label" : "VeryHigh", "tail" : "", "member" : "ackcord.data.VerificationLevel.VeryHigh", "link" : "ackcord\/data\/VerificationLevel$.html#VeryHigh", "kind" : "case object"}, {"label" : "High", "tail" : "", "member" : "ackcord.data.VerificationLevel.High", "link" : "ackcord\/data\/VerificationLevel$.html#High", "kind" : "case object"}, {"label" : "Medium", "tail" : "", "member" : "ackcord.data.VerificationLevel.Medium", "link" : "ackcord\/data\/VerificationLevel$.html#Medium", "kind" : "case object"}, {"label" : "Low", "tail" : "", "member" : "ackcord.data.VerificationLevel.Low", "link" : "ackcord\/data\/VerificationLevel$.html#Low", "kind" : "case object"}, {"label" : "NoVerification", "tail" : "", "member" : "ackcord.data.VerificationLevel.NoVerification", "link" : "ackcord\/data\/VerificationLevel$.html#NoVerification", "kind" : "case object"}, {"label" : "codec", "tail" : ": Codec[VerificationLevel]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/VerificationLevel$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[VerificationLevel]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/VerificationLevel$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], VerificationLevel]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/VerificationLevel$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[VerificationLevel]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/VerificationLevel$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): VerificationLevel", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/VerificationLevel$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, VerificationLevel]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/VerificationLevel$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/VerificationLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/VerificationLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/VerificationLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/VerificationLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/VerificationLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/VerificationLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/VerificationLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VerificationLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/VerificationLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/VerificationLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/VerificationLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/VerificationLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/VerificationLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/VerificationLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/VerificationLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/VerificationLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/VerificationLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/VerificationLevel.html", "kind" : "class"}, {"name" : "ackcord.data.VoiceGuildChannel", "shortDescription" : "A voice channel in a guild", "members_case class" : [{"label" : "channelType", "tail" : "(): ChannelType", "member" : "ackcord.data.VoiceGuildChannel.channelType", "link" : "ackcord\/data\/VoiceGuildChannel.html#channelType:ackcord.data.ChannelType", "kind" : "def"}, {"member" : "ackcord.data.VoiceGuildChannel#<init>", "error" : "unsupported entity"}, {"label" : "parentId", "tail" : ": Option[SnowflakeType[GuildCategory]]", "member" : "ackcord.data.VoiceGuildChannel.parentId", "link" : "ackcord\/data\/VoiceGuildChannel.html#parentId:Option[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": Boolean", "member" : "ackcord.data.VoiceGuildChannel.nsfw", "link" : "ackcord\/data\/VoiceGuildChannel.html#nsfw:Boolean", "kind" : "val"}, {"label" : "userLimit", "tail" : ": Int", "member" : "ackcord.data.VoiceGuildChannel.userLimit", "link" : "ackcord\/data\/VoiceGuildChannel.html#userLimit:Int", "kind" : "val"}, {"label" : "bitrate", "tail" : ": Int", "member" : "ackcord.data.VoiceGuildChannel.bitrate", "link" : "ackcord\/data\/VoiceGuildChannel.html#bitrate:Int", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": SnowflakeMap[UserOrRole, PermissionOverwrite]", "member" : "ackcord.data.VoiceGuildChannel.permissionOverwrites", "link" : "ackcord\/data\/VoiceGuildChannel.html#permissionOverwrites:ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.data.VoiceGuildChannel.position", "link" : "ackcord\/data\/VoiceGuildChannel.html#position:Int", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.VoiceGuildChannel.name", "link" : "ackcord\/data\/VoiceGuildChannel.html#name:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.data.VoiceGuildChannel.guildId", "link" : "ackcord\/data\/VoiceGuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[VoiceGuildChannel]", "member" : "ackcord.data.VoiceGuildChannel.id", "link" : "ackcord\/data\/VoiceGuildChannel.html#id:ackcord.data.SnowflakeType[ackcord.data.VoiceGuildChannel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/VoiceGuildChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "category", "tail" : "(c: CacheSnapshot): Option[GuildCategory]", "member" : "ackcord.data.GuildChannel.category", "link" : "ackcord\/data\/VoiceGuildChannel.html#category(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuild.guild", "link" : "ackcord\/data\/VoiceGuildChannel.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "mention", "tail" : "(): String", "member" : "ackcord.data.Channel.mention", "link" : "ackcord\/data\/VoiceGuildChannel.html#mention:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/VoiceGuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/VoiceGuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/VoiceGuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/VoiceGuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/VoiceGuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/VoiceGuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/VoiceGuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceGuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceGuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceGuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/VoiceGuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/VoiceGuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/VoiceGuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/VoiceGuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/VoiceGuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/VoiceGuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/VoiceGuildChannel.html", "kind" : "case class"}, {"name" : "ackcord.data.VoiceGuildChannelId", "shortDescription" : "", "object" : "ackcord\/data\/package$$VoiceGuildChannelId$.html", "members_object" : [{"label" : "apply", "tail" : "(other: SnowflakeType[_]): SnowflakeType[VoiceGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#apply(other:ackcord.data.SnowflakeType[_]):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(long: Long): SnowflakeType[VoiceGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#apply(long:Long):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String): SnowflakeType[VoiceGuildChannel]", "member" : "ackcord.data.SnowflakeCompanion.apply", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#apply(content:String):ackcord.data.SnowflakeType[Type]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$VoiceGuildChannelId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.data.VoiceGuildChannelIdSyntax", "shortDescription" : "", "members_class" : [{"label" : "resolve", "tail" : "(guildId: GuildId)(c: CacheSnapshot): Option[VoiceGuildChannel]", "member" : "ackcord.data.VoiceGuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#resolve(guildId:ackcord.data.package.GuildId)(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "resolve", "tail" : "(c: CacheSnapshot): Option[VoiceGuildChannel]", "member" : "ackcord.data.VoiceGuildChannelIdSyntax.resolve", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#resolve(implicitc:ackcord.CacheSnapshot):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"member" : "ackcord.data.VoiceGuildChannelIdSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/package$$VoiceGuildChannelIdSyntax.html", "kind" : "class"}, {"name" : "ackcord.data.VoiceRegion", "shortDescription" : "A voice region", "members_case class" : [{"member" : "ackcord.data.VoiceRegion#<init>", "error" : "unsupported entity"}, {"label" : "custom", "tail" : ": Boolean", "member" : "ackcord.data.VoiceRegion.custom", "link" : "ackcord\/data\/VoiceRegion.html#custom:Boolean", "kind" : "val"}, {"label" : "deprecated", "tail" : ": Boolean", "member" : "ackcord.data.VoiceRegion.deprecated", "link" : "ackcord\/data\/VoiceRegion.html#deprecated:Boolean", "kind" : "val"}, {"label" : "optimal", "tail" : ": Boolean", "member" : "ackcord.data.VoiceRegion.optimal", "link" : "ackcord\/data\/VoiceRegion.html#optimal:Boolean", "kind" : "val"}, {"label" : "vip", "tail" : ": Boolean", "member" : "ackcord.data.VoiceRegion.vip", "link" : "ackcord\/data\/VoiceRegion.html#vip:Boolean", "kind" : "val"}, {"label" : "samplePort", "tail" : ": Int", "member" : "ackcord.data.VoiceRegion.samplePort", "link" : "ackcord\/data\/VoiceRegion.html#samplePort:Int", "kind" : "val"}, {"label" : "sampleHostname", "tail" : ": String", "member" : "ackcord.data.VoiceRegion.sampleHostname", "link" : "ackcord\/data\/VoiceRegion.html#sampleHostname:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.data.VoiceRegion.name", "link" : "ackcord\/data\/VoiceRegion.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "ackcord.data.VoiceRegion.id", "link" : "ackcord\/data\/VoiceRegion.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/VoiceRegion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/VoiceRegion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/VoiceRegion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/VoiceRegion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/VoiceRegion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/VoiceRegion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/VoiceRegion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/VoiceRegion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceRegion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceRegion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceRegion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/VoiceRegion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/VoiceRegion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/VoiceRegion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/VoiceRegion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/VoiceRegion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/VoiceRegion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/VoiceRegion.html", "kind" : "case class"}, {"name" : "ackcord.data.VoiceState", "shortDescription" : "Represents a user voice connection status", "members_case class" : [{"member" : "ackcord.data.VoiceState#<init>", "error" : "unsupported entity"}, {"label" : "suppress", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.suppress", "link" : "ackcord\/data\/VoiceState.html#suppress:Boolean", "kind" : "val"}, {"label" : "selfVideo", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.selfVideo", "link" : "ackcord\/data\/VoiceState.html#selfVideo:Boolean", "kind" : "val"}, {"label" : "selfStream", "tail" : ": Option[Boolean]", "member" : "ackcord.data.VoiceState.selfStream", "link" : "ackcord\/data\/VoiceState.html#selfStream:Option[Boolean]", "kind" : "val"}, {"label" : "selfMute", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.selfMute", "link" : "ackcord\/data\/VoiceState.html#selfMute:Boolean", "kind" : "val"}, {"label" : "selfDeaf", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.selfDeaf", "link" : "ackcord\/data\/VoiceState.html#selfDeaf:Boolean", "kind" : "val"}, {"label" : "mute", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.mute", "link" : "ackcord\/data\/VoiceState.html#mute:Boolean", "kind" : "val"}, {"label" : "deaf", "tail" : ": Boolean", "member" : "ackcord.data.VoiceState.deaf", "link" : "ackcord\/data\/VoiceState.html#deaf:Boolean", "kind" : "val"}, {"label" : "sessionId", "tail" : ": String", "member" : "ackcord.data.VoiceState.sessionId", "link" : "ackcord\/data\/VoiceState.html#sessionId:String", "kind" : "val"}, {"label" : "member", "tail" : ": Option[RawGuildMember]", "member" : "ackcord.data.VoiceState.member", "link" : "ackcord\/data\/VoiceState.html#member:Option[ackcord.data.raw.RawGuildMember]", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.data.VoiceState.userId", "link" : "ackcord\/data\/VoiceState.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "channelId", "tail" : ": Option[VoiceGuildChannelId]", "member" : "ackcord.data.VoiceState.channelId", "link" : "ackcord\/data\/VoiceState.html#channelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.VoiceState.guildId", "link" : "ackcord\/data\/VoiceState.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/VoiceState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "user", "tail" : "(snapshot: CacheSnapshot): Option[User]", "member" : "ackcord.data.GetUser.user", "link" : "ackcord\/data\/VoiceState.html#user(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.User]", "kind" : "def"}, {"label" : "voiceChannel", "tail" : "(snapshot: CacheSnapshot): Option[VoiceGuildChannel]", "member" : "ackcord.data.GetVoiceChannelOpt.voiceChannel", "link" : "ackcord\/data\/VoiceState.html#voiceChannel(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuildOpt.guild", "link" : "ackcord\/data\/VoiceState.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/VoiceState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/VoiceState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/VoiceState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/VoiceState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/VoiceState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/VoiceState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/VoiceState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/VoiceState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/VoiceState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/VoiceState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/VoiceState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/VoiceState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/VoiceState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/VoiceState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/VoiceState.html", "kind" : "case class"}, {"name" : "ackcord.data.Webhook", "shortDescription" : "A webhook", "members_case class" : [{"label" : "textGuildChannel", "tail" : "(snapshot: CacheSnapshot): Option[TextGuildChannel]", "member" : "ackcord.data.Webhook.textGuildChannel", "link" : "ackcord\/data\/Webhook.html#textGuildChannel(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"member" : "ackcord.data.Webhook#<init>", "error" : "unsupported entity"}, {"label" : "applicationId", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.data.Webhook.applicationId", "link" : "ackcord\/data\/Webhook.html#applicationId:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "token", "tail" : ": Option[String]", "member" : "ackcord.data.Webhook.token", "link" : "ackcord\/data\/Webhook.html#token:Option[String]", "kind" : "val"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.Webhook.avatar", "link" : "ackcord\/data\/Webhook.html#avatar:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.data.Webhook.name", "link" : "ackcord\/data\/Webhook.html#name:Option[String]", "kind" : "val"}, {"label" : "user", "tail" : ": Option[User]", "member" : "ackcord.data.Webhook.user", "link" : "ackcord\/data\/Webhook.html#user:Option[ackcord.data.User]", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextGuildChannelId", "member" : "ackcord.data.Webhook.channelId", "link" : "ackcord\/data\/Webhook.html#channelId:ackcord.data.TextGuildChannelId", "kind" : "val"}, {"label" : "guildId", "tail" : ": Option[GuildId]", "member" : "ackcord.data.Webhook.guildId", "link" : "ackcord\/data\/Webhook.html#guildId:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "type", "tail" : ": WebhookType", "member" : "ackcord.data.Webhook.type", "link" : "ackcord\/data\/Webhook.html#type:ackcord.data.WebhookType", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.data.Webhook.id", "link" : "ackcord\/data\/Webhook.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/Webhook.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "guild", "tail" : "(snapshot: CacheSnapshot): Option[Guild]", "member" : "ackcord.data.GetGuildOpt.guild", "link" : "ackcord\/data\/Webhook.html#guild(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/Webhook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/Webhook.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/Webhook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/Webhook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/Webhook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/Webhook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/Webhook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Webhook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Webhook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/Webhook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/Webhook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/Webhook.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/Webhook.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/Webhook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/Webhook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/Webhook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/Webhook.html", "kind" : "case class"}, {"name" : "ackcord.data.WebhookAuthor", "shortDescription" : "An webhook author", "members_case class" : [{"label" : "isUser", "tail" : "(): Boolean", "member" : "ackcord.data.WebhookAuthor.isUser", "link" : "ackcord\/data\/WebhookAuthor.html#isUser:Boolean", "kind" : "def"}, {"member" : "ackcord.data.WebhookAuthor#<init>", "error" : "unsupported entity"}, {"label" : "avatar", "tail" : ": Option[String]", "member" : "ackcord.data.WebhookAuthor.avatar", "link" : "ackcord\/data\/WebhookAuthor.html#avatar:Option[String]", "kind" : "val"}, {"label" : "username", "tail" : ": String", "member" : "ackcord.data.WebhookAuthor.username", "link" : "ackcord\/data\/WebhookAuthor.html#username:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.data.WebhookAuthor.id", "link" : "ackcord\/data\/WebhookAuthor.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/data\/WebhookAuthor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/WebhookAuthor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/WebhookAuthor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/WebhookAuthor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/WebhookAuthor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/WebhookAuthor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/WebhookAuthor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/WebhookAuthor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookAuthor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookAuthor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookAuthor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/WebhookAuthor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/WebhookAuthor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/WebhookAuthor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/WebhookAuthor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/WebhookAuthor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/WebhookAuthor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/data\/WebhookAuthor.html", "kind" : "case class"}, {"name" : "ackcord.data.WebhookType", "shortDescription" : "", "object" : "ackcord\/data\/WebhookType$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.data.WebhookType.value", "link" : "ackcord\/data\/WebhookType.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/WebhookType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/WebhookType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/WebhookType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/WebhookType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/WebhookType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/WebhookType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/WebhookType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/WebhookType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/WebhookType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/WebhookType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/WebhookType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/WebhookType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/WebhookType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/WebhookType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/WebhookType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/WebhookType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): WebhookType", "member" : "ackcord.data.WebhookType.createUnknown", "link" : "ackcord\/data\/WebhookType$.html#createUnknown(value:Int):ackcord.data.WebhookType", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.data.WebhookType.Unknown", "link" : "ackcord\/data\/WebhookType$.html#UnknownextendsWebhookTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "ChannelFollower", "tail" : "", "member" : "ackcord.data.WebhookType.ChannelFollower", "link" : "ackcord\/data\/WebhookType$.html#ChannelFollower", "kind" : "case object"}, {"label" : "Incomming", "tail" : "", "member" : "ackcord.data.WebhookType.Incomming", "link" : "ackcord\/data\/WebhookType$.html#Incomming", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[WebhookType]", "member" : "ackcord.data.WebhookType.values", "link" : "ackcord\/data\/WebhookType$.html#values:IndexedSeq[ackcord.data.WebhookType]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[WebhookType]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/data\/WebhookType$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[WebhookType]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/data\/WebhookType$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], WebhookType]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/WebhookType$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[WebhookType]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/WebhookType$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): WebhookType", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/WebhookType$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, WebhookType]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/WebhookType$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/WebhookType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/WebhookType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/WebhookType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/WebhookType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/WebhookType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/WebhookType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/WebhookType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WebhookType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/WebhookType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/WebhookType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/WebhookType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/WebhookType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/WebhookType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/WebhookType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/WebhookType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/WebhookType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/WebhookType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/WebhookType.html", "kind" : "class"}, {"name" : "ackcord.data.WidgetImageStyle", "shortDescription" : "A style the widget image might be shown as.", "object" : "ackcord\/data\/WidgetImageStyle$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.data.WidgetImageStyle.value", "link" : "ackcord\/data\/WidgetImageStyle.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/WidgetImageStyle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/WidgetImageStyle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/WidgetImageStyle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/WidgetImageStyle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/WidgetImageStyle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/WidgetImageStyle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/WidgetImageStyle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/WidgetImageStyle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/WidgetImageStyle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/WidgetImageStyle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/WidgetImageStyle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/WidgetImageStyle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/WidgetImageStyle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/WidgetImageStyle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/WidgetImageStyle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/WidgetImageStyle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Banner4", "tail" : "", "member" : "ackcord.data.WidgetImageStyle.Banner4", "link" : "ackcord\/data\/WidgetImageStyle$.html#Banner4", "kind" : "case object"}, {"label" : "Banner3", "tail" : "", "member" : "ackcord.data.WidgetImageStyle.Banner3", "link" : "ackcord\/data\/WidgetImageStyle$.html#Banner3", "kind" : "case object"}, {"label" : "Banner2", "tail" : "", "member" : "ackcord.data.WidgetImageStyle.Banner2", "link" : "ackcord\/data\/WidgetImageStyle$.html#Banner2", "kind" : "case object"}, {"label" : "Banner1", "tail" : "", "member" : "ackcord.data.WidgetImageStyle.Banner1", "link" : "ackcord\/data\/WidgetImageStyle$.html#Banner1", "kind" : "case object"}, {"label" : "Shield", "tail" : "", "member" : "ackcord.data.WidgetImageStyle.Shield", "link" : "ackcord\/data\/WidgetImageStyle$.html#Shield", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[WidgetImageStyle]", "member" : "ackcord.data.WidgetImageStyle.values", "link" : "ackcord\/data\/WidgetImageStyle$.html#values:IndexedSeq[ackcord.data.WidgetImageStyle]", "kind" : "def"}, {"label" : "findValues", "tail" : "(): IndexedSeq[WidgetImageStyle]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/data\/WidgetImageStyle$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], WidgetImageStyle]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/data\/WidgetImageStyle$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[WidgetImageStyle]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/data\/WidgetImageStyle$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): WidgetImageStyle", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/data\/WidgetImageStyle$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, WidgetImageStyle]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/data\/WidgetImageStyle$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/data\/WidgetImageStyle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/data\/WidgetImageStyle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/data\/WidgetImageStyle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/data\/WidgetImageStyle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/data\/WidgetImageStyle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/data\/WidgetImageStyle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/data\/WidgetImageStyle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/data\/WidgetImageStyle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/data\/WidgetImageStyle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/data\/WidgetImageStyle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/data\/WidgetImageStyle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/data\/WidgetImageStyle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/data\/WidgetImageStyle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/data\/WidgetImageStyle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/data\/WidgetImageStyle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/data\/WidgetImageStyle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/data\/WidgetImageStyle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/data\/WidgetImageStyle.html", "kind" : "class"}], "ackcord.voice" : [{"name" : "ackcord.voice.AudioAPIMessage", "object" : "ackcord\/voice\/AudioAPIMessage$.html", "members_object" : [{"label" : "ReceivedData", "tail" : "", "member" : "ackcord.voice.AudioAPIMessage.ReceivedData", "link" : "ackcord\/voice\/AudioAPIMessage$.html#ReceivedDataextendsAudioAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Ready", "tail" : "", "member" : "ackcord.voice.AudioAPIMessage.Ready", "link" : "ackcord\/voice\/AudioAPIMessage$.html#ReadyextendsAudioAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "UserSpeaking", "tail" : "", "member" : "ackcord.voice.AudioAPIMessage.UserSpeaking", "link" : "ackcord\/voice\/AudioAPIMessage$.html#UserSpeakingextendsAudioAPIMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/AudioAPIMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/AudioAPIMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/AudioAPIMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/AudioAPIMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/AudioAPIMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/AudioAPIMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/AudioAPIMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/AudioAPIMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/AudioAPIMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/AudioAPIMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/AudioAPIMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/AudioAPIMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/AudioAPIMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/AudioAPIMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/AudioAPIMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/AudioAPIMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/voice\/AudioAPIMessage.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/AudioAPIMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/AudioAPIMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/AudioAPIMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/AudioAPIMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/AudioAPIMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/AudioAPIMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/AudioAPIMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/AudioAPIMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/AudioAPIMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/AudioAPIMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/AudioAPIMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/AudioAPIMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/AudioAPIMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/AudioAPIMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/AudioAPIMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/AudioAPIMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/AudioAPIMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "userId", "tail" : "(): UserId", "member" : "ackcord.voice.AudioAPIMessage.userId", "link" : "ackcord\/voice\/AudioAPIMessage.html#userId:ackcord.data.UserId", "kind" : "abstract def"}, {"label" : "serverId", "tail" : "(): RawSnowflake", "member" : "ackcord.voice.AudioAPIMessage.serverId", "link" : "ackcord\/voice\/AudioAPIMessage.html#serverId:ackcord.data.RawSnowflake", "kind" : "abstract def"}], "shortDescription" : "The base trait for all audio events."}, {"name" : "ackcord.voice.BidiShapeWithExtraIn", "shortDescription" : "", "members_case class" : [{"label" : "deepCopy", "tail" : "(): Shape", "member" : "ackcord.voice.BidiShapeWithExtraIn.deepCopy", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#deepCopy():akka.stream.Shape", "kind" : "def"}, {"label" : "outlets", "tail" : "(): Seq[Outlet[_]]", "member" : "ackcord.voice.BidiShapeWithExtraIn.outlets", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#outlets:Seq[akka.stream.Outlet[_]]", "kind" : "def"}, {"label" : "inlets", "tail" : "(): Seq[Inlet[_]]", "member" : "ackcord.voice.BidiShapeWithExtraIn.inlets", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#inlets:Seq[akka.stream.Inlet[_]]", "kind" : "def"}, {"member" : "ackcord.voice.BidiShapeWithExtraIn#<init>", "error" : "unsupported entity"}, {"label" : "extraIn", "tail" : ": Inlet[EIn]", "member" : "ackcord.voice.BidiShapeWithExtraIn.extraIn", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#extraIn:akka.stream.Inlet[EIn@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "out2", "tail" : ": Outlet[Out2]", "member" : "ackcord.voice.BidiShapeWithExtraIn.out2", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#out2:akka.stream.Outlet[Out2@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "in2", "tail" : ": Inlet[In2]", "member" : "ackcord.voice.BidiShapeWithExtraIn.in2", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#in2:akka.stream.Inlet[In2@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "out1", "tail" : ": Outlet[Out1]", "member" : "ackcord.voice.BidiShapeWithExtraIn.out1", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#out1:akka.stream.Outlet[Out1@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "in1", "tail" : ": Inlet[In1]", "member" : "ackcord.voice.BidiShapeWithExtraIn.in1", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#in1:akka.stream.Inlet[In1@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requireSamePortsAndShapeAs", "tail" : "(s: Shape): Unit", "member" : "akka.stream.Shape.requireSamePortsAndShapeAs", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#requireSamePortsAndShapeAs(s:akka.stream.Shape):Unit", "kind" : "def"}, {"label" : "requireSamePortsAs", "tail" : "(s: Shape): Unit", "member" : "akka.stream.Shape.requireSamePortsAs", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#requireSamePortsAs(s:akka.stream.Shape):Unit", "kind" : "def"}, {"label" : "hasSamePortsAndShapeAs", "tail" : "(s: Shape): Boolean", "member" : "akka.stream.Shape.hasSamePortsAndShapeAs", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#hasSamePortsAndShapeAs(s:akka.stream.Shape):Boolean", "kind" : "def"}, {"label" : "hasSamePortsAs", "tail" : "(s: Shape): Boolean", "member" : "akka.stream.Shape.hasSamePortsAs", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#hasSamePortsAs(s:akka.stream.Shape):Boolean", "kind" : "def"}, {"label" : "getOutlets", "tail" : "(): List[Outlet[_]]", "member" : "akka.stream.Shape.getOutlets", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#getOutlets:java.util.List[akka.stream.Outlet[_]]", "kind" : "def"}, {"label" : "getInlets", "tail" : "(): List[Inlet[_]]", "member" : "akka.stream.Shape.getInlets", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#getInlets:java.util.List[akka.stream.Inlet[_]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/BidiShapeWithExtraIn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/BidiShapeWithExtraIn.html", "kind" : "case class"}, {"name" : "ackcord.voice.Heartbeat", "shortDescription" : "Sent by the client at some interval specified by Hello", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Heartbeat.op", "link" : "ackcord\/voice\/Heartbeat.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Heartbeat#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": Int", "member" : "ackcord.voice.Heartbeat.d", "link" : "ackcord\/voice\/Heartbeat.html#d:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Heartbeat.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Heartbeat.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Heartbeat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Heartbeat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Heartbeat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Heartbeat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Heartbeat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Heartbeat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Heartbeat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Heartbeat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Heartbeat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Heartbeat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Heartbeat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Heartbeat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Heartbeat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Heartbeat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Heartbeat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Heartbeat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Heartbeat.html", "kind" : "case class"}, {"name" : "ackcord.voice.HeartbeatACK", "shortDescription" : "Sent by Discord as acknowledgement of our heartbeat", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.HeartbeatACK.op", "link" : "ackcord\/voice\/HeartbeatACK.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.HeartbeatACK#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": Int", "member" : "ackcord.voice.HeartbeatACK.d", "link" : "ackcord\/voice\/HeartbeatACK.html#d:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/HeartbeatACK.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/HeartbeatACK.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/HeartbeatACK.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/HeartbeatACK.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/HeartbeatACK.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/HeartbeatACK.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/HeartbeatACK.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/HeartbeatACK.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/HeartbeatACK.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HeartbeatACK.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HeartbeatACK.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HeartbeatACK.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/HeartbeatACK.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/HeartbeatACK.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/HeartbeatACK.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/HeartbeatACK.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/HeartbeatACK.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/HeartbeatACK.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/HeartbeatACK.html", "kind" : "case class"}, {"name" : "ackcord.voice.Hello", "shortDescription" : "Sent by Discord to tell us what heartbeat interval we should use.", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Hello.op", "link" : "ackcord\/voice\/Hello.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Hello#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": HelloData", "member" : "ackcord.voice.Hello.d", "link" : "ackcord\/voice\/Hello.html#d:ackcord.voice.HelloData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Hello.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Hello.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Hello.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Hello.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Hello.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Hello.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Hello.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Hello.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Hello.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Hello.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Hello.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Hello.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Hello.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Hello.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Hello.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Hello.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Hello.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Hello.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Hello.html", "kind" : "case class"}, {"name" : "ackcord.voice.HelloData", "shortDescription" : "Data of Hello", "members_case class" : [{"member" : "ackcord.voice.HelloData#<init>", "error" : "unsupported entity"}, {"label" : "heartbeatInterval", "tail" : ": Double", "member" : "ackcord.voice.HelloData.heartbeatInterval", "link" : "ackcord\/voice\/HelloData.html#heartbeatInterval:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/HelloData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/HelloData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/HelloData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/HelloData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/HelloData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/HelloData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/HelloData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/HelloData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HelloData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HelloData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/HelloData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/HelloData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/HelloData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/HelloData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/HelloData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/HelloData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/HelloData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/HelloData.html", "kind" : "case class"}, {"name" : "ackcord.voice.Identify", "shortDescription" : "Sent by the client to inform Discord that we want to send voice data.", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Identify.op", "link" : "ackcord\/voice\/Identify.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Identify#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": IdentifyData", "member" : "ackcord.voice.Identify.d", "link" : "ackcord\/voice\/Identify.html#d:ackcord.voice.IdentifyData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Identify.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Identify.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Identify.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Identify.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Identify.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Identify.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Identify.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Identify.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Identify.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Identify.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Identify.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Identify.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Identify.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Identify.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Identify.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Identify.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Identify.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Identify.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Identify.html", "kind" : "case class"}, {"name" : "ackcord.voice.IdentifyData", "shortDescription" : "Data used by Identify", "members_case class" : [{"member" : "ackcord.voice.IdentifyData#<init>", "error" : "unsupported entity"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.voice.IdentifyData.token", "link" : "ackcord\/voice\/IdentifyData.html#token:String", "kind" : "val"}, {"label" : "sessionId", "tail" : ": String", "member" : "ackcord.voice.IdentifyData.sessionId", "link" : "ackcord\/voice\/IdentifyData.html#sessionId:String", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.voice.IdentifyData.userId", "link" : "ackcord\/voice\/IdentifyData.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "serverId", "tail" : ": RawSnowflake", "member" : "ackcord.voice.IdentifyData.serverId", "link" : "ackcord\/voice\/IdentifyData.html#serverId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/IdentifyData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/IdentifyData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/IdentifyData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/IdentifyData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/IdentifyData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/IdentifyData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/IdentifyData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/IdentifyData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IdentifyData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IdentifyData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IdentifyData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/IdentifyData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/IdentifyData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/IdentifyData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/IdentifyData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/IdentifyData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/IdentifyData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/IdentifyData.html", "kind" : "case class"}, {"name" : "ackcord.voice.IgnoreClientDisconnect", "case object" : "ackcord\/voice\/IgnoreClientDisconnect$.html", "shortDescription" : "Message for OpCode 13, should be ignored", "members_case object" : [{"label" : "d", "tail" : "(): NotUsed", "member" : "ackcord.voice.IgnoreClientDisconnect.d", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#d:akka.NotUsed", "kind" : "def"}, {"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.IgnoreClientDisconnect.op", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/IgnoreClientDisconnect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.voice.IPDiscoveryFlow", "shortDescription" : "", "object" : "ackcord\/voice\/IPDiscoveryFlow$.html", "members_class" : [{"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, Future[FoundIP])", "member" : "ackcord.voice.IPDiscoveryFlow.createLogicAndMaterializedValue", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,scala.concurrent.Future[ackcord.voice.VoiceUDPFlow.FoundIP])", "kind" : "def"}, {"label" : "shape", "tail" : "(): FlowShape[ByteString, ByteString]", "member" : "ackcord.voice.IPDiscoveryFlow.shape", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#shape:akka.stream.FlowShape[akka.util.ByteString,akka.util.ByteString]", "kind" : "def"}, {"label" : "out", "tail" : ": Outlet[ByteString]", "member" : "ackcord.voice.IPDiscoveryFlow.out", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#out:akka.stream.Outlet[akka.util.ByteString]", "kind" : "val"}, {"label" : "in", "tail" : ": Inlet[ByteString]", "member" : "ackcord.voice.IPDiscoveryFlow.in", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#in:akka.stream.Inlet[akka.util.ByteString]", "kind" : "val"}, {"member" : "ackcord.voice.IPDiscoveryFlow#<init>", "error" : "unsupported entity"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[FlowShape[ByteString, ByteString], Future[FoundIP]]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/IPDiscoveryFlow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/IPDiscoveryFlow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "flow", "tail" : "(openValve: () => Unit): Flow[ByteString, ByteString, Future[FoundIP]]", "member" : "ackcord.voice.IPDiscoveryFlow.flow", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#flow(openValve:()=>Unit):akka.stream.scaladsl.Flow[akka.util.ByteString,akka.util.ByteString,scala.concurrent.Future[ackcord.voice.VoiceUDPFlow.FoundIP]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/IPDiscoveryFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/voice\/IPDiscoveryFlow.html", "kind" : "class"}, {"name" : "ackcord.voice.NaclBidiFlow", "shortDescription" : "", "object" : "ackcord\/voice\/NaclBidiFlow$.html", "members_class" : [{"label" : "createLogic", "tail" : "(inheritedAttributes: Attributes): GraphStageLogic", "member" : "ackcord.voice.NaclBidiFlow.createLogic", "link" : "ackcord\/voice\/NaclBidiFlow.html#createLogic(inheritedAttributes:akka.stream.Attributes):akka.stream.stage.GraphStageLogic", "kind" : "def"}, {"label" : "shape", "tail" : "(): BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]]", "member" : "ackcord.voice.NaclBidiFlow.shape", "link" : "ackcord\/voice\/NaclBidiFlow.html#shape:ackcord.voice.BidiShapeWithExtraIn[akka.util.ByteString,akka.util.ByteString,akka.util.ByteString,ackcord.voice.AudioAPIMessage.ReceivedData,Option[akka.util.ByteString]]", "kind" : "def"}, {"label" : "secretKeysIn", "tail" : ": Inlet[Option[ByteString]]", "member" : "ackcord.voice.NaclBidiFlow.secretKeysIn", "link" : "ackcord\/voice\/NaclBidiFlow.html#secretKeysIn:akka.stream.Inlet[Option[akka.util.ByteString]]", "kind" : "val"}, {"label" : "out2", "tail" : ": Outlet[ReceivedData]", "member" : "ackcord.voice.NaclBidiFlow.out2", "link" : "ackcord\/voice\/NaclBidiFlow.html#out2:akka.stream.Outlet[ackcord.voice.AudioAPIMessage.ReceivedData]", "kind" : "val"}, {"label" : "in2", "tail" : ": Inlet[ByteString]", "member" : "ackcord.voice.NaclBidiFlow.in2", "link" : "ackcord\/voice\/NaclBidiFlow.html#in2:akka.stream.Inlet[akka.util.ByteString]", "kind" : "val"}, {"label" : "out1", "tail" : ": Outlet[ByteString]", "member" : "ackcord.voice.NaclBidiFlow.out1", "link" : "ackcord\/voice\/NaclBidiFlow.html#out1:akka.stream.Outlet[akka.util.ByteString]", "kind" : "val"}, {"label" : "in1", "tail" : ": Inlet[ByteString]", "member" : "ackcord.voice.NaclBidiFlow.in1", "link" : "ackcord\/voice\/NaclBidiFlow.html#in1:akka.stream.Inlet[akka.util.ByteString]", "kind" : "val"}, {"member" : "ackcord.voice.NaclBidiFlow#<init>", "error" : "unsupported entity"}, {"label" : "createLogicAndMaterializedValue", "tail" : "(inheritedAttributes: Attributes): (GraphStageLogic, NotUsed)", "member" : "akka.stream.stage.GraphStage.createLogicAndMaterializedValue", "link" : "ackcord\/voice\/NaclBidiFlow.html#createLogicAndMaterializedValue(inheritedAttributes:akka.stream.Attributes):(akka.stream.stage.GraphStageLogic,akka.NotUsed)", "kind" : "final def"}, {"label" : "withAttributes", "tail" : "(attr: Attributes): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.withAttributes", "link" : "ackcord\/voice\/NaclBidiFlow.html#withAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "final def"}, {"label" : "initialAttributes", "tail" : "(): Attributes", "member" : "akka.stream.stage.GraphStageWithMaterializedValue.initialAttributes", "link" : "ackcord\/voice\/NaclBidiFlow.html#initialAttributes:akka.stream.Attributes", "kind" : "def"}, {"label" : "addAttributes", "tail" : "(attr: Attributes): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.Graph.addAttributes", "link" : "ackcord\/voice\/NaclBidiFlow.html#addAttributes(attr:akka.stream.Attributes):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String, inputBufferSize: Int): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/NaclBidiFlow.html#async(dispatcher:String,inputBufferSize:Int):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(dispatcher: String): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/NaclBidiFlow.html#async(dispatcher:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "async", "tail" : "(): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.Graph.async", "link" : "ackcord\/voice\/NaclBidiFlow.html#async:akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "named", "tail" : "(name: String): Graph[BidiShapeWithExtraIn[ByteString, ByteString, ByteString, ReceivedData, Option[ByteString]], NotUsed]", "member" : "akka.stream.Graph.named", "link" : "ackcord\/voice\/NaclBidiFlow.html#named(name:String):akka.stream.Graph[S,M]", "kind" : "def"}, {"label" : "Shape", "tail" : "", "member" : "akka.stream.Graph.Shape", "link" : "ackcord\/voice\/NaclBidiFlow.html#Shape=S@scala.annotation.unchecked.uncheckedVariance", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/NaclBidiFlow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/NaclBidiFlow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/NaclBidiFlow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/NaclBidiFlow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/NaclBidiFlow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/NaclBidiFlow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/NaclBidiFlow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/NaclBidiFlow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/NaclBidiFlow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/NaclBidiFlow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/NaclBidiFlow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/NaclBidiFlow.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/NaclBidiFlow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/NaclBidiFlow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/NaclBidiFlow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/NaclBidiFlow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "bidiFlow", "tail" : "(ssrc: Int, serverId: RawSnowflake, userId: UserId, secretKeys: Source[Option[ByteString], Mat]): BidiFlow[ByteString, ByteString, ByteString, ReceivedData, Mat]", "member" : "ackcord.voice.NaclBidiFlow.bidiFlow", "link" : "ackcord\/voice\/NaclBidiFlow$.html#bidiFlow[Mat](ssrc:Int,serverId:ackcord.data.RawSnowflake,userId:ackcord.data.UserId,secretKeys:akka.stream.scaladsl.Source[Option[akka.util.ByteString],Mat]):akka.stream.scaladsl.BidiFlow[akka.util.ByteString,akka.util.ByteString,akka.util.ByteString,ackcord.voice.AudioAPIMessage.ReceivedData,Mat]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/NaclBidiFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/NaclBidiFlow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/NaclBidiFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/NaclBidiFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/NaclBidiFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/NaclBidiFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/NaclBidiFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/NaclBidiFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/NaclBidiFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/NaclBidiFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/NaclBidiFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/NaclBidiFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/NaclBidiFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/NaclBidiFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/NaclBidiFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/NaclBidiFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/NaclBidiFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/voice\/NaclBidiFlow.html", "kind" : "class"}, {"name" : "ackcord.voice.Ready", "shortDescription" : "Sent by Discord following Identify", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Ready.op", "link" : "ackcord\/voice\/Ready.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Ready#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": ReadyData", "member" : "ackcord.voice.Ready.d", "link" : "ackcord\/voice\/Ready.html#d:ackcord.voice.ReadyData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Ready.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Ready.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Ready.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Ready.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Ready.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Ready.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Ready.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Ready.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Ready.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Ready.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Ready.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Ready.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Ready.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Ready.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Ready.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Ready.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Ready.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Ready.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Ready.html", "kind" : "case class"}, {"name" : "ackcord.voice.ReadyData", "shortDescription" : "Data of Ready", "members_case class" : [{"member" : "ackcord.voice.ReadyData#<init>", "error" : "unsupported entity"}, {"label" : "modes", "tail" : ": Seq[String]", "member" : "ackcord.voice.ReadyData.modes", "link" : "ackcord\/voice\/ReadyData.html#modes:Seq[String]", "kind" : "val"}, {"label" : "ip", "tail" : ": String", "member" : "ackcord.voice.ReadyData.ip", "link" : "ackcord\/voice\/ReadyData.html#ip:String", "kind" : "val"}, {"label" : "port", "tail" : ": Int", "member" : "ackcord.voice.ReadyData.port", "link" : "ackcord\/voice\/ReadyData.html#port:Int", "kind" : "val"}, {"label" : "ssrc", "tail" : ": Int", "member" : "ackcord.voice.ReadyData.ssrc", "link" : "ackcord\/voice\/ReadyData.html#ssrc:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/ReadyData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/ReadyData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/ReadyData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/ReadyData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/ReadyData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/ReadyData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/ReadyData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/ReadyData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ReadyData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ReadyData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ReadyData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/ReadyData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/ReadyData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/ReadyData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/ReadyData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/ReadyData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/ReadyData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/ReadyData.html", "kind" : "case class"}, {"name" : "ackcord.voice.Resume", "shortDescription" : "Sent by the client when we want to resume a connection after gettingdisconnected.", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Resume.op", "link" : "ackcord\/voice\/Resume.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Resume#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": ResumeData", "member" : "ackcord.voice.Resume.d", "link" : "ackcord\/voice\/Resume.html#d:ackcord.voice.ResumeData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Resume.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Resume.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Resume.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Resume.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Resume.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Resume.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Resume.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Resume.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Resume.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resume.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resume.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resume.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Resume.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Resume.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Resume.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Resume.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Resume.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Resume.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Resume.html", "kind" : "case class"}, {"name" : "ackcord.voice.Resumed", "case object" : "ackcord\/voice\/Resumed$.html", "shortDescription" : "Send by Discord when we successfully resume a connection", "members_case object" : [{"label" : "d", "tail" : "(): NotUsed", "member" : "ackcord.voice.Resumed.d", "link" : "ackcord\/voice\/Resumed$.html#d:akka.NotUsed", "kind" : "def"}, {"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Resumed.op", "link" : "ackcord\/voice\/Resumed$.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Resumed$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/voice\/Resumed$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Resumed$.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Resumed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Resumed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Resumed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Resumed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Resumed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Resumed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Resumed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resumed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resumed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Resumed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Resumed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Resumed$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Resumed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/Resumed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Resumed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Resumed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Resumed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.voice.ResumeData", "shortDescription" : "Data of Resume", "members_case class" : [{"member" : "ackcord.voice.ResumeData#<init>", "error" : "unsupported entity"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.voice.ResumeData.token", "link" : "ackcord\/voice\/ResumeData.html#token:String", "kind" : "val"}, {"label" : "sessionId", "tail" : ": String", "member" : "ackcord.voice.ResumeData.sessionId", "link" : "ackcord\/voice\/ResumeData.html#sessionId:String", "kind" : "val"}, {"label" : "serverId", "tail" : ": RawSnowflake", "member" : "ackcord.voice.ResumeData.serverId", "link" : "ackcord\/voice\/ResumeData.html#serverId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/ResumeData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/ResumeData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/ResumeData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/ResumeData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/ResumeData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/ResumeData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/ResumeData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/ResumeData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ResumeData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ResumeData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/ResumeData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/ResumeData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/ResumeData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/ResumeData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/ResumeData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/ResumeData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/ResumeData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/ResumeData.html", "kind" : "case class"}, {"name" : "ackcord.voice.RTPHeader", "shortDescription" : "Represents the RTP header used for sending and receiving voice data", "object" : "ackcord\/voice\/RTPHeader$.html", "members_object" : [{"label" : "apply", "tail" : "(sequence: Short, timestamp: Int, ssrc: Int): RTPHeader", "member" : "ackcord.voice.RTPHeader.apply", "link" : "ackcord\/voice\/RTPHeader$.html#apply(sequence:Short,timestamp:Int,ssrc:Int):ackcord.voice.RTPHeader", "kind" : "def"}, {"label" : "fromBytes", "tail" : "(bytes: ByteString): (RTPHeader, ByteString)", "member" : "ackcord.voice.RTPHeader.fromBytes", "link" : "ackcord\/voice\/RTPHeader$.html#fromBytes(bytes:akka.util.ByteString):(ackcord.voice.RTPHeader,akka.util.ByteString)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/RTPHeader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/RTPHeader$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/RTPHeader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/RTPHeader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/RTPHeader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/RTPHeader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/RTPHeader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/RTPHeader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/RTPHeader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/RTPHeader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/RTPHeader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/RTPHeader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/RTPHeader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/RTPHeader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/RTPHeader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/RTPHeader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "nonceToBuffer", "tail" : "(buffer: ByteBuffer): Unit", "member" : "ackcord.voice.RTPHeader.nonceToBuffer", "link" : "ackcord\/voice\/RTPHeader.html#nonceToBuffer(buffer:java.nio.ByteBuffer):Unit", "kind" : "def"}, {"label" : "byteString", "tail" : ": ByteString", "member" : "ackcord.voice.RTPHeader.byteString", "link" : "ackcord\/voice\/RTPHeader.html#byteString:akka.util.ByteString", "kind" : "lazy val"}, {"member" : "ackcord.voice.RTPHeader#<init>", "error" : "unsupported entity"}, {"label" : "ssrc", "tail" : ": Int", "member" : "ackcord.voice.RTPHeader.ssrc", "link" : "ackcord\/voice\/RTPHeader.html#ssrc:Int", "kind" : "val"}, {"label" : "timestamp", "tail" : ": Int", "member" : "ackcord.voice.RTPHeader.timestamp", "link" : "ackcord\/voice\/RTPHeader.html#timestamp:Int", "kind" : "val"}, {"label" : "sequence", "tail" : ": Short", "member" : "ackcord.voice.RTPHeader.sequence", "link" : "ackcord\/voice\/RTPHeader.html#sequence:Short", "kind" : "val"}, {"label" : "version", "tail" : ": Byte", "member" : "ackcord.voice.RTPHeader.version", "link" : "ackcord\/voice\/RTPHeader.html#version:Byte", "kind" : "val"}, {"label" : "tpe", "tail" : ": Byte", "member" : "ackcord.voice.RTPHeader.tpe", "link" : "ackcord\/voice\/RTPHeader.html#tpe:Byte", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/RTPHeader.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/RTPHeader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/RTPHeader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/RTPHeader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/RTPHeader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/RTPHeader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/RTPHeader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/RTPHeader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/RTPHeader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/RTPHeader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/RTPHeader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/RTPHeader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/RTPHeader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/RTPHeader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/RTPHeader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/RTPHeader.html", "kind" : "case class"}, {"name" : "ackcord.voice.SelectProtocol", "shortDescription" : "Sent by the client when everything else is done.", "object" : "ackcord\/voice\/SelectProtocol$.html", "members_object" : [{"label" : "apply", "tail" : "(protocol: String, address: String, port: Int, mode: String): SelectProtocol", "member" : "ackcord.voice.SelectProtocol.apply", "link" : "ackcord\/voice\/SelectProtocol$.html#apply(protocol:String,address:String,port:Int,mode:String):ackcord.voice.SelectProtocol", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SelectProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SelectProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SelectProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SelectProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SelectProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SelectProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SelectProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SelectProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SelectProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/SelectProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SelectProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/SelectProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/SelectProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SelectProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SelectProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SelectProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.SelectProtocol.op", "link" : "ackcord\/voice\/SelectProtocol.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.SelectProtocol#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": SelectProtocolData", "member" : "ackcord.voice.SelectProtocol.d", "link" : "ackcord\/voice\/SelectProtocol.html#d:ackcord.voice.SelectProtocolData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SelectProtocol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/SelectProtocol.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SelectProtocol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SelectProtocol.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SelectProtocol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SelectProtocol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SelectProtocol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SelectProtocol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SelectProtocol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SelectProtocol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SelectProtocol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SelectProtocol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SelectProtocol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SelectProtocol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SelectProtocol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SelectProtocol.html", "kind" : "case class"}, {"name" : "ackcord.voice.SelectProtocolConnectionData", "shortDescription" : "Connection data used by SelectProtocol", "members_case class" : [{"member" : "ackcord.voice.SelectProtocolConnectionData#<init>", "error" : "unsupported entity"}, {"label" : "mode", "tail" : ": String", "member" : "ackcord.voice.SelectProtocolConnectionData.mode", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#mode:String", "kind" : "val"}, {"label" : "port", "tail" : ": Int", "member" : "ackcord.voice.SelectProtocolConnectionData.port", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#port:Int", "kind" : "val"}, {"label" : "address", "tail" : ": String", "member" : "ackcord.voice.SelectProtocolConnectionData.address", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#address:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SelectProtocolConnectionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SelectProtocolConnectionData.html", "kind" : "case class"}, {"name" : "ackcord.voice.SelectProtocolData", "shortDescription" : "Data used by SelectProtocol", "members_case class" : [{"member" : "ackcord.voice.SelectProtocolData#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": SelectProtocolConnectionData", "member" : "ackcord.voice.SelectProtocolData.data", "link" : "ackcord\/voice\/SelectProtocolData.html#data:ackcord.voice.SelectProtocolConnectionData", "kind" : "val"}, {"label" : "protocol", "tail" : ": String", "member" : "ackcord.voice.SelectProtocolData.protocol", "link" : "ackcord\/voice\/SelectProtocolData.html#protocol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SelectProtocolData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SelectProtocolData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SelectProtocolData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SelectProtocolData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SelectProtocolData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SelectProtocolData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SelectProtocolData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SelectProtocolData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SelectProtocolData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SelectProtocolData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SelectProtocolData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SelectProtocolData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SelectProtocolData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SelectProtocolData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SelectProtocolData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SelectProtocolData.html", "kind" : "case class"}, {"name" : "ackcord.voice.SessionDescription", "shortDescription" : "Sent by Discord in response to SelectProtocol", "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.SessionDescription.op", "link" : "ackcord\/voice\/SessionDescription.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.SessionDescription#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": SessionDescriptionData", "member" : "ackcord.voice.SessionDescription.d", "link" : "ackcord\/voice\/SessionDescription.html#d:ackcord.voice.SessionDescriptionData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SessionDescription.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/SessionDescription.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SessionDescription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SessionDescription.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SessionDescription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SessionDescription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SessionDescription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SessionDescription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SessionDescription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SessionDescription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SessionDescription.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SessionDescription.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SessionDescription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SessionDescription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SessionDescription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SessionDescription.html", "kind" : "case class"}, {"name" : "ackcord.voice.SessionDescriptionData", "shortDescription" : "Data of SessionDescription", "members_case class" : [{"member" : "ackcord.voice.SessionDescriptionData#<init>", "error" : "unsupported entity"}, {"label" : "secretKey", "tail" : ": ByteString", "member" : "ackcord.voice.SessionDescriptionData.secretKey", "link" : "ackcord\/voice\/SessionDescriptionData.html#secretKey:akka.util.ByteString", "kind" : "val"}, {"label" : "mode", "tail" : ": String", "member" : "ackcord.voice.SessionDescriptionData.mode", "link" : "ackcord\/voice\/SessionDescriptionData.html#mode:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SessionDescriptionData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SessionDescriptionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SessionDescriptionData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SessionDescriptionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SessionDescriptionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SessionDescriptionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SessionDescriptionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SessionDescriptionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescriptionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescriptionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SessionDescriptionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SessionDescriptionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SessionDescriptionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SessionDescriptionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SessionDescriptionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SessionDescriptionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SessionDescriptionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SessionDescriptionData.html", "kind" : "case class"}, {"name" : "ackcord.voice.Speaking", "shortDescription" : "Sent by Discord when a user is speaking, anc client when we want toset the bot as speaking.", "object" : "ackcord\/voice\/Speaking$.html", "members_object" : [{"label" : "apply", "tail" : "(speaking: SpeakingFlag, delay: util.JsonOption[Int], ssrc: util.JsonOption[Int], userId: util.JsonOption[UserId]): Speaking", "member" : "ackcord.voice.Speaking.apply", "link" : "ackcord\/voice\/Speaking$.html#apply(speaking:ackcord.voice.SpeakingFlag,delay:ackcord.util.JsonOption[Int],ssrc:ackcord.util.JsonOption[Int],userId:ackcord.util.JsonOption[ackcord.data.UserId]):ackcord.voice.Speaking", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Speaking$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Speaking$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Speaking$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Speaking$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Speaking$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Speaking$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Speaking$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Speaking$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Speaking$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/Speaking$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Speaking$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/Speaking$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/Speaking$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Speaking$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Speaking$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Speaking$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.Speaking.op", "link" : "ackcord\/voice\/Speaking.html#op:ackcord.voice.VoiceOpCode", "kind" : "def"}, {"member" : "ackcord.voice.Speaking#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": SpeakingData", "member" : "ackcord.voice.Speaking.d", "link" : "ackcord\/voice\/Speaking.html#d:ackcord.voice.SpeakingData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/Speaking.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/Speaking.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/Speaking.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/Speaking.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/Speaking.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/Speaking.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/Speaking.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/Speaking.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/Speaking.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/Speaking.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/Speaking.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/Speaking.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/Speaking.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/Speaking.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/Speaking.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/Speaking.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/Speaking.html", "kind" : "case class"}, {"name" : "ackcord.voice.SpeakingData", "shortDescription" : "Data of Speaking", "members_case class" : [{"member" : "ackcord.voice.SpeakingData#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": util.JsonOption[UserId]", "member" : "ackcord.voice.SpeakingData.userId", "link" : "ackcord\/voice\/SpeakingData.html#userId:ackcord.util.JsonOption[ackcord.data.UserId]", "kind" : "val"}, {"label" : "ssrc", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.voice.SpeakingData.ssrc", "link" : "ackcord\/voice\/SpeakingData.html#ssrc:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "delay", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.voice.SpeakingData.delay", "link" : "ackcord\/voice\/SpeakingData.html#delay:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "speaking", "tail" : ": SpeakingFlag", "member" : "ackcord.voice.SpeakingData.speaking", "link" : "ackcord\/voice\/SpeakingData.html#speaking:ackcord.voice.SpeakingFlag", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/SpeakingData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/SpeakingData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/SpeakingData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/SpeakingData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/SpeakingData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/SpeakingData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/SpeakingData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/SpeakingData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SpeakingData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SpeakingData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/SpeakingData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/SpeakingData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/SpeakingData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/SpeakingData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/SpeakingData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/SpeakingData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/SpeakingData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/SpeakingData.html", "kind" : "case class"}, {"name" : "ackcord.voice.SpeakingFlag", "shortDescription" : "", "object" : "ackcord\/voice\/package$$SpeakingFlag$.html", "members_object" : [{"label" : "Priority", "tail" : ": SpeakingFlag", "member" : "ackcord.voice.SpeakingFlag.Priority", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#Priority:ackcord.voice.package.SpeakingFlag", "kind" : "val"}, {"label" : "Soundshare", "tail" : ": SpeakingFlag", "member" : "ackcord.voice.SpeakingFlag.Soundshare", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#Soundshare:ackcord.voice.package.SpeakingFlag", "kind" : "val"}, {"label" : "Microphone", "tail" : ": SpeakingFlag", "member" : "ackcord.voice.SpeakingFlag.Microphone", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#Microphone:ackcord.voice.package.SpeakingFlag", "kind" : "val"}, {"label" : "None", "tail" : ": SpeakingFlag", "member" : "ackcord.voice.SpeakingFlag.None", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#None:ackcord.voice.package.SpeakingFlag", "kind" : "val"}, {"label" : "fromLong", "tail" : "(long: Long): SpeakingFlag", "member" : "ackcord.voice.SpeakingFlag.fromLong", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#fromLong(long:Long):ackcord.voice.package.SpeakingFlag", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/package$$SpeakingFlag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.SpeakingFlagSyntax", "shortDescription" : "", "members_class" : [{"label" : "++", "tail" : "(other: SpeakingFlag): SpeakingFlag", "member" : "ackcord.voice.SpeakingFlagSyntax.++", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#++(other:ackcord.voice.package.SpeakingFlag):ackcord.voice.package.SpeakingFlag", "kind" : "def"}, {"member" : "ackcord.voice.SpeakingFlagSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/voice\/package$$SpeakingFlagSyntax.html", "kind" : "class"}, {"name" : "ackcord.voice.UnknownVoiceMessage", "shortDescription" : "Message for unknown voice opcode", "members_case class" : [{"label" : "d", "tail" : "(): NotUsed", "member" : "ackcord.voice.UnknownVoiceMessage.d", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#d:akka.NotUsed", "kind" : "def"}, {"member" : "ackcord.voice.UnknownVoiceMessage#<init>", "error" : "unsupported entity"}, {"label" : "op", "tail" : ": VoiceOpCode", "member" : "ackcord.voice.UnknownVoiceMessage.op", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#op:ackcord.voice.VoiceOpCode", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/UnknownVoiceMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/UnknownVoiceMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/voice\/UnknownVoiceMessage.html", "kind" : "case class"}, {"name" : "ackcord.voice.VoiceHandler", "shortDescription" : "", "object" : "ackcord\/voice\/VoiceHandler$.html", "members_object" : [{"label" : "Logout", "tail" : "", "member" : "ackcord.voice.VoiceHandler.Logout", "link" : "ackcord\/voice\/VoiceHandler$.html#Logout", "kind" : "case object"}, {"label" : "SetSpeaking", "tail" : "", "member" : "ackcord.voice.VoiceHandler.SetSpeaking", "link" : "ackcord\/voice\/VoiceHandler$.html#SetSpeakingextendsVoiceHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "ackcord.voice.VoiceHandler.Command", "link" : "ackcord\/voice\/VoiceHandler$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "handler", "tail" : "(parameters: Parameters, state: State): Behavior[Command]", "member" : "ackcord.voice.VoiceHandler.handler", "link" : "ackcord\/voice\/VoiceHandler$.html#handler(parameters:ackcord.voice.VoiceHandler.Parameters,state:ackcord.voice.VoiceHandler.State):akka.actor.typed.Behavior[ackcord.voice.VoiceHandler.Command]", "kind" : "def"}, {"label" : "apply", "tail" : "(address: String, serverId: RawSnowflake, userId: UserId, sessionId: String, token: String, sendTo: Option[ActorRef[AudioAPIMessage]], soundProducer: Source[ByteString, NotUsed], soundConsumer: Sink[AudioAPIMessage, NotUsed]): Behavior[Command]", "member" : "ackcord.voice.VoiceHandler.apply", "link" : "ackcord\/voice\/VoiceHandler$.html#apply(address:String,serverId:ackcord.data.RawSnowflake,userId:ackcord.data.UserId,sessionId:String,token:String,sendTo:Option[akka.actor.typed.ActorRef[ackcord.voice.AudioAPIMessage]],soundProducer:akka.stream.scaladsl.Source[akka.util.ByteString,akka.NotUsed],soundConsumer:akka.stream.scaladsl.Sink[ackcord.voice.AudioAPIMessage,akka.NotUsed]):akka.actor.typed.Behavior[ackcord.voice.VoiceHandler.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.VoiceMessage", "trait" : "ackcord\/voice\/VoiceMessage.html", "kind" : "trait", "members_trait" : [{"label" : "s", "tail" : "(): util.JsonOption[Int]", "member" : "ackcord.voice.VoiceMessage.s", "link" : "ackcord\/voice\/VoiceMessage.html#s:ackcord.util.JsonOption[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "d", "tail" : "(): D", "member" : "ackcord.voice.VoiceMessage.d", "link" : "ackcord\/voice\/VoiceMessage.html#d:D", "kind" : "abstract def"}, {"label" : "op", "tail" : "(): VoiceOpCode", "member" : "ackcord.voice.VoiceMessage.op", "link" : "ackcord\/voice\/VoiceMessage.html#op:ackcord.voice.VoiceOpCode", "kind" : "abstract def"}], "shortDescription" : "Messages sent to the voice websocket."}, {"name" : "ackcord.voice.VoiceOpCode", "shortDescription" : "Voice opcode used by voice websocket", "object" : "ackcord\/voice\/VoiceOpCode$.html", "members_class" : [{"label" : "value", "tail" : ": Int", "member" : "ackcord.voice.VoiceOpCode.value", "link" : "ackcord\/voice\/VoiceOpCode.html#value:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceOpCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceOpCode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceOpCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceOpCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceOpCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceOpCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceOpCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceOpCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceOpCode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceOpCode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceOpCode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceOpCode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceOpCode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceOpCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceOpCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceOpCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: Int): VoiceOpCode", "member" : "ackcord.voice.VoiceOpCode.createUnknown", "link" : "ackcord\/voice\/VoiceOpCode$.html#createUnknown(value:Int):ackcord.voice.VoiceOpCode", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Unknown", "link" : "ackcord\/voice\/VoiceOpCode$.html#UnknownextendsVoiceOpCodewithProductwithSerializable", "kind" : "case class"}, {"label" : "ClientDisconnect", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.ClientDisconnect", "link" : "ackcord\/voice\/VoiceOpCode$.html#ClientDisconnect", "kind" : "object"}, {"label" : "Resumed", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Resumed", "link" : "ackcord\/voice\/VoiceOpCode$.html#Resumed", "kind" : "object"}, {"label" : "Hello", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Hello", "link" : "ackcord\/voice\/VoiceOpCode$.html#Hello", "kind" : "object"}, {"label" : "Resume", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Resume", "link" : "ackcord\/voice\/VoiceOpCode$.html#Resume", "kind" : "object"}, {"label" : "HeartbeatACK", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.HeartbeatACK", "link" : "ackcord\/voice\/VoiceOpCode$.html#HeartbeatACK", "kind" : "object"}, {"label" : "Speaking", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Speaking", "link" : "ackcord\/voice\/VoiceOpCode$.html#Speaking", "kind" : "object"}, {"label" : "SessionDescription", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.SessionDescription", "link" : "ackcord\/voice\/VoiceOpCode$.html#SessionDescription", "kind" : "object"}, {"label" : "Heartbeat", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Heartbeat", "link" : "ackcord\/voice\/VoiceOpCode$.html#Heartbeat", "kind" : "object"}, {"label" : "Ready", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Ready", "link" : "ackcord\/voice\/VoiceOpCode$.html#Ready", "kind" : "object"}, {"label" : "SelectProtocol", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.SelectProtocol", "link" : "ackcord\/voice\/VoiceOpCode$.html#SelectProtocol", "kind" : "object"}, {"label" : "Identify", "tail" : "", "member" : "ackcord.voice.VoiceOpCode.Identify", "link" : "ackcord\/voice\/VoiceOpCode$.html#Identify", "kind" : "object"}, {"label" : "values", "tail" : "(): IndexedSeq[VoiceOpCode]", "member" : "ackcord.voice.VoiceOpCode.values", "link" : "ackcord\/voice\/VoiceOpCode$.html#values:IndexedSeq[ackcord.voice.VoiceOpCode]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[VoiceOpCode]", "member" : "ackcord.util.IntCirceEnumWithUnknown.codec", "link" : "ackcord\/voice\/VoiceOpCode$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[VoiceOpCode]", "member" : "enumeratum.values.IntEnum.findValues", "link" : "ackcord\/voice\/VoiceOpCode$.html#findValues:IndexedSeq[A]", "kind" : "macro def"}, {"label" : "withValueEither", "tail" : "(i: Int): Either[NoSuchMember[Int, ValueEnumEntry[Int]], VoiceOpCode]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/voice\/VoiceOpCode$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: Int): Option[VoiceOpCode]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/voice\/VoiceOpCode$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: Int): VoiceOpCode", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/voice\/VoiceOpCode$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[Int, VoiceOpCode]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/voice\/VoiceOpCode$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceOpCode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceOpCode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceOpCode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceOpCode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceOpCode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceOpCode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceOpCode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceOpCode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceOpCode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceOpCode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceOpCode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceOpCode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceOpCode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceOpCode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceOpCode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceOpCode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceOpCode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/voice\/VoiceOpCode.html", "kind" : "class"}, {"name" : "ackcord.voice.VoiceUDPFlow", "shortDescription" : "", "object" : "ackcord\/voice\/VoiceUDPFlow$.html", "members_object" : [{"label" : "FoundIP", "tail" : "", "member" : "ackcord.voice.VoiceUDPFlow.FoundIP", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#FoundIPextendsProductwithSerializable", "kind" : "case class"}, {"label" : "voiceBidi", "tail" : "(ssrc: Int): BidiFlow[ByteString, ByteString, ByteString, ByteString, Future[FoundIP]]", "member" : "ackcord.voice.VoiceUDPFlow.voiceBidi", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#voiceBidi(ssrc:Int):akka.stream.scaladsl.BidiFlow[akka.util.ByteString,akka.util.ByteString,akka.util.ByteString,akka.util.ByteString,scala.concurrent.Future[ackcord.voice.VoiceUDPFlow.FoundIP]]", "kind" : "def"}, {"label" : "flow", "tail" : "(remoteAddress: InetSocketAddress, ssrc: Int, serverId: RawSnowflake, userId: UserId, secretKeys: Source[Option[ByteString], Mat])(system: ActorSystem[Nothing]): Flow[ByteString, ReceivedData, (Mat, Future[FoundIP])]", "member" : "ackcord.voice.VoiceUDPFlow.flow", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#flow[Mat](remoteAddress:java.net.InetSocketAddress,ssrc:Int,serverId:ackcord.data.RawSnowflake,userId:ackcord.data.UserId,secretKeys:akka.stream.scaladsl.Source[Option[akka.util.ByteString],Mat])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[akka.util.ByteString,ackcord.voice.AudioAPIMessage.ReceivedData,(Mat,scala.concurrent.Future[ackcord.voice.VoiceUDPFlow.FoundIP])]", "kind" : "def"}, {"label" : "FrameTime", "tail" : ": Int", "member" : "ackcord.voice.VoiceUDPFlow.FrameTime", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#FrameTime:Int", "kind" : "val"}, {"label" : "FrameSize", "tail" : ": Int", "member" : "ackcord.voice.VoiceUDPFlow.FrameSize", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#FrameSize:Int", "kind" : "val"}, {"label" : "SampleRate", "tail" : ": Int", "member" : "ackcord.voice.VoiceUDPFlow.SampleRate", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#SampleRate:Int", "kind" : "val"}, {"label" : "silence", "tail" : ": ByteString", "member" : "ackcord.voice.VoiceUDPFlow.silence", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#silence:akka.util.ByteString", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceUDPFlow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceUDPFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.VoiceUDPHandler", "shortDescription" : "", "object" : "ackcord\/voice\/VoiceUDPHandler$.html", "members_object" : [{"label" : "Shutdown", "tail" : "", "member" : "ackcord.voice.VoiceUDPHandler.Shutdown", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#Shutdown", "kind" : "case object"}, {"label" : "Command", "tail" : "", "member" : "ackcord.voice.VoiceUDPHandler.Command", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "handle", "tail" : "(ctx: ActorContext[Command], log: Logger, ssrc: Int, queue: SourceQueueWithComplete[Option[ByteString]], parent: ActorRef[VoiceHandler.Command]): Behavior[Command]", "member" : "ackcord.voice.VoiceUDPHandler.handle", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#handle(ctx:akka.actor.typed.scaladsl.ActorContext[ackcord.voice.VoiceUDPHandler.Command],log:org.slf4j.Logger,ssrc:Int,queue:akka.stream.scaladsl.SourceQueueWithComplete[Option[akka.util.ByteString]],parent:akka.actor.typed.ActorRef[ackcord.voice.VoiceHandler.Command]):akka.actor.typed.Behavior[ackcord.voice.VoiceUDPHandler.Command]", "kind" : "def"}, {"label" : "apply", "tail" : "(address: String, port: Int, ssrc: Int, serverId: RawSnowflake, userId: UserId, soundProducer: Source[ByteString, NotUsed], soundConsumer: Sink[AudioAPIMessage, NotUsed], parent: ActorRef[VoiceHandler.Command]): Behavior[Command]", "member" : "ackcord.voice.VoiceUDPHandler.apply", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#apply(address:String,port:Int,ssrc:Int,serverId:ackcord.data.RawSnowflake,userId:ackcord.data.UserId,soundProducer:akka.stream.scaladsl.Source[akka.util.ByteString,akka.NotUsed],soundConsumer:akka.stream.scaladsl.Sink[ackcord.voice.AudioAPIMessage,akka.NotUsed],parent:akka.actor.typed.ActorRef[ackcord.voice.VoiceHandler.Command]):akka.actor.typed.Behavior[ackcord.voice.VoiceUDPHandler.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceUDPHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceUDPHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.VoiceWsHandler", "shortDescription" : "", "object" : "ackcord\/voice\/VoiceWsHandler$.html", "members_object" : [{"label" : "SetSpeaking", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.SetSpeaking", "link" : "ackcord\/voice\/VoiceWsHandler$.html#SetSpeakingextendsVoiceWsHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "SendHeartbeat", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.SendHeartbeat", "link" : "ackcord\/voice\/VoiceWsHandler$.html#SendHeartbeatextendsVoiceWsHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "GotLocalIP", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.GotLocalIP", "link" : "ackcord\/voice\/VoiceWsHandler$.html#GotLocalIPextendsVoiceWsHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Shutdown", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.Shutdown", "link" : "ackcord\/voice\/VoiceWsHandler$.html#Shutdown", "kind" : "case object"}, {"label" : "Restart", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.Restart", "link" : "ackcord\/voice\/VoiceWsHandler$.html#RestartextendsVoiceWsHandler.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "ackcord.voice.VoiceWsHandler.Command", "link" : "ackcord\/voice\/VoiceWsHandler$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "wsHandling", "tail" : "(parameters: Parameters, isRestarting: Boolean, canResume: Boolean): Behavior[Command]", "member" : "ackcord.voice.VoiceWsHandler.wsHandling", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wsHandling(parameters:ackcord.voice.VoiceWsHandler.Parameters,isRestarting:Boolean,canResume:Boolean):akka.actor.typed.Behavior[ackcord.voice.VoiceWsHandler.Command]", "kind" : "def"}, {"label" : "apply", "tail" : "(address: String, parent: ActorRef[VoiceHandler.Command], sendTo: Option[ActorRef[AudioAPIMessage]], serverId: RawSnowflake, userId: UserId, sessionId: String, token: String): Behavior[Command]", "member" : "ackcord.voice.VoiceWsHandler.apply", "link" : "ackcord\/voice\/VoiceWsHandler$.html#apply(address:String,parent:akka.actor.typed.ActorRef[ackcord.voice.VoiceHandler.Command],sendTo:Option[akka.actor.typed.ActorRef[ackcord.voice.AudioAPIMessage]],serverId:ackcord.data.RawSnowflake,userId:ackcord.data.UserId,sessionId:String,token:String):akka.actor.typed.Behavior[ackcord.voice.VoiceWsHandler.Command]", "kind" : "def"}, {"label" : "runWsFlow", "tail" : "(ctx: ActorContext[Command], log: Logger, address: String)(system: ActorSystem[Nothing]): SourceQueueWithComplete[VoiceMessage[_]]", "member" : "ackcord.voice.VoiceWsHandler.runWsFlow", "link" : "ackcord\/voice\/VoiceWsHandler$.html#runWsFlow(ctx:akka.actor.typed.scaladsl.ActorContext[ackcord.voice.VoiceWsHandler.Command],log:org.slf4j.Logger,address:String)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.SourceQueueWithComplete[ackcord.voice.VoiceMessage[_]]", "kind" : "def"}, {"label" : "wsFlow", "tail" : "(address: String, system: ActorSystem[Nothing]): Flow[Message, Message, Future[WebSocketUpgradeResponse]]", "member" : "ackcord.voice.VoiceWsHandler.wsFlow", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wsFlow(address:String,system:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ws.Message,akka.http.scaladsl.model.ws.Message,scala.concurrent.Future[akka.http.scaladsl.model.ws.WebSocketUpgradeResponse]]", "kind" : "def"}, {"label" : "wsUri", "tail" : "(address: String): Uri", "member" : "ackcord.voice.VoiceWsHandler.wsUri", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wsUri(address:String):akka.http.scaladsl.model.Uri", "kind" : "def"}, {"label" : "createMessage", "tail" : "(system: ActorSystem[Nothing]): Flow[VoiceMessage[_], Message, NotUsed]", "member" : "ackcord.voice.VoiceWsHandler.createMessage", "link" : "ackcord\/voice\/VoiceWsHandler$.html#createMessage(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[ackcord.voice.VoiceMessage[_],akka.http.scaladsl.model.ws.Message,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceWsHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceWsHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceWsHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceWsHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceWsHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceWsHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceWsHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceWsHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceWsHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceWsHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceWsHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceWsHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceWsHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceWsHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceWsHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceWsHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.VoiceWsProtocol", "shortDescription" : "", "object" : "ackcord\/voice\/VoiceWsProtocol$.html", "members_object" : [{"label" : "wsMessageDecoder", "tail" : ": Decoder[VoiceMessage[_]]", "member" : "ackcord.voice.VoiceWsProtocol.wsMessageDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#wsMessageDecoder:io.circe.Decoder[ackcord.voice.VoiceMessage[_]]", "kind" : "implicit val"}, {"label" : "wsMessageEncoder", "tail" : "(): Encoder[VoiceMessage[Data]]", "member" : "ackcord.voice.VoiceWsProtocol.wsMessageEncoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#wsMessageEncoder[Data]:io.circe.Encoder[ackcord.voice.VoiceMessage[Data]]", "kind" : "implicit def"}, {"label" : "helloDataCodec", "tail" : ": Codec[HelloData]", "member" : "ackcord.voice.VoiceWsProtocol.helloDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#helloDataCodec:io.circe.Codec[ackcord.voice.HelloData]", "kind" : "implicit val"}, {"label" : "resumeDataCodec", "tail" : ": Codec[ResumeData]", "member" : "ackcord.voice.VoiceWsProtocol.resumeDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#resumeDataCodec:io.circe.Codec[ackcord.voice.ResumeData]", "kind" : "implicit val"}, {"label" : "speakingDataDecoder", "tail" : ": Decoder[SpeakingData]", "member" : "ackcord.voice.VoiceWsProtocol.speakingDataDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#speakingDataDecoder:io.circe.Decoder[ackcord.voice.SpeakingData]", "kind" : "implicit val"}, {"label" : "speakingDataEncoder", "tail" : ": Encoder[SpeakingData]", "member" : "ackcord.voice.VoiceWsProtocol.speakingDataEncoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#speakingDataEncoder:io.circe.Encoder[ackcord.voice.SpeakingData]", "kind" : "implicit val"}, {"label" : "sessionDescriptionDataDecoder", "tail" : ": Decoder[SessionDescriptionData]", "member" : "ackcord.voice.VoiceWsProtocol.sessionDescriptionDataDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#sessionDescriptionDataDecoder:io.circe.Decoder[ackcord.voice.SessionDescriptionData]", "kind" : "implicit val"}, {"label" : "sessionDescriptionDataEncoder", "tail" : ": Encoder[SessionDescriptionData]", "member" : "ackcord.voice.VoiceWsProtocol.sessionDescriptionDataEncoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#sessionDescriptionDataEncoder:io.circe.Encoder[ackcord.voice.SessionDescriptionData]", "kind" : "implicit val"}, {"label" : "readyDataCodec", "tail" : ": Codec[ReadyData]", "member" : "ackcord.voice.VoiceWsProtocol.readyDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#readyDataCodec:io.circe.Codec[ackcord.voice.ReadyData]", "kind" : "implicit val"}, {"label" : "selectProtocolConnectionDataCodec", "tail" : ": Codec[SelectProtocolConnectionData]", "member" : "ackcord.voice.VoiceWsProtocol.selectProtocolConnectionDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#selectProtocolConnectionDataCodec:io.circe.Codec[ackcord.voice.SelectProtocolConnectionData]", "kind" : "implicit val"}, {"label" : "selectProtocolDataCodec", "tail" : ": Codec[SelectProtocolData]", "member" : "ackcord.voice.VoiceWsProtocol.selectProtocolDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#selectProtocolDataCodec:io.circe.Codec[ackcord.voice.SelectProtocolData]", "kind" : "implicit val"}, {"label" : "identifyDataCodec", "tail" : ": Codec[IdentifyData]", "member" : "ackcord.voice.VoiceWsProtocol.identifyDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#identifyDataCodec:io.circe.Codec[ackcord.voice.IdentifyData]", "kind" : "implicit val"}, {"label" : "speakingFlagsCodec", "tail" : ": Codec[SpeakingFlag]", "member" : "ackcord.voice.VoiceWsProtocol.speakingFlagsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#speakingFlagsCodec:io.circe.Codec[ackcord.voice.SpeakingFlag]", "kind" : "implicit val"}, {"label" : "teamMemberCodec", "tail" : ": Codec[TeamMember]", "member" : "ackcord.data.DiscordProtocol.teamMemberCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#teamMemberCodec:io.circe.Codec[ackcord.data.TeamMember]", "kind" : "implicit val"}, {"label" : "teamCodec", "tail" : ": Codec[Team]", "member" : "ackcord.data.DiscordProtocol.teamCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#teamCodec:io.circe.Codec[ackcord.data.Team]", "kind" : "implicit val"}, {"label" : "clientStatusCodec", "tail" : ": Codec[ClientStatus]", "member" : "ackcord.data.DiscordProtocol.clientStatusCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#clientStatusCodec:io.circe.Codec[ackcord.data.ClientStatus]", "kind" : "implicit val"}, {"label" : "rawBanCodec", "tail" : ": Codec[RawBan]", "member" : "ackcord.data.DiscordProtocol.rawBanCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawBanCodec:io.circe.Codec[ackcord.data.raw.RawBan]", "kind" : "implicit val"}, {"label" : "auditLogChangeDecoder", "tail" : ": Decoder[AuditLogChange[_]]", "member" : "ackcord.data.DiscordProtocol.auditLogChangeDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#auditLogChangeDecoder:io.circe.Decoder[ackcord.data.AuditLogChange[_]]", "kind" : "implicit val"}, {"label" : "guildWidgetMemberCodec", "tail" : ": Codec[GuildWidgetMember]", "member" : "ackcord.data.DiscordProtocol.guildWidgetMemberCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#guildWidgetMemberCodec:io.circe.Codec[ackcord.data.GuildWidgetMember]", "kind" : "implicit val"}, {"label" : "guildWidgetChannelCodec", "tail" : ": Codec[GuildWidgetChannel]", "member" : "ackcord.data.DiscordProtocol.guildWidgetChannelCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#guildWidgetChannelCodec:io.circe.Codec[ackcord.data.GuildWidgetChannel]", "kind" : "implicit val"}, {"label" : "guildWidgetCodec", "tail" : ": Codec[GuildWidget]", "member" : "ackcord.data.DiscordProtocol.guildWidgetCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#guildWidgetCodec:io.circe.Codec[ackcord.data.GuildWidget]", "kind" : "implicit val"}, {"label" : "templateCodec", "tail" : ": Codec[Template]", "member" : "ackcord.data.DiscordProtocol.templateCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#templateCodec:io.circe.Codec[ackcord.data.Template]", "kind" : "implicit val"}, {"label" : "partialRoleCodec", "tail" : ": Codec[PartialRole]", "member" : "ackcord.data.DiscordProtocol.partialRoleCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#partialRoleCodec:io.circe.Codec[ackcord.data.AuditLogChange.PartialRole]", "kind" : "implicit val"}, {"label" : "optionalAuditLogInfoDecoder", "tail" : ": Decoder[OptionalAuditLogInfo]", "member" : "ackcord.data.DiscordProtocol.optionalAuditLogInfoDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#optionalAuditLogInfoDecoder:io.circe.Decoder[ackcord.data.OptionalAuditLogInfo]", "kind" : "implicit val"}, {"label" : "auditLogEntryDecoder", "tail" : ": Decoder[AuditLogEntry]", "member" : "ackcord.data.DiscordProtocol.auditLogEntryDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#auditLogEntryDecoder:io.circe.Decoder[ackcord.data.AuditLogEntry]", "kind" : "implicit val"}, {"label" : "auditLogDecoder", "tail" : ": Decoder[AuditLog]", "member" : "ackcord.data.DiscordProtocol.auditLogDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#auditLogDecoder:io.circe.Decoder[ackcord.data.AuditLog]", "kind" : "implicit val"}, {"label" : "webhookDecoder", "tail" : ": Decoder[Webhook]", "member" : "ackcord.data.DiscordProtocol.webhookDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#webhookDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "implicit val"}, {"label" : "connectionCodec", "tail" : ": Codec[Connection]", "member" : "ackcord.data.DiscordProtocol.connectionCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#connectionCodec:io.circe.Codec[ackcord.data.Connection]", "kind" : "implicit val"}, {"label" : "rawEmojiCodec", "tail" : ": Codec[RawEmoji]", "member" : "ackcord.data.DiscordProtocol.rawEmojiCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawEmojiCodec:io.circe.Codec[ackcord.data.raw.RawEmoji]", "kind" : "implicit val"}, {"label" : "voiceRegionCodec", "tail" : ": Codec[VoiceRegion]", "member" : "ackcord.data.DiscordProtocol.voiceRegionCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#voiceRegionCodec:io.circe.Codec[ackcord.data.VoiceRegion]", "kind" : "implicit val"}, {"label" : "integrationCodec", "tail" : ": Codec[Integration]", "member" : "ackcord.data.DiscordProtocol.integrationCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#integrationCodec:io.circe.Codec[ackcord.data.Integration]", "kind" : "implicit val"}, {"label" : "integrationApplicationCodec", "tail" : ": Codec[IntegrationApplication]", "member" : "ackcord.data.DiscordProtocol.integrationApplicationCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#integrationApplicationCodec:io.circe.Codec[ackcord.data.IntegrationApplication]", "kind" : "implicit val"}, {"label" : "partialIntegrationCodec", "tail" : ": Codec[PartialIntegration]", "member" : "ackcord.data.DiscordProtocol.partialIntegrationCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#partialIntegrationCodec:io.circe.Codec[ackcord.data.PartialIntegration]", "kind" : "implicit val"}, {"label" : "integrationAccountCodec", "tail" : ": Codec[IntegrationAccount]", "member" : "ackcord.data.DiscordProtocol.integrationAccountCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#integrationAccountCodec:io.circe.Codec[ackcord.data.IntegrationAccount]", "kind" : "implicit val"}, {"label" : "guildWidgetSettingsCodec", "tail" : ": Codec[GuildWidgetSettings]", "member" : "ackcord.data.DiscordProtocol.guildWidgetSettingsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#guildWidgetSettingsCodec:io.circe.Codec[ackcord.data.GuildWidgetSettings]", "kind" : "implicit val"}, {"label" : "inviteWithMetadataCodec", "tail" : ": Codec[InviteWithMetadata]", "member" : "ackcord.data.DiscordProtocol.inviteWithMetadataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#inviteWithMetadataCodec:io.circe.Codec[ackcord.data.InviteWithMetadata]", "kind" : "implicit val"}, {"label" : "inviteCodec", "tail" : ": Codec[Invite]", "member" : "ackcord.data.DiscordProtocol.inviteCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#inviteCodec:io.circe.Codec[ackcord.data.Invite]", "kind" : "implicit val"}, {"label" : "inviteTargetUserCodec", "tail" : ": Codec[InviteTargetUser]", "member" : "ackcord.data.DiscordProtocol.inviteTargetUserCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#inviteTargetUserCodec:io.circe.Codec[ackcord.data.InviteTargetUser]", "kind" : "implicit val"}, {"label" : "inviteChannelCodec", "tail" : ": Codec[InviteChannel]", "member" : "ackcord.data.DiscordProtocol.inviteChannelCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#inviteChannelCodec:io.circe.Codec[ackcord.data.InviteChannel]", "kind" : "implicit val"}, {"label" : "inviteGuildCodec", "tail" : ": Codec[InviteGuild]", "member" : "ackcord.data.DiscordProtocol.inviteGuildCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#inviteGuildCodec:io.circe.Codec[ackcord.data.InviteGuild]", "kind" : "implicit val"}, {"label" : "voiceStateCodec", "tail" : ": Codec[VoiceState]", "member" : "ackcord.data.DiscordProtocol.voiceStateCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#voiceStateCodec:io.circe.Codec[ackcord.data.VoiceState]", "kind" : "implicit val"}, {"label" : "rawMessageDecoder", "tail" : ": Decoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageDecoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawMessageDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "rawMessageEncoder", "tail" : ": Encoder[RawMessage]", "member" : "ackcord.data.DiscordProtocol.rawMessageEncoder", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawMessageEncoder:io.circe.Encoder[ackcord.data.raw.RawMessage]", "kind" : "implicit val"}, {"label" : "messageReferenceCodec", "tail" : ": Codec[MessageReference]", "member" : "ackcord.data.DiscordProtocol.messageReferenceCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#messageReferenceCodec:io.circe.Codec[ackcord.data.MessageReference]", "kind" : "implicit val"}, {"label" : "channelMentionCodec", "tail" : ": Codec[ChannelMention]", "member" : "ackcord.data.DiscordProtocol.channelMentionCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#channelMentionCodec:io.circe.Codec[ackcord.data.ChannelMention]", "kind" : "implicit val"}, {"label" : "partialRawGuildMemberCodec", "tail" : ": Codec[PartialRawGuildMember]", "member" : "ackcord.data.DiscordProtocol.partialRawGuildMemberCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#partialRawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.PartialRawGuildMember]", "kind" : "implicit val"}, {"label" : "messageApplicationCodec", "tail" : ": Codec[MessageApplication]", "member" : "ackcord.data.DiscordProtocol.messageApplicationCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#messageApplicationCodec:io.circe.Codec[ackcord.data.MessageApplication]", "kind" : "implicit val"}, {"label" : "rawMessageActivityCodec", "tail" : ": Codec[RawMessageActivity]", "member" : "ackcord.data.DiscordProtocol.rawMessageActivityCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawMessageActivityCodec:io.circe.Codec[ackcord.data.raw.RawMessageActivity]", "kind" : "implicit val"}, {"label" : "reactionCodec", "tail" : ": Codec[Reaction]", "member" : "ackcord.data.DiscordProtocol.reactionCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#reactionCodec:io.circe.Codec[ackcord.data.Reaction]", "kind" : "implicit val"}, {"label" : "partialEmojiCodec", "tail" : ": Codec[PartialEmoji]", "member" : "ackcord.data.DiscordProtocol.partialEmojiCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#partialEmojiCodec:io.circe.Codec[ackcord.data.PartialEmoji]", "kind" : "implicit val"}, {"label" : "outgoingEmbedCodec", "tail" : ": Codec[OutgoingEmbed]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedCodec:io.circe.Codec[ackcord.data.OutgoingEmbed]", "kind" : "implicit val"}, {"label" : "outgoingEmbedAuthorCodec", "tail" : ": Codec[OutgoingEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedAuthorCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedAuthorCodec:io.circe.Codec[ackcord.data.OutgoingEmbedAuthor]", "kind" : "implicit val"}, {"label" : "outgoingEmbedThumbnailCodec", "tail" : ": Codec[OutgoingEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedThumbnailCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedThumbnailCodec:io.circe.Codec[ackcord.data.OutgoingEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "outgoingEmbedVideoCodec", "tail" : ": Codec[OutgoingEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedVideoCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedVideoCodec:io.circe.Codec[ackcord.data.OutgoingEmbedVideo]", "kind" : "implicit val"}, {"label" : "outgoingEmbedImageCodec", "tail" : ": Codec[OutgoingEmbedImage]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedImageCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedImageCodec:io.circe.Codec[ackcord.data.OutgoingEmbedImage]", "kind" : "implicit val"}, {"label" : "outgoingEmbedFooterCodec", "tail" : ": Codec[OutgoingEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.outgoingEmbedFooterCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#outgoingEmbedFooterCodec:io.circe.Codec[ackcord.data.OutgoingEmbedFooter]", "kind" : "implicit val"}, {"label" : "receivedEmbedCodec", "tail" : ": Codec[ReceivedEmbed]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedCodec:io.circe.Codec[ackcord.data.ReceivedEmbed]", "kind" : "implicit val"}, {"label" : "receivedEmbedAuthorCodec", "tail" : ": Codec[ReceivedEmbedAuthor]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedAuthorCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedAuthorCodec:io.circe.Codec[ackcord.data.ReceivedEmbedAuthor]", "kind" : "implicit val"}, {"label" : "receivedEmbedProviderCodec", "tail" : ": Codec[ReceivedEmbedProvider]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedProviderCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedProviderCodec:io.circe.Codec[ackcord.data.ReceivedEmbedProvider]", "kind" : "implicit val"}, {"label" : "receivedEmbedVideoCodec", "tail" : ": Codec[ReceivedEmbedVideo]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedVideoCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedVideoCodec:io.circe.Codec[ackcord.data.ReceivedEmbedVideo]", "kind" : "implicit val"}, {"label" : "receivedEmbedThumbnailCodec", "tail" : ": Codec[ReceivedEmbedThumbnail]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedThumbnailCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedThumbnailCodec:io.circe.Codec[ackcord.data.ReceivedEmbedThumbnail]", "kind" : "implicit val"}, {"label" : "receivedEmbedImageCodec", "tail" : ": Codec[ReceivedEmbedImage]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedImageCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedImageCodec:io.circe.Codec[ackcord.data.ReceivedEmbedImage]", "kind" : "implicit val"}, {"label" : "receivedEmbedFooterCodec", "tail" : ": Codec[ReceivedEmbedFooter]", "member" : "ackcord.data.DiscordProtocol.receivedEmbedFooterCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#receivedEmbedFooterCodec:io.circe.Codec[ackcord.data.ReceivedEmbedFooter]", "kind" : "implicit val"}, {"label" : "embedFieldCodec", "tail" : ": Codec[EmbedField]", "member" : "ackcord.data.DiscordProtocol.embedFieldCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#embedFieldCodec:io.circe.Codec[ackcord.data.EmbedField]", "kind" : "implicit val"}, {"label" : "attachementCodec", "tail" : ": Codec[Attachment]", "member" : "ackcord.data.DiscordProtocol.attachementCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#attachementCodec:io.circe.Codec[ackcord.data.Attachment]", "kind" : "implicit val"}, {"label" : "rawGuildMemberCodec", "tail" : ": Codec[RawGuildMember]", "member" : "ackcord.data.DiscordProtocol.rawGuildMemberCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawGuildMemberCodec:io.circe.Codec[ackcord.data.raw.RawGuildMember]", "kind" : "implicit val"}, {"label" : "rawRoleCodec", "tail" : ": Codec[RawRole]", "member" : "ackcord.data.DiscordProtocol.rawRoleCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawRoleCodec:io.circe.Codec[ackcord.data.raw.RawRole]", "kind" : "implicit val"}, {"label" : "roleCodec", "tail" : ": Codec[Role]", "member" : "ackcord.data.DiscordProtocol.roleCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#roleCodec:io.circe.Codec[ackcord.data.Role]", "kind" : "implicit val"}, {"label" : "webhookAuthorCodec", "tail" : ": Codec[WebhookAuthor]", "member" : "ackcord.data.DiscordProtocol.webhookAuthorCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#webhookAuthorCodec:io.circe.Codec[ackcord.data.WebhookAuthor]", "kind" : "implicit val"}, {"label" : "userCodec", "tail" : ": Codec[User]", "member" : "ackcord.data.DiscordProtocol.userCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#userCodec:io.circe.Codec[ackcord.data.User]", "kind" : "implicit val"}, {"label" : "permissionValueCodec", "tail" : ": Codec[PermissionOverwrite]", "member" : "ackcord.data.DiscordProtocol.permissionValueCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#permissionValueCodec:io.circe.Codec[ackcord.data.PermissionOverwrite]", "kind" : "implicit val"}, {"label" : "unavailableGuildCodec", "tail" : ": Codec[UnavailableGuild]", "member" : "ackcord.data.DiscordProtocol.unavailableGuildCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#unavailableGuildCodec:io.circe.Codec[ackcord.data.UnavailableGuild]", "kind" : "implicit val"}, {"label" : "rawPresenceCodec", "tail" : ": Codec[RawPresence]", "member" : "ackcord.data.DiscordProtocol.rawPresenceCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawPresenceCodec:io.circe.Codec[ackcord.data.raw.RawPresence]", "kind" : "implicit val"}, {"label" : "activityEmojiCodec", "tail" : ": Codec[ActivityEmoji]", "member" : "ackcord.data.DiscordProtocol.activityEmojiCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#activityEmojiCodec:io.circe.Codec[ackcord.data.ActivityEmoji]", "kind" : "implicit val"}, {"label" : "rawActivityPartyCodec", "tail" : ": Codec[RawActivityParty]", "member" : "ackcord.data.DiscordProtocol.rawActivityPartyCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawActivityPartyCodec:io.circe.Codec[ackcord.data.raw.RawActivityParty]", "kind" : "implicit val"}, {"label" : "activityAssetCodec", "tail" : ": Codec[ActivityAsset]", "member" : "ackcord.data.DiscordProtocol.activityAssetCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#activityAssetCodec:io.circe.Codec[ackcord.data.ActivityAsset]", "kind" : "implicit val"}, {"label" : "activityTimestampsCodec", "tail" : ": Codec[ActivityTimestamps]", "member" : "ackcord.data.DiscordProtocol.activityTimestampsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#activityTimestampsCodec:io.circe.Codec[ackcord.data.ActivityTimestamps]", "kind" : "implicit val"}, {"label" : "rawActivityCodec", "tail" : ": Codec[RawActivity]", "member" : "ackcord.data.DiscordProtocol.rawActivityCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawActivityCodec:io.circe.Codec[ackcord.data.raw.RawActivity]", "kind" : "implicit val"}, {"label" : "partialUserCodec", "tail" : ": Codec[PartialUser]", "member" : "ackcord.data.DiscordProtocol.partialUserCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#partialUserCodec:io.circe.Codec[ackcord.data.raw.PartialUser]", "kind" : "implicit val"}, {"label" : "rawGuildPreviewCodec", "tail" : ": Codec[GuildPreview]", "member" : "ackcord.data.DiscordProtocol.rawGuildPreviewCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawGuildPreviewCodec:io.circe.Codec[ackcord.data.GuildPreview]", "kind" : "implicit val"}, {"label" : "rawGuildCodec", "tail" : ": Codec[RawGuild]", "member" : "ackcord.data.DiscordProtocol.rawGuildCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawGuildCodec:io.circe.Codec[ackcord.data.raw.RawGuild]", "kind" : "implicit val"}, {"label" : "rawChannelCodec", "tail" : ": Codec[RawChannel]", "member" : "ackcord.data.DiscordProtocol.rawChannelCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#rawChannelCodec:io.circe.Codec[ackcord.data.raw.RawChannel]", "kind" : "implicit val"}, {"label" : "imageDataCodec", "tail" : ": Codec[ImageData]", "member" : "ackcord.data.DiscordProtocol.imageDataCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#imageDataCodec:io.circe.Codec[ackcord.data.ImageData]", "kind" : "implicit val"}, {"label" : "offsetDateTimeCodec", "tail" : ": Codec[OffsetDateTime]", "member" : "ackcord.data.DiscordProtocol.offsetDateTimeCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#offsetDateTimeCodec:io.circe.Codec[java.time.OffsetDateTime]", "kind" : "implicit val"}, {"label" : "systemChannelFlagsCodec", "tail" : ": Codec[SystemChannelFlags]", "member" : "ackcord.data.DiscordProtocol.systemChannelFlagsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#systemChannelFlagsCodec:io.circe.Codec[ackcord.data.SystemChannelFlags]", "kind" : "implicit val"}, {"label" : "messageFlagsCodec", "tail" : ": Codec[MessageFlags]", "member" : "ackcord.data.DiscordProtocol.messageFlagsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#messageFlagsCodec:io.circe.Codec[ackcord.data.MessageFlags]", "kind" : "implicit val"}, {"label" : "userFlagsCodec", "tail" : ": Codec[UserFlags]", "member" : "ackcord.data.DiscordProtocol.userFlagsCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#userFlagsCodec:io.circe.Codec[ackcord.data.UserFlags]", "kind" : "implicit val"}, {"label" : "permissionCodec", "tail" : ": Codec[Permission]", "member" : "ackcord.data.DiscordProtocol.permissionCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#permissionCodec:io.circe.Codec[ackcord.data.Permission]", "kind" : "implicit val"}, {"label" : "instantCodec", "tail" : ": Codec[Instant]", "member" : "ackcord.data.DiscordProtocol.instantCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#instantCodec:io.circe.Codec[java.time.Instant]", "kind" : "implicit val"}, {"label" : "snowflakeTypeCodec", "tail" : "(): Codec[SnowflakeType[A]]", "member" : "ackcord.data.DiscordProtocol.snowflakeTypeCodec", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#snowflakeTypeCodec[A]:io.circe.Codec[ackcord.data.SnowflakeType[A]]", "kind" : "implicit def"}, {"label" : "circeConfiguration", "tail" : ": Configuration", "member" : "ackcord.data.DiscordProtocol.circeConfiguration", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#circeConfiguration:io.circe.generic.extras.Configuration", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/VoiceWsProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/VoiceWsProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.voice.WsHeart", "shortDescription" : "", "object" : "ackcord\/voice\/WsHeart$.html", "members_object" : [{"label" : "Beat", "tail" : "", "member" : "ackcord.voice.WsHeart.Beat", "link" : "ackcord\/voice\/WsHeart$.html#Beat", "kind" : "case object"}, {"label" : "BeatAck", "tail" : "", "member" : "ackcord.voice.WsHeart.BeatAck", "link" : "ackcord\/voice\/WsHeart$.html#BeatAckextendsWsHeart.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "StopBeating", "tail" : "", "member" : "ackcord.voice.WsHeart.StopBeating", "link" : "ackcord\/voice\/WsHeart$.html#StopBeating", "kind" : "case object"}, {"label" : "StartBeating", "tail" : "", "member" : "ackcord.voice.WsHeart.StartBeating", "link" : "ackcord\/voice\/WsHeart$.html#StartBeatingextendsWsHeart.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "ackcord.voice.WsHeart.Command", "link" : "ackcord\/voice\/WsHeart$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "runningHeart", "tail" : "(context: ActorContext[Command], timers: TimerScheduler[Command], parent: ActorRef[VoiceWsHandler.Command], previousNonce: Option[Int], receivedAck: Boolean): Behavior[Command]", "member" : "ackcord.voice.WsHeart.runningHeart", "link" : "ackcord\/voice\/WsHeart$.html#runningHeart(context:akka.actor.typed.scaladsl.ActorContext[ackcord.voice.WsHeart.Command],timers:akka.actor.typed.scaladsl.TimerScheduler[ackcord.voice.WsHeart.Command],parent:akka.actor.typed.ActorRef[ackcord.voice.VoiceWsHandler.Command],previousNonce:Option[Int],receivedAck:Boolean):akka.actor.typed.Behavior[ackcord.voice.WsHeart.Command]", "kind" : "def"}, {"label" : "apply", "tail" : "(parent: ActorRef[VoiceWsHandler.Command]): Behavior[Command]", "member" : "ackcord.voice.WsHeart.apply", "link" : "ackcord\/voice\/WsHeart$.html#apply(parent:akka.actor.typed.ActorRef[ackcord.voice.VoiceWsHandler.Command]):akka.actor.typed.Behavior[ackcord.voice.WsHeart.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/voice\/WsHeart$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/voice\/WsHeart$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/voice\/WsHeart$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/voice\/WsHeart$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/voice\/WsHeart$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/voice\/WsHeart$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/voice\/WsHeart$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/WsHeart$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/WsHeart$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/voice\/WsHeart$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/voice\/WsHeart$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/voice\/WsHeart$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/voice\/WsHeart$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/voice\/WsHeart$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/voice\/WsHeart$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/voice\/WsHeart$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/voice\/WsHeart$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/voice\/WsHeart$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/voice\/WsHeart$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ackcord.syntax" : [{"name" : "ackcord.syntax.AckCordSyntax", "shortDescription" : "", "members_class" : [{"label" : "fetchWebhookWithToken", "tail" : "(id: SnowflakeType[Webhook], token: String): GetWebhookWithToken", "member" : "ackcord.syntax.AckCordSyntax.fetchWebhookWithToken", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchWebhookWithToken(id:ackcord.data.SnowflakeType[ackcord.data.Webhook],token:String):ackcord.requests.GetWebhookWithToken", "kind" : "def"}, {"label" : "fetchWebhook", "tail" : "(id: SnowflakeType[Webhook]): GetWebhook", "member" : "ackcord.syntax.AckCordSyntax.fetchWebhook", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchWebhook(id:ackcord.data.SnowflakeType[ackcord.data.Webhook]):ackcord.requests.GetWebhook", "kind" : "def"}, {"label" : "fetchVoiceRegions", "tail" : "(): ListVoiceRegions.type", "member" : "ackcord.syntax.AckCordSyntax.fetchVoiceRegions", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchVoiceRegions:ackcord.requests.ListVoiceRegions.type", "kind" : "def"}, {"label" : "fetchInvite", "tail" : "(inviteCode: String, withCounts: Boolean): GetInvite", "member" : "ackcord.syntax.AckCordSyntax.fetchInvite", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchInvite(inviteCode:String,withCounts:Boolean):ackcord.requests.GetInvite", "kind" : "def"}, {"label" : "createGroupDM", "tail" : "(accessTokens: Seq[String], nicks: SnowflakeMap[User, String]): CreateGroupDm", "member" : "ackcord.syntax.AckCordSyntax.createGroupDM", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#createGroupDM(accessTokens:Seq[String],nicks:ackcord.SnowflakeMap[ackcord.data.User,String]):ackcord.requests.CreateGroupDm", "kind" : "def"}, {"label" : "fetchCurrentUserGuilds", "tail" : "(before: Option[GuildId], after: Option[GuildId], limit: Option[Int]): GetCurrentUserGuilds", "member" : "ackcord.syntax.AckCordSyntax.fetchCurrentUserGuilds", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchCurrentUserGuilds(before:Option[ackcord.data.GuildId],after:Option[ackcord.data.GuildId],limit:Option[Int]):ackcord.requests.GetCurrentUserGuilds", "kind" : "def"}, {"label" : "fetchClientUser", "tail" : "(): GetCurrentUser.type", "member" : "ackcord.syntax.AckCordSyntax.fetchClientUser", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchClientUser:ackcord.requests.GetCurrentUser.type", "kind" : "def"}, {"label" : "createGuild", "tail" : "(name: String, region: Option[String], icon: Option[ImageData], verificationLevel: Option[VerificationLevel], defaultMessageNotifications: Option[NotificationLevel], explicitContentFilter: Option[FilterLevel], roles: Option[Seq[Role]], channels: Option[Seq[CreateGuildChannelData]], afkChannelId: Option[VoiceGuildChannelId], afkTimeout: Option[Int], systemChannelId: Option[TextGuildChannelId]): CreateGuild", "member" : "ackcord.syntax.AckCordSyntax.createGuild", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#createGuild(name:String,region:Option[String],icon:Option[ackcord.data.ImageData],verificationLevel:Option[ackcord.data.VerificationLevel],defaultMessageNotifications:Option[ackcord.data.NotificationLevel],explicitContentFilter:Option[ackcord.data.FilterLevel],roles:Option[Seq[ackcord.data.Role]],channels:Option[Seq[ackcord.requests.CreateGuildChannelData]],afkChannelId:Option[ackcord.data.VoiceGuildChannelId],afkTimeout:Option[Int],systemChannelId:Option[ackcord.data.TextGuildChannelId]):ackcord.requests.CreateGuild", "kind" : "def"}, {"label" : "fetchUser", "tail" : "(userId: UserId): GetUser", "member" : "ackcord.syntax.AckCordSyntax.fetchUser", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchUser(userId:ackcord.data.UserId):ackcord.requests.GetUser", "kind" : "def"}, {"label" : "fetchGuild", "tail" : "(guildId: GuildId): GetGuild", "member" : "ackcord.syntax.AckCordSyntax.fetchGuild", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchGuild(guildId:ackcord.data.GuildId):ackcord.requests.GetGuild", "kind" : "def"}, {"label" : "fetchChannel", "tail" : "(channelId: ChannelId): GetChannel", "member" : "ackcord.syntax.AckCordSyntax.fetchChannel", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#fetchChannel(channelId:ackcord.data.ChannelId):ackcord.requests.GetChannel", "kind" : "def"}, {"member" : "ackcord.syntax.AckCordSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$AckCordSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$AckCordSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.CategorySyntax", "shortDescription" : "", "members_class" : [{"label" : "modify", "tail" : "(name: util.JsonOption[String], position: util.JsonOption[Int], permissionOverwrites: util.JsonOption[SnowflakeMap[UserOrRole, PermissionOverwrite]]): ModifyChannel", "member" : "ackcord.syntax.CategorySyntax.modify", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#modify(name:ackcord.util.JsonOption[String],position:ackcord.util.JsonOption[Int],permissionOverwrites:ackcord.util.JsonOption[ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]]):ackcord.requests.ModifyChannel", "kind" : "def"}, {"label" : "voiceChannelsByName", "tail" : "(name: String, guild: Guild): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannelsByName(name:String,guild:ackcord.data.Guild):Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "voiceChannelsByName", "tail" : "(name: String)(snapshot: CacheSnapshot): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannelsByName[F[_]](name:String)(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannelsByName", "tail" : "(name: String, guild: Guild): Seq[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannelsByName(name:String,guild:ackcord.data.Guild):Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "textChannelsByName", "tail" : "(name: String)(snapshot: CacheSnapshot): Seq[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannelsByName(name:String)(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "channelsByName", "tail" : "(name: String, guild: Guild): Seq[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channelsByName(name:String,guild:ackcord.data.Guild):Seq[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "channelsByName", "tail" : "(name: String)(snapshot: CacheSnapshot): Seq[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channelsByName", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channelsByName(name:String)(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "voiceChannelById", "tail" : "(id: VoiceGuildChannelId, guild: Guild): Option[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannelById(id:ackcord.data.VoiceGuildChannelId,guild:ackcord.data.Guild):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "voiceChannelById", "tail" : "(id: VoiceGuildChannelId)(snapshot: CacheSnapshot): Option[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannelById[F[_]](id:ackcord.data.VoiceGuildChannelId)(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannelById", "tail" : "(id: TextGuildChannelId, guild: Guild): Option[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannelById(id:ackcord.data.TextGuildChannelId,guild:ackcord.data.Guild):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "textChannelById", "tail" : "(id: TextGuildChannelId)(snapshot: CacheSnapshot): Option[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannelById(id:ackcord.data.TextGuildChannelId)(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "channelById", "tail" : "(id: GuildChannelId, guild: Guild): Option[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channelById(id:ackcord.data.GuildChannelId,guild:ackcord.data.Guild):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "channelById", "tail" : "(id: GuildChannelId)(snapshot: CacheSnapshot): Option[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channelById", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channelById(id:ackcord.data.GuildChannelId)(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "voiceChannels", "tail" : "(guild: Guild): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannels(guild:ackcord.data.Guild):Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "voiceChannels", "tail" : "(snapshot: CacheSnapshot): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.voiceChannels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#voiceChannels(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannels", "tail" : "(guild: Guild): Seq[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannels(guild:ackcord.data.Guild):Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "textChannels", "tail" : "(snapshot: CacheSnapshot): Seq[TextGuildChannel]", "member" : "ackcord.syntax.CategorySyntax.textChannels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#textChannels(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "channels", "tail" : "(guild: Guild): Seq[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channels(guild:ackcord.data.Guild):Seq[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "channels", "tail" : "(snapshot: CacheSnapshot): Seq[GuildChannel]", "member" : "ackcord.syntax.CategorySyntax.channels", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#channels(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.GuildChannel]", "kind" : "def"}, {"member" : "ackcord.syntax.CategorySyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$CategorySyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$CategorySyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$CategorySyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.ChannelSyntax", "shortDescription" : "", "members_class" : [{"label" : "asCategory", "tail" : "(): Option[GuildCategory]", "member" : "ackcord.syntax.ChannelSyntax.asCategory", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asCategory:Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "asVGuildChannel", "tail" : "(): Option[VoiceGuildChannel]", "member" : "ackcord.syntax.ChannelSyntax.asVGuildChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asVGuildChannel:Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "asTextGuildChannel", "tail" : "(): Option[TextGuildChannel]", "member" : "ackcord.syntax.ChannelSyntax.asTextGuildChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asTextGuildChannel:Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "asGuildChannel", "tail" : "(): Option[GuildChannel]", "member" : "ackcord.syntax.ChannelSyntax.asGuildChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asGuildChannel:Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "asGroupDMChannel", "tail" : "(): Option[GroupDMChannel]", "member" : "ackcord.syntax.ChannelSyntax.asGroupDMChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asGroupDMChannel:Option[ackcord.data.GroupDMChannel]", "kind" : "def"}, {"label" : "asDMChannel", "tail" : "(): Option[DMChannel]", "member" : "ackcord.syntax.ChannelSyntax.asDMChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asDMChannel:Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "asTextChannel", "tail" : "(): Option[TextChannel]", "member" : "ackcord.syntax.ChannelSyntax.asTextChannel", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asTextChannel:Option[ackcord.data.TextChannel]", "kind" : "def"}, {"label" : "delete", "tail" : "(): DeleteCloseChannel", "member" : "ackcord.syntax.ChannelSyntax.delete", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#delete:ackcord.requests.DeleteCloseChannel", "kind" : "def"}, {"member" : "ackcord.syntax.ChannelSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$ChannelSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$ChannelSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.EmojiSyntax", "shortDescription" : "", "members_class" : [{"label" : "delete", "tail" : "(guildId: GuildId): DeleteGuildEmoji", "member" : "ackcord.syntax.EmojiSyntax.delete", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#delete(guildId:ackcord.data.GuildId):ackcord.requests.DeleteGuildEmoji", "kind" : "def"}, {"label" : "modify", "tail" : "(name: String, roles: Seq[RoleId], guildId: GuildId): ModifyGuildEmoji", "member" : "ackcord.syntax.EmojiSyntax.modify", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#modify(name:String,roles:Seq[ackcord.data.RoleId],guildId:ackcord.data.GuildId):ackcord.requests.ModifyGuildEmoji", "kind" : "def"}, {"member" : "ackcord.syntax.EmojiSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$EmojiSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$EmojiSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.GuildChannelSyntax", "shortDescription" : "", "members_class" : [{"label" : "deleteChannelPermissionsRole", "tail" : "(roleId: RoleId): DeleteChannelPermission", "member" : "ackcord.syntax.GuildChannelSyntax.deleteChannelPermissionsRole", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#deleteChannelPermissionsRole(roleId:ackcord.data.RoleId):ackcord.requests.DeleteChannelPermission", "kind" : "def"}, {"label" : "deleteChannelPermissionsUser", "tail" : "(userId: UserId): DeleteChannelPermission", "member" : "ackcord.syntax.GuildChannelSyntax.deleteChannelPermissionsUser", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#deleteChannelPermissionsUser(userId:ackcord.data.UserId):ackcord.requests.DeleteChannelPermission", "kind" : "def"}, {"label" : "editChannelPermissionsUser", "tail" : "(userId: UserId, allow: Permission, deny: Permission): EditChannelPermissions", "member" : "ackcord.syntax.GuildChannelSyntax.editChannelPermissionsUser", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#editChannelPermissionsUser(userId:ackcord.data.UserId,allow:ackcord.data.Permission,deny:ackcord.data.Permission):ackcord.requests.EditChannelPermissions", "kind" : "def"}, {"label" : "editChannelPermissionsRole", "tail" : "(roleId: RoleId, allow: Permission, deny: Permission): EditChannelPermissions", "member" : "ackcord.syntax.GuildChannelSyntax.editChannelPermissionsRole", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#editChannelPermissionsRole(roleId:ackcord.data.RoleId,allow:ackcord.data.Permission,deny:ackcord.data.Permission):ackcord.requests.EditChannelPermissions", "kind" : "def"}, {"label" : "categoryFromGuild", "tail" : "(guild: Guild): Option[GuildCategory]", "member" : "ackcord.syntax.GuildChannelSyntax.categoryFromGuild", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#categoryFromGuild(guild:ackcord.data.Guild):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"member" : "ackcord.syntax.GuildChannelSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$GuildChannelSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$GuildChannelSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.GuildMemberSyntax", "shortDescription" : "", "members_class" : [{"label" : "unban", "tail" : "(): RemoveGuildBan", "member" : "ackcord.syntax.GuildMemberSyntax.unban", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#unban:ackcord.requests.RemoveGuildBan", "kind" : "def"}, {"label" : "ban", "tail" : "(deleteMessageDays: Option[Int], reason: Option[String]): CreateGuildBan", "member" : "ackcord.syntax.GuildMemberSyntax.ban", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#ban(deleteMessageDays:Option[Int],reason:Option[String]):ackcord.requests.CreateGuildBan", "kind" : "def"}, {"label" : "kick", "tail" : "(): RemoveGuildMember", "member" : "ackcord.syntax.GuildMemberSyntax.kick", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#kick:ackcord.requests.RemoveGuildMember", "kind" : "def"}, {"label" : "removeRole", "tail" : "(roleId: RoleId): RemoveGuildMemberRole", "member" : "ackcord.syntax.GuildMemberSyntax.removeRole", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#removeRole(roleId:ackcord.data.RoleId):ackcord.requests.RemoveGuildMemberRole", "kind" : "def"}, {"label" : "addRole", "tail" : "(roleId: RoleId): AddGuildMemberRole", "member" : "ackcord.syntax.GuildMemberSyntax.addRole", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#addRole(roleId:ackcord.data.RoleId):ackcord.requests.AddGuildMemberRole", "kind" : "def"}, {"label" : "modify", "tail" : "(nick: util.JsonOption[String], roles: util.JsonOption[Seq[RoleId]], mute: util.JsonOption[Boolean], deaf: util.JsonOption[Boolean], channelId: util.JsonOption[VoiceGuildChannelId]): ModifyGuildMember", "member" : "ackcord.syntax.GuildMemberSyntax.modify", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#modify(nick:ackcord.util.JsonOption[String],roles:ackcord.util.JsonOption[Seq[ackcord.data.RoleId]],mute:ackcord.util.JsonOption[Boolean],deaf:ackcord.util.JsonOption[Boolean],channelId:ackcord.util.JsonOption[ackcord.data.VoiceGuildChannelId]):ackcord.requests.ModifyGuildMember", "kind" : "def"}, {"label" : "rolesForUser", "tail" : "(guild: Guild): Seq[Role]", "member" : "ackcord.syntax.GuildMemberSyntax.rolesForUser", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#rolesForUser(guild:ackcord.data.Guild):Seq[ackcord.data.Role]", "kind" : "def"}, {"label" : "rolesForUser", "tail" : "(snapshot: CacheSnapshot): Seq[Role]", "member" : "ackcord.syntax.GuildMemberSyntax.rolesForUser", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#rolesForUser(implicitsnapshot:ackcord.CacheSnapshot):Seq[ackcord.data.Role]", "kind" : "def"}, {"member" : "ackcord.syntax.GuildMemberSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$GuildMemberSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$GuildMemberSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.GuildSyntax", "shortDescription" : "", "members_class" : [{"label" : "delete", "tail" : "(): DeleteGuild", "member" : "ackcord.syntax.GuildSyntax.delete", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#delete:ackcord.requests.DeleteGuild", "kind" : "def"}, {"label" : "leaveGuild", "tail" : "(): LeaveGuild", "member" : "ackcord.syntax.GuildSyntax.leaveGuild", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#leaveGuild:ackcord.requests.LeaveGuild", "kind" : "def"}, {"label" : "fetchWebhooks", "tail" : "(): GetGuildWebhooks", "member" : "ackcord.syntax.GuildSyntax.fetchWebhooks", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchWebhooks:ackcord.requests.GetGuildWebhooks", "kind" : "def"}, {"label" : "fetchAuditLog", "tail" : "(userId: Option[UserId], actionType: Option[AuditLogEvent], before: Option[RawSnowflake], limit: Option[Int]): GetGuildAuditLog", "member" : "ackcord.syntax.GuildSyntax.fetchAuditLog", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchAuditLog(userId:Option[ackcord.data.UserId],actionType:Option[ackcord.data.AuditLogEvent],before:Option[ackcord.data.RawSnowflake],limit:Option[Int]):ackcord.requests.GetGuildAuditLog", "kind" : "def"}, {"label" : "setNick", "tail" : "(nick: Option[String]): ModifyBotUsersNick", "member" : "ackcord.syntax.GuildSyntax.setNick", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#setNick(nick:Option[String]):ackcord.requests.ModifyBotUsersNick", "kind" : "def"}, {"label" : "voiceStateFor", "tail" : "(userId: UserId): Option[VoiceState]", "member" : "ackcord.syntax.GuildSyntax.voiceStateFor", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#voiceStateFor(userId:ackcord.data.UserId):Option[ackcord.data.VoiceState]", "kind" : "def"}, {"label" : "createEmoji", "tail" : "(name: String, image: ImageData, roles: Seq[RoleId]): CreateGuildEmoji", "member" : "ackcord.syntax.GuildSyntax.createEmoji", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createEmoji(name:String,image:ackcord.data.ImageData,roles:Seq[ackcord.data.RoleId]):ackcord.requests.CreateGuildEmoji", "kind" : "def"}, {"label" : "fetchSingleEmoji", "tail" : "(emojiId: EmojiId): GetGuildEmoji", "member" : "ackcord.syntax.GuildSyntax.fetchSingleEmoji", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchSingleEmoji(emojiId:ackcord.data.EmojiId):ackcord.requests.GetGuildEmoji", "kind" : "def"}, {"label" : "fetchEmojis", "tail" : "(): ListGuildEmojis", "member" : "ackcord.syntax.GuildSyntax.fetchEmojis", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchEmojis:ackcord.requests.ListGuildEmojis", "kind" : "def"}, {"label" : "presenceForUser", "tail" : "(user: User): Option[Presence]", "member" : "ackcord.syntax.GuildSyntax.presenceForUser", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#presenceForUser(user:ackcord.data.User):Option[ackcord.data.Presence]", "kind" : "def"}, {"label" : "presenceById", "tail" : "(id: UserId): Option[Presence]", "member" : "ackcord.syntax.GuildSyntax.presenceById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#presenceById(id:ackcord.data.UserId):Option[ackcord.data.Presence]", "kind" : "def"}, {"label" : "membersWithRole", "tail" : "(roleId: RoleId): Seq[GuildMember]", "member" : "ackcord.syntax.GuildSyntax.membersWithRole", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#membersWithRole(roleId:ackcord.data.RoleId):Seq[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "memberFromUser", "tail" : "(user: User): Option[GuildMember]", "member" : "ackcord.syntax.GuildSyntax.memberFromUser", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#memberFromUser(user:ackcord.data.User):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "memberById", "tail" : "(id: UserId): Option[GuildMember]", "member" : "ackcord.syntax.GuildSyntax.memberById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#memberById(id:ackcord.data.UserId):Option[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "emojisByName", "tail" : "(name: String): Seq[Emoji]", "member" : "ackcord.syntax.GuildSyntax.emojisByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#emojisByName(name:String):Seq[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "emojiById", "tail" : "(id: EmojiId): Option[Emoji]", "member" : "ackcord.syntax.GuildSyntax.emojiById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#emojiById(id:ackcord.data.EmojiId):Option[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "rolesByName", "tail" : "(name: String): Seq[Role]", "member" : "ackcord.syntax.GuildSyntax.rolesByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#rolesByName(name:String):Seq[ackcord.data.Role]", "kind" : "def"}, {"label" : "roleById", "tail" : "(id: RoleId): Option[Role]", "member" : "ackcord.syntax.GuildSyntax.roleById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#roleById(id:ackcord.data.RoleId):Option[ackcord.data.Role]", "kind" : "def"}, {"label" : "afkChannel", "tail" : "(): Option[VoiceGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.afkChannel", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#afkChannel:Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "categoriesByName", "tail" : "(name: String): Seq[GuildCategory]", "member" : "ackcord.syntax.GuildSyntax.categoriesByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#categoriesByName(name:String):Seq[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "voiceChannelsByName", "tail" : "(name: String): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.voiceChannelsByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#voiceChannelsByName(name:String):Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannelsByName", "tail" : "(name: String): Seq[TextGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.textChannelsByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#textChannelsByName(name:String):Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "channelsByName", "tail" : "(name: String): Seq[GuildChannel]", "member" : "ackcord.syntax.GuildSyntax.channelsByName", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#channelsByName(name:String):Seq[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "categoryById", "tail" : "(id: SnowflakeType[GuildCategory]): Option[GuildCategory]", "member" : "ackcord.syntax.GuildSyntax.categoryById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#categoryById(id:ackcord.data.SnowflakeType[ackcord.data.GuildCategory]):Option[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "voiceChannelById", "tail" : "(id: VoiceGuildChannelId): Option[VoiceGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.voiceChannelById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#voiceChannelById(id:ackcord.data.VoiceGuildChannelId):Option[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannelById", "tail" : "(id: TextGuildChannelId): Option[TextGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.textChannelById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#textChannelById(id:ackcord.data.TextGuildChannelId):Option[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "channelById", "tail" : "(id: GuildChannelId): Option[GuildChannel]", "member" : "ackcord.syntax.GuildSyntax.channelById", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#channelById(id:ackcord.data.GuildChannelId):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "categories", "tail" : "(): Seq[GuildCategory]", "member" : "ackcord.syntax.GuildSyntax.categories", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#categories:Seq[ackcord.data.GuildCategory]", "kind" : "def"}, {"label" : "voiceChannels", "tail" : "(): Seq[VoiceGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.voiceChannels", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#voiceChannels:Seq[ackcord.data.VoiceGuildChannel]", "kind" : "def"}, {"label" : "textChannels", "tail" : "(): Seq[TextGuildChannel]", "member" : "ackcord.syntax.GuildSyntax.textChannels", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#textChannels:Seq[ackcord.data.TextGuildChannel]", "kind" : "def"}, {"label" : "modifyWidgetSettings", "tail" : "(embed: GuildWidgetSettings): ModifyGuildWidget", "member" : "ackcord.syntax.GuildSyntax.modifyWidgetSettings", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#modifyWidgetSettings(embed:ackcord.data.GuildWidgetSettings):ackcord.requests.ModifyGuildWidget", "kind" : "def"}, {"label" : "fetchWidgetSettings", "tail" : "(): GetGuildWidgetSettings", "member" : "ackcord.syntax.GuildSyntax.fetchWidgetSettings", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchWidgetSettings:ackcord.requests.GetGuildWidgetSettings", "kind" : "def"}, {"label" : "syncIntegration", "tail" : "(id: IntegrationId): SyncGuildIntegration", "member" : "ackcord.syntax.GuildSyntax.syncIntegration", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#syncIntegration(id:ackcord.data.IntegrationId):ackcord.requests.SyncGuildIntegration", "kind" : "def"}, {"label" : "removeIntegration", "tail" : "(id: IntegrationId): DeleteGuildIntegration", "member" : "ackcord.syntax.GuildSyntax.removeIntegration", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#removeIntegration(id:ackcord.data.IntegrationId):ackcord.requests.DeleteGuildIntegration", "kind" : "def"}, {"label" : "modifyIntegration", "tail" : "(id: IntegrationId, expireBehavior: util.JsonOption[IntegrationExpireBehavior], expireGracePeriod: util.JsonOption[Int], enableEmoticons: util.JsonOption[Boolean]): ModifyGuildIntegration", "member" : "ackcord.syntax.GuildSyntax.modifyIntegration", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#modifyIntegration(id:ackcord.data.IntegrationId,expireBehavior:ackcord.util.JsonOption[ackcord.data.IntegrationExpireBehavior],expireGracePeriod:ackcord.util.JsonOption[Int],enableEmoticons:ackcord.util.JsonOption[Boolean]):ackcord.requests.ModifyGuildIntegration", "kind" : "def"}, {"label" : "createIntegration", "tail" : "(tpe: String, id: IntegrationId): CreateGuildIntegration", "member" : "ackcord.syntax.GuildSyntax.createIntegration", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createIntegration(tpe:String,id:ackcord.data.IntegrationId):ackcord.requests.CreateGuildIntegration", "kind" : "def"}, {"label" : "fetchIntegrations", "tail" : "(): GetGuildIntegrations", "member" : "ackcord.syntax.GuildSyntax.fetchIntegrations", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchIntegrations:ackcord.requests.GetGuildIntegrations", "kind" : "def"}, {"label" : "fetchInvites", "tail" : "(): GetGuildInvites", "member" : "ackcord.syntax.GuildSyntax.fetchInvites", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchInvites:ackcord.requests.GetGuildInvites", "kind" : "def"}, {"label" : "fetchVoiceRegions", "tail" : "(): GetGuildVoiceRegions", "member" : "ackcord.syntax.GuildSyntax.fetchVoiceRegions", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchVoiceRegions:ackcord.requests.GetGuildVoiceRegions", "kind" : "def"}, {"label" : "beginPrune", "tail" : "(days: Int, computePruneCount: Boolean, includeRoles: Seq[RoleId]): BeginGuildPrune", "member" : "ackcord.syntax.GuildSyntax.beginPrune", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#beginPrune(days:Int,computePruneCount:Boolean,includeRoles:Seq[ackcord.data.RoleId]):ackcord.requests.BeginGuildPrune", "kind" : "def"}, {"label" : "fetchPruneCount", "tail" : "(days: Int, includeRoles: Seq[RoleId]): GetGuildPruneCount", "member" : "ackcord.syntax.GuildSyntax.fetchPruneCount", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchPruneCount(days:Int,includeRoles:Seq[ackcord.data.RoleId]):ackcord.requests.GetGuildPruneCount", "kind" : "def"}, {"label" : "modifyRolePositions", "tail" : "(newPositions: SnowflakeMap[Role, Int]): ModifyGuildRolePositions", "member" : "ackcord.syntax.GuildSyntax.modifyRolePositions", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#modifyRolePositions(newPositions:ackcord.SnowflakeMap[ackcord.data.Role,Int]):ackcord.requests.ModifyGuildRolePositions", "kind" : "def"}, {"label" : "createRole", "tail" : "(name: Option[String], permissions: Option[Permission], color: Option[Int], hoist: Option[Boolean], mentionable: Option[Boolean]): CreateGuildRole", "member" : "ackcord.syntax.GuildSyntax.createRole", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createRole(name:Option[String],permissions:Option[ackcord.data.Permission],color:Option[Int],hoist:Option[Boolean],mentionable:Option[Boolean]):ackcord.requests.CreateGuildRole", "kind" : "def"}, {"label" : "fetchRoles", "tail" : "(): GetGuildRoles", "member" : "ackcord.syntax.GuildSyntax.fetchRoles", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchRoles:ackcord.requests.GetGuildRoles", "kind" : "def"}, {"label" : "addGuildMember", "tail" : "(userId: UserId, accessToken: String, nick: Option[String], roles: Option[Seq[RoleId]], mute: Option[Boolean], deaf: Option[Boolean]): AddGuildMember", "member" : "ackcord.syntax.GuildSyntax.addGuildMember", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#addGuildMember(userId:ackcord.data.UserId,accessToken:String,nick:Option[String],roles:Option[Seq[ackcord.data.RoleId]],mute:Option[Boolean],deaf:Option[Boolean]):ackcord.requests.AddGuildMember", "kind" : "def"}, {"label" : "fetchAllGuildMember", "tail" : "(limit: Option[Int], after: Option[UserId]): ListGuildMembers", "member" : "ackcord.syntax.GuildSyntax.fetchAllGuildMember", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchAllGuildMember(limit:Option[Int],after:Option[ackcord.data.UserId]):ackcord.requests.ListGuildMembers", "kind" : "def"}, {"label" : "unban", "tail" : "(userId: UserId): RemoveGuildBan", "member" : "ackcord.syntax.GuildSyntax.unban", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#unban(userId:ackcord.data.UserId):ackcord.requests.RemoveGuildBan", "kind" : "def"}, {"label" : "fetchBans", "tail" : "(): GetGuildBans", "member" : "ackcord.syntax.GuildSyntax.fetchBans", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchBans:ackcord.requests.GetGuildBans", "kind" : "def"}, {"label" : "fetchBan", "tail" : "(userId: UserId): GetGuildBan", "member" : "ackcord.syntax.GuildSyntax.fetchBan", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchBan(userId:ackcord.data.UserId):ackcord.requests.GetGuildBan", "kind" : "def"}, {"label" : "fetchGuildMember", "tail" : "(userId: UserId): GetGuildMember", "member" : "ackcord.syntax.GuildSyntax.fetchGuildMember", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchGuildMember(userId:ackcord.data.UserId):ackcord.requests.GetGuildMember", "kind" : "def"}, {"label" : "modifyChannelPositions", "tail" : "(newPositions: SnowflakeMap[GuildChannel, Int]): ModifyGuildChannelPositions", "member" : "ackcord.syntax.GuildSyntax.modifyChannelPositions", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#modifyChannelPositions(newPositions:ackcord.SnowflakeMap[ackcord.data.GuildChannel,Int]):ackcord.requests.ModifyGuildChannelPositions", "kind" : "def"}, {"label" : "createCategory", "tail" : "(name: String, permissionOverwrites: util.JsonOption[Seq[PermissionOverwrite]], nsfw: util.JsonOption[Boolean]): CreateGuildChannel", "member" : "ackcord.syntax.GuildSyntax.createCategory", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createCategory(name:String,permissionOverwrites:ackcord.util.JsonOption[Seq[ackcord.data.PermissionOverwrite]],nsfw:ackcord.util.JsonOption[Boolean]):ackcord.requests.CreateGuildChannel", "kind" : "def"}, {"label" : "createVoiceChannel", "tail" : "(name: String, bitrate: util.JsonOption[Int], userLimit: util.JsonOption[Int], permissionOverwrites: util.JsonOption[Seq[PermissionOverwrite]], category: util.JsonOption[SnowflakeType[GuildCategory]], nsfw: util.JsonOption[Boolean]): CreateGuildChannel", "member" : "ackcord.syntax.GuildSyntax.createVoiceChannel", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createVoiceChannel(name:String,bitrate:ackcord.util.JsonOption[Int],userLimit:ackcord.util.JsonOption[Int],permissionOverwrites:ackcord.util.JsonOption[Seq[ackcord.data.PermissionOverwrite]],category:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]],nsfw:ackcord.util.JsonOption[Boolean]):ackcord.requests.CreateGuildChannel", "kind" : "def"}, {"label" : "createTextChannel", "tail" : "(name: String, topic: util.JsonOption[String], rateLimitPerUser: util.JsonOption[Int], permissionOverwrites: util.JsonOption[Seq[PermissionOverwrite]], category: util.JsonOption[SnowflakeType[GuildCategory]], nsfw: util.JsonOption[Boolean]): CreateGuildChannel", "member" : "ackcord.syntax.GuildSyntax.createTextChannel", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#createTextChannel(name:String,topic:ackcord.util.JsonOption[String],rateLimitPerUser:ackcord.util.JsonOption[Int],permissionOverwrites:ackcord.util.JsonOption[Seq[ackcord.data.PermissionOverwrite]],category:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]],nsfw:ackcord.util.JsonOption[Boolean]):ackcord.requests.CreateGuildChannel", "kind" : "def"}, {"label" : "fetchAllChannels", "tail" : "(): GetGuildChannels", "member" : "ackcord.syntax.GuildSyntax.fetchAllChannels", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#fetchAllChannels:ackcord.requests.GetGuildChannels", "kind" : "def"}, {"label" : "modify", "tail" : "(name: util.JsonOption[String], region: util.JsonOption[String], verificationLevel: util.JsonOption[VerificationLevel], defaultMessageNotifications: util.JsonOption[NotificationLevel], afkChannelId: util.JsonOption[VoiceGuildChannelId], afkTimeout: util.JsonOption[Int], icon: util.JsonOption[ImageData], ownerId: util.JsonOption[UserId], splash: util.JsonOption[ImageData]): ModifyGuild", "member" : "ackcord.syntax.GuildSyntax.modify", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#modify(name:ackcord.util.JsonOption[String],region:ackcord.util.JsonOption[String],verificationLevel:ackcord.util.JsonOption[ackcord.data.VerificationLevel],defaultMessageNotifications:ackcord.util.JsonOption[ackcord.data.NotificationLevel],afkChannelId:ackcord.util.JsonOption[ackcord.data.VoiceGuildChannelId],afkTimeout:ackcord.util.JsonOption[Int],icon:ackcord.util.JsonOption[ackcord.data.ImageData],ownerId:ackcord.util.JsonOption[ackcord.data.UserId],splash:ackcord.util.JsonOption[ackcord.data.ImageData]):ackcord.requests.ModifyGuild", "kind" : "def"}, {"member" : "ackcord.syntax.GuildSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$GuildSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$GuildSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$GuildSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.InviteSyntax", "shortDescription" : "", "members_class" : [{"label" : "delete", "tail" : "(): DeleteInvite", "member" : "ackcord.syntax.InviteSyntax.delete", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#delete:ackcord.requests.DeleteInvite", "kind" : "def"}, {"member" : "ackcord.syntax.InviteSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$InviteSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$InviteSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$InviteSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.MessageSyntax", "shortDescription" : "", "members_class" : [{"label" : "unpin", "tail" : "(): DeletePinnedChannelMessages", "member" : "ackcord.syntax.MessageSyntax.unpin", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#unpin:ackcord.requests.DeletePinnedChannelMessages", "kind" : "def"}, {"label" : "pin", "tail" : "(): AddPinnedChannelMessages", "member" : "ackcord.syntax.MessageSyntax.pin", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#pin:ackcord.requests.AddPinnedChannelMessages", "kind" : "def"}, {"label" : "delete", "tail" : "(): DeleteMessage", "member" : "ackcord.syntax.MessageSyntax.delete", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#delete:ackcord.requests.DeleteMessage", "kind" : "def"}, {"label" : "edit", "tail" : "(content: util.JsonOption[String], allowedMentions: util.JsonOption[AllowedMention], embed: util.JsonOption[OutgoingEmbed], flags: util.JsonOption[MessageFlags]): EditMessage", "member" : "ackcord.syntax.MessageSyntax.edit", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#edit(content:ackcord.util.JsonOption[String],allowedMentions:ackcord.util.JsonOption[ackcord.requests.AllowedMention],embed:ackcord.util.JsonOption[ackcord.data.OutgoingEmbed],flags:ackcord.util.JsonOption[ackcord.data.MessageFlags]):ackcord.requests.EditMessage", "kind" : "def"}, {"label" : "deleteEmojiReactions", "tail" : "(emoji: String): DeleteAllReactionsForEmoji", "member" : "ackcord.syntax.MessageSyntax.deleteEmojiReactions", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteEmojiReactions(emoji:String):ackcord.requests.DeleteAllReactionsForEmoji", "kind" : "def"}, {"label" : "deleteEmojiReactions", "tail" : "(emoji: Emoji): DeleteAllReactionsForEmoji", "member" : "ackcord.syntax.MessageSyntax.deleteEmojiReactions", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteEmojiReactions(emoji:ackcord.data.Emoji):ackcord.requests.DeleteAllReactionsForEmoji", "kind" : "def"}, {"label" : "deleteAllReactions", "tail" : "(): DeleteAllReactions", "member" : "ackcord.syntax.MessageSyntax.deleteAllReactions", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteAllReactions:ackcord.requests.DeleteAllReactions", "kind" : "def"}, {"label" : "fetchReactionsStr", "tail" : "(emoji: String, before: Option[UserId], after: Option[UserId], limit: Option[Int]): GetReactions", "member" : "ackcord.syntax.MessageSyntax.fetchReactionsStr", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#fetchReactionsStr(emoji:String,before:Option[ackcord.data.UserId],after:Option[ackcord.data.UserId],limit:Option[Int]):ackcord.requests.GetReactions", "kind" : "def"}, {"label" : "fetchReactions", "tail" : "(guildEmoji: Emoji, before: Option[UserId], after: Option[UserId], limit: Option[Int]): GetReactions", "member" : "ackcord.syntax.MessageSyntax.fetchReactions", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#fetchReactions(guildEmoji:ackcord.data.Emoji,before:Option[ackcord.data.UserId],after:Option[ackcord.data.UserId],limit:Option[Int]):ackcord.requests.GetReactions", "kind" : "def"}, {"label" : "deleteUserReaction", "tail" : "(emoji: String, userId: UserId): DeleteUserReaction", "member" : "ackcord.syntax.MessageSyntax.deleteUserReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteUserReaction(emoji:String,userId:ackcord.data.UserId):ackcord.requests.DeleteUserReaction", "kind" : "def"}, {"label" : "deleteUserReaction", "tail" : "(guildEmoji: Emoji, userId: UserId): DeleteUserReaction", "member" : "ackcord.syntax.MessageSyntax.deleteUserReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteUserReaction(guildEmoji:ackcord.data.Emoji,userId:ackcord.data.UserId):ackcord.requests.DeleteUserReaction", "kind" : "def"}, {"label" : "deleteOwnReaction", "tail" : "(emoji: String): DeleteOwnReaction", "member" : "ackcord.syntax.MessageSyntax.deleteOwnReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteOwnReaction(emoji:String):ackcord.requests.DeleteOwnReaction", "kind" : "def"}, {"label" : "deleteOwnReaction", "tail" : "(guildEmoji: Emoji): DeleteOwnReaction", "member" : "ackcord.syntax.MessageSyntax.deleteOwnReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#deleteOwnReaction(guildEmoji:ackcord.data.Emoji):ackcord.requests.DeleteOwnReaction", "kind" : "def"}, {"label" : "createReaction", "tail" : "(emoji: String): CreateReaction", "member" : "ackcord.syntax.MessageSyntax.createReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#createReaction(emoji:String):ackcord.requests.CreateReaction", "kind" : "def"}, {"label" : "createReaction", "tail" : "(guildEmoji: Emoji): CreateReaction", "member" : "ackcord.syntax.MessageSyntax.createReaction", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#createReaction(guildEmoji:ackcord.data.Emoji):ackcord.requests.CreateReaction", "kind" : "def"}, {"member" : "ackcord.syntax.MessageSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$MessageSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$MessageSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$MessageSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.RoleSyntax", "shortDescription" : "", "members_class" : [{"label" : "delete", "tail" : "(): DeleteGuildRole", "member" : "ackcord.syntax.RoleSyntax.delete", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#delete:ackcord.requests.DeleteGuildRole", "kind" : "def"}, {"label" : "modify", "tail" : "(name: util.JsonOption[String], permissions: util.JsonOption[Permission], color: util.JsonOption[Int], hoist: util.JsonOption[Boolean], mentionable: util.JsonOption[Boolean]): ModifyGuildRole", "member" : "ackcord.syntax.RoleSyntax.modify", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#modify(name:ackcord.util.JsonOption[String],permissions:ackcord.util.JsonOption[ackcord.data.Permission],color:ackcord.util.JsonOption[Int],hoist:ackcord.util.JsonOption[Boolean],mentionable:ackcord.util.JsonOption[Boolean]):ackcord.requests.ModifyGuildRole", "kind" : "def"}, {"member" : "ackcord.syntax.RoleSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$RoleSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$RoleSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$RoleSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.TextChannelSyntax", "shortDescription" : "", "members_class" : [{"label" : "triggerTyping", "tail" : "(): TriggerTypingIndicator", "member" : "ackcord.syntax.TextChannelSyntax.triggerTyping", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#triggerTyping:ackcord.requests.TriggerTypingIndicator", "kind" : "def"}, {"label" : "fetchMessage", "tail" : "(id: MessageId): GetChannelMessage", "member" : "ackcord.syntax.TextChannelSyntax.fetchMessage", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#fetchMessage(id:ackcord.data.MessageId):ackcord.requests.GetChannelMessage", "kind" : "def"}, {"label" : "fetchMessages", "tail" : "(limit: Option[Int]): GetChannelMessages", "member" : "ackcord.syntax.TextChannelSyntax.fetchMessages", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#fetchMessages(limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "fetchMessagesAfter", "tail" : "(after: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.syntax.TextChannelSyntax.fetchMessagesAfter", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#fetchMessagesAfter(after:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "fetchMessagesBefore", "tail" : "(before: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.syntax.TextChannelSyntax.fetchMessagesBefore", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#fetchMessagesBefore(before:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "fetchMessagesAround", "tail" : "(around: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.syntax.TextChannelSyntax.fetchMessagesAround", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#fetchMessagesAround(around:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "sendMessage", "tail" : "(content: String, tts: Boolean, files: Seq[Path], embed: Option[OutgoingEmbed], allowedMentions: AllowedMention): CreateMessage", "member" : "ackcord.syntax.TextChannelSyntax.sendMessage", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#sendMessage(content:String,tts:Boolean,files:Seq[java.nio.file.Path],embed:Option[ackcord.data.OutgoingEmbed],allowedMentions:ackcord.requests.AllowedMention):ackcord.requests.CreateMessage", "kind" : "def"}, {"member" : "ackcord.syntax.TextChannelSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$TextChannelSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$TextChannelSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.TextGuildChannelSyntax", "shortDescription" : "", "members_class" : [{"label" : "fetchWebhooks", "tail" : "(): GetChannelWebhooks", "member" : "ackcord.syntax.TextGuildChannelSyntax.fetchWebhooks", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#fetchWebhooks:ackcord.requests.GetChannelWebhooks", "kind" : "def"}, {"label" : "createWebhook", "tail" : "(name: String, avatar: Option[ImageData]): CreateWebhook", "member" : "ackcord.syntax.TextGuildChannelSyntax.createWebhook", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#createWebhook(name:String,avatar:Option[ackcord.data.ImageData]):ackcord.requests.CreateWebhook", "kind" : "def"}, {"label" : "fetchPinnedMessages", "tail" : "(): GetPinnedMessages", "member" : "ackcord.syntax.TextGuildChannelSyntax.fetchPinnedMessages", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#fetchPinnedMessages:ackcord.requests.GetPinnedMessages", "kind" : "def"}, {"label" : "bulkDelete", "tail" : "(ids: Seq[MessageId]): BulkDeleteMessages", "member" : "ackcord.syntax.TextGuildChannelSyntax.bulkDelete", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#bulkDelete(ids:Seq[ackcord.data.MessageId]):ackcord.requests.BulkDeleteMessages", "kind" : "def"}, {"label" : "createInvite", "tail" : "(maxAge: Int, maxUses: Int, temporary: Boolean, unique: Boolean, targetUser: Option[UserId], targetUserType: Option[Int]): CreateChannelInvite", "member" : "ackcord.syntax.TextGuildChannelSyntax.createInvite", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#createInvite(maxAge:Int,maxUses:Int,temporary:Boolean,unique:Boolean,targetUser:Option[ackcord.data.UserId],targetUserType:Option[Int]):ackcord.requests.CreateChannelInvite", "kind" : "def"}, {"label" : "fetchInvites", "tail" : "(): GetChannelInvites", "member" : "ackcord.syntax.TextGuildChannelSyntax.fetchInvites", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#fetchInvites:ackcord.requests.GetChannelInvites", "kind" : "def"}, {"label" : "modify", "tail" : "(name: util.JsonOption[String], position: util.JsonOption[Int], topic: util.JsonOption[String], nsfw: util.JsonOption[Boolean], rateLimitPerUser: util.JsonOption[Int], permissionOverwrites: util.JsonOption[SnowflakeMap[UserOrRole, PermissionOverwrite]], category: util.JsonOption[SnowflakeType[GuildCategory]]): ModifyChannel", "member" : "ackcord.syntax.TextGuildChannelSyntax.modify", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#modify(name:ackcord.util.JsonOption[String],position:ackcord.util.JsonOption[Int],topic:ackcord.util.JsonOption[String],nsfw:ackcord.util.JsonOption[Boolean],rateLimitPerUser:ackcord.util.JsonOption[Int],permissionOverwrites:ackcord.util.JsonOption[ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]],category:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]):ackcord.requests.ModifyChannel", "kind" : "def"}, {"member" : "ackcord.syntax.TextGuildChannelSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$TextGuildChannelSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.UserSyntax", "shortDescription" : "", "members_class" : [{"label" : "createDMChannel", "tail" : "(): CreateDm", "member" : "ackcord.syntax.UserSyntax.createDMChannel", "link" : "ackcord\/syntax\/package$$UserSyntax.html#createDMChannel:ackcord.requests.CreateDm", "kind" : "def"}, {"label" : "getDMChannel", "tail" : "(snapshot: CacheSnapshot): Option[DMChannel]", "member" : "ackcord.syntax.UserSyntax.getDMChannel", "link" : "ackcord\/syntax\/package$$UserSyntax.html#getDMChannel(implicitsnapshot:ackcord.CacheSnapshot):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"member" : "ackcord.syntax.UserSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$UserSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$UserSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$UserSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$UserSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$UserSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$UserSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$UserSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$UserSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.VGuildChannelSyntax", "shortDescription" : "", "members_class" : [{"label" : "connectedMembers", "tail" : "(guild: Guild): Seq[GuildMember]", "member" : "ackcord.syntax.VGuildChannelSyntax.connectedMembers", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#connectedMembers(guild:ackcord.data.Guild):Seq[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "connectedMembers", "tail" : "(c: CacheSnapshot): Seq[GuildMember]", "member" : "ackcord.syntax.VGuildChannelSyntax.connectedMembers", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#connectedMembers(implicitc:ackcord.CacheSnapshot):Seq[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "connectedUsers", "tail" : "(guild: Guild): Seq[UserId]", "member" : "ackcord.syntax.VGuildChannelSyntax.connectedUsers", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#connectedUsers(guild:ackcord.data.Guild):Seq[ackcord.data.UserId]", "kind" : "def"}, {"label" : "connectedUsers", "tail" : "(c: CacheSnapshot): Seq[User]", "member" : "ackcord.syntax.VGuildChannelSyntax.connectedUsers", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#connectedUsers(implicitc:ackcord.CacheSnapshot):Seq[ackcord.data.User]", "kind" : "def"}, {"label" : "modify", "tail" : "(name: util.JsonOption[String], position: util.JsonOption[Int], bitrate: util.JsonOption[Int], userLimit: util.JsonOption[Int], permissionOverwrites: util.JsonOption[SnowflakeMap[UserOrRole, PermissionOverwrite]], category: util.JsonOption[SnowflakeType[GuildCategory]]): ModifyChannel", "member" : "ackcord.syntax.VGuildChannelSyntax.modify", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#modify(name:ackcord.util.JsonOption[String],position:ackcord.util.JsonOption[Int],bitrate:ackcord.util.JsonOption[Int],userLimit:ackcord.util.JsonOption[Int],permissionOverwrites:ackcord.util.JsonOption[ackcord.SnowflakeMap[ackcord.data.UserOrRole,ackcord.data.PermissionOverwrite]],category:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]):ackcord.requests.ModifyChannel", "kind" : "def"}, {"member" : "ackcord.syntax.VGuildChannelSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$VGuildChannelSyntax.html", "kind" : "class"}, {"name" : "ackcord.syntax.WebhookSyntax", "shortDescription" : "", "members_class" : [{"label" : "deleteWithToken", "tail" : "(): Option[DeleteWebhookWithToken]", "member" : "ackcord.syntax.WebhookSyntax.deleteWithToken", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#deleteWithToken:Option[ackcord.requests.DeleteWebhookWithToken]", "kind" : "def"}, {"label" : "delete", "tail" : "(): DeleteWebhook", "member" : "ackcord.syntax.WebhookSyntax.delete", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#delete:ackcord.requests.DeleteWebhook", "kind" : "def"}, {"label" : "modifyWithToken", "tail" : "(name: util.JsonOption[String], avatar: util.JsonOption[ImageData], channelId: util.JsonOption[TextGuildChannelId]): Option[ModifyWebhookWithToken]", "member" : "ackcord.syntax.WebhookSyntax.modifyWithToken", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#modifyWithToken(name:ackcord.util.JsonOption[String],avatar:ackcord.util.JsonOption[ackcord.data.ImageData],channelId:ackcord.util.JsonOption[ackcord.data.TextGuildChannelId]):Option[ackcord.requests.ModifyWebhookWithToken]", "kind" : "def"}, {"label" : "modify", "tail" : "(name: util.JsonOption[String], avatar: util.JsonOption[ImageData], channelId: util.JsonOption[TextGuildChannelId]): ModifyWebhook", "member" : "ackcord.syntax.WebhookSyntax.modify", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#modify(name:ackcord.util.JsonOption[String],avatar:ackcord.util.JsonOption[ackcord.data.ImageData],channelId:ackcord.util.JsonOption[ackcord.data.TextGuildChannelId]):ackcord.requests.ModifyWebhook", "kind" : "def"}, {"member" : "ackcord.syntax.WebhookSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ackcord\/syntax\/package$$WebhookSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ackcord\/syntax\/package$$WebhookSyntax.html", "kind" : "class"}], "ackcord.requests" : [{"name" : "ackcord.requests.AddGuildMember", "shortDescription" : "Adds a user to a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.AddGuildMember.hasPermissions", "link" : "ackcord\/requests\/AddGuildMember.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.AddGuildMember.requiredPermissions", "link" : "ackcord\/requests\/AddGuildMember.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[AddGuildMemberData]", "member" : "ackcord.requests.AddGuildMember.paramsEncoder", "link" : "ackcord\/requests\/AddGuildMember.html#paramsEncoder:io.circe.Encoder[ackcord.requests.AddGuildMemberData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.AddGuildMember.route", "link" : "ackcord\/requests\/AddGuildMember.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.AddGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": AddGuildMemberData", "member" : "ackcord.requests.AddGuildMember.params", "link" : "ackcord\/requests\/AddGuildMember.html#params:ackcord.requests.AddGuildMemberData", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.AddGuildMember.userId", "link" : "ackcord\/requests\/AddGuildMember.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.AddGuildMember.guildId", "link" : "ackcord\/requests\/AddGuildMember.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/AddGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawGuildMember): GuildMember", "member" : "ackcord.requests.GuildMemberRequest.toNiceResponse", "link" : "ackcord\/requests\/AddGuildMember.html#toNiceResponse(response:ackcord.data.raw.RawGuildMember):ackcord.data.GuildMember", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuildMember]", "member" : "ackcord.requests.GuildMemberRequest.responseDecoder", "link" : "ackcord\/requests\/AddGuildMember.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuildMember]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/AddGuildMember.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/AddGuildMember.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/AddGuildMember.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/AddGuildMember.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuildMember]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/AddGuildMember.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuildMember, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/AddGuildMember.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuildMember) => Boolean): Request[RawGuildMember]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/AddGuildMember.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuildMember) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/AddGuildMember.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuildMember]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/AddGuildMember.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/AddGuildMember.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/AddGuildMember.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AddGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AddGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AddGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AddGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AddGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AddGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AddGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AddGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AddGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AddGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AddGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AddGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AddGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/AddGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.requests.AddGuildMemberData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.AddGuildMemberData#<init>", "error" : "unsupported entity"}, {"label" : "deaf", "tail" : ": Option[Boolean]", "member" : "ackcord.requests.AddGuildMemberData.deaf", "link" : "ackcord\/requests\/AddGuildMemberData.html#deaf:Option[Boolean]", "kind" : "val"}, {"label" : "mute", "tail" : ": Option[Boolean]", "member" : "ackcord.requests.AddGuildMemberData.mute", "link" : "ackcord\/requests\/AddGuildMemberData.html#mute:Option[Boolean]", "kind" : "val"}, {"label" : "roles", "tail" : ": Option[Seq[RoleId]]", "member" : "ackcord.requests.AddGuildMemberData.roles", "link" : "ackcord\/requests\/AddGuildMemberData.html#roles:Option[Seq[ackcord.data.RoleId]]", "kind" : "val"}, {"label" : "nick", "tail" : ": Option[String]", "member" : "ackcord.requests.AddGuildMemberData.nick", "link" : "ackcord\/requests\/AddGuildMemberData.html#nick:Option[String]", "kind" : "val"}, {"label" : "accessToken", "tail" : ": String", "member" : "ackcord.requests.AddGuildMemberData.accessToken", "link" : "ackcord\/requests\/AddGuildMemberData.html#accessToken:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/AddGuildMemberData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AddGuildMemberData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AddGuildMemberData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AddGuildMemberData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AddGuildMemberData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AddGuildMemberData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AddGuildMemberData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AddGuildMemberData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AddGuildMemberData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AddGuildMemberData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AddGuildMemberData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AddGuildMemberData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AddGuildMemberData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AddGuildMemberData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/AddGuildMemberData.html", "kind" : "case class"}, {"name" : "ackcord.requests.AddGuildMemberRole", "shortDescription" : "Add a role to a guild member.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.AddGuildMemberRole.hasPermissions", "link" : "ackcord\/requests\/AddGuildMemberRole.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.AddGuildMemberRole.requiredPermissions", "link" : "ackcord\/requests\/AddGuildMemberRole.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.AddGuildMemberRole.route", "link" : "ackcord\/requests\/AddGuildMemberRole.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.AddGuildMemberRole#<init>", "error" : "unsupported entity"}, {"label" : "roleId", "tail" : ": RoleId", "member" : "ackcord.requests.AddGuildMemberRole.roleId", "link" : "ackcord\/requests\/AddGuildMemberRole.html#roleId:ackcord.data.RoleId", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.AddGuildMemberRole.userId", "link" : "ackcord\/requests\/AddGuildMemberRole.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.AddGuildMemberRole.guildId", "link" : "ackcord\/requests\/AddGuildMemberRole.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/AddGuildMemberRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/AddGuildMemberRole.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/AddGuildMemberRole.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/AddGuildMemberRole.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/AddGuildMemberRole.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/AddGuildMemberRole.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/AddGuildMemberRole.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/AddGuildMemberRole.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/AddGuildMemberRole.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/AddGuildMemberRole.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/AddGuildMemberRole.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/AddGuildMemberRole.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/AddGuildMemberRole.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/AddGuildMemberRole.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/AddGuildMemberRole.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/AddGuildMemberRole.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AddGuildMemberRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AddGuildMemberRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AddGuildMemberRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AddGuildMemberRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AddGuildMemberRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AddGuildMemberRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AddGuildMemberRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddGuildMemberRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AddGuildMemberRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AddGuildMemberRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AddGuildMemberRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AddGuildMemberRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AddGuildMemberRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AddGuildMemberRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/AddGuildMemberRole.html", "kind" : "case class"}, {"name" : "ackcord.requests.AddPinnedChannelMessages", "shortDescription" : "Add a new pinned message to a channel.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.AddPinnedChannelMessages.hasPermissions", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.AddPinnedChannelMessages.requiredPermissions", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.AddPinnedChannelMessages.route", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.AddPinnedChannelMessages#<init>", "error" : "unsupported entity"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.AddPinnedChannelMessages.messageId", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.AddPinnedChannelMessages.channelId", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AddPinnedChannelMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/AddPinnedChannelMessages.html", "kind" : "case class"}, {"name" : "ackcord.requests.AllowedMention", "shortDescription" : "", "object" : "ackcord\/requests\/AllowedMention$.html", "members_object" : [{"label" : "codec", "tail" : ": Codec[AllowedMention]", "member" : "ackcord.requests.AllowedMention.codec", "link" : "ackcord\/requests\/AllowedMention$.html#codec:io.circe.Codec[ackcord.requests.AllowedMention]", "kind" : "implicit val"}, {"label" : "all", "tail" : ": AllowedMention", "member" : "ackcord.requests.AllowedMention.all", "link" : "ackcord\/requests\/AllowedMention$.html#all:ackcord.requests.AllowedMention", "kind" : "val"}, {"label" : "none", "tail" : ": AllowedMention", "member" : "ackcord.requests.AllowedMention.none", "link" : "ackcord\/requests\/AllowedMention$.html#none:ackcord.requests.AllowedMention", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AllowedMention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AllowedMention$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AllowedMention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AllowedMention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AllowedMention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AllowedMention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AllowedMention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AllowedMention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AllowedMention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/AllowedMention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AllowedMention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/AllowedMention$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/AllowedMention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AllowedMention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AllowedMention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AllowedMention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.AllowedMention#<init>", "error" : "unsupported entity"}, {"label" : "users", "tail" : ": Seq[UserId]", "member" : "ackcord.requests.AllowedMention.users", "link" : "ackcord\/requests\/AllowedMention.html#users:Seq[ackcord.data.UserId]", "kind" : "val"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.requests.AllowedMention.roles", "link" : "ackcord\/requests\/AllowedMention.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "parse", "tail" : ": Seq[AllowedMentionTypes]", "member" : "ackcord.requests.AllowedMention.parse", "link" : "ackcord\/requests\/AllowedMention.html#parse:Seq[ackcord.requests.AllowedMentionTypes]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/AllowedMention.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AllowedMention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AllowedMention.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AllowedMention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AllowedMention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AllowedMention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AllowedMention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AllowedMention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AllowedMention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AllowedMention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AllowedMention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AllowedMention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AllowedMention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AllowedMention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/AllowedMention.html", "kind" : "case class"}, {"name" : "ackcord.requests.AllowedMentionTypes", "shortDescription" : "", "object" : "ackcord\/requests\/AllowedMentionTypes$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "ackcord.requests.AllowedMentionTypes.value", "link" : "ackcord\/requests\/AllowedMentionTypes.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AllowedMentionTypes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AllowedMentionTypes.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AllowedMentionTypes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AllowedMentionTypes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AllowedMentionTypes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AllowedMentionTypes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AllowedMentionTypes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AllowedMentionTypes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AllowedMentionTypes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/AllowedMentionTypes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AllowedMentionTypes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/AllowedMentionTypes.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/AllowedMentionTypes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AllowedMentionTypes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AllowedMentionTypes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AllowedMentionTypes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createUnknown", "tail" : "(value: String): AllowedMentionTypes", "member" : "ackcord.requests.AllowedMentionTypes.createUnknown", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#createUnknown(value:String):ackcord.requests.AllowedMentionTypes", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "ackcord.requests.AllowedMentionTypes.Unknown", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#UnknownextendsAllowedMentionTypeswithProductwithSerializable", "kind" : "case class"}, {"label" : "Everyone", "tail" : "", "member" : "ackcord.requests.AllowedMentionTypes.Everyone", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#Everyone", "kind" : "case object"}, {"label" : "Users", "tail" : "", "member" : "ackcord.requests.AllowedMentionTypes.Users", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#Users", "kind" : "case object"}, {"label" : "Roles", "tail" : "", "member" : "ackcord.requests.AllowedMentionTypes.Roles", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#Roles", "kind" : "case object"}, {"label" : "values", "tail" : "(): IndexedSeq[AllowedMentionTypes]", "member" : "ackcord.requests.AllowedMentionTypes.values", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#values:IndexedSeq[ackcord.requests.AllowedMentionTypes]", "kind" : "def"}, {"label" : "codec", "tail" : ": Codec[AllowedMentionTypes]", "member" : "ackcord.util.StringCirceEnumWithUnknown.codec", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#codec:io.circe.Codec[EntryType]", "kind" : "implicit val"}, {"label" : "findValues", "tail" : "(): IndexedSeq[AllowedMentionTypes]", "member" : "enumeratum.values.StringEnum.findValues", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#findValues:IndexedSeq[A]", "kind" : "final macro def"}, {"label" : "withValueEither", "tail" : "(i: String): Either[NoSuchMember[String, ValueEnumEntry[String]], AllowedMentionTypes]", "member" : "enumeratum.values.ValueEnum.withValueEither", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#withValueEither(i:ValueType):Either[enumeratum.values.NoSuchMember[ValueType,enumeratum.values.ValueEnumEntry[ValueType]],EntryType]", "kind" : "def"}, {"label" : "withValueOpt", "tail" : "(i: String): Option[AllowedMentionTypes]", "member" : "enumeratum.values.ValueEnum.withValueOpt", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#withValueOpt(i:ValueType):Option[EntryType]", "kind" : "def"}, {"label" : "withValue", "tail" : "(i: String): AllowedMentionTypes", "member" : "enumeratum.values.ValueEnum.withValue", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#withValue(i:ValueType):EntryType", "kind" : "def"}, {"label" : "valuesToEntriesMap", "tail" : ": Map[String, AllowedMentionTypes]", "member" : "enumeratum.values.ValueEnum.valuesToEntriesMap", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#valuesToEntriesMap:scala.collection.immutable.Map[ValueType,EntryType]", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/AllowedMentionTypes$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/AllowedMentionTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/AllowedMentionTypes.html", "kind" : "class"}, {"name" : "ackcord.requests.BaseRESTRequest", "trait" : "ackcord\/requests\/BaseRESTRequest.html", "kind" : "trait", "members_trait" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/BaseRESTRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/BaseRESTRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/BaseRESTRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/BaseRESTRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawResponse) => Boolean): Request[RawResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/BaseRESTRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/BaseRESTRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/BaseRESTRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/BaseRESTRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/BaseRESTRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BaseRESTRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BaseRESTRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BaseRESTRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BaseRESTRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BaseRESTRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BaseRESTRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BaseRESTRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BaseRESTRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BaseRESTRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BaseRESTRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BaseRESTRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BaseRESTRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/BaseRESTRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BaseRESTRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/BaseRESTRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/BaseRESTRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BaseRESTRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BaseRESTRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BaseRESTRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toNiceResponse", "tail" : "(response: RawResponse): NiceResponse", "member" : "ackcord.requests.BaseRESTRequest.toNiceResponse", "link" : "ackcord\/requests\/BaseRESTRequest.html#toNiceResponse(response:RawResponse):NiceResponse", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/BaseRESTRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.Request.requestBody", "link" : "ackcord\/requests\/BaseRESTRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/BaseRESTRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.Request.bodyForLogging", "link" : "ackcord\/requests\/BaseRESTRequest.html#bodyForLogging:Option[String]", "kind" : "abstract def"}], "shortDescription" : "Base trait for all REST requests in AckCord."}, {"name" : "ackcord.requests.BeginGuildPrune", "shortDescription" : "Begin a guild prune.", "object" : "ackcord\/requests\/BeginGuildPrune$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, days: Int, computePruneCount: Boolean, includeRoles: Seq[RoleId]): BeginGuildPrune", "member" : "ackcord.requests.BeginGuildPrune.mk", "link" : "ackcord\/requests\/BeginGuildPrune$.html#mk(guildId:ackcord.data.GuildId,days:Int,computePruneCount:Boolean,includeRoles:Seq[ackcord.data.RoleId]):ackcord.requests.BeginGuildPrune", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BeginGuildPrune$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BeginGuildPrune$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BeginGuildPrune$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BeginGuildPrune$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BeginGuildPrune$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BeginGuildPrune$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BeginGuildPrune$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BeginGuildPrune$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BeginGuildPrune$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/BeginGuildPrune$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BeginGuildPrune$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/BeginGuildPrune$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/BeginGuildPrune$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BeginGuildPrune$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BeginGuildPrune$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BeginGuildPrune$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "paramsEncoder", "tail" : "(): Encoder[BeginGuildPruneData]", "member" : "ackcord.requests.BeginGuildPrune.paramsEncoder", "link" : "ackcord\/requests\/BeginGuildPrune.html#paramsEncoder:io.circe.Encoder[ackcord.requests.BeginGuildPruneData]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[BeginGuildPruneResponse]", "member" : "ackcord.requests.BeginGuildPrune.responseDecoder", "link" : "ackcord\/requests\/BeginGuildPrune.html#responseDecoder:io.circe.Decoder[ackcord.requests.BeginGuildPruneResponse]", "kind" : "def"}, {"label" : "withReason", "tail" : "(reason: String): BeginGuildPrune", "member" : "ackcord.requests.BeginGuildPrune.withReason", "link" : "ackcord\/requests\/BeginGuildPrune.html#withReason(reason:String):ackcord.requests.BeginGuildPrune", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BeginGuildPrune.hasPermissions", "link" : "ackcord\/requests\/BeginGuildPrune.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BeginGuildPrune.requiredPermissions", "link" : "ackcord\/requests\/BeginGuildPrune.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.BeginGuildPrune.route", "link" : "ackcord\/requests\/BeginGuildPrune.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.BeginGuildPrune#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.BeginGuildPrune.reason", "link" : "ackcord\/requests\/BeginGuildPrune.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": BeginGuildPruneData", "member" : "ackcord.requests.BeginGuildPrune.params", "link" : "ackcord\/requests\/BeginGuildPrune.html#params:ackcord.requests.BeginGuildPruneData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.BeginGuildPrune.guildId", "link" : "ackcord\/requests\/BeginGuildPrune.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/BeginGuildPrune.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/BeginGuildPrune.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: BeginGuildPruneResponse): BeginGuildPruneResponse", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/BeginGuildPrune.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/BeginGuildPrune.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/BeginGuildPrune.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/BeginGuildPrune.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/BeginGuildPrune.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[BeginGuildPruneResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/BeginGuildPrune.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[BeginGuildPruneResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/BeginGuildPrune.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (BeginGuildPruneResponse) => Boolean): Request[BeginGuildPruneResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/BeginGuildPrune.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (BeginGuildPruneResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/BeginGuildPrune.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[BeginGuildPruneResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/BeginGuildPrune.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/BeginGuildPrune.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BeginGuildPrune.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BeginGuildPrune.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BeginGuildPrune.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BeginGuildPrune.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BeginGuildPrune.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BeginGuildPrune.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BeginGuildPrune.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPrune.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BeginGuildPrune.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BeginGuildPrune.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BeginGuildPrune.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BeginGuildPrune.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BeginGuildPrune.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BeginGuildPrune.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/BeginGuildPrune.html", "kind" : "case class"}, {"name" : "ackcord.requests.BeginGuildPruneData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.BeginGuildPruneData#<init>", "error" : "unsupported entity"}, {"label" : "includeRoles", "tail" : ": Seq[RoleId]", "member" : "ackcord.requests.BeginGuildPruneData.includeRoles", "link" : "ackcord\/requests\/BeginGuildPruneData.html#includeRoles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "computePruneCount", "tail" : ": Option[Boolean]", "member" : "ackcord.requests.BeginGuildPruneData.computePruneCount", "link" : "ackcord\/requests\/BeginGuildPruneData.html#computePruneCount:Option[Boolean]", "kind" : "val"}, {"label" : "days", "tail" : ": Int", "member" : "ackcord.requests.BeginGuildPruneData.days", "link" : "ackcord\/requests\/BeginGuildPruneData.html#days:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/BeginGuildPruneData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BeginGuildPruneData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BeginGuildPruneData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BeginGuildPruneData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BeginGuildPruneData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BeginGuildPruneData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BeginGuildPruneData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BeginGuildPruneData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BeginGuildPruneData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BeginGuildPruneData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BeginGuildPruneData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BeginGuildPruneData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BeginGuildPruneData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BeginGuildPruneData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/BeginGuildPruneData.html", "kind" : "case class"}, {"name" : "ackcord.requests.BeginGuildPruneResponse", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.BeginGuildPruneResponse#<init>", "error" : "unsupported entity"}, {"label" : "pruned", "tail" : ": Option[Int]", "member" : "ackcord.requests.BeginGuildPruneResponse.pruned", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#pruned:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BeginGuildPruneResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/BeginGuildPruneResponse.html", "kind" : "case class"}, {"name" : "ackcord.requests.BotAuthentication", "shortDescription" : "", "object" : "ackcord\/requests\/BotAuthentication$.html", "members_object" : [{"label" : "apply", "tail" : "(token: String): GenericHttpCredentials", "member" : "ackcord.requests.BotAuthentication.apply", "link" : "ackcord\/requests\/BotAuthentication$.html#apply(token:String):akka.http.scaladsl.model.headers.GenericHttpCredentials", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BotAuthentication$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BotAuthentication$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BotAuthentication$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BotAuthentication$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BotAuthentication$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BotAuthentication$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BotAuthentication$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BotAuthentication$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BotAuthentication$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BotAuthentication$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BotAuthentication$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BotAuthentication$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/BotAuthentication$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BotAuthentication$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/BotAuthentication$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/BotAuthentication$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BotAuthentication$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BotAuthentication$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BotAuthentication$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.requests.BulkDeleteMessages", "shortDescription" : "Delete multiple messages in a single request.", "object" : "ackcord\/requests\/BulkDeleteMessages$.html", "members_object" : [{"label" : "mk", "tail" : "(channelId: TextChannelId, messages: Seq[MessageId]): BulkDeleteMessages", "member" : "ackcord.requests.BulkDeleteMessages.mk", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#mk(channelId:ackcord.data.TextChannelId,messages:Seq[ackcord.data.MessageId]):ackcord.requests.BulkDeleteMessages", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BulkDeleteMessages$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessages$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BulkDeleteMessages.hasPermissions", "link" : "ackcord\/requests\/BulkDeleteMessages.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BulkDeleteMessages.requiredPermissions", "link" : "ackcord\/requests\/BulkDeleteMessages.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[BulkDeleteMessagesData]", "member" : "ackcord.requests.BulkDeleteMessages.paramsEncoder", "link" : "ackcord\/requests\/BulkDeleteMessages.html#paramsEncoder:io.circe.Encoder[ackcord.requests.BulkDeleteMessagesData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.BulkDeleteMessages.route", "link" : "ackcord\/requests\/BulkDeleteMessages.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.BulkDeleteMessages#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": BulkDeleteMessagesData", "member" : "ackcord.requests.BulkDeleteMessages.params", "link" : "ackcord\/requests\/BulkDeleteMessages.html#params:ackcord.requests.BulkDeleteMessagesData", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.BulkDeleteMessages.channelId", "link" : "ackcord\/requests\/BulkDeleteMessages.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/BulkDeleteMessages.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/BulkDeleteMessages.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/BulkDeleteMessages.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/BulkDeleteMessages.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/BulkDeleteMessages.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/BulkDeleteMessages.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/BulkDeleteMessages.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/BulkDeleteMessages.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/BulkDeleteMessages.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/BulkDeleteMessages.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/BulkDeleteMessages.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/BulkDeleteMessages.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/BulkDeleteMessages.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/BulkDeleteMessages.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BulkDeleteMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BulkDeleteMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BulkDeleteMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BulkDeleteMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BulkDeleteMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BulkDeleteMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BulkDeleteMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BulkDeleteMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BulkDeleteMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BulkDeleteMessages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BulkDeleteMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/BulkDeleteMessages.html", "kind" : "case class"}, {"name" : "ackcord.requests.BulkDeleteMessagesData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.BulkDeleteMessagesData#<init>", "error" : "unsupported entity"}, {"label" : "messages", "tail" : ": Seq[MessageId]", "member" : "ackcord.requests.BulkDeleteMessagesData.messages", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#messages:Seq[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/BulkDeleteMessagesData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/BulkDeleteMessagesData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateChannelInvite", "shortDescription" : "Create a new invite for a channel.", "object" : "ackcord\/requests\/CreateChannelInvite$.html", "members_object" : [{"label" : "mk", "tail" : "(channelId: GuildChannelId, maxAge: Int, maxUses: Int, temporary: Boolean, unique: Boolean, targetUser: Option[UserId], targetUserType: Option[Int]): CreateChannelInvite", "member" : "ackcord.requests.CreateChannelInvite.mk", "link" : "ackcord\/requests\/CreateChannelInvite$.html#mk(channelId:ackcord.data.GuildChannelId,maxAge:Int,maxUses:Int,temporary:Boolean,unique:Boolean,targetUser:Option[ackcord.data.UserId],targetUserType:Option[Int]):ackcord.requests.CreateChannelInvite", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateChannelInvite$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateChannelInvite$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateChannelInvite$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateChannelInvite$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateChannelInvite$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateChannelInvite$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateChannelInvite$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateChannelInvite$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateChannelInvite$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateChannelInvite$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateChannelInvite$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateChannelInvite$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateChannelInvite$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateChannelInvite$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateChannelInvite$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateChannelInvite$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): CreateChannelInvite", "member" : "ackcord.requests.CreateChannelInvite.withReason", "link" : "ackcord\/requests\/CreateChannelInvite.html#withReason(reason:String):ackcord.requests.CreateChannelInvite", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateChannelInvite.hasPermissions", "link" : "ackcord\/requests\/CreateChannelInvite.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateChannelInvite.requiredPermissions", "link" : "ackcord\/requests\/CreateChannelInvite.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Invite]", "member" : "ackcord.requests.CreateChannelInvite.responseDecoder", "link" : "ackcord\/requests\/CreateChannelInvite.html#responseDecoder:io.circe.Decoder[ackcord.data.Invite]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateChannelInviteData]", "member" : "ackcord.requests.CreateChannelInvite.paramsEncoder", "link" : "ackcord\/requests\/CreateChannelInvite.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateChannelInviteData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateChannelInvite.route", "link" : "ackcord\/requests\/CreateChannelInvite.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateChannelInvite#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateChannelInvite.reason", "link" : "ackcord\/requests\/CreateChannelInvite.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateChannelInviteData", "member" : "ackcord.requests.CreateChannelInvite.params", "link" : "ackcord\/requests\/CreateChannelInvite.html#params:ackcord.requests.CreateChannelInviteData", "kind" : "val"}, {"label" : "channelId", "tail" : ": GuildChannelId", "member" : "ackcord.requests.CreateChannelInvite.channelId", "link" : "ackcord\/requests\/CreateChannelInvite.html#channelId:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateChannelInvite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Invite): Invite", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateChannelInvite.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateChannelInvite.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateChannelInvite.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateChannelInvite.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateChannelInvite.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateChannelInvite.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Invite]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateChannelInvite.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Invite, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateChannelInvite.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Invite) => Boolean): Request[Invite]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateChannelInvite.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Invite) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateChannelInvite.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Invite]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateChannelInvite.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateChannelInvite.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateChannelInvite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateChannelInvite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateChannelInvite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateChannelInvite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateChannelInvite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateChannelInvite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateChannelInvite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInvite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateChannelInvite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateChannelInvite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateChannelInvite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateChannelInvite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateChannelInvite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateChannelInvite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateChannelInvite.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateChannelInviteData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateChannelInviteData#<init>", "error" : "unsupported entity"}, {"label" : "targetUserType", "tail" : ": Option[Int]", "member" : "ackcord.requests.CreateChannelInviteData.targetUserType", "link" : "ackcord\/requests\/CreateChannelInviteData.html#targetUserType:Option[Int]", "kind" : "val"}, {"label" : "targetUser", "tail" : ": Option[UserId]", "member" : "ackcord.requests.CreateChannelInviteData.targetUser", "link" : "ackcord\/requests\/CreateChannelInviteData.html#targetUser:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "unique", "tail" : ": Boolean", "member" : "ackcord.requests.CreateChannelInviteData.unique", "link" : "ackcord\/requests\/CreateChannelInviteData.html#unique:Boolean", "kind" : "val"}, {"label" : "temporary", "tail" : ": Boolean", "member" : "ackcord.requests.CreateChannelInviteData.temporary", "link" : "ackcord\/requests\/CreateChannelInviteData.html#temporary:Boolean", "kind" : "val"}, {"label" : "maxUses", "tail" : ": Int", "member" : "ackcord.requests.CreateChannelInviteData.maxUses", "link" : "ackcord\/requests\/CreateChannelInviteData.html#maxUses:Int", "kind" : "val"}, {"label" : "maxAge", "tail" : ": Int", "member" : "ackcord.requests.CreateChannelInviteData.maxAge", "link" : "ackcord\/requests\/CreateChannelInviteData.html#maxAge:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateChannelInviteData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateChannelInviteData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateChannelInviteData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateChannelInviteData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateChannelInviteData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateChannelInviteData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateChannelInviteData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateChannelInviteData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInviteData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInviteData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateChannelInviteData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateChannelInviteData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateChannelInviteData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateChannelInviteData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateChannelInviteData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateChannelInviteData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateChannelInviteData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateChannelInviteData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateDm", "shortDescription" : "Create a new DM channel.", "object" : "ackcord\/requests\/CreateDm$.html", "members_object" : [{"label" : "mk", "tail" : "(to: UserId): CreateDm", "member" : "ackcord.requests.CreateDm.mk", "link" : "ackcord\/requests\/CreateDm$.html#mk(to:ackcord.data.UserId):ackcord.requests.CreateDm", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateDm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateDm$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateDm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateDm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateDm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateDm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateDm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateDm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateDm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateDm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateDm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateDm$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateDm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateDm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateDm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateDm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[DMChannel]", "member" : "ackcord.requests.CreateDm.toNiceResponse", "link" : "ackcord\/requests\/CreateDm.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.DMChannel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.CreateDm.responseDecoder", "link" : "ackcord\/requests\/CreateDm.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateDMData]", "member" : "ackcord.requests.CreateDm.paramsEncoder", "link" : "ackcord\/requests\/CreateDm.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateDMData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateDm.route", "link" : "ackcord\/requests\/CreateDm.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateDm#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateDMData", "member" : "ackcord.requests.CreateDm.params", "link" : "ackcord\/requests\/CreateDm.html#params:ackcord.requests.CreateDMData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateDm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateDm.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateDm.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateDm.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateDm.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/CreateDm.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/CreateDm.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateDm.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateDm.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateDm.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateDm.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateDm.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateDm.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateDm.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateDm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateDm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateDm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateDm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateDm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateDm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateDm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateDm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateDm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateDm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateDm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateDm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateDm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateDm.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateDMData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateDMData#<init>", "error" : "unsupported entity"}, {"label" : "recipientId", "tail" : ": UserId", "member" : "ackcord.requests.CreateDMData.recipientId", "link" : "ackcord\/requests\/CreateDMData.html#recipientId:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateDMData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateDMData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateDMData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateDMData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateDMData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateDMData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateDMData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateDMData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDMData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDMData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateDMData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateDMData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateDMData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateDMData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateDMData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateDMData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateDMData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateDMData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGroupDm", "shortDescription" : "Create a group DM.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[GroupDMChannel]", "member" : "ackcord.requests.CreateGroupDm.toNiceResponse", "link" : "ackcord\/requests\/CreateGroupDm.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.GroupDMChannel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.CreateGroupDm.responseDecoder", "link" : "ackcord\/requests\/CreateGroupDm.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGroupDMData]", "member" : "ackcord.requests.CreateGroupDm.paramsEncoder", "link" : "ackcord\/requests\/CreateGroupDm.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGroupDMData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGroupDm.route", "link" : "ackcord\/requests\/CreateGroupDm.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGroupDm#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateGroupDMData", "member" : "ackcord.requests.CreateGroupDm.params", "link" : "ackcord\/requests\/CreateGroupDm.html#params:ackcord.requests.CreateGroupDMData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGroupDm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGroupDm.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGroupDm.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGroupDm.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGroupDm.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/CreateGroupDm.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/CreateGroupDm.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGroupDm.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGroupDm.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGroupDm.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGroupDm.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGroupDm.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateGroupDm.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGroupDm.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGroupDm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGroupDm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGroupDm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGroupDm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGroupDm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGroupDm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGroupDm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGroupDm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGroupDm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGroupDm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGroupDm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGroupDm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGroupDm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGroupDm.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGroupDMData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGroupDMData#<init>", "error" : "unsupported entity"}, {"label" : "nicks", "tail" : ": SnowflakeMap[User, String]", "member" : "ackcord.requests.CreateGroupDMData.nicks", "link" : "ackcord\/requests\/CreateGroupDMData.html#nicks:ackcord.SnowflakeMap[ackcord.data.User,String]", "kind" : "val"}, {"label" : "accessTokens", "tail" : ": Seq[String]", "member" : "ackcord.requests.CreateGroupDMData.accessTokens", "link" : "ackcord\/requests\/CreateGroupDMData.html#accessTokens:Seq[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGroupDMData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGroupDMData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGroupDMData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGroupDMData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGroupDMData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGroupDMData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGroupDMData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGroupDMData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDMData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDMData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGroupDMData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGroupDMData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGroupDMData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGroupDMData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGroupDMData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGroupDMData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGroupDMData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGroupDMData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuild", "shortDescription" : "Create a new guild.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawGuild): Option[Guild]", "member" : "ackcord.requests.CreateGuild.toNiceResponse", "link" : "ackcord\/requests\/CreateGuild.html#toNiceResponse(response:ackcord.data.raw.RawGuild):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuild]", "member" : "ackcord.requests.CreateGuild.responseDecoder", "link" : "ackcord\/requests\/CreateGuild.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuild]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildData]", "member" : "ackcord.requests.CreateGuild.paramsEncoder", "link" : "ackcord\/requests\/CreateGuild.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuild.route", "link" : "ackcord\/requests\/CreateGuild.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuild#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateGuildData", "member" : "ackcord.requests.CreateGuild.params", "link" : "ackcord\/requests\/CreateGuild.html#params:ackcord.requests.CreateGuildData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuild.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuild.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuild.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuild.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/CreateGuild.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/CreateGuild.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuild]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuild.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuild, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuild.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuild) => Boolean): Request[RawGuild]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuild.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuild) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuild.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuild]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuild.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateGuild.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuild.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildBan", "shortDescription" : "Ban a user from a guild.", "object" : "ackcord\/requests\/CreateGuildBan$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, userId: UserId, deleteMessageDays: Option[Int], reason: Option[String]): CreateGuildBan", "member" : "ackcord.requests.CreateGuildBan.mk", "link" : "ackcord\/requests\/CreateGuildBan$.html#mk(guildId:ackcord.data.GuildId,userId:ackcord.data.UserId,deleteMessageDays:Option[Int],reason:Option[String]):ackcord.requests.CreateGuildBan", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildBan$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildBan$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildBan$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildBan$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildBan$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildBan$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildBan$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildBan$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildBan$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateGuildBan$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildBan$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateGuildBan$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateGuildBan$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildBan$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildBan$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildBan$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildBanData]", "member" : "ackcord.requests.CreateGuildBan.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildBan.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildBanData]", "kind" : "def"}, {"label" : "withReason", "tail" : "(reason: String): CreateGuildBan", "member" : "ackcord.requests.CreateGuildBan.withReason", "link" : "ackcord\/requests\/CreateGuildBan.html#withReason(reason:String):ackcord.requests.CreateGuildBan", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateGuildBan.hasPermissions", "link" : "ackcord\/requests\/CreateGuildBan.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateGuildBan.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildBan.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildBan.route", "link" : "ackcord\/requests\/CreateGuildBan.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildBan#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildBan.reason", "link" : "ackcord\/requests\/CreateGuildBan.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateGuildBanData", "member" : "ackcord.requests.CreateGuildBan.params", "link" : "ackcord\/requests\/CreateGuildBan.html#params:ackcord.requests.CreateGuildBanData", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.CreateGuildBan.userId", "link" : "ackcord\/requests\/CreateGuildBan.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.CreateGuildBan.guildId", "link" : "ackcord\/requests\/CreateGuildBan.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildBan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/CreateGuildBan.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildBan.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildBan.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateGuildBan.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildBan.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildBan.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildBan.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildBan.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildBan.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildBan.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildBan.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildBan.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildBan.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildBan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildBan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildBan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildBan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildBan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildBan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildBan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildBan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildBan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildBan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildBan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildBan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildBan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildBan.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildBanData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildBanData#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildBanData.reason", "link" : "ackcord\/requests\/CreateGuildBanData.html#reason:Option[String]", "kind" : "val"}, {"label" : "deleteMessageDays", "tail" : ": Option[Int]", "member" : "ackcord.requests.CreateGuildBanData.deleteMessageDays", "link" : "ackcord\/requests\/CreateGuildBanData.html#deleteMessageDays:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildBanData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildBanData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildBanData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildBanData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildBanData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildBanData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildBanData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildBanData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBanData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBanData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildBanData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildBanData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildBanData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildBanData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildBanData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildBanData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildBanData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildBanData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildChannel", "shortDescription" : "Create a channel in a guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): CreateGuildChannel", "member" : "ackcord.requests.CreateGuildChannel.withReason", "link" : "ackcord\/requests\/CreateGuildChannel.html#withReason(reason:String):ackcord.requests.CreateGuildChannel", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateGuildChannel.hasPermissions", "link" : "ackcord\/requests\/CreateGuildChannel.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateGuildChannel.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildChannel.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[GuildChannel]", "member" : "ackcord.requests.CreateGuildChannel.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildChannel.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.GuildChannel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.CreateGuildChannel.responseDecoder", "link" : "ackcord\/requests\/CreateGuildChannel.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.CreateGuildChannel.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildChannel.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildChannelData]", "member" : "ackcord.requests.CreateGuildChannel.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildChannel.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildChannelData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildChannel.route", "link" : "ackcord\/requests\/CreateGuildChannel.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildChannel#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildChannel.reason", "link" : "ackcord\/requests\/CreateGuildChannel.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateGuildChannelData", "member" : "ackcord.requests.CreateGuildChannel.params", "link" : "ackcord\/requests\/CreateGuildChannel.html#params:ackcord.requests.CreateGuildChannelData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.CreateGuildChannel.guildId", "link" : "ackcord\/requests\/CreateGuildChannel.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateGuildChannel.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildChannel.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildChannel.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildChannel.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildChannel.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildChannel.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildChannel.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildChannel.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildChannel.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildChannel.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildChannelData", "shortDescription" : "", "object" : "ackcord\/requests\/CreateGuildChannelData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[CreateGuildChannelData]", "member" : "ackcord.requests.CreateGuildChannelData.encoder", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#encoder:io.circe.Encoder[ackcord.requests.CreateGuildChannelData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildChannelData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannelData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.CreateGuildChannelData#<init>", "error" : "unsupported entity"}, {"label" : "nsfw", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.CreateGuildChannelData.nsfw", "link" : "ackcord\/requests\/CreateGuildChannelData.html#nsfw:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "parentId", "tail" : ": util.JsonOption[SnowflakeType[GuildCategory]]", "member" : "ackcord.requests.CreateGuildChannelData.parentId", "link" : "ackcord\/requests\/CreateGuildChannelData.html#parentId:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": util.JsonOption[Seq[PermissionOverwrite]]", "member" : "ackcord.requests.CreateGuildChannelData.permissionOverwrites", "link" : "ackcord\/requests\/CreateGuildChannelData.html#permissionOverwrites:ackcord.util.JsonOption[Seq[ackcord.data.PermissionOverwrite]]", "kind" : "val"}, {"label" : "rateLimitPerUser", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.CreateGuildChannelData.rateLimitPerUser", "link" : "ackcord\/requests\/CreateGuildChannelData.html#rateLimitPerUser:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "userLimit", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.CreateGuildChannelData.userLimit", "link" : "ackcord\/requests\/CreateGuildChannelData.html#userLimit:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "bitrate", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.CreateGuildChannelData.bitrate", "link" : "ackcord\/requests\/CreateGuildChannelData.html#bitrate:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "topic", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.CreateGuildChannelData.topic", "link" : "ackcord\/requests\/CreateGuildChannelData.html#topic:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "type", "tail" : ": util.JsonOption[ChannelType]", "member" : "ackcord.requests.CreateGuildChannelData.type", "link" : "ackcord\/requests\/CreateGuildChannelData.html#type:ackcord.util.JsonOption[ackcord.data.ChannelType]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.CreateGuildChannelData.name", "link" : "ackcord\/requests\/CreateGuildChannelData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildChannelData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildChannelData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildChannelData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildChannelData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildChannelData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildChannelData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildChannelData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildChannelData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildChannelData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildChannelData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildChannelData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildChannelData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildChannelData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannelData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildChannelData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildChannelData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildData#<init>", "error" : "unsupported entity"}, {"label" : "systemChannelId", "tail" : ": Option[TextGuildChannelId]", "member" : "ackcord.requests.CreateGuildData.systemChannelId", "link" : "ackcord\/requests\/CreateGuildData.html#systemChannelId:Option[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "afkTimeout", "tail" : ": Option[Int]", "member" : "ackcord.requests.CreateGuildData.afkTimeout", "link" : "ackcord\/requests\/CreateGuildData.html#afkTimeout:Option[Int]", "kind" : "val"}, {"label" : "afkChannelId", "tail" : ": Option[VoiceGuildChannelId]", "member" : "ackcord.requests.CreateGuildData.afkChannelId", "link" : "ackcord\/requests\/CreateGuildData.html#afkChannelId:Option[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "channels", "tail" : ": Option[Seq[CreateGuildChannelData]]", "member" : "ackcord.requests.CreateGuildData.channels", "link" : "ackcord\/requests\/CreateGuildData.html#channels:Option[Seq[ackcord.requests.CreateGuildChannelData]]", "kind" : "val"}, {"label" : "roles", "tail" : ": Option[Seq[Role]]", "member" : "ackcord.requests.CreateGuildData.roles", "link" : "ackcord\/requests\/CreateGuildData.html#roles:Option[Seq[ackcord.data.Role]]", "kind" : "val"}, {"label" : "explicitContentFilter", "tail" : ": Option[FilterLevel]", "member" : "ackcord.requests.CreateGuildData.explicitContentFilter", "link" : "ackcord\/requests\/CreateGuildData.html#explicitContentFilter:Option[ackcord.data.FilterLevel]", "kind" : "val"}, {"label" : "defaultMessageNotifications", "tail" : ": Option[NotificationLevel]", "member" : "ackcord.requests.CreateGuildData.defaultMessageNotifications", "link" : "ackcord\/requests\/CreateGuildData.html#defaultMessageNotifications:Option[ackcord.data.NotificationLevel]", "kind" : "val"}, {"label" : "verificationLevel", "tail" : ": Option[VerificationLevel]", "member" : "ackcord.requests.CreateGuildData.verificationLevel", "link" : "ackcord\/requests\/CreateGuildData.html#verificationLevel:Option[ackcord.data.VerificationLevel]", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[ImageData]", "member" : "ackcord.requests.CreateGuildData.icon", "link" : "ackcord\/requests\/CreateGuildData.html#icon:Option[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "region", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildData.region", "link" : "ackcord\/requests\/CreateGuildData.html#region:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.CreateGuildData.name", "link" : "ackcord\/requests\/CreateGuildData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildEmoji", "shortDescription" : "Create a new emoji for a guild.", "object" : "ackcord\/requests\/CreateGuildEmoji$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, name: String, image: ImageData, roles: Seq[RoleId]): CreateGuildEmoji", "member" : "ackcord.requests.CreateGuildEmoji.mk", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#mk(guildId:ackcord.data.GuildId,name:String,image:ackcord.data.ImageData,roles:Seq[ackcord.data.RoleId]):ackcord.requests.CreateGuildEmoji", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildEmoji$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmoji$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): CreateGuildEmoji", "member" : "ackcord.requests.CreateGuildEmoji.withReason", "link" : "ackcord\/requests\/CreateGuildEmoji.html#withReason(reason:String):ackcord.requests.CreateGuildEmoji", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateGuildEmoji.hasPermissions", "link" : "ackcord\/requests\/CreateGuildEmoji.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateGuildEmoji.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildEmoji.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawEmoji): Emoji", "member" : "ackcord.requests.CreateGuildEmoji.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildEmoji.html#toNiceResponse(response:ackcord.data.raw.RawEmoji):ackcord.data.Emoji", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawEmoji]", "member" : "ackcord.requests.CreateGuildEmoji.responseDecoder", "link" : "ackcord\/requests\/CreateGuildEmoji.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawEmoji]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildEmojiData]", "member" : "ackcord.requests.CreateGuildEmoji.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildEmoji.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildEmojiData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildEmoji.route", "link" : "ackcord\/requests\/CreateGuildEmoji.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildEmoji#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildEmoji.reason", "link" : "ackcord\/requests\/CreateGuildEmoji.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateGuildEmojiData", "member" : "ackcord.requests.CreateGuildEmoji.params", "link" : "ackcord\/requests\/CreateGuildEmoji.html#params:ackcord.requests.CreateGuildEmojiData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.CreateGuildEmoji.guildId", "link" : "ackcord\/requests\/CreateGuildEmoji.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateGuildEmoji.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildEmoji.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildEmoji.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildEmoji.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildEmoji.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawEmoji]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildEmoji.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawEmoji, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildEmoji.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawEmoji) => Boolean): Request[RawEmoji]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildEmoji.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawEmoji) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildEmoji.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawEmoji]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildEmoji.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildEmoji.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildEmoji.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildEmojiData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildEmojiData#<init>", "error" : "unsupported entity"}, {"label" : "roles", "tail" : ": Seq[RoleId]", "member" : "ackcord.requests.CreateGuildEmojiData.roles", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#roles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "image", "tail" : ": ImageData", "member" : "ackcord.requests.CreateGuildEmojiData.image", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#image:ackcord.data.ImageData", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.CreateGuildEmojiData.name", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildEmojiData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildEmojiData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildEmojiData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildFromTemplate", "shortDescription" : "", "members_case class" : [{"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildFromTemplateData]", "member" : "ackcord.requests.CreateGuildFromTemplate.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildFromTemplateData]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuild]", "member" : "ackcord.requests.CreateGuildFromTemplate.responseDecoder", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuild]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildFromTemplate.route", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildFromTemplate#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateGuildFromTemplateData", "member" : "ackcord.requests.CreateGuildFromTemplate.params", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#params:ackcord.requests.CreateGuildFromTemplateData", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.requests.CreateGuildFromTemplate.code", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawGuild): RawGuild", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuild]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuild, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuild) => Boolean): Request[RawGuild]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuild) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuild]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildFromTemplate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildFromTemplate.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildFromTemplateData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildFromTemplateData#<init>", "error" : "unsupported entity"}, {"label" : "icon", "tail" : ": Option[ImageData]", "member" : "ackcord.requests.CreateGuildFromTemplateData.icon", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#icon:Option[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.CreateGuildFromTemplateData.name", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildFromTemplateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildFromTemplateData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildIntegration", "shortDescription" : "Attach an integration to a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateGuildIntegration.hasPermissions", "link" : "ackcord\/requests\/CreateGuildIntegration.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateGuildIntegration.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildIntegration.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildIntegrationData]", "member" : "ackcord.requests.CreateGuildIntegration.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildIntegration.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildIntegrationData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildIntegration.route", "link" : "ackcord\/requests\/CreateGuildIntegration.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildIntegration#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateGuildIntegrationData", "member" : "ackcord.requests.CreateGuildIntegration.params", "link" : "ackcord\/requests\/CreateGuildIntegration.html#params:ackcord.requests.CreateGuildIntegrationData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.CreateGuildIntegration.guildId", "link" : "ackcord\/requests\/CreateGuildIntegration.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildIntegration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/CreateGuildIntegration.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildIntegration.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildIntegration.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildIntegration.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildIntegration.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildIntegration.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildIntegration.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildIntegration.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildIntegration.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildIntegration.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildIntegration.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateGuildIntegration.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildIntegration.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildIntegration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildIntegration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildIntegration.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildIntegrationData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildIntegrationData#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": IntegrationId", "member" : "ackcord.requests.CreateGuildIntegrationData.id", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#id:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "ackcord.requests.CreateGuildIntegrationData.type", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#type:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildIntegrationData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildIntegrationData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildRole", "shortDescription" : "Create a new role in a guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): CreateGuildRole", "member" : "ackcord.requests.CreateGuildRole.withReason", "link" : "ackcord\/requests\/CreateGuildRole.html#withReason(reason:String):ackcord.requests.CreateGuildRole", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateGuildRole.hasPermissions", "link" : "ackcord\/requests\/CreateGuildRole.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateGuildRole.requiredPermissions", "link" : "ackcord\/requests\/CreateGuildRole.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawRole): Role", "member" : "ackcord.requests.CreateGuildRole.toNiceResponse", "link" : "ackcord\/requests\/CreateGuildRole.html#toNiceResponse(response:ackcord.data.raw.RawRole):ackcord.data.Role", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawRole]", "member" : "ackcord.requests.CreateGuildRole.responseDecoder", "link" : "ackcord\/requests\/CreateGuildRole.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawRole]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateGuildRoleData]", "member" : "ackcord.requests.CreateGuildRole.paramsEncoder", "link" : "ackcord\/requests\/CreateGuildRole.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateGuildRoleData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateGuildRole.route", "link" : "ackcord\/requests\/CreateGuildRole.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateGuildRole#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildRole.reason", "link" : "ackcord\/requests\/CreateGuildRole.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateGuildRoleData", "member" : "ackcord.requests.CreateGuildRole.params", "link" : "ackcord\/requests\/CreateGuildRole.html#params:ackcord.requests.CreateGuildRoleData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.CreateGuildRole.guildId", "link" : "ackcord\/requests\/CreateGuildRole.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateGuildRole.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateGuildRole.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateGuildRole.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateGuildRole.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateGuildRole.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawRole]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateGuildRole.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawRole, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateGuildRole.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawRole) => Boolean): Request[RawRole]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateGuildRole.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawRole) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateGuildRole.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawRole]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateGuildRole.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateGuildRole.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildRole.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateGuildRoleData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateGuildRoleData#<init>", "error" : "unsupported entity"}, {"label" : "mentionable", "tail" : ": Option[Boolean]", "member" : "ackcord.requests.CreateGuildRoleData.mentionable", "link" : "ackcord\/requests\/CreateGuildRoleData.html#mentionable:Option[Boolean]", "kind" : "val"}, {"label" : "hoist", "tail" : ": Option[Boolean]", "member" : "ackcord.requests.CreateGuildRoleData.hoist", "link" : "ackcord\/requests\/CreateGuildRoleData.html#hoist:Option[Boolean]", "kind" : "val"}, {"label" : "color", "tail" : ": Option[Int]", "member" : "ackcord.requests.CreateGuildRoleData.color", "link" : "ackcord\/requests\/CreateGuildRoleData.html#color:Option[Int]", "kind" : "val"}, {"label" : "permissions", "tail" : ": Option[Permission]", "member" : "ackcord.requests.CreateGuildRoleData.permissions", "link" : "ackcord\/requests\/CreateGuildRoleData.html#permissions:Option[ackcord.data.Permission]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateGuildRoleData.name", "link" : "ackcord\/requests\/CreateGuildRoleData.html#name:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateGuildRoleData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateGuildRoleData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateGuildRoleData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateGuildRoleData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateGuildRoleData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateGuildRoleData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateGuildRoleData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateGuildRoleData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRoleData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRoleData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateGuildRoleData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateGuildRoleData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateGuildRoleData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateGuildRoleData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateGuildRoleData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateGuildRoleData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateGuildRoleData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateGuildRoleData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateMessage", "shortDescription" : "Create a message in a channel.", "object" : "ackcord\/requests\/CreateMessage$.html", "members_object" : [{"label" : "mkEmbed", "tail" : "(channelId: TextChannelId, embed: OutgoingEmbed): CreateMessage", "member" : "ackcord.requests.CreateMessage.mkEmbed", "link" : "ackcord\/requests\/CreateMessage$.html#mkEmbed(channelId:ackcord.data.TextChannelId,embed:ackcord.data.OutgoingEmbed):ackcord.requests.CreateMessage", "kind" : "def"}, {"label" : "mkContent", "tail" : "(channelId: TextChannelId, content: String): CreateMessage", "member" : "ackcord.requests.CreateMessage.mkContent", "link" : "ackcord\/requests\/CreateMessage$.html#mkContent(channelId:ackcord.data.TextChannelId,content:String):ackcord.requests.CreateMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateMessage.hasPermissions", "link" : "ackcord\/requests\/CreateMessage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateMessage.requiredPermissions", "link" : "ackcord\/requests\/CreateMessage.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawMessage): Message", "member" : "ackcord.requests.CreateMessage.toNiceResponse", "link" : "ackcord\/requests\/CreateMessage.html#toNiceResponse(response:ackcord.data.raw.RawMessage):ackcord.data.Message", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawMessage]", "member" : "ackcord.requests.CreateMessage.responseDecoder", "link" : "ackcord\/requests\/CreateMessage.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.CreateMessage.requestBody", "link" : "ackcord\/requests\/CreateMessage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateMessageData]", "member" : "ackcord.requests.CreateMessage.paramsEncoder", "link" : "ackcord\/requests\/CreateMessage.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateMessageData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateMessage.route", "link" : "ackcord\/requests\/CreateMessage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateMessage#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": CreateMessageData", "member" : "ackcord.requests.CreateMessage.params", "link" : "ackcord\/requests\/CreateMessage.html#params:ackcord.requests.CreateMessageData", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.CreateMessage.channelId", "link" : "ackcord\/requests\/CreateMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateMessage.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateMessage.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateMessage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawMessage]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateMessage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawMessage, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateMessage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawMessage) => Boolean): Request[RawMessage]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateMessage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawMessage) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateMessage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawMessage]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateMessage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateMessage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateMessage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateMessage.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateMessageData", "shortDescription" : "", "object" : "ackcord\/requests\/CreateMessageData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[CreateMessageData]", "member" : "ackcord.requests.CreateMessageData.encoder", "link" : "ackcord\/requests\/CreateMessageData$.html#encoder:io.circe.Encoder[ackcord.requests.CreateMessageData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessageData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessageData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessageData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessageData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessageData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessageData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessageData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessageData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessageData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateMessageData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessageData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateMessageData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateMessageData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessageData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessageData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessageData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.CreateMessageData#<init>", "error" : "unsupported entity"}, {"label" : "allowedMentions", "tail" : ": AllowedMention", "member" : "ackcord.requests.CreateMessageData.allowedMentions", "link" : "ackcord\/requests\/CreateMessageData.html#allowedMentions:ackcord.requests.AllowedMention", "kind" : "val"}, {"label" : "embed", "tail" : ": Option[OutgoingEmbed]", "member" : "ackcord.requests.CreateMessageData.embed", "link" : "ackcord\/requests\/CreateMessageData.html#embed:Option[ackcord.data.OutgoingEmbed]", "kind" : "val"}, {"label" : "files", "tail" : ": Seq[CreateMessageFile]", "member" : "ackcord.requests.CreateMessageData.files", "link" : "ackcord\/requests\/CreateMessageData.html#files:Seq[ackcord.requests.CreateMessageFile]", "kind" : "val"}, {"label" : "tts", "tail" : ": Boolean", "member" : "ackcord.requests.CreateMessageData.tts", "link" : "ackcord\/requests\/CreateMessageData.html#tts:Boolean", "kind" : "val"}, {"label" : "nonce", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.requests.CreateMessageData.nonce", "link" : "ackcord\/requests\/CreateMessageData.html#nonce:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "ackcord.requests.CreateMessageData.content", "link" : "ackcord\/requests\/CreateMessageData.html#content:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateMessageData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessageData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessageData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessageData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessageData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessageData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessageData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessageData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessageData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessageData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessageData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessageData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessageData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessageData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateMessageData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateMessageFile", "object" : "ackcord\/requests\/CreateMessageFile$.html", "members_object" : [{"label" : "StringFile", "tail" : "", "member" : "ackcord.requests.CreateMessageFile.StringFile", "link" : "ackcord\/requests\/CreateMessageFile$.html#StringFileextendsCreateMessageFilewithProductwithSerializable", "kind" : "case class"}, {"label" : "ByteFile", "tail" : "", "member" : "ackcord.requests.CreateMessageFile.ByteFile", "link" : "ackcord\/requests\/CreateMessageFile$.html#ByteFileextendsCreateMessageFilewithProductwithSerializable", "kind" : "case class"}, {"label" : "SourceFile", "tail" : "", "member" : "ackcord.requests.CreateMessageFile.SourceFile", "link" : "ackcord\/requests\/CreateMessageFile$.html#SourceFileextendsCreateMessageFilewithProductwithSerializable", "kind" : "case class"}, {"label" : "FromPath", "tail" : "", "member" : "ackcord.requests.CreateMessageFile.FromPath", "link" : "ackcord\/requests\/CreateMessageFile$.html#FromPathextendsCreateMessageFilewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessageFile$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessageFile$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessageFile$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessageFile$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessageFile$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessageFile$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessageFile$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessageFile$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessageFile$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateMessageFile$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessageFile$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateMessageFile$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateMessageFile$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessageFile$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessageFile$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessageFile$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/requests\/CreateMessageFile.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateMessageFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateMessageFile.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateMessageFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateMessageFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateMessageFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateMessageFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateMessageFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateMessageFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateMessageFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateMessageFile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/CreateMessageFile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateMessageFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/CreateMessageFile.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/CreateMessageFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateMessageFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateMessageFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateMessageFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toBodyPart", "tail" : "(): BodyPart", "member" : "ackcord.requests.CreateMessageFile.toBodyPart", "link" : "ackcord\/requests\/CreateMessageFile.html#toBodyPart:akka.http.scaladsl.model.Multipart.FormData.BodyPart", "kind" : "abstract def"}, {"label" : "isValid", "tail" : "(): Boolean", "member" : "ackcord.requests.CreateMessageFile.isValid", "link" : "ackcord\/requests\/CreateMessageFile.html#isValid:Boolean", "kind" : "abstract def"}, {"label" : "fileName", "tail" : "(): String", "member" : "ackcord.requests.CreateMessageFile.fileName", "link" : "ackcord\/requests\/CreateMessageFile.html#fileName:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.requests.CreateReaction", "shortDescription" : "Create a reaction for a message.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateReaction.hasPermissions", "link" : "ackcord\/requests\/CreateReaction.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateReaction.requiredPermissions", "link" : "ackcord\/requests\/CreateReaction.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateReaction.route", "link" : "ackcord\/requests\/CreateReaction.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateReaction#<init>", "error" : "unsupported entity"}, {"label" : "emoji", "tail" : ": String", "member" : "ackcord.requests.CreateReaction.emoji", "link" : "ackcord\/requests\/CreateReaction.html#emoji:String", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.CreateReaction.messageId", "link" : "ackcord\/requests\/CreateReaction.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.CreateReaction.channelId", "link" : "ackcord\/requests\/CreateReaction.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateReaction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/CreateReaction.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/CreateReaction.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateReaction.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/CreateReaction.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/CreateReaction.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateReaction.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateReaction.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateReaction.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateReaction.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateReaction.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateReaction.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateReaction.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateReaction.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CreateReaction.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateReaction.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateReaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateReaction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateReaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateReaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateReaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateReaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateReaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateReaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateReaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateReaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateReaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateReaction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateReaction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateReaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateReaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateReaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateReaction.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateWebhook", "shortDescription" : "Create a new webhook in a channel.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): CreateWebhook", "member" : "ackcord.requests.CreateWebhook.withReason", "link" : "ackcord\/requests\/CreateWebhook.html#withReason(reason:String):ackcord.requests.CreateWebhook", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CreateWebhook.hasPermissions", "link" : "ackcord\/requests\/CreateWebhook.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CreateWebhook.requiredPermissions", "link" : "ackcord\/requests\/CreateWebhook.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Webhook]", "member" : "ackcord.requests.CreateWebhook.responseDecoder", "link" : "ackcord\/requests\/CreateWebhook.html#responseDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[CreateWebhookData]", "member" : "ackcord.requests.CreateWebhook.paramsEncoder", "link" : "ackcord\/requests\/CreateWebhook.html#paramsEncoder:io.circe.Encoder[ackcord.requests.CreateWebhookData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CreateWebhook.route", "link" : "ackcord\/requests\/CreateWebhook.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CreateWebhook#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.CreateWebhook.reason", "link" : "ackcord\/requests\/CreateWebhook.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": CreateWebhookData", "member" : "ackcord.requests.CreateWebhook.params", "link" : "ackcord\/requests\/CreateWebhook.html#params:ackcord.requests.CreateWebhookData", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.CreateWebhook.channelId", "link" : "ackcord\/requests\/CreateWebhook.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateWebhook.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Webhook): Webhook", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/CreateWebhook.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/CreateWebhook.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CreateWebhook.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CreateWebhook.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CreateWebhook.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CreateWebhook.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Webhook]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CreateWebhook.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Webhook, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CreateWebhook.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Webhook) => Boolean): Request[Webhook]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CreateWebhook.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Webhook) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CreateWebhook.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Webhook]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CreateWebhook.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CreateWebhook.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateWebhook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateWebhook.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateWebhook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateWebhook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateWebhook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateWebhook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateWebhook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateWebhook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateWebhook.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateWebhook.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateWebhook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateWebhook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateWebhook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateWebhook.html", "kind" : "case class"}, {"name" : "ackcord.requests.CreateWebhookData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.CreateWebhookData#<init>", "error" : "unsupported entity"}, {"label" : "avatar", "tail" : ": Option[ImageData]", "member" : "ackcord.requests.CreateWebhookData.avatar", "link" : "ackcord\/requests\/CreateWebhookData.html#avatar:Option[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.CreateWebhookData.name", "link" : "ackcord\/requests\/CreateWebhookData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CreateWebhookData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CreateWebhookData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CreateWebhookData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CreateWebhookData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CreateWebhookData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CreateWebhookData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CreateWebhookData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CreateWebhookData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhookData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhookData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CreateWebhookData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CreateWebhookData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CreateWebhookData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CreateWebhookData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CreateWebhookData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CreateWebhookData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CreateWebhookData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CreateWebhookData.html", "kind" : "case class"}, {"name" : "ackcord.requests.CrosspostMessage", "shortDescription" : "", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.CrosspostMessage.hasPermissions", "link" : "ackcord\/requests\/CrosspostMessage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.CrosspostMessage.requiredPermissions", "link" : "ackcord\/requests\/CrosspostMessage.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawMessage): Message", "member" : "ackcord.requests.CrosspostMessage.toNiceResponse", "link" : "ackcord\/requests\/CrosspostMessage.html#toNiceResponse(response:ackcord.data.raw.RawMessage):ackcord.data.Message", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawMessage]", "member" : "ackcord.requests.CrosspostMessage.responseDecoder", "link" : "ackcord\/requests\/CrosspostMessage.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.CrosspostMessage.route", "link" : "ackcord\/requests\/CrosspostMessage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.CrosspostMessage#<init>", "error" : "unsupported entity"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.CrosspostMessage.messageId", "link" : "ackcord\/requests\/CrosspostMessage.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.CrosspostMessage.channelId", "link" : "ackcord\/requests\/CrosspostMessage.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/CrosspostMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/CrosspostMessage.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/CrosspostMessage.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/CrosspostMessage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/CrosspostMessage.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/CrosspostMessage.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/CrosspostMessage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawMessage]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/CrosspostMessage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawMessage, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/CrosspostMessage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawMessage) => Boolean): Request[RawMessage]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/CrosspostMessage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawMessage) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/CrosspostMessage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawMessage]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/CrosspostMessage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/CrosspostMessage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/CrosspostMessage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/CrosspostMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/CrosspostMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/CrosspostMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/CrosspostMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/CrosspostMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/CrosspostMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/CrosspostMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CrosspostMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CrosspostMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/CrosspostMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/CrosspostMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/CrosspostMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/CrosspostMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/CrosspostMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/CrosspostMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/CrosspostMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/CrosspostMessage.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteAllReactions", "shortDescription" : "Clear all reactions from a message.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteAllReactions.hasPermissions", "link" : "ackcord\/requests\/DeleteAllReactions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteAllReactions.requiredPermissions", "link" : "ackcord\/requests\/DeleteAllReactions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteAllReactions.route", "link" : "ackcord\/requests\/DeleteAllReactions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteAllReactions#<init>", "error" : "unsupported entity"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeleteAllReactions.messageId", "link" : "ackcord\/requests\/DeleteAllReactions.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeleteAllReactions.channelId", "link" : "ackcord\/requests\/DeleteAllReactions.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteAllReactions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteAllReactions.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteAllReactions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteAllReactions.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteAllReactions.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteAllReactions.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteAllReactions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteAllReactions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteAllReactions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteAllReactions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteAllReactions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteAllReactions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteAllReactions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteAllReactions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteAllReactions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteAllReactions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteAllReactions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteAllReactions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteAllReactions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteAllReactions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteAllReactions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteAllReactions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteAllReactions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteAllReactions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteAllReactions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteAllReactions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteAllReactions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteAllReactions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteAllReactions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteAllReactions.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteAllReactionsForEmoji", "shortDescription" : "Clear all reactions for a single emoji from a message.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.hasPermissions", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.requiredPermissions", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.route", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteAllReactionsForEmoji#<init>", "error" : "unsupported entity"}, {"label" : "emoji", "tail" : ": String", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.emoji", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#emoji:String", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.messageId", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeleteAllReactionsForEmoji.channelId", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteAllReactionsForEmoji.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteChannelPermission", "shortDescription" : "Delete a permission overwrite for a channel.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteChannelPermission", "member" : "ackcord.requests.DeleteChannelPermission.withReason", "link" : "ackcord\/requests\/DeleteChannelPermission.html#withReason(reason:String):ackcord.requests.DeleteChannelPermission", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteChannelPermission.requiredPermissions", "link" : "ackcord\/requests\/DeleteChannelPermission.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteChannelPermission.route", "link" : "ackcord\/requests\/DeleteChannelPermission.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteChannelPermission#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteChannelPermission.reason", "link" : "ackcord\/requests\/DeleteChannelPermission.html#reason:Option[String]", "kind" : "val"}, {"label" : "overwriteId", "tail" : ": UserOrRoleId", "member" : "ackcord.requests.DeleteChannelPermission.overwriteId", "link" : "ackcord\/requests\/DeleteChannelPermission.html#overwriteId:ackcord.data.UserOrRoleId", "kind" : "val"}, {"label" : "channelId", "tail" : ": GuildChannelId", "member" : "ackcord.requests.DeleteChannelPermission.channelId", "link" : "ackcord\/requests\/DeleteChannelPermission.html#channelId:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteChannelPermission.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteChannelPermission.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteChannelPermission.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteChannelPermission.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteChannelPermission.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteChannelPermission.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteChannelPermission.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteChannelPermission.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteChannelPermission.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteChannelPermission.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteChannelPermission.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/DeleteChannelPermission.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteChannelPermission.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteChannelPermission.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteChannelPermission.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteChannelPermission.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteChannelPermission.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteChannelPermission.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteChannelPermission.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteChannelPermission.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteChannelPermission.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteChannelPermission.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteChannelPermission.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteChannelPermission.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteChannelPermission.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteChannelPermission.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteChannelPermission.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteChannelPermission.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteChannelPermission.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteChannelPermission.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteChannelPermission.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteChannelPermission.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteChannelPermission.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteChannelPermission.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteCloseChannel", "shortDescription" : "Delete a guild channel, or close a DM channel.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteCloseChannel", "member" : "ackcord.requests.DeleteCloseChannel.withReason", "link" : "ackcord\/requests\/DeleteCloseChannel.html#withReason(reason:String):ackcord.requests.DeleteCloseChannel", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteCloseChannel.hasPermissions", "link" : "ackcord\/requests\/DeleteCloseChannel.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteCloseChannel.requiredPermissions", "link" : "ackcord\/requests\/DeleteCloseChannel.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[Channel]", "member" : "ackcord.requests.DeleteCloseChannel.toNiceResponse", "link" : "ackcord\/requests\/DeleteCloseChannel.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.DeleteCloseChannel.responseDecoder", "link" : "ackcord\/requests\/DeleteCloseChannel.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteCloseChannel.route", "link" : "ackcord\/requests\/DeleteCloseChannel.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteCloseChannel#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteCloseChannel.reason", "link" : "ackcord\/requests\/DeleteCloseChannel.html#reason:Option[String]", "kind" : "val"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.DeleteCloseChannel.channelId", "link" : "ackcord\/requests\/DeleteCloseChannel.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteCloseChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteCloseChannel.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteCloseChannel.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteCloseChannel.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteCloseChannel.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteCloseChannel.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteCloseChannel.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteCloseChannel.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/DeleteCloseChannel.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteCloseChannel.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteCloseChannel.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteCloseChannel.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteCloseChannel.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteCloseChannel.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteCloseChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteCloseChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteCloseChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteCloseChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteCloseChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteCloseChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteCloseChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteCloseChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteCloseChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteCloseChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteCloseChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteCloseChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteCloseChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteCloseChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteCloseChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteCloseChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteCloseChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteGuild", "shortDescription" : "Delete a guild.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteGuild.route", "link" : "ackcord\/requests\/DeleteGuild.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteGuild#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.DeleteGuild.guildId", "link" : "ackcord\/requests\/DeleteGuild.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteGuild.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteGuild.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteGuild.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteGuild.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteGuild.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteGuild.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteGuild.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteGuild.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteGuild.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/DeleteGuild.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/DeleteGuild.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteGuild.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteGuild.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteGuild.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteGuild.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteGuild.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteGuild.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteGuildEmoji", "shortDescription" : "Delete an emoji from a guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteGuildEmoji", "member" : "ackcord.requests.DeleteGuildEmoji.withReason", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#withReason(reason:String):ackcord.requests.DeleteGuildEmoji", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteGuildEmoji.hasPermissions", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteGuildEmoji.requiredPermissions", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteGuildEmoji.route", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteGuildEmoji#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteGuildEmoji.reason", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#reason:Option[String]", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.DeleteGuildEmoji.guildId", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "emojiId", "tail" : ": EmojiId", "member" : "ackcord.requests.DeleteGuildEmoji.emojiId", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#emojiId:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteGuildEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteGuildEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteGuildEmoji.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteGuildIntegration", "shortDescription" : "Delete an integration.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteGuildIntegration.hasPermissions", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteGuildIntegration.requiredPermissions", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteGuildIntegration.route", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteGuildIntegration#<init>", "error" : "unsupported entity"}, {"label" : "integrationId", "tail" : ": IntegrationId", "member" : "ackcord.requests.DeleteGuildIntegration.integrationId", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#integrationId:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.DeleteGuildIntegration.guildId", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteGuildIntegration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteGuildIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteGuildIntegration.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteGuildRole", "shortDescription" : "Delete a role in a guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteGuildRole", "member" : "ackcord.requests.DeleteGuildRole.withReason", "link" : "ackcord\/requests\/DeleteGuildRole.html#withReason(reason:String):ackcord.requests.DeleteGuildRole", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteGuildRole.hasPermissions", "link" : "ackcord\/requests\/DeleteGuildRole.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteGuildRole.requiredPermissions", "link" : "ackcord\/requests\/DeleteGuildRole.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteGuildRole.route", "link" : "ackcord\/requests\/DeleteGuildRole.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteGuildRole#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteGuildRole.reason", "link" : "ackcord\/requests\/DeleteGuildRole.html#reason:Option[String]", "kind" : "val"}, {"label" : "roleId", "tail" : ": RoleId", "member" : "ackcord.requests.DeleteGuildRole.roleId", "link" : "ackcord\/requests\/DeleteGuildRole.html#roleId:ackcord.data.RoleId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.DeleteGuildRole.guildId", "link" : "ackcord\/requests\/DeleteGuildRole.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteGuildRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteGuildRole.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteGuildRole.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteGuildRole.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteGuildRole.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteGuildRole.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteGuildRole.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteGuildRole.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteGuildRole.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteGuildRole.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteGuildRole.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteGuildRole.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteGuildRole.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteGuildRole.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteGuildRole.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteGuildRole.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteGuildRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteGuildRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteGuildRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteGuildRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteGuildRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteGuildRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteGuildRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteGuildRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteGuildRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteGuildRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteGuildRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteGuildRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteGuildRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteGuildRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteGuildRole.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteInvite", "shortDescription" : "Delete an invite.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteInvite", "member" : "ackcord.requests.DeleteInvite.withReason", "link" : "ackcord\/requests\/DeleteInvite.html#withReason(reason:String):ackcord.requests.DeleteInvite", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteInvite.hasPermissions", "link" : "ackcord\/requests\/DeleteInvite.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteInvite.requiredPermissions", "link" : "ackcord\/requests\/DeleteInvite.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Invite]", "member" : "ackcord.requests.DeleteInvite.responseDecoder", "link" : "ackcord\/requests\/DeleteInvite.html#responseDecoder:io.circe.Decoder[ackcord.data.Invite]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteInvite.route", "link" : "ackcord\/requests\/DeleteInvite.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteInvite#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteInvite.reason", "link" : "ackcord\/requests\/DeleteInvite.html#reason:Option[String]", "kind" : "val"}, {"label" : "inviteCode", "tail" : ": String", "member" : "ackcord.requests.DeleteInvite.inviteCode", "link" : "ackcord\/requests\/DeleteInvite.html#inviteCode:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteInvite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Invite): Invite", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteInvite.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteInvite.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteInvite.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteInvite.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteInvite.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteInvite.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteInvite.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteInvite.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Invite]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/DeleteInvite.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Invite, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteInvite.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Invite) => Boolean): Request[Invite]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteInvite.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Invite) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteInvite.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Invite]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteInvite.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteInvite.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteInvite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteInvite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteInvite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteInvite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteInvite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteInvite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteInvite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteInvite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteInvite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteInvite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteInvite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteInvite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteInvite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteInvite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteInvite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteInvite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteInvite.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteMessage", "shortDescription" : "Delete a message", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteMessage", "member" : "ackcord.requests.DeleteMessage.withReason", "link" : "ackcord\/requests\/DeleteMessage.html#withReason(reason:String):ackcord.requests.DeleteMessage", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteMessage.hasPermissions", "link" : "ackcord\/requests\/DeleteMessage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteMessage.requiredPermissions", "link" : "ackcord\/requests\/DeleteMessage.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteMessage.route", "link" : "ackcord\/requests\/DeleteMessage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteMessage#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteMessage.reason", "link" : "ackcord\/requests\/DeleteMessage.html#reason:Option[String]", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeleteMessage.messageId", "link" : "ackcord\/requests\/DeleteMessage.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeleteMessage.channelId", "link" : "ackcord\/requests\/DeleteMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteMessage.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteMessage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteMessage.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteMessage.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteMessage.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteMessage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteMessage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteMessage.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteMessage.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteMessage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteMessage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteMessage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteMessage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteMessage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteMessage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteMessage.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteOwnReaction", "shortDescription" : "Delete the clients reaction to a message.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteOwnReaction.route", "link" : "ackcord\/requests\/DeleteOwnReaction.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteOwnReaction#<init>", "error" : "unsupported entity"}, {"label" : "emoji", "tail" : ": String", "member" : "ackcord.requests.DeleteOwnReaction.emoji", "link" : "ackcord\/requests\/DeleteOwnReaction.html#emoji:String", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeleteOwnReaction.messageId", "link" : "ackcord\/requests\/DeleteOwnReaction.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeleteOwnReaction.channelId", "link" : "ackcord\/requests\/DeleteOwnReaction.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteOwnReaction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteOwnReaction.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteOwnReaction.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteOwnReaction.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteOwnReaction.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteOwnReaction.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteOwnReaction.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteOwnReaction.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteOwnReaction.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteOwnReaction.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/DeleteOwnReaction.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/DeleteOwnReaction.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteOwnReaction.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteOwnReaction.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteOwnReaction.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteOwnReaction.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteOwnReaction.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteOwnReaction.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteOwnReaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteOwnReaction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteOwnReaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteOwnReaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteOwnReaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteOwnReaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteOwnReaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteOwnReaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteOwnReaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteOwnReaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteOwnReaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteOwnReaction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteOwnReaction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteOwnReaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteOwnReaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteOwnReaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteOwnReaction.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeletePinnedChannelMessages", "shortDescription" : "Delete a pinned message in a channel.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeletePinnedChannelMessages.hasPermissions", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeletePinnedChannelMessages.requiredPermissions", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeletePinnedChannelMessages.route", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeletePinnedChannelMessages#<init>", "error" : "unsupported entity"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeletePinnedChannelMessages.messageId", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeletePinnedChannelMessages.channelId", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeletePinnedChannelMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeletePinnedChannelMessages.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteUserReaction", "shortDescription" : "Delete the reaction of another user to a message.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.DeleteUserReaction.hasPermissions", "link" : "ackcord\/requests\/DeleteUserReaction.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteUserReaction.requiredPermissions", "link" : "ackcord\/requests\/DeleteUserReaction.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteUserReaction.route", "link" : "ackcord\/requests\/DeleteUserReaction.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteUserReaction#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.DeleteUserReaction.userId", "link" : "ackcord\/requests\/DeleteUserReaction.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "emoji", "tail" : ": String", "member" : "ackcord.requests.DeleteUserReaction.emoji", "link" : "ackcord\/requests\/DeleteUserReaction.html#emoji:String", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.DeleteUserReaction.messageId", "link" : "ackcord\/requests\/DeleteUserReaction.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.DeleteUserReaction.channelId", "link" : "ackcord\/requests\/DeleteUserReaction.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteUserReaction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteUserReaction.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteUserReaction.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteUserReaction.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteUserReaction.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteUserReaction.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteUserReaction.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteUserReaction.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteUserReaction.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteUserReaction.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteUserReaction.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteUserReaction.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteUserReaction.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteUserReaction.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/DeleteUserReaction.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteUserReaction.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteUserReaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteUserReaction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteUserReaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteUserReaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteUserReaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteUserReaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteUserReaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteUserReaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteUserReaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteUserReaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteUserReaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteUserReaction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteUserReaction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteUserReaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteUserReaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteUserReaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteUserReaction.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteWebhook", "shortDescription" : "Delete a webhook.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteWebhook", "member" : "ackcord.requests.DeleteWebhook.withReason", "link" : "ackcord\/requests\/DeleteWebhook.html#withReason(reason:String):ackcord.requests.DeleteWebhook", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteWebhook.requiredPermissions", "link" : "ackcord\/requests\/DeleteWebhook.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteWebhook.route", "link" : "ackcord\/requests\/DeleteWebhook.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteWebhook#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteWebhook.reason", "link" : "ackcord\/requests\/DeleteWebhook.html#reason:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.DeleteWebhook.id", "link" : "ackcord\/requests\/DeleteWebhook.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteWebhook.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteWebhook.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteWebhook.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteWebhook.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteWebhook.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteWebhook.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteWebhook.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteWebhook.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteWebhook.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteWebhook.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteWebhook.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/DeleteWebhook.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteWebhook.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteWebhook.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteWebhook.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteWebhook.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteWebhook.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteWebhook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteWebhook.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteWebhook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteWebhook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteWebhook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteWebhook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteWebhook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteWebhook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteWebhook.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteWebhook.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteWebhook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteWebhook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteWebhook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteWebhook.html", "kind" : "case class"}, {"name" : "ackcord.requests.DeleteWebhookWithToken", "shortDescription" : "Delete a webhook with a token.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): DeleteWebhookWithToken", "member" : "ackcord.requests.DeleteWebhookWithToken.withReason", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#withReason(reason:String):ackcord.requests.DeleteWebhookWithToken", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.DeleteWebhookWithToken.requiredPermissions", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.DeleteWebhookWithToken.route", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.DeleteWebhookWithToken#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.DeleteWebhookWithToken.reason", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#reason:Option[String]", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.requests.DeleteWebhookWithToken.token", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#token:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.DeleteWebhookWithToken.id", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DeleteWebhookWithToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/DeleteWebhookWithToken.html", "kind" : "case class"}, {"name" : "ackcord.requests.DroppedRequestException", "shortDescription" : "An exception that signals that a request was dropped.", "members_class" : [{"member" : "ackcord.requests.DroppedRequestException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/requests\/DroppedRequestException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/requests\/DroppedRequestException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/DroppedRequestException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/requests\/DroppedRequestException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/requests\/DroppedRequestException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/requests\/DroppedRequestException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/requests\/DroppedRequestException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/requests\/DroppedRequestException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/DroppedRequestException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/DroppedRequestException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/DroppedRequestException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/DroppedRequestException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/DroppedRequestException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/DroppedRequestException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/DroppedRequestException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DroppedRequestException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DroppedRequestException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/DroppedRequestException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/DroppedRequestException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/DroppedRequestException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/DroppedRequestException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/DroppedRequestException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/DroppedRequestException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/DroppedRequestException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/DroppedRequestException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/DroppedRequestException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/DroppedRequestException.html", "kind" : "class"}, {"name" : "ackcord.requests.EditChannelPermissions", "shortDescription" : "Edit a permission overwrite for a channel.", "object" : "ackcord\/requests\/EditChannelPermissions$.html", "members_object" : [{"label" : "mk", "tail" : "(channelId: GuildChannelId, overwriteId: UserOrRoleId, allow: Permission, deny: Permission, tpe: PermissionOverwriteType): EditChannelPermissions", "member" : "ackcord.requests.EditChannelPermissions.mk", "link" : "ackcord\/requests\/EditChannelPermissions$.html#mk(channelId:ackcord.data.GuildChannelId,overwriteId:ackcord.data.UserOrRoleId,allow:ackcord.data.Permission,deny:ackcord.data.Permission,tpe:ackcord.data.PermissionOverwriteType):ackcord.requests.EditChannelPermissions", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditChannelPermissions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditChannelPermissions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditChannelPermissions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditChannelPermissions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditChannelPermissions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditChannelPermissions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditChannelPermissions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditChannelPermissions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditChannelPermissions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/EditChannelPermissions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditChannelPermissions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/EditChannelPermissions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/EditChannelPermissions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditChannelPermissions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): EditChannelPermissions", "member" : "ackcord.requests.EditChannelPermissions.withReason", "link" : "ackcord\/requests\/EditChannelPermissions.html#withReason(reason:String):ackcord.requests.EditChannelPermissions", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.EditChannelPermissions.hasPermissions", "link" : "ackcord\/requests\/EditChannelPermissions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.EditChannelPermissions.requiredPermissions", "link" : "ackcord\/requests\/EditChannelPermissions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[EditChannelPermissionsData]", "member" : "ackcord.requests.EditChannelPermissions.paramsEncoder", "link" : "ackcord\/requests\/EditChannelPermissions.html#paramsEncoder:io.circe.Encoder[ackcord.requests.EditChannelPermissionsData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.EditChannelPermissions.route", "link" : "ackcord\/requests\/EditChannelPermissions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.EditChannelPermissions#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.EditChannelPermissions.reason", "link" : "ackcord\/requests\/EditChannelPermissions.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": EditChannelPermissionsData", "member" : "ackcord.requests.EditChannelPermissions.params", "link" : "ackcord\/requests\/EditChannelPermissions.html#params:ackcord.requests.EditChannelPermissionsData", "kind" : "val"}, {"label" : "overwriteId", "tail" : ": UserOrRoleId", "member" : "ackcord.requests.EditChannelPermissions.overwriteId", "link" : "ackcord\/requests\/EditChannelPermissions.html#overwriteId:ackcord.data.UserOrRoleId", "kind" : "val"}, {"label" : "channelId", "tail" : ": GuildChannelId", "member" : "ackcord.requests.EditChannelPermissions.channelId", "link" : "ackcord\/requests\/EditChannelPermissions.html#channelId:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/EditChannelPermissions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/EditChannelPermissions.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/EditChannelPermissions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/EditChannelPermissions.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/EditChannelPermissions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/EditChannelPermissions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/EditChannelPermissions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/EditChannelPermissions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/EditChannelPermissions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/EditChannelPermissions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/EditChannelPermissions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/EditChannelPermissions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/EditChannelPermissions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/EditChannelPermissions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditChannelPermissions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditChannelPermissions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditChannelPermissions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditChannelPermissions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditChannelPermissions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditChannelPermissions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditChannelPermissions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditChannelPermissions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditChannelPermissions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditChannelPermissions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditChannelPermissions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/EditChannelPermissions.html", "kind" : "case class"}, {"name" : "ackcord.requests.EditChannelPermissionsData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.EditChannelPermissionsData#<init>", "error" : "unsupported entity"}, {"label" : "type", "tail" : ": PermissionOverwriteType", "member" : "ackcord.requests.EditChannelPermissionsData.type", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#type:ackcord.data.PermissionOverwriteType", "kind" : "val"}, {"label" : "deny", "tail" : ": Permission", "member" : "ackcord.requests.EditChannelPermissionsData.deny", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#deny:ackcord.data.Permission", "kind" : "val"}, {"label" : "allow", "tail" : ": Permission", "member" : "ackcord.requests.EditChannelPermissionsData.allow", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#allow:ackcord.data.Permission", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditChannelPermissionsData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditChannelPermissionsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/EditChannelPermissionsData.html", "kind" : "case class"}, {"name" : "ackcord.requests.EditMessage", "shortDescription" : "Edit an existing message", "object" : "ackcord\/requests\/EditMessage$.html", "members_object" : [{"label" : "suppressEmbeds", "tail" : "(channelId: TextChannelId, messageId: MessageId, existingFlags: MessageFlags): EditMessage", "member" : "ackcord.requests.EditMessage.suppressEmbeds", "link" : "ackcord\/requests\/EditMessage$.html#suppressEmbeds(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId,existingFlags:ackcord.data.MessageFlags):ackcord.requests.EditMessage", "kind" : "def"}, {"label" : "mkEmbed", "tail" : "(channelId: TextChannelId, messageId: MessageId, embed: OutgoingEmbed): EditMessage", "member" : "ackcord.requests.EditMessage.mkEmbed", "link" : "ackcord\/requests\/EditMessage$.html#mkEmbed(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId,embed:ackcord.data.OutgoingEmbed):ackcord.requests.EditMessage", "kind" : "def"}, {"label" : "mkContent", "tail" : "(channelId: TextChannelId, messageId: MessageId, content: String): EditMessage", "member" : "ackcord.requests.EditMessage.mkContent", "link" : "ackcord\/requests\/EditMessage$.html#mkContent(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId,content:String):ackcord.requests.EditMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/EditMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/EditMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/EditMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawMessage): Message", "member" : "ackcord.requests.EditMessage.toNiceResponse", "link" : "ackcord\/requests\/EditMessage.html#toNiceResponse(response:ackcord.data.raw.RawMessage):ackcord.data.Message", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawMessage]", "member" : "ackcord.requests.EditMessage.responseDecoder", "link" : "ackcord\/requests\/EditMessage.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.EditMessage.jsonPrinter", "link" : "ackcord\/requests\/EditMessage.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[EditMessageData]", "member" : "ackcord.requests.EditMessage.paramsEncoder", "link" : "ackcord\/requests\/EditMessage.html#paramsEncoder:io.circe.Encoder[ackcord.requests.EditMessageData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.EditMessage.route", "link" : "ackcord\/requests\/EditMessage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.EditMessage#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": EditMessageData", "member" : "ackcord.requests.EditMessage.params", "link" : "ackcord\/requests\/EditMessage.html#params:ackcord.requests.EditMessageData", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.EditMessage.messageId", "link" : "ackcord\/requests\/EditMessage.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.EditMessage.channelId", "link" : "ackcord\/requests\/EditMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/EditMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/EditMessage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/EditMessage.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/EditMessage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/EditMessage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/EditMessage.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawMessage]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/EditMessage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawMessage, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/EditMessage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawMessage) => Boolean): Request[RawMessage]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/EditMessage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawMessage) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/EditMessage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawMessage]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/EditMessage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/EditMessage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/EditMessage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/EditMessage.html", "kind" : "case class"}, {"name" : "ackcord.requests.EditMessageData", "shortDescription" : "", "object" : "ackcord\/requests\/EditMessageData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[EditMessageData]", "member" : "ackcord.requests.EditMessageData.encoder", "link" : "ackcord\/requests\/EditMessageData$.html#encoder:io.circe.Encoder[ackcord.requests.EditMessageData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditMessageData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditMessageData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditMessageData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditMessageData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditMessageData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditMessageData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditMessageData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditMessageData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditMessageData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/EditMessageData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditMessageData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/EditMessageData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/EditMessageData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditMessageData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditMessageData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditMessageData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.EditMessageData#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": util.JsonOption[MessageFlags]", "member" : "ackcord.requests.EditMessageData.flags", "link" : "ackcord\/requests\/EditMessageData.html#flags:ackcord.util.JsonOption[ackcord.data.MessageFlags]", "kind" : "val"}, {"label" : "embed", "tail" : ": util.JsonOption[OutgoingEmbed]", "member" : "ackcord.requests.EditMessageData.embed", "link" : "ackcord\/requests\/EditMessageData.html#embed:ackcord.util.JsonOption[ackcord.data.OutgoingEmbed]", "kind" : "val"}, {"label" : "allowedMentions", "tail" : ": util.JsonOption[AllowedMention]", "member" : "ackcord.requests.EditMessageData.allowedMentions", "link" : "ackcord\/requests\/EditMessageData.html#allowedMentions:ackcord.util.JsonOption[ackcord.requests.AllowedMention]", "kind" : "val"}, {"label" : "content", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.EditMessageData.content", "link" : "ackcord\/requests\/EditMessageData.html#content:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/EditMessageData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/EditMessageData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/EditMessageData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/EditMessageData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/EditMessageData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/EditMessageData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/EditMessageData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/EditMessageData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/EditMessageData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/EditMessageData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/EditMessageData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/EditMessageData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/EditMessageData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/EditMessageData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/EditMessageData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/EditMessageData.html", "kind" : "case class"}, {"name" : "ackcord.requests.FailedRequest", "trait" : "ackcord\/requests\/FailedRequest.html", "kind" : "trait", "members_trait" : [{"label" : "eitherData", "tail" : "(): Either[Throwable, Nothing]", "member" : "ackcord.requests.FailedRequest.eitherData", "link" : "ackcord\/requests\/FailedRequest.html#eitherData:Either[Throwable,Nothing]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FailedRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FailedRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FailedRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FailedRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FailedRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FailedRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FailedRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FailedRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FailedRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FailedRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FailedRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FailedRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/FailedRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FailedRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/FailedRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/FailedRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FailedRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FailedRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FailedRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asException", "tail" : "(): Throwable", "member" : "ackcord.requests.FailedRequest.asException", "link" : "ackcord\/requests\/FailedRequest.html#asException:Throwable", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) => RequestAnswer[B]): RequestAnswer[B]", "member" : "ackcord.requests.RequestAnswer.flatMap", "link" : "ackcord\/requests\/FailedRequest.html#flatMap[B](f:Data=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestAnswer[B]", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(f: (Nothing) => Boolean): RequestAnswer[Nothing]", "member" : "ackcord.requests.RequestAnswer.filter", "link" : "ackcord\/requests\/FailedRequest.html#filter(f:Data=>Boolean):ackcord.requests.RequestAnswer[Data]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): RequestAnswer[B]", "member" : "ackcord.requests.RequestAnswer.map", "link" : "ackcord\/requests\/FailedRequest.html#map[B](f:Data=>B):ackcord.requests.RequestAnswer[B]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.RequestAnswer.route", "link" : "ackcord\/requests\/FailedRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}, {"label" : "ratelimitInfo", "tail" : "(): RatelimitInfo", "member" : "ackcord.requests.RequestAnswer.ratelimitInfo", "link" : "ackcord\/requests\/FailedRequest.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "abstract def"}, {"label" : "identifier", "tail" : "(): UUID", "member" : "ackcord.requests.RequestAnswer.identifier", "link" : "ackcord\/requests\/FailedRequest.html#identifier:java.util.UUID", "kind" : "abstract def"}], "shortDescription" : "A failed request."}, {"name" : "ackcord.requests.FlattenUnflatten", "object" : "ackcord\/requests\/FlattenUnflatten$.html", "members_object" : [{"label" : "end", "tail" : ": FlattenUnflatten[HNil, HNil]", "member" : "ackcord.requests.FlattenUnflatten.end", "link" : "ackcord\/requests\/FlattenUnflatten$.html#end:ackcord.requests.FlattenUnflatten[shapeless.HNil,shapeless.HNil]", "kind" : "implicit val"}, {"label" : "two", "tail" : "(aFlatten: FlattenUnflatten[A, AO], bFlatten: FlattenUnflatten[B, BO], lenA: Aux[AO, ALen], concat: shapeless.ops.hlist.Prepend.Aux[AO, BO, Concatted], split: Aux[Concatted, ALen, AO, BO]): FlattenUnflatten[(A, B), Concatted]", "member" : "ackcord.requests.FlattenUnflatten.two", "link" : "ackcord\/requests\/FlattenUnflatten$.html#two[A,AO<:shapeless.HList,B,BO<:shapeless.HList,ALen<:shapeless.Nat,Concatted<:shapeless.HList](implicitaFlatten:ackcord.requests.FlattenUnflatten[A,AO],implicitbFlatten:ackcord.requests.FlattenUnflatten[B,BO],implicitlenA:shapeless.ops.hlist.Length.Aux[AO,ALen],implicitconcat:shapeless.ops.hlist.Prepend.Aux[AO,BO,Concatted],implicitsplit:shapeless.ops.hlist.Split.Aux[Concatted,ALen,AO,BO]):ackcord.requests.FlattenUnflatten[(A,B),Concatted]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(flatten: FlattenUnflatten[A, B]): FlattenUnflatten[A, B]", "member" : "ackcord.requests.FlattenUnflatten.apply", "link" : "ackcord\/requests\/FlattenUnflatten$.html#apply[A,B](implicitflatten:ackcord.requests.FlattenUnflatten[A,B]):ackcord.requests.FlattenUnflatten[A,B]", "kind" : "def"}, {"label" : "dontFlatten", "tail" : "(): FlattenUnflatten[A, ::[A, HNil]]", "member" : "ackcord.requests.LowPriorityFlatten.dontFlatten", "link" : "ackcord\/requests\/FlattenUnflatten$.html#dontFlatten[A]:ackcord.requests.FlattenUnflatten[A,A::shapeless.HNil]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FlattenUnflatten$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FlattenUnflatten$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FlattenUnflatten$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FlattenUnflatten$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FlattenUnflatten$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FlattenUnflatten$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FlattenUnflatten$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FlattenUnflatten$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FlattenUnflatten$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/FlattenUnflatten$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FlattenUnflatten$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/FlattenUnflatten$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/FlattenUnflatten$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FlattenUnflatten$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FlattenUnflatten$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FlattenUnflatten$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/requests\/FlattenUnflatten.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FlattenUnflatten.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FlattenUnflatten.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FlattenUnflatten.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FlattenUnflatten.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FlattenUnflatten.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FlattenUnflatten.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FlattenUnflatten.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FlattenUnflatten.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FlattenUnflatten.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FlattenUnflatten.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/FlattenUnflatten.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FlattenUnflatten.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/FlattenUnflatten.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/FlattenUnflatten.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FlattenUnflatten.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FlattenUnflatten.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FlattenUnflatten.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toIn", "tail" : "(out: Out): In", "member" : "ackcord.requests.FlattenUnflatten.toIn", "link" : "ackcord\/requests\/FlattenUnflatten.html#toIn(out:Out):In", "kind" : "abstract def"}, {"label" : "toOut", "tail" : "(in: In): Out", "member" : "ackcord.requests.FlattenUnflatten.toOut", "link" : "ackcord\/requests\/FlattenUnflatten.html#toOut(in:In):Out", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.requests.FollowedChannel", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.FollowedChannel#<init>", "error" : "unsupported entity"}, {"label" : "webhookId", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.FollowedChannel.webhookId", "link" : "ackcord\/requests\/FollowedChannel.html#webhookId:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.FollowedChannel.channelId", "link" : "ackcord\/requests\/FollowedChannel.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/FollowedChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FollowedChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FollowedChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FollowedChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FollowedChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FollowedChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FollowedChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FollowedChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowedChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowedChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowedChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FollowedChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FollowedChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FollowedChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FollowedChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FollowedChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FollowedChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/FollowedChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.FollowNewsChannel", "shortDescription" : "", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: FollowedChannel): FollowedChannel", "member" : "ackcord.requests.FollowNewsChannel.toNiceResponse", "link" : "ackcord\/requests\/FollowNewsChannel.html#toNiceResponse(response:ackcord.requests.FollowedChannel):ackcord.requests.FollowedChannel", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[FollowedChannel]", "member" : "ackcord.requests.FollowNewsChannel.responseDecoder", "link" : "ackcord\/requests\/FollowNewsChannel.html#responseDecoder:io.circe.Decoder[ackcord.requests.FollowedChannel]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[FollowNewsChannelData]", "member" : "ackcord.requests.FollowNewsChannel.paramsEncoder", "link" : "ackcord\/requests\/FollowNewsChannel.html#paramsEncoder:io.circe.Encoder[ackcord.requests.FollowNewsChannelData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.FollowNewsChannel.route", "link" : "ackcord\/requests\/FollowNewsChannel.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.FollowNewsChannel#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": FollowNewsChannelData", "member" : "ackcord.requests.FollowNewsChannel.params", "link" : "ackcord\/requests\/FollowNewsChannel.html#params:ackcord.requests.FollowNewsChannelData", "kind" : "val"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.FollowNewsChannel.channelId", "link" : "ackcord\/requests\/FollowNewsChannel.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/FollowNewsChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/FollowNewsChannel.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/FollowNewsChannel.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/FollowNewsChannel.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/FollowNewsChannel.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/FollowNewsChannel.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/FollowNewsChannel.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[FollowedChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/FollowNewsChannel.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[FollowedChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/FollowNewsChannel.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (FollowedChannel) => Boolean): Request[FollowedChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/FollowNewsChannel.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (FollowedChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/FollowNewsChannel.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[FollowedChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/FollowNewsChannel.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/FollowNewsChannel.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/FollowNewsChannel.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FollowNewsChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FollowNewsChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FollowNewsChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FollowNewsChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FollowNewsChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FollowNewsChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FollowNewsChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FollowNewsChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FollowNewsChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FollowNewsChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FollowNewsChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FollowNewsChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FollowNewsChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/FollowNewsChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.FollowNewsChannelData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.FollowNewsChannelData#<init>", "error" : "unsupported entity"}, {"label" : "webhookChannelId", "tail" : ": ChannelId", "member" : "ackcord.requests.FollowNewsChannelData.webhookChannelId", "link" : "ackcord\/requests\/FollowNewsChannelData.html#webhookChannelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/FollowNewsChannelData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/FollowNewsChannelData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/FollowNewsChannelData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/FollowNewsChannelData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/FollowNewsChannelData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/FollowNewsChannelData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/FollowNewsChannelData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/FollowNewsChannelData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannelData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannelData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/FollowNewsChannelData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/FollowNewsChannelData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/FollowNewsChannelData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/FollowNewsChannelData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/FollowNewsChannelData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/FollowNewsChannelData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/FollowNewsChannelData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/FollowNewsChannelData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetApplicationAssetImage", "shortDescription" : "Get the asset of an application.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetApplicationAssetImage.route", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetApplicationAssetImage.allowedFormats", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetApplicationAssetImage#<init>", "error" : "unsupported entity"}, {"label" : "assetId", "tail" : ": String", "member" : "ackcord.requests.GetApplicationAssetImage.assetId", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#assetId:String", "kind" : "val"}, {"label" : "applicationId", "tail" : ": RawSnowflake", "member" : "ackcord.requests.GetApplicationAssetImage.applicationId", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#applicationId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetApplicationAssetImage.format", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetApplicationAssetImage.desiredSize", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetApplicationAssetImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetApplicationAssetImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetApplicationAssetImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetApplicationIconImage", "shortDescription" : "Get the icon of an application.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetApplicationIconImage.route", "link" : "ackcord\/requests\/GetApplicationIconImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetApplicationIconImage.allowedFormats", "link" : "ackcord\/requests\/GetApplicationIconImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetApplicationIconImage#<init>", "error" : "unsupported entity"}, {"label" : "iconHash", "tail" : ": String", "member" : "ackcord.requests.GetApplicationIconImage.iconHash", "link" : "ackcord\/requests\/GetApplicationIconImage.html#iconHash:String", "kind" : "val"}, {"label" : "applicationId", "tail" : ": RawSnowflake", "member" : "ackcord.requests.GetApplicationIconImage.applicationId", "link" : "ackcord\/requests\/GetApplicationIconImage.html#applicationId:ackcord.data.RawSnowflake", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetApplicationIconImage.format", "link" : "ackcord\/requests\/GetApplicationIconImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetApplicationIconImage.desiredSize", "link" : "ackcord\/requests\/GetApplicationIconImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetApplicationIconImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetApplicationIconImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetApplicationIconImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetApplicationIconImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetApplicationIconImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetApplicationIconImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetApplicationIconImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetApplicationIconImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetApplicationIconImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetApplicationIconImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetApplicationIconImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetApplicationIconImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetApplicationIconImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetApplicationIconImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetApplicationIconImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetApplicationIconImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetApplicationIconImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetApplicationIconImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationIconImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationIconImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetApplicationIconImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetApplicationIconImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetApplicationIconImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetApplicationIconImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetApplicationIconImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetApplicationIconImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetApplicationIconImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetApplicationIconImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannel", "shortDescription" : "Get a channel by id.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetChannel.hasPermissions", "link" : "ackcord\/requests\/GetChannel.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[Channel]", "member" : "ackcord.requests.GetChannel.toNiceResponse", "link" : "ackcord\/requests\/GetChannel.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.GetChannel.responseDecoder", "link" : "ackcord\/requests\/GetChannel.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetChannel.route", "link" : "ackcord\/requests\/GetChannel.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetChannel#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.GetChannel.channelId", "link" : "ackcord\/requests\/GetChannel.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetChannel.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetChannel.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetChannel.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetChannel.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetChannel.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetChannel.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetChannel.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetChannel.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetChannel.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetChannel.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetChannel.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetChannel.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetChannel.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetChannel.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannelInvites", "shortDescription" : "Get all invites for this channel.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetChannelInvites.hasPermissions", "link" : "ackcord\/requests\/GetChannelInvites.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetChannelInvites.requiredPermissions", "link" : "ackcord\/requests\/GetChannelInvites.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.GetChannelInvites.responseDecoder", "link" : "ackcord\/requests\/GetChannelInvites.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.InviteWithMetadata]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetChannelInvites.route", "link" : "ackcord\/requests\/GetChannelInvites.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetChannelInvites#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": GuildChannelId", "member" : "ackcord.requests.GetChannelInvites.channelId", "link" : "ackcord\/requests\/GetChannelInvites.html#channelId:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannelInvites.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[InviteWithMetadata]): Seq[InviteWithMetadata]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetChannelInvites.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetChannelInvites.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetChannelInvites.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetChannelInvites.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetChannelInvites.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetChannelInvites.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetChannelInvites.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetChannelInvites.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[InviteWithMetadata], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetChannelInvites.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[InviteWithMetadata]) => Boolean): Request[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetChannelInvites.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[InviteWithMetadata]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetChannelInvites.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[InviteWithMetadata]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetChannelInvites.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetChannelInvites.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetChannelInvites.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelInvites.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelInvites.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelInvites.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelInvites.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelInvites.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelInvites.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelInvites.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelInvites.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelInvites.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelInvites.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelInvites.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelInvites.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelInvites.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelInvites.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelInvites.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelInvites.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannelInvites.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannelMessage", "shortDescription" : "Get a specific message in a channel.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetChannelMessage.hasPermissions", "link" : "ackcord\/requests\/GetChannelMessage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetChannelMessage.requiredPermissions", "link" : "ackcord\/requests\/GetChannelMessage.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawMessage): Message", "member" : "ackcord.requests.GetChannelMessage.toNiceResponse", "link" : "ackcord\/requests\/GetChannelMessage.html#toNiceResponse(response:ackcord.data.raw.RawMessage):ackcord.data.Message", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawMessage]", "member" : "ackcord.requests.GetChannelMessage.responseDecoder", "link" : "ackcord\/requests\/GetChannelMessage.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawMessage]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetChannelMessage.route", "link" : "ackcord\/requests\/GetChannelMessage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetChannelMessage#<init>", "error" : "unsupported entity"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.GetChannelMessage.messageId", "link" : "ackcord\/requests\/GetChannelMessage.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.GetChannelMessage.channelId", "link" : "ackcord\/requests\/GetChannelMessage.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannelMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetChannelMessage.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetChannelMessage.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetChannelMessage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetChannelMessage.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetChannelMessage.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetChannelMessage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawMessage]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetChannelMessage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawMessage, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetChannelMessage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawMessage) => Boolean): Request[RawMessage]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetChannelMessage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawMessage) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetChannelMessage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawMessage]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetChannelMessage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetChannelMessage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetChannelMessage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannelMessage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannelMessages", "shortDescription" : "Get the messages in a channel.", "object" : "ackcord\/requests\/GetChannelMessages$.html", "members_object" : [{"label" : "after", "tail" : "(channelId: TextChannelId, after: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.requests.GetChannelMessages.after", "link" : "ackcord\/requests\/GetChannelMessages$.html#after(channelId:ackcord.data.TextChannelId,after:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "before", "tail" : "(channelId: TextChannelId, before: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.requests.GetChannelMessages.before", "link" : "ackcord\/requests\/GetChannelMessages$.html#before(channelId:ackcord.data.TextChannelId,before:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "around", "tail" : "(channelId: TextChannelId, around: MessageId, limit: Option[Int]): GetChannelMessages", "member" : "ackcord.requests.GetChannelMessages.around", "link" : "ackcord\/requests\/GetChannelMessages$.html#around(channelId:ackcord.data.TextChannelId,around:ackcord.data.MessageId,limit:Option[Int]):ackcord.requests.GetChannelMessages", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelMessages$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelMessages$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelMessages$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelMessages$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelMessages$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelMessages$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelMessages$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelMessages$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelMessages$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/GetChannelMessages$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelMessages$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetChannelMessages$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/GetChannelMessages$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelMessages$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelMessages$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelMessages$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetChannelMessages.hasPermissions", "link" : "ackcord\/requests\/GetChannelMessages.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetChannelMessages.requiredPermissions", "link" : "ackcord\/requests\/GetChannelMessages.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[RawMessage]): Seq[Message]", "member" : "ackcord.requests.GetChannelMessages.toNiceResponse", "link" : "ackcord\/requests\/GetChannelMessages.html#toNiceResponse(response:Seq[ackcord.data.raw.RawMessage]):Seq[ackcord.data.Message]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawMessage]]", "member" : "ackcord.requests.GetChannelMessages.responseDecoder", "link" : "ackcord\/requests\/GetChannelMessages.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawMessage]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetChannelMessages.route", "link" : "ackcord\/requests\/GetChannelMessages.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetChannelMessages#<init>", "error" : "unsupported entity"}, {"label" : "query", "tail" : ": GetChannelMessagesData", "member" : "ackcord.requests.GetChannelMessages.query", "link" : "ackcord\/requests\/GetChannelMessages.html#query:ackcord.requests.GetChannelMessagesData", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.GetChannelMessages.channelId", "link" : "ackcord\/requests\/GetChannelMessages.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannelMessages.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetChannelMessages.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetChannelMessages.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetChannelMessages.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetChannelMessages.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetChannelMessages.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetChannelMessages.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawMessage]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetChannelMessages.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawMessage], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetChannelMessages.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawMessage]) => Boolean): Request[Seq[RawMessage]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetChannelMessages.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawMessage]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetChannelMessages.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawMessage]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetChannelMessages.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetChannelMessages.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetChannelMessages.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelMessages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannelMessages.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannelMessagesData", "shortDescription" : "", "members_case class" : [{"label" : "toMap", "tail" : "(): Map[String, String]", "member" : "ackcord.requests.GetChannelMessagesData.toMap", "link" : "ackcord\/requests\/GetChannelMessagesData.html#toMap:Map[String,String]", "kind" : "def"}, {"member" : "ackcord.requests.GetChannelMessagesData#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "ackcord.requests.GetChannelMessagesData.limit", "link" : "ackcord\/requests\/GetChannelMessagesData.html#limit:Option[Int]", "kind" : "val"}, {"label" : "after", "tail" : ": Option[MessageId]", "member" : "ackcord.requests.GetChannelMessagesData.after", "link" : "ackcord\/requests\/GetChannelMessagesData.html#after:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "before", "tail" : ": Option[MessageId]", "member" : "ackcord.requests.GetChannelMessagesData.before", "link" : "ackcord\/requests\/GetChannelMessagesData.html#before:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "around", "tail" : ": Option[MessageId]", "member" : "ackcord.requests.GetChannelMessagesData.around", "link" : "ackcord\/requests\/GetChannelMessagesData.html#around:Option[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannelMessagesData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelMessagesData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelMessagesData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelMessagesData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelMessagesData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelMessagesData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelMessagesData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelMessagesData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessagesData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessagesData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelMessagesData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelMessagesData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelMessagesData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelMessagesData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelMessagesData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelMessagesData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelMessagesData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannelMessagesData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetChannelWebhooks", "shortDescription" : "Get the webhooks in a channel.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetChannelWebhooks.hasPermissions", "link" : "ackcord\/requests\/GetChannelWebhooks.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetChannelWebhooks.requiredPermissions", "link" : "ackcord\/requests\/GetChannelWebhooks.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[Webhook]]", "member" : "ackcord.requests.GetChannelWebhooks.responseDecoder", "link" : "ackcord\/requests\/GetChannelWebhooks.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.Webhook]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetChannelWebhooks.route", "link" : "ackcord\/requests\/GetChannelWebhooks.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetChannelWebhooks#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.GetChannelWebhooks.channelId", "link" : "ackcord\/requests\/GetChannelWebhooks.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetChannelWebhooks.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[Webhook]): Seq[Webhook]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetChannelWebhooks.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetChannelWebhooks.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetChannelWebhooks.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetChannelWebhooks.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetChannelWebhooks.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetChannelWebhooks.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetChannelWebhooks.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[Webhook]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetChannelWebhooks.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[Webhook], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetChannelWebhooks.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[Webhook]) => Boolean): Request[Seq[Webhook]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetChannelWebhooks.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[Webhook]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetChannelWebhooks.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[Webhook]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetChannelWebhooks.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetChannelWebhooks.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetChannelWebhooks.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetChannelWebhooks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetChannelWebhooks.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetChannelWebhooks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetChannelWebhooks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetChannelWebhooks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetChannelWebhooks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetChannelWebhooks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelWebhooks.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelWebhooks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetChannelWebhooks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetChannelWebhooks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetChannelWebhooks.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetChannelWebhooks.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetChannelWebhooks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetChannelWebhooks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetChannelWebhooks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetChannelWebhooks.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetCurrentUser", "case object" : "ackcord\/requests\/GetCurrentUser$.html", "shortDescription" : "Fetch the client user.", "members_case object" : [{"label" : "responseDecoder", "tail" : "(): Decoder[User]", "member" : "ackcord.requests.GetCurrentUser.responseDecoder", "link" : "ackcord\/requests\/GetCurrentUser$.html#responseDecoder:io.circe.Decoder[ackcord.data.User]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetCurrentUser.route", "link" : "ackcord\/requests\/GetCurrentUser$.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetCurrentUser$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/requests\/GetCurrentUser$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: User): User", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetCurrentUser$.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetCurrentUser$.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetCurrentUser$.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetCurrentUser$.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetCurrentUser$.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetCurrentUser$.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetCurrentUser$.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetCurrentUser$.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetCurrentUser$.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[User]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetCurrentUser$.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[User, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetCurrentUser$.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (User) => Boolean): Request[User]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetCurrentUser$.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (User) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetCurrentUser$.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[User]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetCurrentUser$.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetCurrentUser$.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetCurrentUser$.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetCurrentUser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetCurrentUser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetCurrentUser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetCurrentUser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetCurrentUser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetCurrentUser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetCurrentUser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetCurrentUser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetCurrentUser$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetCurrentUser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetCurrentUser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetCurrentUser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetCurrentUser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetCurrentUser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.requests.GetCurrentUserGuilds", "shortDescription" : "Get the guilds the client user is in.", "object" : "ackcord\/requests\/GetCurrentUserGuilds$.html", "members_object" : [{"label" : "after", "tail" : "(after: GuildId, limit: Option[Int]): GetCurrentUserGuilds", "member" : "ackcord.requests.GetCurrentUserGuilds.after", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#after(after:ackcord.data.GuildId,limit:Option[Int]):ackcord.requests.GetCurrentUserGuilds", "kind" : "def"}, {"label" : "before", "tail" : "(before: GuildId, limit: Option[Int]): GetCurrentUserGuilds", "member" : "ackcord.requests.GetCurrentUserGuilds.before", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#before(before:ackcord.data.GuildId,limit:Option[Int]):ackcord.requests.GetCurrentUserGuilds", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuilds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Seq[GetUserGuildsGuild]]", "member" : "ackcord.requests.GetCurrentUserGuilds.responseDecoder", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#responseDecoder:io.circe.Decoder[Seq[ackcord.requests.GetUserGuildsGuild]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetCurrentUserGuilds.route", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetCurrentUserGuilds#<init>", "error" : "unsupported entity"}, {"label" : "queryParams", "tail" : ": GetCurrentUserGuildsData", "member" : "ackcord.requests.GetCurrentUserGuilds.queryParams", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#queryParams:ackcord.requests.GetCurrentUserGuildsData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[GetUserGuildsGuild]): Seq[GetUserGuildsGuild]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[GetUserGuildsGuild]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[GetUserGuildsGuild], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[GetUserGuildsGuild]) => Boolean): Request[Seq[GetUserGuildsGuild]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[GetUserGuildsGuild]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[GetUserGuildsGuild]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuilds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetCurrentUserGuilds.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetCurrentUserGuildsData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GetCurrentUserGuildsData#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "ackcord.requests.GetCurrentUserGuildsData.limit", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#limit:Option[Int]", "kind" : "val"}, {"label" : "after", "tail" : ": Option[GuildId]", "member" : "ackcord.requests.GetCurrentUserGuildsData.after", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#after:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "before", "tail" : ": Option[GuildId]", "member" : "ackcord.requests.GetCurrentUserGuildsData.before", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#before:Option[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetCurrentUserGuildsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetCurrentUserGuildsData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetCustomEmojiImage", "shortDescription" : "Get the image of a custom emoji.", "members_case class" : [{"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetCustomEmojiImage.allowedFormats", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetCustomEmojiImage.route", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetCustomEmojiImage#<init>", "error" : "unsupported entity"}, {"label" : "emojiId", "tail" : ": EmojiId", "member" : "ackcord.requests.GetCustomEmojiImage.emojiId", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#emojiId:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetCustomEmojiImage.format", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetCustomEmojiImage.desiredSize", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetCustomEmojiImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetCustomEmojiImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetCustomEmojiImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetDefaultUserAvatarImage", "shortDescription" : "Get the default avatar of a user.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetDefaultUserAvatarImage.route", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "format", "tail" : "(): ImageFormat", "member" : "ackcord.requests.GetDefaultUserAvatarImage.format", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#format:ackcord.data.ImageFormat", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetDefaultUserAvatarImage.allowedFormats", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetDefaultUserAvatarImage#<init>", "error" : "unsupported entity"}, {"label" : "discriminator", "tail" : ": Int", "member" : "ackcord.requests.GetDefaultUserAvatarImage.discriminator", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#discriminator:Int", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetDefaultUserAvatarImage.desiredSize", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetDefaultUserAvatarImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetDefaultUserAvatarImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetDiscoverySplashImage", "shortDescription" : "", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetDiscoverySplashImage.route", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetDiscoverySplashImage.allowedFormats", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetDiscoverySplashImage#<init>", "error" : "unsupported entity"}, {"label" : "splashHash", "tail" : ": String", "member" : "ackcord.requests.GetDiscoverySplashImage.splashHash", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#splashHash:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetDiscoverySplashImage.guildId", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetDiscoverySplashImage.format", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetDiscoverySplashImage.desiredSize", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetDiscoverySplashImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetDiscoverySplashImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuild", "shortDescription" : "Get a guild by id.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawGuild): Option[Guild]", "member" : "ackcord.requests.GetGuild.toNiceResponse", "link" : "ackcord\/requests\/GetGuild.html#toNiceResponse(response:ackcord.data.raw.RawGuild):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuild]", "member" : "ackcord.requests.GetGuild.responseDecoder", "link" : "ackcord\/requests\/GetGuild.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuild]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuild.route", "link" : "ackcord\/requests\/GetGuild.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuild#<init>", "error" : "unsupported entity"}, {"label" : "withCounts", "tail" : ": Boolean", "member" : "ackcord.requests.GetGuild.withCounts", "link" : "ackcord\/requests\/GetGuild.html#withCounts:Boolean", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuild.guildId", "link" : "ackcord\/requests\/GetGuild.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuild.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuild.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuild.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuild.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuild.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuild.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuild.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuild.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuild]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuild.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuild, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuild.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuild) => Boolean): Request[RawGuild]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuild.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuild) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuild.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuild]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuild.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuild.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuild.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildAuditLog", "shortDescription" : "Get an audit log for a given guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildAuditLog.hasPermissions", "link" : "ackcord\/requests\/GetGuildAuditLog.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildAuditLog.requiredPermissions", "link" : "ackcord\/requests\/GetGuildAuditLog.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[AuditLog]", "member" : "ackcord.requests.GetGuildAuditLog.responseDecoder", "link" : "ackcord\/requests\/GetGuildAuditLog.html#responseDecoder:io.circe.Decoder[ackcord.data.AuditLog]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildAuditLog.route", "link" : "ackcord\/requests\/GetGuildAuditLog.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildAuditLog#<init>", "error" : "unsupported entity"}, {"label" : "queryParams", "tail" : ": GetGuildAuditLogData", "member" : "ackcord.requests.GetGuildAuditLog.queryParams", "link" : "ackcord\/requests\/GetGuildAuditLog.html#queryParams:ackcord.requests.GetGuildAuditLogData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildAuditLog.guildId", "link" : "ackcord\/requests\/GetGuildAuditLog.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildAuditLog.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: AuditLog): AuditLog", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildAuditLog.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildAuditLog.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildAuditLog.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildAuditLog.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildAuditLog.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildAuditLog.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildAuditLog.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[AuditLog]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildAuditLog.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[AuditLog, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildAuditLog.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (AuditLog) => Boolean): Request[AuditLog]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildAuditLog.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (AuditLog) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildAuditLog.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[AuditLog]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildAuditLog.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildAuditLog.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildAuditLog.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildAuditLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildAuditLog.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildAuditLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildAuditLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildAuditLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildAuditLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildAuditLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildAuditLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildAuditLog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildAuditLog.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildAuditLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildAuditLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildAuditLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildAuditLog.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildAuditLogData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GetGuildAuditLogData#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "ackcord.requests.GetGuildAuditLogData.limit", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#limit:Option[Int]", "kind" : "val"}, {"label" : "before", "tail" : ": Option[RawSnowflake]", "member" : "ackcord.requests.GetGuildAuditLogData.before", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#before:Option[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "actionType", "tail" : ": Option[AuditLogEvent]", "member" : "ackcord.requests.GetGuildAuditLogData.actionType", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#actionType:Option[ackcord.data.AuditLogEvent]", "kind" : "val"}, {"label" : "userId", "tail" : ": Option[UserId]", "member" : "ackcord.requests.GetGuildAuditLogData.userId", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#userId:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildAuditLogData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildAuditLogData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildAuditLogData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildBan", "shortDescription" : "Get the ban object for a specific member in a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildBan.hasPermissions", "link" : "ackcord\/requests\/GetGuildBan.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildBan.requiredPermissions", "link" : "ackcord\/requests\/GetGuildBan.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawBan): Ban", "member" : "ackcord.requests.GetGuildBan.toNiceResponse", "link" : "ackcord\/requests\/GetGuildBan.html#toNiceResponse(response:ackcord.data.raw.RawBan):ackcord.data.Ban", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawBan]", "member" : "ackcord.requests.GetGuildBan.responseDecoder", "link" : "ackcord\/requests\/GetGuildBan.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawBan]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildBan.route", "link" : "ackcord\/requests\/GetGuildBan.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildBan#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.GetGuildBan.userId", "link" : "ackcord\/requests\/GetGuildBan.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildBan.guildId", "link" : "ackcord\/requests\/GetGuildBan.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildBan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildBan.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildBan.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildBan.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildBan.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildBan.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildBan.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawBan]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildBan.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawBan, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildBan.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawBan) => Boolean): Request[RawBan]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildBan.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawBan) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildBan.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawBan]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildBan.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildBan.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildBan.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildBan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildBan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildBan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildBan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildBan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildBan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildBan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildBan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildBan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildBan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildBan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildBan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildBan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildBan.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildBannerImage", "shortDescription" : "", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildBannerImage.route", "link" : "ackcord\/requests\/GetGuildBannerImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetGuildBannerImage.allowedFormats", "link" : "ackcord\/requests\/GetGuildBannerImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildBannerImage#<init>", "error" : "unsupported entity"}, {"label" : "bannerHash", "tail" : ": String", "member" : "ackcord.requests.GetGuildBannerImage.bannerHash", "link" : "ackcord\/requests\/GetGuildBannerImage.html#bannerHash:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildBannerImage.guildId", "link" : "ackcord\/requests\/GetGuildBannerImage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetGuildBannerImage.format", "link" : "ackcord\/requests\/GetGuildBannerImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetGuildBannerImage.desiredSize", "link" : "ackcord\/requests\/GetGuildBannerImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildBannerImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildBannerImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildBannerImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildBannerImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetGuildBannerImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildBannerImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildBannerImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildBannerImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildBannerImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildBannerImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildBannerImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildBannerImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildBannerImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildBannerImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildBannerImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildBannerImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildBannerImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildBannerImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBannerImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBannerImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBannerImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildBannerImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildBannerImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildBannerImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildBannerImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildBannerImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildBannerImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildBannerImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildBans", "shortDescription" : "Get all the bans for this guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildBans.hasPermissions", "link" : "ackcord\/requests\/GetGuildBans.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildBans.requiredPermissions", "link" : "ackcord\/requests\/GetGuildBans.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[RawBan]): Seq[Ban]", "member" : "ackcord.requests.GetGuildBans.toNiceResponse", "link" : "ackcord\/requests\/GetGuildBans.html#toNiceResponse(response:Seq[ackcord.data.raw.RawBan]):Seq[ackcord.data.Ban]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawBan]]", "member" : "ackcord.requests.GetGuildBans.responseDecoder", "link" : "ackcord\/requests\/GetGuildBans.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawBan]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildBans.route", "link" : "ackcord\/requests\/GetGuildBans.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildBans#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildBans.guildId", "link" : "ackcord\/requests\/GetGuildBans.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildBans.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildBans.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildBans.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildBans.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildBans.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildBans.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildBans.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawBan]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildBans.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawBan], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildBans.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawBan]) => Boolean): Request[Seq[RawBan]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildBans.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawBan]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildBans.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawBan]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildBans.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildBans.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildBans.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildBans.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildBans.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildBans.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildBans.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildBans.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildBans.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildBans.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBans.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBans.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildBans.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildBans.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildBans.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildBans.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildBans.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildBans.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildBans.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildBans.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildChannels", "shortDescription" : "Get all the channels for a guild.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Seq[RawChannel]): Seq[Option[GuildChannel]]", "member" : "ackcord.requests.GetGuildChannels.toNiceResponse", "link" : "ackcord\/requests\/GetGuildChannels.html#toNiceResponse(response:Seq[ackcord.data.raw.RawChannel]):Seq[Option[ackcord.data.GuildChannel]]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawChannel]]", "member" : "ackcord.requests.GetGuildChannels.responseDecoder", "link" : "ackcord\/requests\/GetGuildChannels.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawChannel]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildChannels.route", "link" : "ackcord\/requests\/GetGuildChannels.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildChannels#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildChannels.guildId", "link" : "ackcord\/requests\/GetGuildChannels.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildChannels.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildChannels.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildChannels.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildChannels.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildChannels.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildChannels.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildChannels.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildChannels.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildChannels.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawChannel]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildChannels.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawChannel], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildChannels.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawChannel]) => Boolean): Request[Seq[RawChannel]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildChannels.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawChannel]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildChannels.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawChannel]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildChannels.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildChannels.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildChannels.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildChannels.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildChannels.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildChannels.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildChannels.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildChannels.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildChannels.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildChannels.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildChannels.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildChannels.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildChannels.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildChannels.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildChannels.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildChannels.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildChannels.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildChannels.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildChannels.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildChannels.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildEmoji", "shortDescription" : "Get an emoji in a guild by id.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: RawEmoji): Emoji", "member" : "ackcord.requests.GetGuildEmoji.toNiceResponse", "link" : "ackcord\/requests\/GetGuildEmoji.html#toNiceResponse(response:ackcord.data.raw.RawEmoji):ackcord.data.Emoji", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawEmoji]", "member" : "ackcord.requests.GetGuildEmoji.responseDecoder", "link" : "ackcord\/requests\/GetGuildEmoji.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawEmoji]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildEmoji.route", "link" : "ackcord\/requests\/GetGuildEmoji.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildEmoji#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildEmoji.guildId", "link" : "ackcord\/requests\/GetGuildEmoji.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "emojiId", "tail" : ": EmojiId", "member" : "ackcord.requests.GetGuildEmoji.emojiId", "link" : "ackcord\/requests\/GetGuildEmoji.html#emojiId:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildEmoji.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildEmoji.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildEmoji.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildEmoji.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildEmoji.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildEmoji.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildEmoji.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildEmoji.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawEmoji]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildEmoji.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawEmoji, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildEmoji.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawEmoji) => Boolean): Request[RawEmoji]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildEmoji.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawEmoji) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildEmoji.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawEmoji]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildEmoji.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildEmoji.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildEmoji.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildEmoji.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildIconImage", "shortDescription" : "Get a guild icon image.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildIconImage.route", "link" : "ackcord\/requests\/GetGuildIconImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetGuildIconImage.allowedFormats", "link" : "ackcord\/requests\/GetGuildIconImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildIconImage#<init>", "error" : "unsupported entity"}, {"label" : "iconHash", "tail" : ": String", "member" : "ackcord.requests.GetGuildIconImage.iconHash", "link" : "ackcord\/requests\/GetGuildIconImage.html#iconHash:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildIconImage.guildId", "link" : "ackcord\/requests\/GetGuildIconImage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetGuildIconImage.format", "link" : "ackcord\/requests\/GetGuildIconImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetGuildIconImage.desiredSize", "link" : "ackcord\/requests\/GetGuildIconImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildIconImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildIconImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildIconImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildIconImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetGuildIconImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildIconImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildIconImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildIconImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildIconImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildIconImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildIconImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildIconImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildIconImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildIconImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildIconImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildIconImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildIconImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildIconImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIconImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIconImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIconImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildIconImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildIconImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildIconImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildIconImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildIconImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildIconImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildIconImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildIntegrations", "shortDescription" : "Get the integrations for this guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildIntegrations.hasPermissions", "link" : "ackcord\/requests\/GetGuildIntegrations.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildIntegrations.requiredPermissions", "link" : "ackcord\/requests\/GetGuildIntegrations.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[Integration]]", "member" : "ackcord.requests.GetGuildIntegrations.responseDecoder", "link" : "ackcord\/requests\/GetGuildIntegrations.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.Integration]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildIntegrations.route", "link" : "ackcord\/requests\/GetGuildIntegrations.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildIntegrations#<init>", "error" : "unsupported entity"}, {"label" : "includeApplications", "tail" : ": Boolean", "member" : "ackcord.requests.GetGuildIntegrations.includeApplications", "link" : "ackcord\/requests\/GetGuildIntegrations.html#includeApplications:Boolean", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildIntegrations.guildId", "link" : "ackcord\/requests\/GetGuildIntegrations.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildIntegrations.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[Integration]): Seq[Integration]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildIntegrations.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildIntegrations.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildIntegrations.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildIntegrations.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildIntegrations.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildIntegrations.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildIntegrations.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[Integration]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildIntegrations.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[Integration], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildIntegrations.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[Integration]) => Boolean): Request[Seq[Integration]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildIntegrations.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[Integration]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildIntegrations.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[Integration]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildIntegrations.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildIntegrations.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildIntegrations.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildIntegrations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildIntegrations.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildIntegrations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildIntegrations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildIntegrations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildIntegrations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildIntegrations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIntegrations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIntegrations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildIntegrations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildIntegrations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildIntegrations.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildIntegrations.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildIntegrations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildIntegrations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildIntegrations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildIntegrations.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildInvites", "shortDescription" : "Get the invites for this guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildInvites.hasPermissions", "link" : "ackcord\/requests\/GetGuildInvites.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildInvites.requiredPermissions", "link" : "ackcord\/requests\/GetGuildInvites.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.GetGuildInvites.responseDecoder", "link" : "ackcord\/requests\/GetGuildInvites.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.InviteWithMetadata]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildInvites.route", "link" : "ackcord\/requests\/GetGuildInvites.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildInvites#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildInvites.guildId", "link" : "ackcord\/requests\/GetGuildInvites.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildInvites.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[InviteWithMetadata]): Seq[InviteWithMetadata]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildInvites.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildInvites.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildInvites.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildInvites.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildInvites.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildInvites.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildInvites.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildInvites.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[InviteWithMetadata], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildInvites.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[InviteWithMetadata]) => Boolean): Request[Seq[InviteWithMetadata]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildInvites.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[InviteWithMetadata]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildInvites.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[InviteWithMetadata]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildInvites.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildInvites.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildInvites.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildInvites.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildInvites.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildInvites.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildInvites.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildInvites.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildInvites.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildInvites.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildInvites.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildInvites.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildInvites.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildInvites.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildInvites.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildInvites.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildInvites.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildInvites.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildInvites.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildInvites.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildMember", "shortDescription" : "Get a guild member by id.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildMember.route", "link" : "ackcord\/requests\/GetGuildMember.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.GetGuildMember.params", "link" : "ackcord\/requests\/GetGuildMember.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.GetGuildMember.paramsEncoder", "link" : "ackcord\/requests\/GetGuildMember.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.GetGuildMember.userId", "link" : "ackcord\/requests\/GetGuildMember.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildMember.guildId", "link" : "ackcord\/requests\/GetGuildMember.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawGuildMember): GuildMember", "member" : "ackcord.requests.GuildMemberRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildMember.html#toNiceResponse(response:ackcord.data.raw.RawGuildMember):ackcord.data.GuildMember", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuildMember]", "member" : "ackcord.requests.GuildMemberRequest.responseDecoder", "link" : "ackcord\/requests\/GetGuildMember.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuildMember]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildMember.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildMember.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildMember.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildMember.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildMember.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildMember.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuildMember]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildMember.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuildMember, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildMember.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuildMember) => Boolean): Request[RawGuildMember]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildMember.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuildMember) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildMember.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuildMember]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildMember.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildMember.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildMember.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildPreview", "shortDescription" : "Get a guild preview by it's id.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[GuildPreview]", "member" : "ackcord.requests.GetGuildPreview.responseDecoder", "link" : "ackcord\/requests\/GetGuildPreview.html#responseDecoder:io.circe.Decoder[ackcord.data.GuildPreview]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildPreview.route", "link" : "ackcord\/requests\/GetGuildPreview.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildPreview#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildPreview.guildId", "link" : "ackcord\/requests\/GetGuildPreview.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildPreview.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: GuildPreview): GuildPreview", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildPreview.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildPreview.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildPreview.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildPreview.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildPreview.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildPreview.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildPreview.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildPreview.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildPreview.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[GuildPreview]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildPreview.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[GuildPreview, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildPreview.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (GuildPreview) => Boolean): Request[GuildPreview]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildPreview.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GuildPreview) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildPreview.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[GuildPreview]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildPreview.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildPreview.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildPreview.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildPreview.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildPreview.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildPreview.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildPreview.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildPreview.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildPreview.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildPreview.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPreview.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPreview.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPreview.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildPreview.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildPreview.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildPreview.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildPreview.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildPreview.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildPreview.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildPreview.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildPruneCount", "shortDescription" : "Check how many members would be removed if a prune was started now.", "object" : "ackcord\/requests\/GetGuildPruneCount$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, days: Int, includeRoles: Seq[RoleId]): GetGuildPruneCount", "member" : "ackcord.requests.GetGuildPruneCount.mk", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#mk(guildId:ackcord.data.GuildId,days:Int,includeRoles:Seq[ackcord.data.RoleId]):ackcord.requests.GetGuildPruneCount", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildPruneCount$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildPruneCount$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[GuildPruneCountResponse]", "member" : "ackcord.requests.GetGuildPruneCount.responseDecoder", "link" : "ackcord\/requests\/GetGuildPruneCount.html#responseDecoder:io.circe.Decoder[ackcord.requests.GuildPruneCountResponse]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildPruneCount.hasPermissions", "link" : "ackcord\/requests\/GetGuildPruneCount.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildPruneCount.requiredPermissions", "link" : "ackcord\/requests\/GetGuildPruneCount.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildPruneCount.route", "link" : "ackcord\/requests\/GetGuildPruneCount.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildPruneCount#<init>", "error" : "unsupported entity"}, {"label" : "queryParams", "tail" : ": GuildPruneCountData", "member" : "ackcord.requests.GetGuildPruneCount.queryParams", "link" : "ackcord\/requests\/GetGuildPruneCount.html#queryParams:ackcord.requests.GuildPruneCountData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildPruneCount.guildId", "link" : "ackcord\/requests\/GetGuildPruneCount.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildPruneCount.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: GuildPruneCountResponse): GuildPruneCountResponse", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildPruneCount.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildPruneCount.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildPruneCount.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildPruneCount.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildPruneCount.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildPruneCount.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildPruneCount.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[GuildPruneCountResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildPruneCount.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[GuildPruneCountResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildPruneCount.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (GuildPruneCountResponse) => Boolean): Request[GuildPruneCountResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildPruneCount.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GuildPruneCountResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildPruneCount.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[GuildPruneCountResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildPruneCount.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildPruneCount.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildPruneCount.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildPruneCount.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildPruneCount.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildPruneCount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildPruneCount.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildPruneCount.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildPruneCount.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildPruneCount.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildPruneCount.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildPruneCount.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildPruneCount.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildPruneCount.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildPruneCount.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildPruneCount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildPruneCount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildPruneCount.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildRoles", "shortDescription" : "Get all the roles in a guild.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Seq[RawRole]): Seq[Role]", "member" : "ackcord.requests.GetGuildRoles.toNiceResponse", "link" : "ackcord\/requests\/GetGuildRoles.html#toNiceResponse(response:Seq[ackcord.data.raw.RawRole]):Seq[ackcord.data.Role]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawRole]]", "member" : "ackcord.requests.GetGuildRoles.responseDecoder", "link" : "ackcord\/requests\/GetGuildRoles.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawRole]]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.GetGuildRoles.paramsEncoder", "link" : "ackcord\/requests\/GetGuildRoles.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.GetGuildRoles.params", "link" : "ackcord\/requests\/GetGuildRoles.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildRoles.route", "link" : "ackcord\/requests\/GetGuildRoles.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildRoles#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildRoles.guildId", "link" : "ackcord\/requests\/GetGuildRoles.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildRoles.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildRoles.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildRoles.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildRoles.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildRoles.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildRoles.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildRoles.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawRole]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildRoles.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawRole], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildRoles.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawRole]) => Boolean): Request[Seq[RawRole]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildRoles.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawRole]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildRoles.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawRole]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildRoles.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildRoles.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildRoles.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildRoles.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildRoles.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildRoles.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildRoles.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildRoles.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildRoles.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildRoles.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildRoles.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildRoles.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildRoles.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildRoles.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildRoles.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildRoles.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildRoles.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildRoles.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildRoles.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildRoles.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildSplashImage", "shortDescription" : "Get a guild splash image.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildSplashImage.route", "link" : "ackcord\/requests\/GetGuildSplashImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetGuildSplashImage.allowedFormats", "link" : "ackcord\/requests\/GetGuildSplashImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildSplashImage#<init>", "error" : "unsupported entity"}, {"label" : "splashHash", "tail" : ": String", "member" : "ackcord.requests.GetGuildSplashImage.splashHash", "link" : "ackcord\/requests\/GetGuildSplashImage.html#splashHash:String", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildSplashImage.guildId", "link" : "ackcord\/requests\/GetGuildSplashImage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetGuildSplashImage.format", "link" : "ackcord\/requests\/GetGuildSplashImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetGuildSplashImage.desiredSize", "link" : "ackcord\/requests\/GetGuildSplashImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildSplashImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildSplashImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildSplashImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildSplashImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetGuildSplashImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildSplashImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildSplashImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildSplashImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildSplashImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildSplashImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildSplashImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildSplashImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildSplashImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildSplashImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildSplashImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildSplashImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildSplashImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildSplashImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildSplashImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildSplashImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildSplashImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildSplashImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildSplashImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildSplashImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildSplashImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildSplashImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildSplashImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildSplashImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildVanityUrl", "shortDescription" : "Get a partial invite object for guilds with that feature enabled.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildVanityUrl.hasPermissions", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildVanityUrl.requiredPermissions", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[VanityUrlResponse]", "member" : "ackcord.requests.GetGuildVanityUrl.responseDecoder", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#responseDecoder:io.circe.Decoder[ackcord.requests.VanityUrlResponse]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildVanityUrl.route", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildVanityUrl#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildVanityUrl.guildId", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: VanityUrlResponse): VanityUrlResponse", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[VanityUrlResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[VanityUrlResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (VanityUrlResponse) => Boolean): Request[VanityUrlResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (VanityUrlResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[VanityUrlResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildVanityUrl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildVanityUrl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildVanityUrl.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildVoiceRegions", "shortDescription" : "Get the voice regions for this guild.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Seq[VoiceRegion]]", "member" : "ackcord.requests.GetGuildVoiceRegions.responseDecoder", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.VoiceRegion]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildVoiceRegions.route", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildVoiceRegions#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildVoiceRegions.guildId", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[VoiceRegion]): Seq[VoiceRegion]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[VoiceRegion]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[VoiceRegion], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[VoiceRegion]) => Boolean): Request[Seq[VoiceRegion]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[VoiceRegion]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[VoiceRegion]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildVoiceRegions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildVoiceRegions.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildWebhooks", "shortDescription" : "Get the webhooks in a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildWebhooks.hasPermissions", "link" : "ackcord\/requests\/GetGuildWebhooks.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildWebhooks.requiredPermissions", "link" : "ackcord\/requests\/GetGuildWebhooks.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[Webhook]]", "member" : "ackcord.requests.GetGuildWebhooks.responseDecoder", "link" : "ackcord\/requests\/GetGuildWebhooks.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.Webhook]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildWebhooks.route", "link" : "ackcord\/requests\/GetGuildWebhooks.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildWebhooks#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildWebhooks.guildId", "link" : "ackcord\/requests\/GetGuildWebhooks.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildWebhooks.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[Webhook]): Seq[Webhook]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildWebhooks.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildWebhooks.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildWebhooks.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildWebhooks.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildWebhooks.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildWebhooks.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildWebhooks.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[Webhook]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildWebhooks.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[Webhook], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildWebhooks.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[Webhook]) => Boolean): Request[Seq[Webhook]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildWebhooks.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[Webhook]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildWebhooks.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[Webhook]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildWebhooks.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildWebhooks.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildWebhooks.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildWebhooks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildWebhooks.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildWebhooks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildWebhooks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildWebhooks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildWebhooks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildWebhooks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWebhooks.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWebhooks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWebhooks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildWebhooks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildWebhooks.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildWebhooks.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildWebhooks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildWebhooks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildWebhooks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildWebhooks.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildWidget", "shortDescription" : "Get the guild widget for a guild.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[GuildWidget]", "member" : "ackcord.requests.GetGuildWidget.responseDecoder", "link" : "ackcord\/requests\/GetGuildWidget.html#responseDecoder:io.circe.Decoder[ackcord.data.GuildWidget]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildWidget.route", "link" : "ackcord\/requests\/GetGuildWidget.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildWidget#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildWidget.guildId", "link" : "ackcord\/requests\/GetGuildWidget.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildWidget.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: GuildWidget): GuildWidget", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildWidget.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildWidget.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildWidget.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildWidget.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildWidget.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildWidget.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildWidget.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildWidget.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetGuildWidget.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[GuildWidget]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildWidget.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[GuildWidget, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildWidget.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (GuildWidget) => Boolean): Request[GuildWidget]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildWidget.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GuildWidget) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildWidget.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[GuildWidget]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildWidget.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildWidget.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildWidget.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildWidget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildWidget.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildWidget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildWidget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildWidget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildWidget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildWidget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildWidget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildWidget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildWidget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildWidget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildWidget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildWidget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildWidget.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildWidgetImage", "shortDescription" : "Get the widget image for a specific guild.", "members_case class" : [{"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetGuildWidgetImage.allowedFormats", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"label" : "format", "tail" : "(): ImageFormat", "member" : "ackcord.requests.GetGuildWidgetImage.format", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#format:ackcord.data.ImageFormat", "kind" : "def"}, {"label" : "desiredSize", "tail" : "(): Int", "member" : "ackcord.requests.GetGuildWidgetImage.desiredSize", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#desiredSize:Int", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildWidgetImage.route", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildWidgetImage#<init>", "error" : "unsupported entity"}, {"label" : "style", "tail" : ": WidgetImageStyle", "member" : "ackcord.requests.GetGuildWidgetImage.style", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#style:ackcord.data.WidgetImageStyle", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildWidgetImage.guildId", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildWidgetImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildWidgetImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildWidgetImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetGuildWidgetSettings", "shortDescription" : "Get the guild widget settings for a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.GetGuildWidgetSettings.hasPermissions", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetGuildWidgetSettings.requiredPermissions", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[GuildWidgetSettings]", "member" : "ackcord.requests.GetGuildWidgetSettings.responseDecoder", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#responseDecoder:io.circe.Decoder[ackcord.data.GuildWidgetSettings]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetGuildWidgetSettings.route", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetGuildWidgetSettings#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.GetGuildWidgetSettings.guildId", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: GuildWidgetSettings): GuildWidgetSettings", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[GuildWidgetSettings]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[GuildWidgetSettings, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (GuildWidgetSettings) => Boolean): Request[GuildWidgetSettings]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GuildWidgetSettings) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[GuildWidgetSettings]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetGuildWidgetSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetGuildWidgetSettings.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetInvite", "shortDescription" : "Get an invite for a given invite code.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Invite]", "member" : "ackcord.requests.GetInvite.responseDecoder", "link" : "ackcord\/requests\/GetInvite.html#responseDecoder:io.circe.Decoder[ackcord.data.Invite]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetInvite.route", "link" : "ackcord\/requests\/GetInvite.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetInvite#<init>", "error" : "unsupported entity"}, {"label" : "withCounts", "tail" : ": Boolean", "member" : "ackcord.requests.GetInvite.withCounts", "link" : "ackcord\/requests\/GetInvite.html#withCounts:Boolean", "kind" : "val"}, {"label" : "inviteCode", "tail" : ": String", "member" : "ackcord.requests.GetInvite.inviteCode", "link" : "ackcord\/requests\/GetInvite.html#inviteCode:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetInvite.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Invite): Invite", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetInvite.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetInvite.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetInvite.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetInvite.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetInvite.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetInvite.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetInvite.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetInvite.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetInvite.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Invite]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetInvite.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Invite, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetInvite.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Invite) => Boolean): Request[Invite]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetInvite.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Invite) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetInvite.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Invite]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetInvite.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetInvite.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetInvite.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetInvite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetInvite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetInvite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetInvite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetInvite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetInvite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetInvite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetInvite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetInvite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetInvite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetInvite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetInvite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetInvite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetInvite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetInvite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetInvite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetInvite.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetPinnedMessages", "shortDescription" : "Get all the pinned messages in a channel.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Seq[RawMessage]): Seq[Message]", "member" : "ackcord.requests.GetPinnedMessages.toNiceResponse", "link" : "ackcord\/requests\/GetPinnedMessages.html#toNiceResponse(response:Seq[ackcord.data.raw.RawMessage]):Seq[ackcord.data.Message]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawMessage]]", "member" : "ackcord.requests.GetPinnedMessages.responseDecoder", "link" : "ackcord\/requests\/GetPinnedMessages.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawMessage]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetPinnedMessages.route", "link" : "ackcord\/requests\/GetPinnedMessages.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetPinnedMessages#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.GetPinnedMessages.channelId", "link" : "ackcord\/requests\/GetPinnedMessages.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetPinnedMessages.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetPinnedMessages.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetPinnedMessages.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetPinnedMessages.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetPinnedMessages.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetPinnedMessages.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetPinnedMessages.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetPinnedMessages.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetPinnedMessages.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawMessage]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetPinnedMessages.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawMessage], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetPinnedMessages.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawMessage]) => Boolean): Request[Seq[RawMessage]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetPinnedMessages.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawMessage]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetPinnedMessages.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawMessage]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetPinnedMessages.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetPinnedMessages.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetPinnedMessages.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetPinnedMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetPinnedMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetPinnedMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetPinnedMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetPinnedMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetPinnedMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetPinnedMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetPinnedMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetPinnedMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetPinnedMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetPinnedMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetPinnedMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetPinnedMessages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetPinnedMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetPinnedMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetPinnedMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetPinnedMessages.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetReactions", "shortDescription" : "Get all the users that have reacted with an emoji for a message.", "object" : "ackcord\/requests\/GetReactions$.html", "members_object" : [{"label" : "after", "tail" : "(channelId: TextChannelId, messageId: MessageId, emoji: String, after: UserId, limit: Option[Int]): GetReactions", "member" : "ackcord.requests.GetReactions.after", "link" : "ackcord\/requests\/GetReactions$.html#after(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId,emoji:String,after:ackcord.data.UserId,limit:Option[Int]):ackcord.requests.GetReactions", "kind" : "def"}, {"label" : "before", "tail" : "(channelId: TextChannelId, messageId: MessageId, emoji: String, before: UserId, limit: Option[Int]): GetReactions", "member" : "ackcord.requests.GetReactions.before", "link" : "ackcord\/requests\/GetReactions$.html#before(channelId:ackcord.data.TextChannelId,messageId:ackcord.data.MessageId,emoji:String,before:ackcord.data.UserId,limit:Option[Int]):ackcord.requests.GetReactions", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetReactions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetReactions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetReactions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetReactions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetReactions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetReactions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetReactions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetReactions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetReactions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/GetReactions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetReactions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetReactions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/GetReactions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetReactions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetReactions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetReactions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Seq[User]]", "member" : "ackcord.requests.GetReactions.responseDecoder", "link" : "ackcord\/requests\/GetReactions.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.User]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetReactions.route", "link" : "ackcord\/requests\/GetReactions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetReactions#<init>", "error" : "unsupported entity"}, {"label" : "queryParams", "tail" : ": GetReactionsData", "member" : "ackcord.requests.GetReactions.queryParams", "link" : "ackcord\/requests\/GetReactions.html#queryParams:ackcord.requests.GetReactionsData", "kind" : "val"}, {"label" : "emoji", "tail" : ": String", "member" : "ackcord.requests.GetReactions.emoji", "link" : "ackcord\/requests\/GetReactions.html#emoji:String", "kind" : "val"}, {"label" : "messageId", "tail" : ": MessageId", "member" : "ackcord.requests.GetReactions.messageId", "link" : "ackcord\/requests\/GetReactions.html#messageId:ackcord.data.MessageId", "kind" : "val"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.GetReactions.channelId", "link" : "ackcord\/requests\/GetReactions.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetReactions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[User]): Seq[User]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetReactions.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetReactions.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetReactions.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetReactions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetReactions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetReactions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetReactions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetReactions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetReactions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[User]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetReactions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[User], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetReactions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[User]) => Boolean): Request[Seq[User]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetReactions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[User]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetReactions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[User]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetReactions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetReactions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetReactions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetReactions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetReactions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetReactions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetReactions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetReactions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetReactions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetReactions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetReactions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetReactions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetReactions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetReactions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetReactions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetReactions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetReactions.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetReactionsData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GetReactionsData#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "ackcord.requests.GetReactionsData.limit", "link" : "ackcord\/requests\/GetReactionsData.html#limit:Option[Int]", "kind" : "val"}, {"label" : "after", "tail" : ": Option[UserId]", "member" : "ackcord.requests.GetReactionsData.after", "link" : "ackcord\/requests\/GetReactionsData.html#after:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "before", "tail" : ": Option[UserId]", "member" : "ackcord.requests.GetReactionsData.before", "link" : "ackcord\/requests\/GetReactionsData.html#before:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetReactionsData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetReactionsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetReactionsData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetReactionsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetReactionsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetReactionsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetReactionsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetReactionsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactionsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactionsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetReactionsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetReactionsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetReactionsData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetReactionsData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetReactionsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetReactionsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetReactionsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetReactionsData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetTeamIconImage", "shortDescription" : "Get the icon for a team", "members_case class" : [{"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetTeamIconImage.allowedFormats", "link" : "ackcord\/requests\/GetTeamIconImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetTeamIconImage.route", "link" : "ackcord\/requests\/GetTeamIconImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetTeamIconImage#<init>", "error" : "unsupported entity"}, {"label" : "teamIcon", "tail" : ": String", "member" : "ackcord.requests.GetTeamIconImage.teamIcon", "link" : "ackcord\/requests\/GetTeamIconImage.html#teamIcon:String", "kind" : "val"}, {"label" : "teamId", "tail" : ": SnowflakeType[Team]", "member" : "ackcord.requests.GetTeamIconImage.teamId", "link" : "ackcord\/requests\/GetTeamIconImage.html#teamId:ackcord.data.SnowflakeType[ackcord.data.Team]", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetTeamIconImage.format", "link" : "ackcord\/requests\/GetTeamIconImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetTeamIconImage.desiredSize", "link" : "ackcord\/requests\/GetTeamIconImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetTeamIconImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetTeamIconImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetTeamIconImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetTeamIconImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetTeamIconImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetTeamIconImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetTeamIconImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetTeamIconImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetTeamIconImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetTeamIconImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetTeamIconImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetTeamIconImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetTeamIconImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetTeamIconImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetTeamIconImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetTeamIconImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetTeamIconImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetTeamIconImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTeamIconImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTeamIconImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTeamIconImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetTeamIconImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetTeamIconImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetTeamIconImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetTeamIconImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetTeamIconImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetTeamIconImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetTeamIconImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetTemplate", "shortDescription" : "", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Template): Template", "member" : "ackcord.requests.GetTemplate.toNiceResponse", "link" : "ackcord\/requests\/GetTemplate.html#toNiceResponse(response:ackcord.data.Template):ackcord.data.Template", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Template]", "member" : "ackcord.requests.GetTemplate.responseDecoder", "link" : "ackcord\/requests\/GetTemplate.html#responseDecoder:io.circe.Decoder[ackcord.data.Template]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetTemplate.route", "link" : "ackcord\/requests\/GetTemplate.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetTemplate#<init>", "error" : "unsupported entity"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.requests.GetTemplate.code", "link" : "ackcord\/requests\/GetTemplate.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetTemplate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetTemplate.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetTemplate.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetTemplate.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetTemplate.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetTemplate.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetTemplate.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetTemplate.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetTemplate.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Template]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetTemplate.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Template, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetTemplate.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Template) => Boolean): Request[Template]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetTemplate.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Template) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetTemplate.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Template]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetTemplate.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetTemplate.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetTemplate.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetTemplate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetTemplate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetTemplate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetTemplate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetTemplate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetTemplate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetTemplate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTemplate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTemplate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetTemplate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetTemplate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetTemplate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetTemplate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetTemplate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetTemplate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetTemplate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetTemplate.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetUser", "shortDescription" : "Get a user by id.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[User]", "member" : "ackcord.requests.GetUser.responseDecoder", "link" : "ackcord\/requests\/GetUser.html#responseDecoder:io.circe.Decoder[ackcord.data.User]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetUser.route", "link" : "ackcord\/requests\/GetUser.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetUser#<init>", "error" : "unsupported entity"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.GetUser.userId", "link" : "ackcord\/requests\/GetUser.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetUser.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: User): User", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetUser.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetUser.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetUser.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetUser.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetUser.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetUser.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetUser.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetUser.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetUser.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[User]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetUser.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[User, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetUser.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (User) => Boolean): Request[User]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetUser.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (User) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetUser.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[User]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetUser.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetUser.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetUser.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetUser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetUser.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetUserAvatarImage", "shortDescription" : "Get the image of a user avatar.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetUserAvatarImage.route", "link" : "ackcord\/requests\/GetUserAvatarImage.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.GetUserAvatarImage.allowedFormats", "link" : "ackcord\/requests\/GetUserAvatarImage.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "def"}, {"member" : "ackcord.requests.GetUserAvatarImage#<init>", "error" : "unsupported entity"}, {"label" : "avatarHash", "tail" : ": String", "member" : "ackcord.requests.GetUserAvatarImage.avatarHash", "link" : "ackcord\/requests\/GetUserAvatarImage.html#avatarHash:String", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.GetUserAvatarImage.userId", "link" : "ackcord\/requests\/GetUserAvatarImage.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "format", "tail" : ": ImageFormat", "member" : "ackcord.requests.GetUserAvatarImage.format", "link" : "ackcord\/requests\/GetUserAvatarImage.html#format:ackcord.data.ImageFormat", "kind" : "val"}, {"label" : "desiredSize", "tail" : ": Int", "member" : "ackcord.requests.GetUserAvatarImage.desiredSize", "link" : "ackcord\/requests\/GetUserAvatarImage.html#desiredSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetUserAvatarImage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/GetUserAvatarImage.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/GetUserAvatarImage.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/GetUserAvatarImage.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/GetUserAvatarImage.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetUserAvatarImage.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetUserAvatarImage.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetUserAvatarImage.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetUserAvatarImage.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetUserAvatarImage.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetUserAvatarImage.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetUserAvatarImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetUserAvatarImage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetUserAvatarImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetUserAvatarImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetUserAvatarImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetUserAvatarImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetUserAvatarImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserAvatarImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserAvatarImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserAvatarImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetUserAvatarImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetUserAvatarImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetUserAvatarImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetUserAvatarImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetUserAvatarImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetUserAvatarImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetUserAvatarImage.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetUserConnections", "case object" : "ackcord\/requests\/GetUserConnections$.html", "shortDescription" : "Get a list of connection objects.", "members_case object" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Seq[Connection]]", "member" : "ackcord.requests.GetUserConnections.responseDecoder", "link" : "ackcord\/requests\/GetUserConnections$.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.Connection]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetUserConnections.route", "link" : "ackcord\/requests\/GetUserConnections$.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetUserConnections$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/requests\/GetUserConnections$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[Connection]): Seq[Connection]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetUserConnections$.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetUserConnections$.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetUserConnections$.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetUserConnections$.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetUserConnections$.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetUserConnections$.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetUserConnections$.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetUserConnections$.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GetUserConnections$.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[Connection]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetUserConnections$.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[Connection], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetUserConnections$.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[Connection]) => Boolean): Request[Seq[Connection]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetUserConnections$.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[Connection]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetUserConnections$.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[Connection]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetUserConnections$.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetUserConnections$.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetUserConnections$.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetUserConnections$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetUserConnections$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetUserConnections$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetUserConnections$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetUserConnections$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetUserConnections$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetUserConnections$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserConnections$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserConnections$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserConnections$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetUserConnections$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetUserConnections$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetUserConnections$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GetUserConnections$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetUserConnections$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetUserConnections$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetUserConnections$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.requests.GetUserGuildsGuild", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GetUserGuildsGuild#<init>", "error" : "unsupported entity"}, {"label" : "features", "tail" : ": Seq[GuildFeature]", "member" : "ackcord.requests.GetUserGuildsGuild.features", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#features:Seq[ackcord.data.GuildFeature]", "kind" : "val"}, {"label" : "permissions", "tail" : ": Permission", "member" : "ackcord.requests.GetUserGuildsGuild.permissions", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#permissions:ackcord.data.Permission", "kind" : "val"}, {"label" : "owner", "tail" : ": Boolean", "member" : "ackcord.requests.GetUserGuildsGuild.owner", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#owner:Boolean", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[String]", "member" : "ackcord.requests.GetUserGuildsGuild.icon", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#icon:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.GetUserGuildsGuild.name", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": GuildId", "member" : "ackcord.requests.GetUserGuildsGuild.id", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#id:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetUserGuildsGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetUserGuildsGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetUserGuildsGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetWebhook", "shortDescription" : "Get a webhook by id.", "members_case class" : [{"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetWebhook.requiredPermissions", "link" : "ackcord\/requests\/GetWebhook.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Webhook]", "member" : "ackcord.requests.GetWebhook.responseDecoder", "link" : "ackcord\/requests\/GetWebhook.html#responseDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetWebhook.route", "link" : "ackcord\/requests\/GetWebhook.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetWebhook#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.GetWebhook.id", "link" : "ackcord\/requests\/GetWebhook.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetWebhook.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Webhook): Webhook", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetWebhook.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetWebhook.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetWebhook.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetWebhook.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetWebhook.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetWebhook.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetWebhook.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetWebhook.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Webhook]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetWebhook.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Webhook, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetWebhook.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Webhook) => Boolean): Request[Webhook]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetWebhook.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Webhook) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetWebhook.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Webhook]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetWebhook.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetWebhook.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetWebhook.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetWebhook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetWebhook.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetWebhook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetWebhook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetWebhook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetWebhook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetWebhook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetWebhook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetWebhook.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetWebhook.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetWebhook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetWebhook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetWebhook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetWebhook.html", "kind" : "case class"}, {"name" : "ackcord.requests.GetWebhookWithToken", "shortDescription" : "Get a webhook by id with a token.", "members_case class" : [{"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.GetWebhookWithToken.requiredPermissions", "link" : "ackcord\/requests\/GetWebhookWithToken.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Webhook]", "member" : "ackcord.requests.GetWebhookWithToken.responseDecoder", "link" : "ackcord\/requests\/GetWebhookWithToken.html#responseDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.GetWebhookWithToken.route", "link" : "ackcord\/requests\/GetWebhookWithToken.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.GetWebhookWithToken#<init>", "error" : "unsupported entity"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.requests.GetWebhookWithToken.token", "link" : "ackcord\/requests\/GetWebhookWithToken.html#token:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.GetWebhookWithToken.id", "link" : "ackcord\/requests\/GetWebhookWithToken.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GetWebhookWithToken.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Webhook): Webhook", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/GetWebhookWithToken.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/GetWebhookWithToken.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/GetWebhookWithToken.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GetWebhookWithToken.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GetWebhookWithToken.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GetWebhookWithToken.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GetWebhookWithToken.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GetWebhookWithToken.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Webhook]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GetWebhookWithToken.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Webhook, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GetWebhookWithToken.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Webhook) => Boolean): Request[Webhook]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GetWebhookWithToken.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Webhook) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GetWebhookWithToken.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Webhook]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GetWebhookWithToken.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GetWebhookWithToken.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GetWebhookWithToken.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GetWebhookWithToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GetWebhookWithToken.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GetWebhookWithToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GetWebhookWithToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GetWebhookWithToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GetWebhookWithToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GetWebhookWithToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhookWithToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhookWithToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GetWebhookWithToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GetWebhookWithToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GetWebhookWithToken.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GetWebhookWithToken.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GetWebhookWithToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GetWebhookWithToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GetWebhookWithToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GetWebhookWithToken.html", "kind" : "case class"}, {"name" : "ackcord.requests.GuildMemberRequest", "trait" : "ackcord\/requests\/GuildMemberRequest.html", "kind" : "trait", "members_trait" : [{"label" : "toNiceResponse", "tail" : "(response: RawGuildMember): GuildMember", "member" : "ackcord.requests.GuildMemberRequest.toNiceResponse", "link" : "ackcord\/requests\/GuildMemberRequest.html#toNiceResponse(response:ackcord.data.raw.RawGuildMember):ackcord.data.GuildMember", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuildMember]", "member" : "ackcord.requests.GuildMemberRequest.responseDecoder", "link" : "ackcord\/requests\/GuildMemberRequest.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuildMember]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/GuildMemberRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/GuildMemberRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/GuildMemberRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/GuildMemberRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/GuildMemberRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/GuildMemberRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuildMember]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/GuildMemberRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuildMember, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/GuildMemberRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuildMember) => Boolean): Request[RawGuildMember]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/GuildMemberRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuildMember) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/GuildMemberRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuildMember]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/GuildMemberRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/GuildMemberRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/GuildMemberRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GuildMemberRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GuildMemberRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GuildMemberRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GuildMemberRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GuildMemberRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GuildMemberRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GuildMemberRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildMemberRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildMemberRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildMemberRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GuildMemberRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GuildMemberRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/GuildMemberRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GuildMemberRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/GuildMemberRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/GuildMemberRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GuildMemberRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GuildMemberRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GuildMemberRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "guildId", "tail" : "(): GuildId", "member" : "ackcord.requests.GuildMemberRequest.guildId", "link" : "ackcord\/requests\/GuildMemberRequest.html#guildId:ackcord.data.GuildId", "kind" : "abstract def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/GuildMemberRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/GuildMemberRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/GuildMemberRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ackcord.requests.GuildPruneCountData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GuildPruneCountData#<init>", "error" : "unsupported entity"}, {"label" : "includeRoles", "tail" : ": Seq[RoleId]", "member" : "ackcord.requests.GuildPruneCountData.includeRoles", "link" : "ackcord\/requests\/GuildPruneCountData.html#includeRoles:Seq[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "days", "tail" : ": Int", "member" : "ackcord.requests.GuildPruneCountData.days", "link" : "ackcord\/requests\/GuildPruneCountData.html#days:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GuildPruneCountData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GuildPruneCountData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GuildPruneCountData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GuildPruneCountData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GuildPruneCountData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GuildPruneCountData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GuildPruneCountData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GuildPruneCountData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GuildPruneCountData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GuildPruneCountData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GuildPruneCountData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GuildPruneCountData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GuildPruneCountData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GuildPruneCountData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GuildPruneCountData.html", "kind" : "case class"}, {"name" : "ackcord.requests.GuildPruneCountResponse", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.GuildPruneCountResponse#<init>", "error" : "unsupported entity"}, {"label" : "pruned", "tail" : ": Int", "member" : "ackcord.requests.GuildPruneCountResponse.pruned", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#pruned:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/GuildPruneCountResponse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/GuildPruneCountResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/GuildPruneCountResponse.html", "kind" : "case class"}, {"name" : "ackcord.requests.HttpException", "shortDescription" : "An exception for Http errors.", "members_class" : [{"member" : "ackcord.requests.HttpException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/requests\/HttpException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/requests\/HttpException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/requests\/HttpException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/requests\/HttpException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/requests\/HttpException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/requests\/HttpException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/requests\/HttpException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/requests\/HttpException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/requests\/HttpException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/requests\/HttpException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/HttpException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/HttpException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/HttpException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/HttpException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/HttpException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/HttpException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/HttpException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/HttpException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/HttpException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/HttpException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/HttpException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/HttpException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/HttpException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/HttpException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/HttpException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/HttpException.html", "kind" : "class"}, {"name" : "ackcord.requests.HttpJsonDecodeException", "shortDescription" : "An exception thrown when parsing JSON if something goes wrong.", "members_class" : [{"member" : "ackcord.requests.HttpJsonDecodeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/HttpJsonDecodeException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/HttpJsonDecodeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/HttpJsonDecodeException.html", "kind" : "class"}, {"name" : "ackcord.requests.ImageRequest", "object" : "ackcord\/requests\/ImageRequest$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ImageRequest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ImageRequest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ImageRequest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ImageRequest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ImageRequest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ImageRequest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ImageRequest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ImageRequest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ImageRequest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ImageRequest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ImageRequest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ImageRequest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ImageRequest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ImageRequest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ImageRequest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ImageRequest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ackcord\/requests\/ImageRequest.html", "kind" : "trait", "members_trait" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ImageRequest.hasPermissions", "link" : "ackcord\/requests\/ImageRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[ByteString]", "member" : "ackcord.requests.ImageRequest.parseResponse", "link" : "ackcord\/requests\/ImageRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.util.ByteString]", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.ImageRequest.bodyForLogging", "link" : "ackcord\/requests\/ImageRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.ImageRequest.requestBody", "link" : "ackcord\/requests\/ImageRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[ByteString, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ImageRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (ByteString) => Boolean): Request[ByteString]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ImageRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (ByteString) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ImageRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[ByteString]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ImageRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ImageRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ImageRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ImageRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ImageRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ImageRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ImageRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ImageRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ImageRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ImageRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ImageRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ImageRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ImageRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ImageRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ImageRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ImageRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ImageRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ImageRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ImageRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ImageRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "allowedFormats", "tail" : "(): Seq[ImageFormat]", "member" : "ackcord.requests.ImageRequest.allowedFormats", "link" : "ackcord\/requests\/ImageRequest.html#allowedFormats:Seq[ackcord.data.ImageFormat]", "kind" : "abstract def"}, {"label" : "format", "tail" : "(): ImageFormat", "member" : "ackcord.requests.ImageRequest.format", "link" : "ackcord\/requests\/ImageRequest.html#format:ackcord.data.ImageFormat", "kind" : "abstract def"}, {"label" : "desiredSize", "tail" : "(): Int", "member" : "ackcord.requests.ImageRequest.desiredSize", "link" : "ackcord\/requests\/ImageRequest.html#desiredSize:Int", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/ImageRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "Base traits for all traits to get images"}, {"name" : "ackcord.requests.LeaveGuild", "shortDescription" : "Leave a guild.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.LeaveGuild.route", "link" : "ackcord\/requests\/LeaveGuild.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.LeaveGuild#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.LeaveGuild.guildId", "link" : "ackcord\/requests\/LeaveGuild.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/LeaveGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/LeaveGuild.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/LeaveGuild.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/LeaveGuild.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/LeaveGuild.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/LeaveGuild.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/LeaveGuild.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/LeaveGuild.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/LeaveGuild.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/LeaveGuild.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/LeaveGuild.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/LeaveGuild.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/LeaveGuild.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/LeaveGuild.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/LeaveGuild.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/LeaveGuild.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/LeaveGuild.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/LeaveGuild.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/LeaveGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/LeaveGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/LeaveGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/LeaveGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/LeaveGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/LeaveGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/LeaveGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LeaveGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LeaveGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LeaveGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/LeaveGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/LeaveGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/LeaveGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/LeaveGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/LeaveGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/LeaveGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/LeaveGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.ListGuildEmojis", "shortDescription" : "Get all the emojis for this guild.", "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Seq[RawEmoji]): Seq[Emoji]", "member" : "ackcord.requests.ListGuildEmojis.toNiceResponse", "link" : "ackcord\/requests\/ListGuildEmojis.html#toNiceResponse(response:Seq[ackcord.data.raw.RawEmoji]):Seq[ackcord.data.Emoji]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawEmoji]]", "member" : "ackcord.requests.ListGuildEmojis.responseDecoder", "link" : "ackcord\/requests\/ListGuildEmojis.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawEmoji]]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.ListGuildEmojis.params", "link" : "ackcord\/requests\/ListGuildEmojis.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.ListGuildEmojis.paramsEncoder", "link" : "ackcord\/requests\/ListGuildEmojis.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ListGuildEmojis.route", "link" : "ackcord\/requests\/ListGuildEmojis.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ListGuildEmojis#<init>", "error" : "unsupported entity"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ListGuildEmojis.guildId", "link" : "ackcord\/requests\/ListGuildEmojis.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ListGuildEmojis.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ListGuildEmojis.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ListGuildEmojis.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ListGuildEmojis.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ListGuildEmojis.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ListGuildEmojis.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/ListGuildEmojis.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawEmoji]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ListGuildEmojis.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawEmoji], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ListGuildEmojis.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawEmoji]) => Boolean): Request[Seq[RawEmoji]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ListGuildEmojis.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawEmoji]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ListGuildEmojis.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawEmoji]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ListGuildEmojis.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ListGuildEmojis.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ListGuildEmojis.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ListGuildEmojis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ListGuildEmojis.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ListGuildEmojis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ListGuildEmojis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ListGuildEmojis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ListGuildEmojis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ListGuildEmojis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildEmojis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildEmojis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildEmojis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ListGuildEmojis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ListGuildEmojis.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ListGuildEmojis.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ListGuildEmojis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ListGuildEmojis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ListGuildEmojis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ListGuildEmojis.html", "kind" : "case class"}, {"name" : "ackcord.requests.ListGuildMembers", "shortDescription" : "Get all the guild members in this guild.", "object" : "ackcord\/requests\/ListGuildMembers$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, limit: Option[Int], after: Option[UserId]): ListGuildMembers", "member" : "ackcord.requests.ListGuildMembers.mk", "link" : "ackcord\/requests\/ListGuildMembers$.html#mk(guildId:ackcord.data.GuildId,limit:Option[Int],after:Option[ackcord.data.UserId]):ackcord.requests.ListGuildMembers", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ListGuildMembers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ListGuildMembers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ListGuildMembers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ListGuildMembers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ListGuildMembers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ListGuildMembers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ListGuildMembers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ListGuildMembers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ListGuildMembers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ListGuildMembers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ListGuildMembers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ListGuildMembers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ListGuildMembers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ListGuildMembers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ListGuildMembers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ListGuildMembers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toNiceResponse", "tail" : "(response: Seq[RawGuildMember]): Seq[GuildMember]", "member" : "ackcord.requests.ListGuildMembers.toNiceResponse", "link" : "ackcord\/requests\/ListGuildMembers.html#toNiceResponse(response:Seq[ackcord.data.raw.RawGuildMember]):Seq[ackcord.data.GuildMember]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawGuildMember]]", "member" : "ackcord.requests.ListGuildMembers.responseDecoder", "link" : "ackcord\/requests\/ListGuildMembers.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawGuildMember]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ListGuildMembers.route", "link" : "ackcord\/requests\/ListGuildMembers.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ListGuildMembers#<init>", "error" : "unsupported entity"}, {"label" : "queryParams", "tail" : ": ListGuildMembersData", "member" : "ackcord.requests.ListGuildMembers.queryParams", "link" : "ackcord\/requests\/ListGuildMembers.html#queryParams:ackcord.requests.ListGuildMembersData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ListGuildMembers.guildId", "link" : "ackcord\/requests\/ListGuildMembers.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ListGuildMembers.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/ListGuildMembers.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/ListGuildMembers.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ListGuildMembers.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ListGuildMembers.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ListGuildMembers.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ListGuildMembers.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ListGuildMembers.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/ListGuildMembers.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawGuildMember]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ListGuildMembers.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawGuildMember], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ListGuildMembers.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawGuildMember]) => Boolean): Request[Seq[RawGuildMember]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ListGuildMembers.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawGuildMember]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ListGuildMembers.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawGuildMember]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ListGuildMembers.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ListGuildMembers.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ListGuildMembers.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ListGuildMembers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ListGuildMembers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ListGuildMembers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ListGuildMembers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ListGuildMembers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ListGuildMembers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ListGuildMembers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ListGuildMembers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ListGuildMembers.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ListGuildMembers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ListGuildMembers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ListGuildMembers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ListGuildMembers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ListGuildMembers.html", "kind" : "case class"}, {"name" : "ackcord.requests.ListGuildMembersData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.ListGuildMembersData#<init>", "error" : "unsupported entity"}, {"label" : "after", "tail" : ": Option[UserId]", "member" : "ackcord.requests.ListGuildMembersData.after", "link" : "ackcord\/requests\/ListGuildMembersData.html#after:Option[ackcord.data.UserId]", "kind" : "val"}, {"label" : "limit", "tail" : ": Option[Int]", "member" : "ackcord.requests.ListGuildMembersData.limit", "link" : "ackcord\/requests\/ListGuildMembersData.html#limit:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ListGuildMembersData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ListGuildMembersData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ListGuildMembersData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ListGuildMembersData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ListGuildMembersData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ListGuildMembersData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ListGuildMembersData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ListGuildMembersData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembersData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembersData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListGuildMembersData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ListGuildMembersData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ListGuildMembersData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ListGuildMembersData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ListGuildMembersData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ListGuildMembersData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ListGuildMembersData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ListGuildMembersData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ListVoiceRegions", "case object" : "ackcord\/requests\/ListVoiceRegions$.html", "shortDescription" : "List all the voice regions that can be used when creating a guild.", "members_case object" : [{"label" : "responseDecoder", "tail" : "(): Decoder[Seq[VoiceRegion]]", "member" : "ackcord.requests.ListVoiceRegions.responseDecoder", "link" : "ackcord\/requests\/ListVoiceRegions$.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.VoiceRegion]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ListVoiceRegions.route", "link" : "ackcord\/requests\/ListVoiceRegions$.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ListVoiceRegions$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ackcord\/requests\/ListVoiceRegions$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[VoiceRegion]): Seq[VoiceRegion]", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ListVoiceRegions$.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/ListVoiceRegions$.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/ListVoiceRegions$.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ListVoiceRegions$.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ListVoiceRegions$.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ListVoiceRegions$.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ListVoiceRegions$.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ListVoiceRegions$.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/ListVoiceRegions$.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[VoiceRegion]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ListVoiceRegions$.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[VoiceRegion], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ListVoiceRegions$.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[VoiceRegion]) => Boolean): Request[Seq[VoiceRegion]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ListVoiceRegions$.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[VoiceRegion]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ListVoiceRegions$.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[VoiceRegion]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ListVoiceRegions$.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ListVoiceRegions$.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ListVoiceRegions$.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ListVoiceRegions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ListVoiceRegions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ListVoiceRegions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ListVoiceRegions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ListVoiceRegions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ListVoiceRegions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ListVoiceRegions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListVoiceRegions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListVoiceRegions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ListVoiceRegions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ListVoiceRegions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ListVoiceRegions$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ListVoiceRegions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ListVoiceRegions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ListVoiceRegions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ListVoiceRegions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ListVoiceRegions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "ackcord.requests.LowPriorityFlatten", "trait" : "ackcord\/requests\/LowPriorityFlatten.html", "kind" : "trait", "members_trait" : [{"label" : "dontFlatten", "tail" : "(): FlattenUnflatten[A, ::[A, HNil]]", "member" : "ackcord.requests.LowPriorityFlatten.dontFlatten", "link" : "ackcord\/requests\/LowPriorityFlatten.html#dontFlatten[A]:ackcord.requests.FlattenUnflatten[A,A::shapeless.HNil]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/LowPriorityFlatten.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/LowPriorityFlatten.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/LowPriorityFlatten.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/LowPriorityFlatten.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/LowPriorityFlatten.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/LowPriorityFlatten.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/LowPriorityFlatten.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LowPriorityFlatten.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LowPriorityFlatten.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/LowPriorityFlatten.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/LowPriorityFlatten.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/LowPriorityFlatten.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/LowPriorityFlatten.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/LowPriorityFlatten.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/LowPriorityFlatten.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/LowPriorityFlatten.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/LowPriorityFlatten.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/LowPriorityFlatten.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/LowPriorityFlatten.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "ackcord.requests.MaybeRequest", "trait" : "ackcord\/requests\/MaybeRequest.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/MaybeRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/MaybeRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/MaybeRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/MaybeRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/MaybeRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/MaybeRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/MaybeRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/MaybeRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/MaybeRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/MaybeRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/MaybeRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/MaybeRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/MaybeRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/MaybeRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/MaybeRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/MaybeRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/MaybeRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/MaybeRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/MaybeRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for all requests before they enter the network flow."}, {"name" : "ackcord.requests.ModifyBotUsersNick", "shortDescription" : "Modify the clients nickname.", "object" : "ackcord\/requests\/ModifyBotUsersNick$.html", "members_object" : [{"label" : "mk", "tail" : "(guildId: GuildId, nick: String): ModifyBotUsersNick", "member" : "ackcord.requests.ModifyBotUsersNick.mk", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#mk(guildId:ackcord.data.GuildId,nick:String):ackcord.requests.ModifyBotUsersNick", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNick$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyBotUsersNick", "member" : "ackcord.requests.ModifyBotUsersNick.withReason", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#withReason(reason:String):ackcord.requests.ModifyBotUsersNick", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyBotUsersNick.hasPermissions", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyBotUsersNick.requiredPermissions", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[String]", "member" : "ackcord.requests.ModifyBotUsersNick.responseDecoder", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#responseDecoder:io.circe.Decoder[String]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyBotUsersNickData]", "member" : "ackcord.requests.ModifyBotUsersNick.paramsEncoder", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyBotUsersNickData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyBotUsersNick.route", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyBotUsersNick#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyBotUsersNick.reason", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyBotUsersNickData", "member" : "ackcord.requests.ModifyBotUsersNick.params", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#params:ackcord.requests.ModifyBotUsersNickData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyBotUsersNick.guildId", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: String): String", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[String]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[String, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (String) => Boolean): Request[String]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (String) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[String]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyBotUsersNick.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNick.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyBotUsersNick.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyBotUsersNickData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyBotUsersNickData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyBotUsersNickData]", "member" : "ackcord.requests.ModifyBotUsersNickData.encoder", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyBotUsersNickData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNickData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyBotUsersNickData#<init>", "error" : "unsupported entity"}, {"label" : "nick", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyBotUsersNickData.nick", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#nick:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyBotUsersNickData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyBotUsersNickData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyChannel", "shortDescription" : "Update the settings of a channel.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyChannel", "member" : "ackcord.requests.ModifyChannel.withReason", "link" : "ackcord\/requests\/ModifyChannel.html#withReason(reason:String):ackcord.requests.ModifyChannel", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyChannel.hasPermissions", "link" : "ackcord\/requests\/ModifyChannel.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyChannel.requiredPermissions", "link" : "ackcord\/requests\/ModifyChannel.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawChannel): Option[Channel]", "member" : "ackcord.requests.ModifyChannel.toNiceResponse", "link" : "ackcord\/requests\/ModifyChannel.html#toNiceResponse(response:ackcord.data.raw.RawChannel):Option[ackcord.data.Channel]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawChannel]", "member" : "ackcord.requests.ModifyChannel.responseDecoder", "link" : "ackcord\/requests\/ModifyChannel.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawChannel]", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.ModifyChannel.jsonPrinter", "link" : "ackcord\/requests\/ModifyChannel.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyChannelData]", "member" : "ackcord.requests.ModifyChannel.paramsEncoder", "link" : "ackcord\/requests\/ModifyChannel.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyChannelData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyChannel.route", "link" : "ackcord\/requests\/ModifyChannel.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyChannel#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyChannel.reason", "link" : "ackcord\/requests\/ModifyChannel.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyChannelData", "member" : "ackcord.requests.ModifyChannel.params", "link" : "ackcord\/requests\/ModifyChannel.html#params:ackcord.requests.ModifyChannelData", "kind" : "val"}, {"label" : "channelId", "tail" : ": ChannelId", "member" : "ackcord.requests.ModifyChannel.channelId", "link" : "ackcord\/requests\/ModifyChannel.html#channelId:ackcord.data.ChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyChannel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyChannel.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyChannel.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyChannel.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyChannel.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawChannel]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyChannel.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawChannel, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyChannel.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawChannel) => Boolean): Request[RawChannel]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyChannel.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawChannel) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyChannel.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawChannel]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyChannel.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyChannel.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyChannel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyChannel.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyChannelData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyChannelData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyChannelData]", "member" : "ackcord.requests.ModifyChannelData.encoder", "link" : "ackcord\/requests\/ModifyChannelData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyChannelData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyChannelData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyChannelData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyChannelData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyChannelData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyChannelData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyChannelData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyChannelData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyChannelData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyChannelData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyChannelData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyChannelData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyChannelData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyChannelData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyChannelData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyChannelData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyChannelData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyChannelData#<init>", "error" : "unsupported entity"}, {"label" : "parentId", "tail" : ": util.JsonOption[SnowflakeType[GuildCategory]]", "member" : "ackcord.requests.ModifyChannelData.parentId", "link" : "ackcord\/requests\/ModifyChannelData.html#parentId:ackcord.util.JsonOption[ackcord.data.SnowflakeType[ackcord.data.GuildCategory]]", "kind" : "val"}, {"label" : "permissionOverwrites", "tail" : ": util.JsonOption[Seq[PermissionOverwrite]]", "member" : "ackcord.requests.ModifyChannelData.permissionOverwrites", "link" : "ackcord\/requests\/ModifyChannelData.html#permissionOverwrites:ackcord.util.JsonOption[Seq[ackcord.data.PermissionOverwrite]]", "kind" : "val"}, {"label" : "userLimit", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyChannelData.userLimit", "link" : "ackcord\/requests\/ModifyChannelData.html#userLimit:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "bitrate", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyChannelData.bitrate", "link" : "ackcord\/requests\/ModifyChannelData.html#bitrate:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "rateLimitPerUser", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyChannelData.rateLimitPerUser", "link" : "ackcord\/requests\/ModifyChannelData.html#rateLimitPerUser:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "nsfw", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyChannelData.nsfw", "link" : "ackcord\/requests\/ModifyChannelData.html#nsfw:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "topic", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyChannelData.topic", "link" : "ackcord\/requests\/ModifyChannelData.html#topic:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "position", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyChannelData.position", "link" : "ackcord\/requests\/ModifyChannelData.html#position:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "tpe", "tail" : ": util.JsonOption[ChannelType]", "member" : "ackcord.requests.ModifyChannelData.tpe", "link" : "ackcord\/requests\/ModifyChannelData.html#tpe:ackcord.util.JsonOption[ackcord.data.ChannelType]", "kind" : "val"}, {"label" : "name", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyChannelData.name", "link" : "ackcord\/requests\/ModifyChannelData.html#name:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyChannelData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyChannelData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyChannelData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyChannelData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyChannelData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyChannelData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyChannelData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyChannelData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyChannelData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyChannelData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyChannelData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyChannelData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyChannelData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyChannelData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyChannelData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyChannelData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyCurrentUser", "shortDescription" : "Modify the current user.", "members_case class" : [{"label" : "responseDecoder", "tail" : "(): Decoder[User]", "member" : "ackcord.requests.ModifyCurrentUser.responseDecoder", "link" : "ackcord\/requests\/ModifyCurrentUser.html#responseDecoder:io.circe.Decoder[ackcord.data.User]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyCurrentUserData]", "member" : "ackcord.requests.ModifyCurrentUser.paramsEncoder", "link" : "ackcord\/requests\/ModifyCurrentUser.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyCurrentUserData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyCurrentUser.route", "link" : "ackcord\/requests\/ModifyCurrentUser.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyCurrentUser#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": ModifyCurrentUserData", "member" : "ackcord.requests.ModifyCurrentUser.params", "link" : "ackcord\/requests\/ModifyCurrentUser.html#params:ackcord.requests.ModifyCurrentUserData", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyCurrentUser.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: User): User", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyCurrentUser.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyCurrentUser.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyCurrentUser.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyCurrentUser.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyCurrentUser.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ModifyCurrentUser.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/ModifyCurrentUser.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[User]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyCurrentUser.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[User, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyCurrentUser.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (User) => Boolean): Request[User]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyCurrentUser.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (User) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyCurrentUser.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[User]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyCurrentUser.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ModifyCurrentUser.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyCurrentUser.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyCurrentUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyCurrentUser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyCurrentUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyCurrentUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyCurrentUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyCurrentUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyCurrentUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyCurrentUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyCurrentUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyCurrentUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyCurrentUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyCurrentUser.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyCurrentUserData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyCurrentUserData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyCurrentUserData]", "member" : "ackcord.requests.ModifyCurrentUserData.encoder", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyCurrentUserData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUserData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyCurrentUserData#<init>", "error" : "unsupported entity"}, {"label" : "avatar", "tail" : ": util.JsonOption[ImageData]", "member" : "ackcord.requests.ModifyCurrentUserData.avatar", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#avatar:ackcord.util.JsonOption[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "username", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyCurrentUserData.username", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#username:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyCurrentUserData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyCurrentUserData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyCurrentUserData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuild", "shortDescription" : "Modify an existing guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuild", "member" : "ackcord.requests.ModifyGuild.withReason", "link" : "ackcord\/requests\/ModifyGuild.html#withReason(reason:String):ackcord.requests.ModifyGuild", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuild.hasPermissions", "link" : "ackcord\/requests\/ModifyGuild.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuild.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuild.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawGuild): Option[Guild]", "member" : "ackcord.requests.ModifyGuild.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuild.html#toNiceResponse(response:ackcord.data.raw.RawGuild):Option[ackcord.data.Guild]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawGuild]", "member" : "ackcord.requests.ModifyGuild.responseDecoder", "link" : "ackcord\/requests\/ModifyGuild.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawGuild]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyGuildData]", "member" : "ackcord.requests.ModifyGuild.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuild.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyGuildData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuild.route", "link" : "ackcord\/requests\/ModifyGuild.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuild#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuild.reason", "link" : "ackcord\/requests\/ModifyGuild.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyGuildData", "member" : "ackcord.requests.ModifyGuild.params", "link" : "ackcord\/requests\/ModifyGuild.html#params:ackcord.requests.ModifyGuildData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuild.guildId", "link" : "ackcord\/requests\/ModifyGuild.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuild.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuild.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuild.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuild.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuild.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuild.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawGuild]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuild.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawGuild, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuild.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawGuild) => Boolean): Request[RawGuild]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuild.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawGuild) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuild.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawGuild]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuild.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuild.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuild.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuild.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuild.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuild.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildChannelPositions", "shortDescription" : "Modify the positions of several channels.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuildChannelPositions", "member" : "ackcord.requests.ModifyGuildChannelPositions.withReason", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#withReason(reason:String):ackcord.requests.ModifyGuildChannelPositions", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildChannelPositions.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildChannelPositions.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Seq[ModifyGuildChannelPositionsData]]", "member" : "ackcord.requests.ModifyGuildChannelPositions.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#paramsEncoder:io.circe.Encoder[Seq[ackcord.requests.ModifyGuildChannelPositionsData]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildChannelPositions.route", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildChannelPositions#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuildChannelPositions.reason", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": Seq[ModifyGuildChannelPositionsData]", "member" : "ackcord.requests.ModifyGuildChannelPositions.params", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#params:Seq[ackcord.requests.ModifyGuildChannelPositionsData]", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildChannelPositions.guildId", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildChannelPositions.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildChannelPositionsData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildChannelPositionsData]", "member" : "ackcord.requests.ModifyGuildChannelPositionsData.encoder", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildChannelPositionsData]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(id: GuildChannelId, position: Int): ModifyGuildChannelPositionsData", "member" : "ackcord.requests.ModifyGuildChannelPositionsData.apply", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#apply(id:ackcord.data.GuildChannelId,position:Int):ackcord.requests.ModifyGuildChannelPositionsData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildChannelPositionsData#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyGuildChannelPositionsData.position", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#position:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "id", "tail" : ": GuildChannelId", "member" : "ackcord.requests.ModifyGuildChannelPositionsData.id", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#id:ackcord.data.GuildChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildChannelPositionsData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildData]", "member" : "ackcord.requests.ModifyGuildData.encoder", "link" : "ackcord\/requests\/ModifyGuildData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildData#<init>", "error" : "unsupported entity"}, {"label" : "systemChannelId", "tail" : ": util.JsonOption[TextGuildChannelId]", "member" : "ackcord.requests.ModifyGuildData.systemChannelId", "link" : "ackcord\/requests\/ModifyGuildData.html#systemChannelId:ackcord.util.JsonOption[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "banner", "tail" : ": util.JsonOption[ImageData]", "member" : "ackcord.requests.ModifyGuildData.banner", "link" : "ackcord\/requests\/ModifyGuildData.html#banner:ackcord.util.JsonOption[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "splash", "tail" : ": util.JsonOption[ImageData]", "member" : "ackcord.requests.ModifyGuildData.splash", "link" : "ackcord\/requests\/ModifyGuildData.html#splash:ackcord.util.JsonOption[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "ownerId", "tail" : ": util.JsonOption[UserId]", "member" : "ackcord.requests.ModifyGuildData.ownerId", "link" : "ackcord\/requests\/ModifyGuildData.html#ownerId:ackcord.util.JsonOption[ackcord.data.UserId]", "kind" : "val"}, {"label" : "icon", "tail" : ": util.JsonOption[ImageData]", "member" : "ackcord.requests.ModifyGuildData.icon", "link" : "ackcord\/requests\/ModifyGuildData.html#icon:ackcord.util.JsonOption[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "afkTimeout", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyGuildData.afkTimeout", "link" : "ackcord\/requests\/ModifyGuildData.html#afkTimeout:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "afkChannelId", "tail" : ": util.JsonOption[VoiceGuildChannelId]", "member" : "ackcord.requests.ModifyGuildData.afkChannelId", "link" : "ackcord\/requests\/ModifyGuildData.html#afkChannelId:ackcord.util.JsonOption[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "explicitContentFilter", "tail" : ": util.JsonOption[FilterLevel]", "member" : "ackcord.requests.ModifyGuildData.explicitContentFilter", "link" : "ackcord\/requests\/ModifyGuildData.html#explicitContentFilter:ackcord.util.JsonOption[ackcord.data.FilterLevel]", "kind" : "val"}, {"label" : "defaultMessageNotifications", "tail" : ": util.JsonOption[NotificationLevel]", "member" : "ackcord.requests.ModifyGuildData.defaultMessageNotifications", "link" : "ackcord\/requests\/ModifyGuildData.html#defaultMessageNotifications:ackcord.util.JsonOption[ackcord.data.NotificationLevel]", "kind" : "val"}, {"label" : "verificationLevel", "tail" : ": util.JsonOption[VerificationLevel]", "member" : "ackcord.requests.ModifyGuildData.verificationLevel", "link" : "ackcord\/requests\/ModifyGuildData.html#verificationLevel:ackcord.util.JsonOption[ackcord.data.VerificationLevel]", "kind" : "val"}, {"label" : "region", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyGuildData.region", "link" : "ackcord\/requests\/ModifyGuildData.html#region:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "name", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyGuildData.name", "link" : "ackcord\/requests\/ModifyGuildData.html#name:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildEmoji", "shortDescription" : "Modify an existing emoji.", "object" : "ackcord\/requests\/ModifyGuildEmoji$.html", "members_object" : [{"label" : "mk", "tail" : "(emojiId: EmojiId, guildId: GuildId, name: String, roles: Seq[RoleId]): ModifyGuildEmoji", "member" : "ackcord.requests.ModifyGuildEmoji.mk", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#mk(emojiId:ackcord.data.EmojiId,guildId:ackcord.data.GuildId,name:String,roles:Seq[ackcord.data.RoleId]):ackcord.requests.ModifyGuildEmoji", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmoji$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuildEmoji", "member" : "ackcord.requests.ModifyGuildEmoji.withReason", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#withReason(reason:String):ackcord.requests.ModifyGuildEmoji", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildEmoji.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildEmoji.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawEmoji): Emoji", "member" : "ackcord.requests.ModifyGuildEmoji.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#toNiceResponse(response:ackcord.data.raw.RawEmoji):ackcord.data.Emoji", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawEmoji]", "member" : "ackcord.requests.ModifyGuildEmoji.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawEmoji]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyGuildEmojiData]", "member" : "ackcord.requests.ModifyGuildEmoji.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyGuildEmojiData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildEmoji.route", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildEmoji#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuildEmoji.reason", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyGuildEmojiData", "member" : "ackcord.requests.ModifyGuildEmoji.params", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#params:ackcord.requests.ModifyGuildEmojiData", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildEmoji.guildId", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "emojiId", "tail" : ": EmojiId", "member" : "ackcord.requests.ModifyGuildEmoji.emojiId", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#emojiId:ackcord.data.EmojiId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawEmoji]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawEmoji, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawEmoji) => Boolean): Request[RawEmoji]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawEmoji) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawEmoji]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildEmoji.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmoji.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildEmoji.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildEmojiData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildEmojiData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildEmojiData]", "member" : "ackcord.requests.ModifyGuildEmojiData.encoder", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildEmojiData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmojiData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildEmojiData#<init>", "error" : "unsupported entity"}, {"label" : "roles", "tail" : ": util.JsonOption[Seq[RoleId]]", "member" : "ackcord.requests.ModifyGuildEmojiData.roles", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#roles:ackcord.util.JsonOption[Seq[ackcord.data.RoleId]]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "ackcord.requests.ModifyGuildEmojiData.name", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildEmojiData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildEmojiData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildIntegration", "shortDescription" : "Modify an existing integration for a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildIntegration.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildIntegration.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyGuildIntegrationData]", "member" : "ackcord.requests.ModifyGuildIntegration.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyGuildIntegrationData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildIntegration.route", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildIntegration#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": ModifyGuildIntegrationData", "member" : "ackcord.requests.ModifyGuildIntegration.params", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#params:ackcord.requests.ModifyGuildIntegrationData", "kind" : "val"}, {"label" : "integrationId", "tail" : ": IntegrationId", "member" : "ackcord.requests.ModifyGuildIntegration.integrationId", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#integrationId:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildIntegration.guildId", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildIntegration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildIntegration.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildIntegrationData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildIntegrationData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildIntegrationData]", "member" : "ackcord.requests.ModifyGuildIntegrationData.encoder", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildIntegrationData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegrationData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildIntegrationData#<init>", "error" : "unsupported entity"}, {"label" : "enableEmoticons", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyGuildIntegrationData.enableEmoticons", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#enableEmoticons:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "expireGracePeriod", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyGuildIntegrationData.expireGracePeriod", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#expireGracePeriod:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "expireBehavior", "tail" : ": util.JsonOption[IntegrationExpireBehavior]", "member" : "ackcord.requests.ModifyGuildIntegrationData.expireBehavior", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#expireBehavior:ackcord.util.JsonOption[ackcord.data.IntegrationExpireBehavior]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildIntegrationData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildIntegrationData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildMember", "shortDescription" : "Modify a guild member.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuildMember", "member" : "ackcord.requests.ModifyGuildMember.withReason", "link" : "ackcord\/requests\/ModifyGuildMember.html#withReason(reason:String):ackcord.requests.ModifyGuildMember", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildMember.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildMember.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildMember.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildMember.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyGuildMemberData]", "member" : "ackcord.requests.ModifyGuildMember.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildMember.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyGuildMemberData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildMember.route", "link" : "ackcord\/requests\/ModifyGuildMember.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.ModifyGuildMember.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildMember.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuildMember.reason", "link" : "ackcord\/requests\/ModifyGuildMember.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyGuildMemberData", "member" : "ackcord.requests.ModifyGuildMember.params", "link" : "ackcord\/requests\/ModifyGuildMember.html#params:ackcord.requests.ModifyGuildMemberData", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.ModifyGuildMember.userId", "link" : "ackcord\/requests\/ModifyGuildMember.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildMember.guildId", "link" : "ackcord\/requests\/ModifyGuildMember.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildMember.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildMember.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildMember.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildMember.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildMember.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildMember.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildMember.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildMember.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildMember.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildMember.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildMember.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildMember.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildMemberData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildMemberData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildMemberData]", "member" : "ackcord.requests.ModifyGuildMemberData.encoder", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildMemberData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMemberData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildMemberData#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": util.JsonOption[VoiceGuildChannelId]", "member" : "ackcord.requests.ModifyGuildMemberData.channelId", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#channelId:ackcord.util.JsonOption[ackcord.data.VoiceGuildChannelId]", "kind" : "val"}, {"label" : "deaf", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyGuildMemberData.deaf", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#deaf:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "mute", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyGuildMemberData.mute", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#mute:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "roles", "tail" : ": util.JsonOption[Seq[RoleId]]", "member" : "ackcord.requests.ModifyGuildMemberData.roles", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#roles:ackcord.util.JsonOption[Seq[ackcord.data.RoleId]]", "kind" : "val"}, {"label" : "nick", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyGuildMemberData.nick", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#nick:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildMemberData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildMemberData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildMemberData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildRole", "shortDescription" : "Modify a role.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuildRole", "member" : "ackcord.requests.ModifyGuildRole.withReason", "link" : "ackcord\/requests\/ModifyGuildRole.html#withReason(reason:String):ackcord.requests.ModifyGuildRole", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildRole.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildRole.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildRole.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildRole.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: RawRole): Role", "member" : "ackcord.requests.ModifyGuildRole.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildRole.html#toNiceResponse(response:ackcord.data.raw.RawRole):ackcord.data.Role", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawRole]", "member" : "ackcord.requests.ModifyGuildRole.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildRole.html#responseDecoder:io.circe.Decoder[ackcord.data.raw.RawRole]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyGuildRoleData]", "member" : "ackcord.requests.ModifyGuildRole.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildRole.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyGuildRoleData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildRole.route", "link" : "ackcord\/requests\/ModifyGuildRole.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildRole#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuildRole.reason", "link" : "ackcord\/requests\/ModifyGuildRole.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyGuildRoleData", "member" : "ackcord.requests.ModifyGuildRole.params", "link" : "ackcord\/requests\/ModifyGuildRole.html#params:ackcord.requests.ModifyGuildRoleData", "kind" : "val"}, {"label" : "roleId", "tail" : ": RoleId", "member" : "ackcord.requests.ModifyGuildRole.roleId", "link" : "ackcord\/requests\/ModifyGuildRole.html#roleId:ackcord.data.RoleId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildRole.guildId", "link" : "ackcord\/requests\/ModifyGuildRole.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildRole.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildRole.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildRole.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildRole.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildRole.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawRole]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildRole.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawRole, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildRole.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawRole) => Boolean): Request[RawRole]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildRole.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawRole) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildRole.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawRole]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildRole.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildRole.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildRole.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildRoleData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyGuildRoleData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyGuildRoleData]", "member" : "ackcord.requests.ModifyGuildRoleData.encoder", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyGuildRoleData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRoleData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyGuildRoleData#<init>", "error" : "unsupported entity"}, {"label" : "mentionable", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyGuildRoleData.mentionable", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#mentionable:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "hoist", "tail" : ": util.JsonOption[Boolean]", "member" : "ackcord.requests.ModifyGuildRoleData.hoist", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#hoist:ackcord.util.JsonOption[Boolean]", "kind" : "val"}, {"label" : "color", "tail" : ": util.JsonOption[Int]", "member" : "ackcord.requests.ModifyGuildRoleData.color", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#color:ackcord.util.JsonOption[Int]", "kind" : "val"}, {"label" : "permissions", "tail" : ": util.JsonOption[Permission]", "member" : "ackcord.requests.ModifyGuildRoleData.permissions", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#permissions:ackcord.util.JsonOption[ackcord.data.Permission]", "kind" : "val"}, {"label" : "name", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyGuildRoleData.name", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#name:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildRoleData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRoleData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildRoleData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildRolePositions", "shortDescription" : "Modify the positions of several roles.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyGuildRolePositions", "member" : "ackcord.requests.ModifyGuildRolePositions.withReason", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#withReason(reason:String):ackcord.requests.ModifyGuildRolePositions", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildRolePositions.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildRolePositions.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Seq[RawRole]): Seq[Role]", "member" : "ackcord.requests.ModifyGuildRolePositions.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#toNiceResponse(response:Seq[ackcord.data.raw.RawRole]):Seq[ackcord.data.Role]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Seq[RawRole]]", "member" : "ackcord.requests.ModifyGuildRolePositions.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#responseDecoder:io.circe.Decoder[Seq[ackcord.data.raw.RawRole]]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Seq[ModifyGuildRolePositionsData]]", "member" : "ackcord.requests.ModifyGuildRolePositions.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#paramsEncoder:io.circe.Encoder[Seq[ackcord.requests.ModifyGuildRolePositionsData]]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildRolePositions.route", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildRolePositions#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyGuildRolePositions.reason", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": Seq[ModifyGuildRolePositionsData]", "member" : "ackcord.requests.ModifyGuildRolePositions.params", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#params:Seq[ackcord.requests.ModifyGuildRolePositionsData]", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildRolePositions.guildId", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Seq[RawRole]]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[RawRole], B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Seq[RawRole]) => Boolean): Request[Seq[RawRole]]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[RawRole]) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Seq[RawRole]]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRolePositions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildRolePositions.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildRolePositionsData", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.ModifyGuildRolePositionsData#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": Int", "member" : "ackcord.requests.ModifyGuildRolePositionsData.position", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#position:Int", "kind" : "val"}, {"label" : "id", "tail" : ": RoleId", "member" : "ackcord.requests.ModifyGuildRolePositionsData.id", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#id:ackcord.data.RoleId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildRolePositionsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildRolePositionsData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyGuildWidget", "shortDescription" : "Modify a guild widget for a guild.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.ModifyGuildWidget.hasPermissions", "link" : "ackcord\/requests\/ModifyGuildWidget.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyGuildWidget.requiredPermissions", "link" : "ackcord\/requests\/ModifyGuildWidget.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[GuildWidgetSettings]", "member" : "ackcord.requests.ModifyGuildWidget.responseDecoder", "link" : "ackcord\/requests\/ModifyGuildWidget.html#responseDecoder:io.circe.Decoder[ackcord.data.GuildWidgetSettings]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[GuildWidgetSettings]", "member" : "ackcord.requests.ModifyGuildWidget.paramsEncoder", "link" : "ackcord\/requests\/ModifyGuildWidget.html#paramsEncoder:io.circe.Encoder[ackcord.data.GuildWidgetSettings]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyGuildWidget.route", "link" : "ackcord\/requests\/ModifyGuildWidget.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyGuildWidget#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": GuildWidgetSettings", "member" : "ackcord.requests.ModifyGuildWidget.params", "link" : "ackcord\/requests\/ModifyGuildWidget.html#params:ackcord.data.GuildWidgetSettings", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.ModifyGuildWidget.guildId", "link" : "ackcord\/requests\/ModifyGuildWidget.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyGuildWidget.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: GuildWidgetSettings): GuildWidgetSettings", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyGuildWidget.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyGuildWidget.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyGuildWidget.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyGuildWidget.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyGuildWidget.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[GuildWidgetSettings]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyGuildWidget.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[GuildWidgetSettings, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyGuildWidget.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (GuildWidgetSettings) => Boolean): Request[GuildWidgetSettings]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyGuildWidget.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GuildWidgetSettings) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyGuildWidget.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[GuildWidgetSettings]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyGuildWidget.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/ModifyGuildWidget.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyGuildWidget.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyGuildWidget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyGuildWidget.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyGuildWidget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyGuildWidget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyGuildWidget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyGuildWidget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyGuildWidget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildWidget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildWidget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyGuildWidget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyGuildWidget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyGuildWidget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyGuildWidget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyGuildWidget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyGuildWidget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyGuildWidget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyGuildWidget.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyWebhook", "shortDescription" : "Modify a webhook.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyWebhook", "member" : "ackcord.requests.ModifyWebhook.withReason", "link" : "ackcord\/requests\/ModifyWebhook.html#withReason(reason:String):ackcord.requests.ModifyWebhook", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyWebhook.requiredPermissions", "link" : "ackcord\/requests\/ModifyWebhook.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Webhook]", "member" : "ackcord.requests.ModifyWebhook.responseDecoder", "link" : "ackcord\/requests\/ModifyWebhook.html#responseDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyWebhookData]", "member" : "ackcord.requests.ModifyWebhook.paramsEncoder", "link" : "ackcord\/requests\/ModifyWebhook.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyWebhookData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyWebhook.route", "link" : "ackcord\/requests\/ModifyWebhook.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyWebhook#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyWebhook.reason", "link" : "ackcord\/requests\/ModifyWebhook.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyWebhookData", "member" : "ackcord.requests.ModifyWebhook.params", "link" : "ackcord\/requests\/ModifyWebhook.html#params:ackcord.requests.ModifyWebhookData", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.ModifyWebhook.id", "link" : "ackcord\/requests\/ModifyWebhook.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyWebhook.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Webhook): Webhook", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyWebhook.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyWebhook.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyWebhook.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyWebhook.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyWebhook.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyWebhook.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ModifyWebhook.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Webhook]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyWebhook.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Webhook, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyWebhook.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Webhook) => Boolean): Request[Webhook]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyWebhook.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Webhook) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyWebhook.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Webhook]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyWebhook.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyWebhook.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyWebhook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyWebhook.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyWebhook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyWebhook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyWebhook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyWebhook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyWebhook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyWebhook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyWebhook.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyWebhook.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyWebhook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyWebhook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyWebhook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyWebhook.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyWebhookData", "shortDescription" : "", "object" : "ackcord\/requests\/ModifyWebhookData$.html", "members_object" : [{"label" : "encoder", "tail" : ": Encoder[ModifyWebhookData]", "member" : "ackcord.requests.ModifyWebhookData.encoder", "link" : "ackcord\/requests\/ModifyWebhookData$.html#encoder:io.circe.Encoder[ackcord.requests.ModifyWebhookData]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyWebhookData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyWebhookData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyWebhookData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyWebhookData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyWebhookData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyWebhookData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyWebhookData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyWebhookData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyWebhookData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ModifyWebhookData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyWebhookData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ModifyWebhookData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ModifyWebhookData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyWebhookData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.ModifyWebhookData#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": util.JsonOption[TextGuildChannelId]", "member" : "ackcord.requests.ModifyWebhookData.channelId", "link" : "ackcord\/requests\/ModifyWebhookData.html#channelId:ackcord.util.JsonOption[ackcord.data.TextGuildChannelId]", "kind" : "val"}, {"label" : "avatar", "tail" : ": util.JsonOption[ImageData]", "member" : "ackcord.requests.ModifyWebhookData.avatar", "link" : "ackcord\/requests\/ModifyWebhookData.html#avatar:ackcord.util.JsonOption[ackcord.data.ImageData]", "kind" : "val"}, {"label" : "name", "tail" : ": util.JsonOption[String]", "member" : "ackcord.requests.ModifyWebhookData.name", "link" : "ackcord\/requests\/ModifyWebhookData.html#name:ackcord.util.JsonOption[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyWebhookData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyWebhookData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyWebhookData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyWebhookData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyWebhookData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyWebhookData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyWebhookData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyWebhookData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyWebhookData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyWebhookData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyWebhookData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyWebhookData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyWebhookData.html", "kind" : "case class"}, {"name" : "ackcord.requests.ModifyWebhookWithToken", "shortDescription" : "Modify a webhook with a token.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): ModifyWebhookWithToken", "member" : "ackcord.requests.ModifyWebhookWithToken.withReason", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#withReason(reason:String):ackcord.requests.ModifyWebhookWithToken", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.ModifyWebhookWithToken.requiredPermissions", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Webhook]", "member" : "ackcord.requests.ModifyWebhookWithToken.responseDecoder", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#responseDecoder:io.circe.Decoder[ackcord.data.Webhook]", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[ModifyWebhookData]", "member" : "ackcord.requests.ModifyWebhookWithToken.paramsEncoder", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#paramsEncoder:io.circe.Encoder[ackcord.requests.ModifyWebhookData]", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.ModifyWebhookWithToken.route", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.ModifyWebhookWithToken#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.ModifyWebhookWithToken.reason", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#reason:Option[String]", "kind" : "val"}, {"label" : "params", "tail" : ": ModifyWebhookData", "member" : "ackcord.requests.ModifyWebhookWithToken.params", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#params:ackcord.requests.ModifyWebhookData", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "ackcord.requests.ModifyWebhookWithToken.token", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#token:String", "kind" : "val"}, {"label" : "id", "tail" : ": SnowflakeType[Webhook]", "member" : "ackcord.requests.ModifyWebhookWithToken.id", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#id:ackcord.data.SnowflakeType[ackcord.data.Webhook]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: Webhook): Webhook", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Webhook]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Webhook, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Webhook) => Boolean): Request[Webhook]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Webhook) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Webhook]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ModifyWebhookWithToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/ModifyWebhookWithToken.html", "kind" : "case class"}, {"name" : "ackcord.requests.NoNiceResponseReasonRequest", "trait" : "ackcord\/requests\/NoNiceResponseReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "toNiceResponse", "tail" : "(response: Response): Response", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Response]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Response, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Response) => Boolean): Request[Response]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Response) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Response]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Response]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoNiceResponseReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request, with an audit log reason, where the response type andthe nice response type are the same."}, {"name" : "ackcord.requests.NoNiceResponseRequest", "trait" : "ackcord\/requests\/NoNiceResponseRequest.html", "kind" : "trait", "members_trait" : [{"label" : "toNiceResponse", "tail" : "(response: Response): Response", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Response]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Response, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Response) => Boolean): Request[Response]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Response) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Response]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoNiceResponseRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Response]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoNiceResponseRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request where the response type and the nice response type are the same."}, {"name" : "ackcord.requests.NoParamsNiceResponseReasonRequest", "trait" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "toNiceResponse", "tail" : "(response: Response): Response", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Response]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Response, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Response) => Boolean): Request[Response]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Response) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Response]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Response]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsNiceResponseReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request, with an audit log reason, that takes no params, and where the response type and thenice response type are the same."}, {"name" : "ackcord.requests.NoParamsNiceResponseRequest", "trait" : "ackcord\/requests\/NoParamsNiceResponseRequest.html", "kind" : "trait", "members_trait" : [{"label" : "toNiceResponse", "tail" : "(response: Response): Response", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Response]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Response, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Response) => Boolean): Request[Response]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Response) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Response]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[Response]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsNiceResponseRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that takes no params, and where the response type and thenice response type are the same."}, {"name" : "ackcord.requests.NoParamsReasonRequest", "trait" : "ackcord\/requests\/NoParamsReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawResponse) => Boolean): Request[RawResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "toNiceResponse", "tail" : "(response: RawResponse): NiceResponse", "member" : "ackcord.requests.BaseRESTRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#toNiceResponse(response:RawResponse):NiceResponse", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that takes no params with an audit log reason."}, {"name" : "ackcord.requests.NoParamsRequest", "trait" : "ackcord\/requests\/NoParamsRequest.html", "kind" : "trait", "members_trait" : [{"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawResponse) => Boolean): Request[RawResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/NoParamsRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toNiceResponse", "tail" : "(response: RawResponse): NiceResponse", "member" : "ackcord.requests.BaseRESTRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsRequest.html#toNiceResponse(response:RawResponse):NiceResponse", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that takes no params."}, {"name" : "ackcord.requests.NoParamsResponseReasonRequest", "trait" : "ackcord\/requests\/NoParamsResponseReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsResponseReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that has neither params nor a response with a reason."}, {"name" : "ackcord.requests.NoParamsResponseRequest", "trait" : "ackcord\/requests\/NoParamsResponseRequest.html", "kind" : "trait", "members_trait" : [{"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoParamsResponseRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoParamsResponseRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that has neither params nor a response."}, {"name" : "ackcord.requests.NoResponseReasonRequest", "trait" : "ackcord\/requests\/NoResponseReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoResponseReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoResponseReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request, with an audit log reason, that doesn't have a response."}, {"name" : "ackcord.requests.NoResponseRequest", "trait" : "ackcord\/requests\/NoResponseRequest.html", "kind" : "trait", "members_trait" : [{"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/NoResponseRequest.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/NoResponseRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/NoResponseRequest.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/NoResponseRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/NoResponseRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/NoResponseRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/NoResponseRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/NoResponseRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/NoResponseRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/NoResponseRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/NoResponseRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/NoResponseRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/NoResponseRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/NoResponseRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/NoResponseRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/NoResponseRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/NoResponseRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/NoResponseRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/NoResponseRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/NoResponseRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/NoResponseRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/NoResponseRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/NoResponseRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/NoResponseRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/NoResponseRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/NoResponseRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/NoResponseRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/NoResponseRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/NoResponseRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/NoResponseRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/NoResponseRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/NoResponseRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/NoResponseRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/NoResponseRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/NoResponseRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A request that doesn't have a response."}, {"name" : "ackcord.requests.OAuth", "shortDescription" : "", "object" : "ackcord\/requests\/OAuth$.html", "members_object" : [{"label" : "GetCurrentApplicationInformation", "tail" : "", "member" : "ackcord.requests.OAuth.GetCurrentApplicationInformation", "link" : "ackcord\/requests\/OAuth$.html#GetCurrentApplicationInformation", "kind" : "case object"}, {"label" : "ApplicationInformation", "tail" : "", "member" : "ackcord.requests.OAuth.ApplicationInformation", "link" : "ackcord\/requests\/OAuth$.html#ApplicationInformationextendsProductwithSerializable", "kind" : "case class"}, {"label" : "clientCredentialsGrant", "tail" : "(clientId: String, clientSecret: String, scopes: Seq[Scope])(system: ActorSystem[Nothing]): Future[ClientAccessToken]", "member" : "ackcord.requests.OAuth.clientCredentialsGrant", "link" : "ackcord\/requests\/OAuth$.html#clientCredentialsGrant(clientId:String,clientSecret:String,scopes:Seq[ackcord.requests.OAuth.Scope])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[ackcord.requests.OAuth.ClientAccessToken]", "kind" : "def"}, {"label" : "refreshTokenExchange", "tail" : "(clientId: String, clientSecret: String, grantType: GrantType, refreshToken: String, redirectUri: String, scopes: Seq[Scope])(system: ActorSystem[Nothing]): Future[AccessToken]", "member" : "ackcord.requests.OAuth.refreshTokenExchange", "link" : "ackcord\/requests\/OAuth$.html#refreshTokenExchange(clientId:String,clientSecret:String,grantType:ackcord.requests.OAuth.GrantType,refreshToken:String,redirectUri:String,scopes:Seq[ackcord.requests.OAuth.Scope])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[ackcord.requests.OAuth.AccessToken]", "kind" : "def"}, {"label" : "tokenExchange", "tail" : "(clientId: String, clientSecret: String, grantType: GrantType, code: String, redirectUri: String, scopes: Seq[Scope])(system: ActorSystem[Nothing]): Future[AccessToken]", "member" : "ackcord.requests.OAuth.tokenExchange", "link" : "ackcord\/requests\/OAuth$.html#tokenExchange(clientId:String,clientSecret:String,grantType:ackcord.requests.OAuth.GrantType,code:String,redirectUri:String,scopes:Seq[ackcord.requests.OAuth.Scope])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[ackcord.requests.OAuth.AccessToken]", "kind" : "def"}, {"label" : "baseExchange", "tail" : "(clientId: String, clientSecret: String, grantType: GrantType, code: Option[String], refreshToken: Option[String], redirectUri: String, scopes: Seq[Scope])(system: ActorSystem[Nothing]): Future[AccessToken]", "member" : "ackcord.requests.OAuth.baseExchange", "link" : "ackcord\/requests\/OAuth$.html#baseExchange(clientId:String,clientSecret:String,grantType:ackcord.requests.OAuth.GrantType,code:Option[String],refreshToken:Option[String],redirectUri:String,scopes:Seq[ackcord.requests.OAuth.Scope])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[ackcord.requests.OAuth.AccessToken]", "kind" : "def"}, {"label" : "implicitGrantUri", "tail" : "(clientId: String, scopes: Seq[Scope], state: String, redirectUri: String): Uri", "member" : "ackcord.requests.OAuth.implicitGrantUri", "link" : "ackcord\/requests\/OAuth$.html#implicitGrantUri(clientId:String,scopes:Seq[ackcord.requests.OAuth.Scope],state:String,redirectUri:String):akka.http.scaladsl.model.Uri", "kind" : "def"}, {"label" : "codeGrantUri", "tail" : "(clientId: String, scopes: Seq[Scope], state: String, redirectUri: String, prompt: PromptType): Uri", "member" : "ackcord.requests.OAuth.codeGrantUri", "link" : "ackcord\/requests\/OAuth$.html#codeGrantUri(clientId:String,scopes:Seq[ackcord.requests.OAuth.Scope],state:String,redirectUri:String,prompt:ackcord.requests.OAuth.PromptType):akka.http.scaladsl.model.Uri", "kind" : "def"}, {"label" : "baseGrant", "tail" : "(clientId: String, scopes: Seq[Scope], state: String, redirectUri: String, responseType: String, prompt: PromptType): Uri", "member" : "ackcord.requests.OAuth.baseGrant", "link" : "ackcord\/requests\/OAuth$.html#baseGrant(clientId:String,scopes:Seq[ackcord.requests.OAuth.Scope],state:String,redirectUri:String,responseType:String,prompt:ackcord.requests.OAuth.PromptType):akka.http.scaladsl.model.Uri", "kind" : "def"}, {"label" : "PromptType", "tail" : "", "member" : "ackcord.requests.OAuth.PromptType", "link" : "ackcord\/requests\/OAuth$.html#PromptType", "kind" : "object"}, {"label" : "PromptType", "tail" : "", "member" : "ackcord.requests.OAuth.PromptType", "link" : "ackcord\/requests\/OAuth$.html#PromptTypeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "GrantType", "tail" : "", "member" : "ackcord.requests.OAuth.GrantType", "link" : "ackcord\/requests\/OAuth$.html#GrantType", "kind" : "object"}, {"label" : "GrantType", "tail" : "", "member" : "ackcord.requests.OAuth.GrantType", "link" : "ackcord\/requests\/OAuth$.html#GrantTypeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "ClientAccessToken", "tail" : "", "member" : "ackcord.requests.OAuth.ClientAccessToken", "link" : "ackcord\/requests\/OAuth$.html#ClientAccessToken", "kind" : "object"}, {"label" : "ClientAccessToken", "tail" : "", "member" : "ackcord.requests.OAuth.ClientAccessToken", "link" : "ackcord\/requests\/OAuth$.html#ClientAccessTokenextendsProductwithSerializable", "kind" : "case class"}, {"label" : "AccessToken", "tail" : "", "member" : "ackcord.requests.OAuth.AccessToken", "link" : "ackcord\/requests\/OAuth$.html#AccessToken", "kind" : "object"}, {"label" : "AccessToken", "tail" : "", "member" : "ackcord.requests.OAuth.AccessToken", "link" : "ackcord\/requests\/OAuth$.html#AccessTokenextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Scope", "tail" : "", "member" : "ackcord.requests.OAuth.Scope", "link" : "ackcord\/requests\/OAuth$.html#Scope", "kind" : "object"}, {"label" : "Scope", "tail" : "", "member" : "ackcord.requests.OAuth.Scope", "link" : "ackcord\/requests\/OAuth$.html#ScopeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/OAuth$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/OAuth$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/OAuth$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/OAuth$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/OAuth$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/OAuth$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/OAuth$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/OAuth$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/OAuth$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/OAuth$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/OAuth$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/OAuth$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/OAuth$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/OAuth$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/OAuth$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/OAuth$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/OAuth$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/OAuth$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/OAuth$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.requests.Ratelimiter", "shortDescription" : "", "object" : "ackcord\/requests\/Ratelimiter$.html", "members_class" : [{"label" : "onSignal", "tail" : "(): PartialFunction[Signal, Behavior[Command]]", "member" : "ackcord.requests.Ratelimiter.onSignal", "link" : "ackcord\/requests\/Ratelimiter.html#onSignal:PartialFunction[akka.actor.typed.Signal,akka.actor.typed.Behavior[ackcord.requests.Ratelimiter.Command]]", "kind" : "def"}, {"label" : "releaseWaiting", "tail" : "(uri: String): Unit", "member" : "ackcord.requests.Ratelimiter.releaseWaiting", "link" : "ackcord\/requests\/Ratelimiter.html#releaseWaiting(uri:String):Unit", "kind" : "def"}, {"label" : "sendResponse", "tail" : "(request: WantToPass[A]): Unit", "member" : "ackcord.requests.Ratelimiter.sendResponse", "link" : "ackcord\/requests\/Ratelimiter.html#sendResponse[A](request:ackcord.requests.Ratelimiter.WantToPass[A]):Unit", "kind" : "def"}, {"label" : "onMessage", "tail" : "(msg: Command): Behavior[Command]", "member" : "ackcord.requests.Ratelimiter.onMessage", "link" : "ackcord\/requests\/Ratelimiter.html#onMessage(msg:ackcord.requests.Ratelimiter.Command):akka.actor.typed.Behavior[ackcord.requests.Ratelimiter.Command]", "kind" : "def"}, {"label" : "handleWantToPassNotGlobal", "tail" : "(request: WantToPass[A]): Unit", "member" : "ackcord.requests.Ratelimiter.handleWantToPassNotGlobal", "link" : "ackcord\/requests\/Ratelimiter.html#handleWantToPassNotGlobal[A](request:ackcord.requests.Ratelimiter.WantToPass[A]):Unit", "kind" : "def"}, {"label" : "scheduleSpuriousWakeup", "tail" : "(route: RequestRoute): Unit", "member" : "ackcord.requests.Ratelimiter.scheduleSpuriousWakeup", "link" : "ackcord\/requests\/Ratelimiter.html#scheduleSpuriousWakeup(route:ackcord.requests.RequestRoute):Unit", "kind" : "def"}, {"label" : "handleWantToPassGlobal", "tail" : "(request: WantToPass[A]): Unit", "member" : "ackcord.requests.Ratelimiter.handleWantToPassGlobal", "link" : "ackcord\/requests\/Ratelimiter.html#handleWantToPassGlobal[A](request:ackcord.requests.Ratelimiter.WantToPass[A]):Unit", "kind" : "def"}, {"label" : "isGlobalRatelimited", "tail" : "(): Boolean", "member" : "ackcord.requests.Ratelimiter.isGlobalRatelimited", "link" : "ackcord\/requests\/Ratelimiter.html#isGlobalRatelimited:Boolean", "kind" : "def"}, {"member" : "ackcord.requests.Ratelimiter#<init>", "error" : "unsupported entity"}, {"label" : "receiveSignal", "tail" : "(ctx: TypedActorContext[Command], msg: Signal): Behavior[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receiveSignal", "link" : "ackcord\/requests\/Ratelimiter.html#receiveSignal(ctx:akka.actor.typed.TypedActorContext[T],msg:akka.actor.typed.Signal):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "receive", "tail" : "(ctx: TypedActorContext[Command], msg: Command): Behavior[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.receive", "link" : "ackcord\/requests\/Ratelimiter.html#receive(ctx:akka.actor.typed.TypedActorContext[T],msg:T):akka.actor.typed.Behavior[T]", "kind" : "final def"}, {"label" : "context", "tail" : ": ActorContext[Command]", "member" : "akka.actor.typed.scaladsl.AbstractBehavior.context", "link" : "ackcord\/requests\/Ratelimiter.html#context:akka.actor.typed.scaladsl.ActorContext[T]", "kind" : "val"}, {"label" : "narrow", "tail" : "(): Behavior[U]", "member" : "akka.actor.typed.Behavior.narrow", "link" : "ackcord\/requests\/Ratelimiter.html#narrow[U<:T]:akka.actor.typed.Behavior[U]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Ratelimiter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Ratelimiter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Ratelimiter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Ratelimiter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Ratelimiter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Ratelimiter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Ratelimiter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Ratelimiter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Ratelimiter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Ratelimiter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Ratelimiter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Ratelimiter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Ratelimiter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Ratelimiter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Ratelimiter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Ratelimiter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UpdateRatelimits", "tail" : "", "member" : "ackcord.requests.Ratelimiter.UpdateRatelimits", "link" : "ackcord\/requests\/Ratelimiter$.html#UpdateRatelimitsextendsRatelimiter.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "WantToPass", "tail" : "", "member" : "ackcord.requests.Ratelimiter.WantToPass", "link" : "ackcord\/requests\/Ratelimiter$.html#WantToPass[A]extendsRatelimiter.CommandwithProductwithSerializable", "kind" : "case class"}, {"label" : "FailedRequest", "tail" : "", "member" : "ackcord.requests.Ratelimiter.FailedRequest", "link" : "ackcord\/requests\/Ratelimiter$.html#FailedRequestextendsRatelimiter.Response[Nothing]withProductwithSerializable", "kind" : "case class"}, {"label" : "CanPass", "tail" : "", "member" : "ackcord.requests.Ratelimiter.CanPass", "link" : "ackcord\/requests\/Ratelimiter$.html#CanPass[+A]extendsRatelimiter.Response[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Response", "tail" : "", "member" : "ackcord.requests.Ratelimiter.Response", "link" : "ackcord\/requests\/Ratelimiter$.html#Response[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Command", "tail" : "", "member" : "ackcord.requests.Ratelimiter.Command", "link" : "ackcord\/requests\/Ratelimiter$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "apply", "tail" : "(): Behavior[Command]", "member" : "ackcord.requests.Ratelimiter.apply", "link" : "ackcord\/requests\/Ratelimiter$.html#apply():akka.actor.typed.Behavior[ackcord.requests.Ratelimiter.Command]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Ratelimiter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Ratelimiter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Ratelimiter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Ratelimiter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Ratelimiter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Ratelimiter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Ratelimiter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Ratelimiter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Ratelimiter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Ratelimiter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Ratelimiter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Ratelimiter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Ratelimiter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Ratelimiter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Ratelimiter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Ratelimiter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Ratelimiter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/Ratelimiter.html", "kind" : "class"}, {"name" : "ackcord.requests.RatelimitException", "shortDescription" : "An exception that signals than an endpoint is ratelimited.", "members_class" : [{"member" : "ackcord.requests.RatelimitException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "ackcord\/requests\/RatelimitException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "ackcord\/requests\/RatelimitException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "ackcord\/requests\/RatelimitException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "ackcord\/requests\/RatelimitException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "ackcord\/requests\/RatelimitException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "ackcord\/requests\/RatelimitException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "ackcord\/requests\/RatelimitException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "ackcord\/requests\/RatelimitException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RatelimitException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RatelimitException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RatelimitException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RatelimitException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RatelimitException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RatelimitException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RatelimitException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RatelimitException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RatelimitException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RatelimitException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RatelimitException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RatelimitException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RatelimitException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RatelimitException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RatelimitException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/RatelimitException.html", "kind" : "class"}, {"name" : "ackcord.requests.RatelimitInfo", "shortDescription" : "Misc info needed to handle ratelimits correctly.", "members_case class" : [{"label" : "isValid", "tail" : "(): Boolean", "member" : "ackcord.requests.RatelimitInfo.isValid", "link" : "ackcord\/requests\/RatelimitInfo.html#isValid:Boolean", "kind" : "def"}, {"member" : "ackcord.requests.RatelimitInfo#<init>", "error" : "unsupported entity"}, {"label" : "bucket", "tail" : ": String", "member" : "ackcord.requests.RatelimitInfo.bucket", "link" : "ackcord\/requests\/RatelimitInfo.html#bucket:String", "kind" : "val"}, {"label" : "bucketLimit", "tail" : ": Int", "member" : "ackcord.requests.RatelimitInfo.bucketLimit", "link" : "ackcord\/requests\/RatelimitInfo.html#bucketLimit:Int", "kind" : "val"}, {"label" : "tilRatelimit", "tail" : ": Int", "member" : "ackcord.requests.RatelimitInfo.tilRatelimit", "link" : "ackcord\/requests\/RatelimitInfo.html#tilRatelimit:Int", "kind" : "val"}, {"label" : "tilReset", "tail" : ": FiniteDuration", "member" : "ackcord.requests.RatelimitInfo.tilReset", "link" : "ackcord\/requests\/RatelimitInfo.html#tilReset:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RatelimitInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RatelimitInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RatelimitInfo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RatelimitInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RatelimitInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RatelimitInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RatelimitInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RatelimitInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RatelimitInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RatelimitInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RatelimitInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RatelimitInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RatelimitInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RatelimitInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RatelimitInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RatelimitInfo.html", "kind" : "case class"}, {"name" : "ackcord.requests.ReasonRequest", "trait" : "ackcord\/requests\/ReasonRequest.html", "kind" : "trait", "members_trait" : [{"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/ReasonRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/ReasonRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/ReasonRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/ReasonRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/ReasonRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/ReasonRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/ReasonRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/ReasonRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/ReasonRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawResponse) => Boolean): Request[RawResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/ReasonRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/ReasonRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/ReasonRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/ReasonRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/ReasonRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/ReasonRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/ReasonRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/ReasonRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/ReasonRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/ReasonRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/ReasonRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ReasonRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ReasonRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/ReasonRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/ReasonRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/ReasonRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/ReasonRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/ReasonRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/ReasonRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/ReasonRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/ReasonRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/ReasonRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/ReasonRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reason", "tail" : "(): Option[String]", "member" : "ackcord.requests.ReasonRequest.reason", "link" : "ackcord\/requests\/ReasonRequest.html#reason:Option[String]", "kind" : "abstract def"}, {"label" : "withReason", "tail" : "(reason: String): Self", "member" : "ackcord.requests.ReasonRequest.withReason", "link" : "ackcord\/requests\/ReasonRequest.html#withReason(reason:String):Self", "kind" : "abstract def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/ReasonRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/ReasonRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "toNiceResponse", "tail" : "(response: RawResponse): NiceResponse", "member" : "ackcord.requests.BaseRESTRequest.toNiceResponse", "link" : "ackcord\/requests\/ReasonRequest.html#toNiceResponse(response:RawResponse):NiceResponse", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/ReasonRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/ReasonRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A complex REST request with an audit log reason."}, {"name" : "ackcord.requests.RemoveGuildBan", "shortDescription" : "Unban a user from a guild.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): RemoveGuildBan", "member" : "ackcord.requests.RemoveGuildBan.withReason", "link" : "ackcord\/requests\/RemoveGuildBan.html#withReason(reason:String):ackcord.requests.RemoveGuildBan", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.RemoveGuildBan.hasPermissions", "link" : "ackcord\/requests\/RemoveGuildBan.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.RemoveGuildBan.requiredPermissions", "link" : "ackcord\/requests\/RemoveGuildBan.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.RemoveGuildBan.route", "link" : "ackcord\/requests\/RemoveGuildBan.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.RemoveGuildBan#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.RemoveGuildBan.reason", "link" : "ackcord\/requests\/RemoveGuildBan.html#reason:Option[String]", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.RemoveGuildBan.userId", "link" : "ackcord\/requests\/RemoveGuildBan.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.RemoveGuildBan.guildId", "link" : "ackcord\/requests\/RemoveGuildBan.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RemoveGuildBan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/RemoveGuildBan.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/RemoveGuildBan.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/RemoveGuildBan.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/RemoveGuildBan.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/RemoveGuildBan.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/RemoveGuildBan.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/RemoveGuildBan.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/RemoveGuildBan.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/RemoveGuildBan.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/RemoveGuildBan.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/RemoveGuildBan.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/RemoveGuildBan.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/RemoveGuildBan.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/RemoveGuildBan.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/RemoveGuildBan.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RemoveGuildBan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RemoveGuildBan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RemoveGuildBan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RemoveGuildBan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RemoveGuildBan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RemoveGuildBan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RemoveGuildBan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildBan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildBan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildBan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RemoveGuildBan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RemoveGuildBan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RemoveGuildBan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RemoveGuildBan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RemoveGuildBan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RemoveGuildBan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RemoveGuildBan.html", "kind" : "case class"}, {"name" : "ackcord.requests.RemoveGuildMember", "shortDescription" : "Kicks a guild member.", "members_case class" : [{"label" : "withReason", "tail" : "(reason: String): RemoveGuildMember", "member" : "ackcord.requests.RemoveGuildMember.withReason", "link" : "ackcord\/requests\/RemoveGuildMember.html#withReason(reason:String):ackcord.requests.RemoveGuildMember", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.RemoveGuildMember.hasPermissions", "link" : "ackcord\/requests\/RemoveGuildMember.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.RemoveGuildMember.requiredPermissions", "link" : "ackcord\/requests\/RemoveGuildMember.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.RemoveGuildMember.route", "link" : "ackcord\/requests\/RemoveGuildMember.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.RemoveGuildMember#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": Option[String]", "member" : "ackcord.requests.RemoveGuildMember.reason", "link" : "ackcord\/requests\/RemoveGuildMember.html#reason:Option[String]", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.RemoveGuildMember.userId", "link" : "ackcord\/requests\/RemoveGuildMember.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.RemoveGuildMember.guildId", "link" : "ackcord\/requests\/RemoveGuildMember.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RemoveGuildMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/RemoveGuildMember.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/RemoveGuildMember.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/RemoveGuildMember.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/RemoveGuildMember.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/RemoveGuildMember.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.ReasonRequest.extraHeaders", "link" : "ackcord\/requests\/RemoveGuildMember.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/RemoveGuildMember.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/RemoveGuildMember.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/RemoveGuildMember.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/RemoveGuildMember.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/RemoveGuildMember.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/RemoveGuildMember.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/RemoveGuildMember.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/RemoveGuildMember.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/RemoveGuildMember.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RemoveGuildMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RemoveGuildMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RemoveGuildMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RemoveGuildMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RemoveGuildMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RemoveGuildMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RemoveGuildMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RemoveGuildMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RemoveGuildMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RemoveGuildMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RemoveGuildMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RemoveGuildMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RemoveGuildMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RemoveGuildMember.html", "kind" : "case class"}, {"name" : "ackcord.requests.RemoveGuildMemberRole", "shortDescription" : "Remove a role from a guild member.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.RemoveGuildMemberRole.hasPermissions", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.RemoveGuildMemberRole.requiredPermissions", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.RemoveGuildMemberRole.route", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.RemoveGuildMemberRole#<init>", "error" : "unsupported entity"}, {"label" : "roleId", "tail" : ": RoleId", "member" : "ackcord.requests.RemoveGuildMemberRole.roleId", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#roleId:ackcord.data.RoleId", "kind" : "val"}, {"label" : "userId", "tail" : ": UserId", "member" : "ackcord.requests.RemoveGuildMemberRole.userId", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#userId:ackcord.data.UserId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.RemoveGuildMemberRole.guildId", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RemoveGuildMemberRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RemoveGuildMemberRole.html", "kind" : "case class"}, {"name" : "ackcord.requests.Request", "trait" : "ackcord\/requests\/Request.html", "kind" : "trait", "members_trait" : [{"label" : "collect", "tail" : "(f: PartialFunction[Data, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/Request.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Data) => Boolean): Request[Data]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/Request.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Data) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/Request.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[Data]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/Request.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/Request.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/Request.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Request.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Request.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Request.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Request.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Request.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Request.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Request.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Request.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Request.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Request.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Request.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Request.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Request.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Request.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Request.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Request.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Request.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Request.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Request.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.Request.hasPermissions", "link" : "ackcord\/requests\/Request.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "abstract def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[Data]", "member" : "ackcord.requests.Request.parseResponse", "link" : "ackcord\/requests\/Request.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[Data]", "kind" : "abstract def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.Request.requestBody", "link" : "ackcord\/requests\/Request.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/Request.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.Request.bodyForLogging", "link" : "ackcord\/requests\/Request.html#bodyForLogging:Option[String]", "kind" : "abstract def"}], "shortDescription" : "Base super simple trait for all HTTP requests in AckCord."}, {"name" : "ackcord.requests.RequestAnswer", "trait" : "ackcord\/requests\/RequestAnswer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestAnswer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestAnswer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestAnswer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestAnswer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestAnswer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestAnswer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestAnswer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestAnswer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestAnswer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestAnswer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestAnswer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestAnswer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/RequestAnswer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestAnswer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RequestAnswer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RequestAnswer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestAnswer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestAnswer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestAnswer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Data) => RequestAnswer[B]): RequestAnswer[B]", "member" : "ackcord.requests.RequestAnswer.flatMap", "link" : "ackcord\/requests\/RequestAnswer.html#flatMap[B](f:Data=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestAnswer[B]", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(f: (Data) => Boolean): RequestAnswer[Data]", "member" : "ackcord.requests.RequestAnswer.filter", "link" : "ackcord\/requests\/RequestAnswer.html#filter(f:Data=>Boolean):ackcord.requests.RequestAnswer[Data]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (Data) => B): RequestAnswer[B]", "member" : "ackcord.requests.RequestAnswer.map", "link" : "ackcord\/requests\/RequestAnswer.html#map[B](f:Data=>B):ackcord.requests.RequestAnswer[B]", "kind" : "abstract def"}, {"label" : "eitherData", "tail" : "(): Either[Throwable, Data]", "member" : "ackcord.requests.RequestAnswer.eitherData", "link" : "ackcord\/requests\/RequestAnswer.html#eitherData:Either[Throwable,Data]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.RequestAnswer.route", "link" : "ackcord\/requests\/RequestAnswer.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}, {"label" : "ratelimitInfo", "tail" : "(): RatelimitInfo", "member" : "ackcord.requests.RequestAnswer.ratelimitInfo", "link" : "ackcord\/requests\/RequestAnswer.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "abstract def"}, {"label" : "identifier", "tail" : "(): UUID", "member" : "ackcord.requests.RequestAnswer.identifier", "link" : "ackcord\/requests\/RequestAnswer.html#identifier:java.util.UUID", "kind" : "abstract def"}], "shortDescription" : "Sent as a response to a request."}, {"name" : "ackcord.requests.RequestDropped", "shortDescription" : "A request that was dropped before it entered the network, most likelybecause of timing out while waiting for ratelimits.", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (Nothing) => RequestAnswer[B]): RequestDropped", "member" : "ackcord.requests.RequestDropped.flatMap", "link" : "ackcord\/requests\/RequestDropped.html#flatMap[B](f:Nothing=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestDropped", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Nothing) => Boolean): RequestDropped", "member" : "ackcord.requests.RequestDropped.filter", "link" : "ackcord\/requests\/RequestDropped.html#filter(f:Nothing=>Boolean):ackcord.requests.RequestDropped", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): RequestDropped", "member" : "ackcord.requests.RequestDropped.map", "link" : "ackcord\/requests\/RequestDropped.html#map[B](f:Nothing=>B):ackcord.requests.RequestDropped", "kind" : "def"}, {"label" : "ratelimitInfo", "tail" : "(): RatelimitInfo", "member" : "ackcord.requests.RequestDropped.ratelimitInfo", "link" : "ackcord\/requests\/RequestDropped.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "def"}, {"label" : "asException", "tail" : "(): DroppedRequestException", "member" : "ackcord.requests.RequestDropped.asException", "link" : "ackcord\/requests\/RequestDropped.html#asException:ackcord.requests.DroppedRequestException", "kind" : "def"}, {"member" : "ackcord.requests.RequestDropped#<init>", "error" : "unsupported entity"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.RequestDropped.identifier", "link" : "ackcord\/requests\/RequestDropped.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "route", "tail" : ": RequestRoute", "member" : "ackcord.requests.RequestDropped.route", "link" : "ackcord\/requests\/RequestDropped.html#route:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RequestDropped.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "eitherData", "tail" : "(): Either[Throwable, Nothing]", "member" : "ackcord.requests.FailedRequest.eitherData", "link" : "ackcord\/requests\/RequestDropped.html#eitherData:Either[Throwable,Nothing]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestDropped.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestDropped.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestDropped.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestDropped.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestDropped.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestDropped.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestDropped.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestDropped.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestDropped.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestDropped.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestDropped.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestDropped.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestDropped.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestDropped.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestDropped.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestDropped.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RequestDropped.html", "kind" : "case class"}, {"name" : "ackcord.requests.RequestError", "shortDescription" : "A request that failed for some other reason.", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (Nothing) => RequestAnswer[B]): RequestError", "member" : "ackcord.requests.RequestError.flatMap", "link" : "ackcord\/requests\/RequestError.html#flatMap[B](f:Nothing=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestError", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Nothing) => Boolean): RequestError", "member" : "ackcord.requests.RequestError.filter", "link" : "ackcord\/requests\/RequestError.html#filter(f:Nothing=>Boolean):ackcord.requests.RequestError", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): RequestError", "member" : "ackcord.requests.RequestError.map", "link" : "ackcord\/requests\/RequestError.html#map[B](f:Nothing=>B):ackcord.requests.RequestError", "kind" : "def"}, {"label" : "ratelimitInfo", "tail" : "(): RatelimitInfo", "member" : "ackcord.requests.RequestError.ratelimitInfo", "link" : "ackcord\/requests\/RequestError.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "def"}, {"label" : "asException", "tail" : "(): Throwable", "member" : "ackcord.requests.RequestError.asException", "link" : "ackcord\/requests\/RequestError.html#asException:Throwable", "kind" : "def"}, {"member" : "ackcord.requests.RequestError#<init>", "error" : "unsupported entity"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.RequestError.identifier", "link" : "ackcord\/requests\/RequestError.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "route", "tail" : ": RequestRoute", "member" : "ackcord.requests.RequestError.route", "link" : "ackcord\/requests\/RequestError.html#route:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "e", "tail" : ": Throwable", "member" : "ackcord.requests.RequestError.e", "link" : "ackcord\/requests\/RequestError.html#e:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RequestError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "eitherData", "tail" : "(): Either[Throwable, Nothing]", "member" : "ackcord.requests.FailedRequest.eitherData", "link" : "ackcord\/requests\/RequestError.html#eitherData:Either[Throwable,Nothing]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RequestError.html", "kind" : "case class"}, {"name" : "ackcord.requests.RequestRatelimited", "shortDescription" : "A request that did not succeed because of a ratelimit.", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (Nothing) => RequestAnswer[B]): RequestRatelimited", "member" : "ackcord.requests.RequestRatelimited.flatMap", "link" : "ackcord\/requests\/RequestRatelimited.html#flatMap[B](f:Nothing=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestRatelimited", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Nothing) => Boolean): RequestRatelimited", "member" : "ackcord.requests.RequestRatelimited.filter", "link" : "ackcord\/requests\/RequestRatelimited.html#filter(f:Nothing=>Boolean):ackcord.requests.RequestRatelimited", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): RequestRatelimited", "member" : "ackcord.requests.RequestRatelimited.map", "link" : "ackcord\/requests\/RequestRatelimited.html#map[B](f:Nothing=>B):ackcord.requests.RequestRatelimited", "kind" : "def"}, {"label" : "asException", "tail" : "(): RatelimitException", "member" : "ackcord.requests.RequestRatelimited.asException", "link" : "ackcord\/requests\/RequestRatelimited.html#asException:ackcord.requests.RatelimitException", "kind" : "def"}, {"member" : "ackcord.requests.RequestRatelimited#<init>", "error" : "unsupported entity"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.RequestRatelimited.identifier", "link" : "ackcord\/requests\/RequestRatelimited.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "route", "tail" : ": RequestRoute", "member" : "ackcord.requests.RequestRatelimited.route", "link" : "ackcord\/requests\/RequestRatelimited.html#route:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "ratelimitInfo", "tail" : ": RatelimitInfo", "member" : "ackcord.requests.RequestRatelimited.ratelimitInfo", "link" : "ackcord\/requests\/RequestRatelimited.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "ackcord.requests.RequestRatelimited.global", "link" : "ackcord\/requests\/RequestRatelimited.html#global:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RequestRatelimited.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "eitherData", "tail" : "(): Either[Throwable, Nothing]", "member" : "ackcord.requests.FailedRequest.eitherData", "link" : "ackcord\/requests\/RequestRatelimited.html#eitherData:Either[Throwable,Nothing]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestRatelimited.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestRatelimited.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestRatelimited.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestRatelimited.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestRatelimited.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestRatelimited.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestRatelimited.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRatelimited.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRatelimited.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRatelimited.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestRatelimited.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestRatelimited.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestRatelimited.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestRatelimited.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestRatelimited.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestRatelimited.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RequestRatelimited.html", "kind" : "case class"}, {"name" : "ackcord.requests.RequestResponse", "shortDescription" : "A successful request response.", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (Data) => RequestAnswer[B]): RequestAnswer[B]", "member" : "ackcord.requests.RequestResponse.flatMap", "link" : "ackcord\/requests\/RequestResponse.html#flatMap[B](f:Data=>ackcord.requests.RequestAnswer[B]):ackcord.requests.RequestAnswer[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Data) => Boolean): RequestAnswer[Data]", "member" : "ackcord.requests.RequestResponse.filter", "link" : "ackcord\/requests\/RequestResponse.html#filter(f:Data=>Boolean):ackcord.requests.RequestAnswer[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Data) => B): RequestResponse[B]", "member" : "ackcord.requests.RequestResponse.map", "link" : "ackcord\/requests\/RequestResponse.html#map[B](f:Data=>B):ackcord.requests.RequestResponse[B]", "kind" : "def"}, {"label" : "eitherData", "tail" : "(): Either[Throwable, Data]", "member" : "ackcord.requests.RequestResponse.eitherData", "link" : "ackcord\/requests\/RequestResponse.html#eitherData:Either[Throwable,Data]", "kind" : "def"}, {"member" : "ackcord.requests.RequestResponse#<init>", "error" : "unsupported entity"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.RequestResponse.identifier", "link" : "ackcord\/requests\/RequestResponse.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "route", "tail" : ": RequestRoute", "member" : "ackcord.requests.RequestResponse.route", "link" : "ackcord\/requests\/RequestResponse.html#route:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "ratelimitInfo", "tail" : ": RatelimitInfo", "member" : "ackcord.requests.RequestResponse.ratelimitInfo", "link" : "ackcord\/requests\/RequestResponse.html#ratelimitInfo:ackcord.requests.RatelimitInfo", "kind" : "val"}, {"label" : "data", "tail" : ": Data", "member" : "ackcord.requests.RequestResponse.data", "link" : "ackcord\/requests\/RequestResponse.html#data:Data", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RequestResponse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestResponse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RequestResponse.html", "kind" : "case class"}, {"name" : "ackcord.requests.RequestRoute", "shortDescription" : "Used by requests for specifying an uri to send to,together with a method to use.", "object" : "ackcord\/requests\/RequestRoute$.html", "members_object" : [{"label" : "apply", "tail" : "(queryRoute: QueryRoute, method: HttpMethod): RequestRoute", "member" : "ackcord.requests.RequestRoute.apply", "link" : "ackcord\/requests\/RequestRoute$.html#apply(queryRoute:ackcord.requests.Routes.QueryRoute,method:akka.http.scaladsl.model.HttpMethod):ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "apply", "tail" : "(route: Route, method: HttpMethod): RequestRoute", "member" : "ackcord.requests.RequestRoute.apply", "link" : "ackcord\/requests\/RequestRoute$.html#apply(route:ackcord.requests.Routes.Route,method:akka.http.scaladsl.model.HttpMethod):ackcord.requests.RequestRoute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestRoute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestRoute$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestRoute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestRoute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestRoute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestRoute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestRoute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestRoute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestRoute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/RequestRoute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestRoute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RequestRoute$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RequestRoute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestRoute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestRoute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestRoute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ackcord.requests.RequestRoute#<init>", "error" : "unsupported entity"}, {"label" : "method", "tail" : ": HttpMethod", "member" : "ackcord.requests.RequestRoute.method", "link" : "ackcord\/requests\/RequestRoute.html#method:akka.http.scaladsl.model.HttpMethod", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "ackcord.requests.RequestRoute.uri", "link" : "ackcord\/requests\/RequestRoute.html#uri:akka.http.scaladsl.model.Uri", "kind" : "val"}, {"label" : "uriWithoutMajor", "tail" : ": String", "member" : "ackcord.requests.RequestRoute.uriWithoutMajor", "link" : "ackcord\/requests\/RequestRoute.html#uriWithoutMajor:String", "kind" : "val"}, {"label" : "uriWithMajor", "tail" : ": String", "member" : "ackcord.requests.RequestRoute.uriWithMajor", "link" : "ackcord\/requests\/RequestRoute.html#uriWithMajor:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/RequestRoute.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestRoute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestRoute.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestRoute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestRoute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestRoute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestRoute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestRoute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestRoute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestRoute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestRoute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestRoute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestRoute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestRoute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestRoute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/RequestRoute.html", "kind" : "case class"}, {"name" : "ackcord.requests.Requests", "shortDescription" : "A class holding all the relevant information to create a request stream.", "object" : "ackcord\/requests\/Requests$.html", "members_object" : [{"label" : "RequestProperties", "tail" : "", "member" : "ackcord.requests.Requests.RequestProperties", "link" : "ackcord\/requests\/Requests$.html#RequestProperties", "kind" : "object"}, {"label" : "RequestProperties", "tail" : "", "member" : "ackcord.requests.Requests.RequestProperties", "link" : "ackcord\/requests\/Requests$.html#RequestPropertiesextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Requests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Requests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Requests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Requests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Requests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Requests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Requests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Requests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Requests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Requests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Requests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Requests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Requests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Requests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Requests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Requests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "manyIgnore", "tail" : "(requests: Seq[Request[Data]])(properties: RequestProperties): Unit", "member" : "ackcord.requests.Requests.manyIgnore", "link" : "ackcord\/requests\/Requests.html#manyIgnore[Data](requests:Seq[ackcord.requests.Request[Data]])(implicitproperties:ackcord.requests.Requests.RequestProperties):Unit", "kind" : "def"}, {"label" : "manyFutureSuccess", "tail" : "(requests: Seq[Request[Data]])(properties: RequestProperties): Future[Seq[Data]]", "member" : "ackcord.requests.Requests.manyFutureSuccess", "link" : "ackcord\/requests\/Requests.html#manyFutureSuccess[Data](requests:Seq[ackcord.requests.Request[Data]])(implicitproperties:ackcord.requests.Requests.RequestProperties):scala.concurrent.Future[Seq[Data]]", "kind" : "def"}, {"label" : "manyFuture", "tail" : "(requests: Seq[Request[Data]])(properties: RequestProperties): Future[Seq[RequestAnswer[Data]]]", "member" : "ackcord.requests.Requests.manyFuture", "link" : "ackcord\/requests\/Requests.html#manyFuture[Data](requests:Seq[ackcord.requests.Request[Data]])(implicitproperties:ackcord.requests.Requests.RequestProperties):scala.concurrent.Future[Seq[ackcord.requests.RequestAnswer[Data]]]", "kind" : "def"}, {"label" : "manySuccess", "tail" : "(requests: Seq[Request[Data]], ignoreFailures: Boolean)(properties: RequestProperties): Source[Data, NotUsed]", "member" : "ackcord.requests.Requests.manySuccess", "link" : "ackcord\/requests\/Requests.html#manySuccess[Data](requests:Seq[ackcord.requests.Request[Data]],ignoreFailures:Boolean)(implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.Source[Data,akka.NotUsed]", "kind" : "def"}, {"label" : "many", "tail" : "(requests: Seq[Request[Data]])(properties: RequestProperties): Source[RequestAnswer[Data], NotUsed]", "member" : "ackcord.requests.Requests.many", "link" : "ackcord\/requests\/Requests.html#many[Data](requests:Seq[ackcord.requests.Request[Data]])(implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.Source[ackcord.requests.RequestAnswer[Data],akka.NotUsed]", "kind" : "def"}, {"label" : "singleIgnore", "tail" : "(request: Request[Data])(properties: RequestProperties): Unit", "member" : "ackcord.requests.Requests.singleIgnore", "link" : "ackcord\/requests\/Requests.html#singleIgnore[Data](request:ackcord.requests.Request[Data])(implicitproperties:ackcord.requests.Requests.RequestProperties):Unit", "kind" : "def"}, {"label" : "singleFutureSuccess", "tail" : "(request: Request[Data])(properties: RequestProperties): Future[Data]", "member" : "ackcord.requests.Requests.singleFutureSuccess", "link" : "ackcord\/requests\/Requests.html#singleFutureSuccess[Data](request:ackcord.requests.Request[Data])(implicitproperties:ackcord.requests.Requests.RequestProperties):scala.concurrent.Future[Data]", "kind" : "def"}, {"label" : "singleFuture", "tail" : "(request: Request[Data])(properties: RequestProperties): Future[RequestAnswer[Data]]", "member" : "ackcord.requests.Requests.singleFuture", "link" : "ackcord\/requests\/Requests.html#singleFuture[Data](request:ackcord.requests.Request[Data])(implicitproperties:ackcord.requests.Requests.RequestProperties):scala.concurrent.Future[ackcord.requests.RequestAnswer[Data]]", "kind" : "def"}, {"label" : "singleSuccess", "tail" : "(request: Request[Data])(properties: RequestProperties): Source[Data, NotUsed]", "member" : "ackcord.requests.Requests.singleSuccess", "link" : "ackcord\/requests\/Requests.html#singleSuccess[Data](request:ackcord.requests.Request[Data])(implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.Source[Data,akka.NotUsed]", "kind" : "def"}, {"label" : "single", "tail" : "(request: Request[Data])(properties: RequestProperties): Source[RequestAnswer[Data], NotUsed]", "member" : "ackcord.requests.Requests.single", "link" : "ackcord\/requests\/Requests.html#single[Data](request:ackcord.requests.Request[Data])(implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.Source[ackcord.requests.RequestAnswer[Data],akka.NotUsed]", "kind" : "def"}, {"label" : "flowSuccess", "tail" : "(ignoreFailures: Boolean)(properties: RequestProperties): FlowWithContext[Request[Data], Ctx, Data, Ctx, NotUsed]", "member" : "ackcord.requests.Requests.flowSuccess", "link" : "ackcord\/requests\/Requests.html#flowSuccess[Data,Ctx](ignoreFailures:Boolean)(implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,Data,Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "sinkIgnore", "tail" : "(properties: RequestProperties): Sink[Request[Data], Future[Done]]", "member" : "ackcord.requests.Requests.sinkIgnore", "link" : "ackcord\/requests\/Requests.html#sinkIgnore[Data](implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.Sink[ackcord.requests.Request[Data],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "flow", "tail" : "(properties: RequestProperties): FlowWithContext[Request[Data], Ctx, RequestAnswer[Data], Ctx, NotUsed]", "member" : "ackcord.requests.Requests.flow", "link" : "ackcord\/requests\/Requests.html#flow[Data,Ctx](implicitproperties:ackcord.requests.Requests.RequestProperties):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.RequestAnswer[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "flowWithoutRateLimits", "tail" : "(): FlowWithContext[Request[Data], Ctx, RequestAnswer[Data], Ctx, NotUsed]", "member" : "ackcord.requests.Requests.flowWithoutRateLimits", "link" : "ackcord\/requests\/Requests.html#flowWithoutRateLimits[Data,Ctx]:akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.RequestAnswer[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"member" : "ackcord.requests.Requests#<init>", "error" : "unsupported entity"}, {"label" : "system", "tail" : ": ActorSystem[Nothing]", "member" : "ackcord.requests.Requests.system", "link" : "ackcord\/requests\/Requests.html#system:akka.actor.typed.ActorSystem[Nothing]", "kind" : "implicit val"}, {"label" : "alsoProcessRequests", "tail" : ": Sink[(Request[Data], RequestAnswer[Data]) forSome {type Data}, NotUsed]", "member" : "ackcord.requests.Requests.alsoProcessRequests", "link" : "ackcord\/requests\/Requests.html#alsoProcessRequests:akka.stream.scaladsl.Sink[(ackcord.requests.Request[Data],ackcord.requests.RequestAnswer[Data])forSome{typeData},akka.NotUsed]", "kind" : "val"}, {"label" : "maxAllowedWait", "tail" : ": FiniteDuration", "member" : "ackcord.requests.Requests.maxAllowedWait", "link" : "ackcord\/requests\/Requests.html#maxAllowedWait:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "overflowStrategy", "tail" : ": OverflowStrategy", "member" : "ackcord.requests.Requests.overflowStrategy", "link" : "ackcord\/requests\/Requests.html#overflowStrategy:akka.stream.OverflowStrategy", "kind" : "val"}, {"label" : "bufferSize", "tail" : ": Int", "member" : "ackcord.requests.Requests.bufferSize", "link" : "ackcord\/requests\/Requests.html#bufferSize:Int", "kind" : "val"}, {"label" : "maxRetryCount", "tail" : ": Int", "member" : "ackcord.requests.Requests.maxRetryCount", "link" : "ackcord\/requests\/Requests.html#maxRetryCount:Int", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "ackcord.requests.Requests.parallelism", "link" : "ackcord\/requests\/Requests.html#parallelism:Int", "kind" : "val"}, {"label" : "relativeTime", "tail" : ": Boolean", "member" : "ackcord.requests.Requests.relativeTime", "link" : "ackcord\/requests\/Requests.html#relativeTime:Boolean", "kind" : "val"}, {"label" : "ratelimitActor", "tail" : ": ActorRef[Command]", "member" : "ackcord.requests.Requests.ratelimitActor", "link" : "ackcord\/requests\/Requests.html#ratelimitActor:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command]", "kind" : "val"}, {"label" : "credentials", "tail" : ": HttpCredentials", "member" : "ackcord.requests.Requests.credentials", "link" : "ackcord\/requests\/Requests.html#credentials:akka.http.scaladsl.model.headers.HttpCredentials", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/Requests.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Requests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Requests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Requests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Requests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Requests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Requests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Requests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Requests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Requests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Requests.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Requests.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Requests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Requests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Requests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/Requests.html", "kind" : "case class"}, {"name" : "ackcord.requests.RequestsHelper", "shortDescription" : "A small layer on top of Requests for use in high level code.", "members_class" : [{"label" : "runOptFuture", "tail" : "(opt: OptFuture[Request[A]])(c: CacheSnapshot): OptFuture[A]", "member" : "ackcord.requests.RequestsHelper.runOptFuture", "link" : "ackcord\/requests\/RequestsHelper.html#runOptFuture[H[_],A](opt:ackcord.OptFuture[ackcord.requests.Request[A]])(implicitc:ackcord.CacheSnapshot):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "runOption", "tail" : "(opt: Option[Request[A]])(c: CacheSnapshot): OptFuture[A]", "member" : "ackcord.requests.RequestsHelper.runOption", "link" : "ackcord\/requests\/RequestsHelper.html#runOption[A](opt:Option[ackcord.requests.Request[A]])(implicitc:ackcord.CacheSnapshot):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "optionPure", "tail" : "(opt: Option[A]): OptFuture[A]", "member" : "ackcord.requests.RequestsHelper.optionPure", "link" : "ackcord\/requests\/RequestsHelper.html#optionPure[A](opt:Option[A]):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: A): OptFuture[A]", "member" : "ackcord.requests.RequestsHelper.pure", "link" : "ackcord\/requests\/RequestsHelper.html#pure[A](a:A):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "runMany", "tail" : "(requests: Request[A]*)(c: CacheSnapshot): OptFuture[Seq[A]]", "member" : "ackcord.requests.RequestsHelper.runMany", "link" : "ackcord\/requests\/RequestsHelper.html#runMany[A](requests:ackcord.requests.Request[A]*)(implicitc:ackcord.CacheSnapshot):ackcord.OptFuture[Seq[A]]", "kind" : "def"}, {"label" : "run", "tail" : "(request: Request[A])(c: CacheSnapshot): OptFuture[A]", "member" : "ackcord.requests.RequestsHelper.run", "link" : "ackcord\/requests\/RequestsHelper.html#run[A](request:ackcord.requests.Request[A])(implicitc:ackcord.CacheSnapshot):ackcord.OptFuture[A]", "kind" : "def"}, {"label" : "properties", "tail" : ": RequestProperties", "member" : "ackcord.requests.RequestsHelper.properties", "link" : "ackcord\/requests\/RequestsHelper.html#properties:ackcord.requests.Requests.RequestProperties", "kind" : "implicit val"}, {"member" : "ackcord.requests.RequestsHelper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestsHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestsHelper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestsHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestsHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestsHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestsHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestsHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestsHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestsHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestsHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestsHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestsHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/RequestsHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestsHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RequestsHelper.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RequestsHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestsHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestsHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestsHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/RequestsHelper.html", "kind" : "class"}, {"name" : "ackcord.requests.RequestStreams", "shortDescription" : "", "object" : "ackcord\/requests\/RequestStreams$.html", "members_object" : [{"label" : "removeContext", "tail" : "(withContext: FlowWithContext[I, NotUsed, O, NotUsed, Mat]): Flow[I, O, Mat]", "member" : "ackcord.requests.RequestStreams.removeContext", "link" : "ackcord\/requests\/RequestStreams$.html#removeContext[I,O,Mat](withContext:akka.stream.scaladsl.FlowWithContext[I,akka.NotUsed,O,akka.NotUsed,Mat]):akka.stream.scaladsl.Flow[I,O,Mat]", "kind" : "def"}, {"label" : "jsonDecode", "tail" : "(): Flow[ResponseEntity, Json, NotUsed]", "member" : "ackcord.requests.RequestStreams.jsonDecode", "link" : "ackcord\/requests\/RequestStreams$.html#jsonDecode:akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ResponseEntity,io.circe.Json,akka.NotUsed]", "kind" : "def"}, {"label" : "bytestringFromResponse", "tail" : "(): Flow[ResponseEntity, ByteString, NotUsed]", "member" : "ackcord.requests.RequestStreams.bytestringFromResponse", "link" : "ackcord\/requests\/RequestStreams$.html#bytestringFromResponse:akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ResponseEntity,akka.util.ByteString,akka.NotUsed]", "kind" : "def"}, {"label" : "addOrdering", "tail" : "(inner: Flow[A, B, NotUsed]): Flow[A, B, NotUsed]", "member" : "ackcord.requests.RequestStreams.addOrdering", "link" : "ackcord\/requests\/RequestStreams$.html#addOrdering[A,B](inner:akka.stream.scaladsl.Flow[A,B,akka.NotUsed]):akka.stream.scaladsl.Flow[A,B,akka.NotUsed]", "kind" : "def"}, {"label" : "retryRequestFlow", "tail" : "(credentials: HttpCredentials, relativeTime: Boolean, bufferSize: Int, overflowStrategy: OverflowStrategy, maxAllowedWait: FiniteDuration, parallelism: Int, maxRetryCount: Int, rateLimitActor: ActorRef[Command])(system: ActorSystem[Nothing]): FlowWithContext[Request[Data], Ctx, RequestAnswer[Data], Ctx, NotUsed]", "member" : "ackcord.requests.RequestStreams.retryRequestFlow", "link" : "ackcord\/requests\/RequestStreams$.html#retryRequestFlow[Data,Ctx](credentials:akka.http.scaladsl.model.headers.HttpCredentials,relativeTime:Boolean,bufferSize:Int,overflowStrategy:akka.stream.OverflowStrategy,maxAllowedWait:scala.concurrent.duration.FiniteDuration,parallelism:Int,maxRetryCount:Int,rateLimitActor:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.RequestAnswer[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "dataResponses", "tail" : "(): FlowWithContext[RequestAnswer[Data], Ctx, Data, Ctx, NotUsed]", "member" : "ackcord.requests.RequestStreams.dataResponses", "link" : "ackcord\/requests\/RequestStreams$.html#dataResponses[Data,Ctx]:akka.stream.scaladsl.FlowWithContext[ackcord.requests.RequestAnswer[Data],Ctx,Data,Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "ratelimitFlow", "tail" : "(ratelimiter: ActorRef[Command], maxAllowedWait: FiniteDuration, parallelism: Int)(system: ActorSystem[Nothing]): FlowWithContext[Request[Data], Ctx, MaybeRequest[Data], Ctx, NotUsed]", "member" : "ackcord.requests.RequestStreams.ratelimitFlow", "link" : "ackcord\/requests\/RequestStreams$.html#ratelimitFlow[Data,Ctx](ratelimiter:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command],maxAllowedWait:scala.concurrent.duration.FiniteDuration,parallelism:Int)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.MaybeRequest[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "requestFlow", "tail" : "(credentials: HttpCredentials, relativeTime: Boolean, bufferSize: Int, overflowStrategy: OverflowStrategy, maxAllowedWait: FiniteDuration, parallelism: Int, rateLimitActor: ActorRef[Command])(system: ActorSystem[Nothing]): FlowWithContext[Request[Data], Ctx, RequestAnswer[Data], Ctx, NotUsed]", "member" : "ackcord.requests.RequestStreams.requestFlow", "link" : "ackcord\/requests\/RequestStreams$.html#requestFlow[Data,Ctx](credentials:akka.http.scaladsl.model.headers.HttpCredentials,relativeTime:Boolean,bufferSize:Int,overflowStrategy:akka.stream.OverflowStrategy,maxAllowedWait:scala.concurrent.duration.FiniteDuration,parallelism:Int,rateLimitActor:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.RequestAnswer[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "requestFlowWithoutRatelimit", "tail" : "(credentials: HttpCredentials, relativeTime: Boolean, parallelism: Int, rateLimitActor: ActorRef[Command])(system: ActorSystem[Nothing]): FlowWithContext[Request[Data], Ctx, RequestAnswer[Data], Ctx, NotUsed]", "member" : "ackcord.requests.RequestStreams.requestFlowWithoutRatelimit", "link" : "ackcord\/requests\/RequestStreams$.html#requestFlowWithoutRatelimit[Data,Ctx](credentials:akka.http.scaladsl.model.headers.HttpCredentials,relativeTime:Boolean,parallelism:Int,rateLimitActor:akka.actor.typed.ActorRef[ackcord.requests.Ratelimiter.Command])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.FlowWithContext[ackcord.requests.Request[Data],Ctx,ackcord.requests.RequestAnswer[Data],Ctx,akka.NotUsed]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RequestStreams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RequestStreams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RequestStreams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RequestStreams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RequestStreams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RequestStreams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RequestStreams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestStreams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestStreams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RequestStreams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RequestStreams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RequestStreams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/RequestStreams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RequestStreams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RequestStreams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RequestStreams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RequestStreams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RequestStreams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RequestStreams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.requests.RESTRequest", "trait" : "ackcord\/requests\/RESTRequest.html", "kind" : "trait", "members_trait" : [{"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/RESTRequest.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/RESTRequest.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/RESTRequest.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/RESTRequest.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/RESTRequest.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/RESTRequest.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.parseResponse", "link" : "ackcord\/requests\/RESTRequest.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[RawResponse]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[RawResponse, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/RESTRequest.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (RawResponse) => Boolean): Request[RawResponse]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/RESTRequest.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (RawResponse) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/RESTRequest.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[RawResponse]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/RESTRequest.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/RESTRequest.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/RESTRequest.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/RESTRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/RESTRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/RESTRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/RESTRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/RESTRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/RESTRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/RESTRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RESTRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RESTRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/RESTRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/RESTRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/RESTRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/RESTRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/RESTRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/RESTRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/RESTRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/RESTRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/RESTRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/RESTRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[Params]", "member" : "ackcord.requests.RESTRequest.paramsEncoder", "link" : "ackcord\/requests\/RESTRequest.html#paramsEncoder:io.circe.Encoder[Params]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Params", "member" : "ackcord.requests.RESTRequest.params", "link" : "ackcord\/requests\/RESTRequest.html#params:Params", "kind" : "abstract def"}, {"label" : "toNiceResponse", "tail" : "(response: RawResponse): NiceResponse", "member" : "ackcord.requests.BaseRESTRequest.toNiceResponse", "link" : "ackcord\/requests\/RESTRequest.html#toNiceResponse(response:RawResponse):NiceResponse", "kind" : "abstract def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[RawResponse]", "member" : "ackcord.requests.BaseRESTRequest.responseDecoder", "link" : "ackcord\/requests\/RESTRequest.html#responseDecoder:io.circe.Decoder[RawResponse]", "kind" : "abstract def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.Request.route", "link" : "ackcord\/requests\/RESTRequest.html#route:ackcord.requests.RequestRoute", "kind" : "abstract def"}], "shortDescription" : "A simpler, request trait where the params are defined explicitly and converted to json."}, {"name" : "ackcord.requests.Retry-After", "shortDescription" : "", "object" : "ackcord\/requests\/Retry$minusAfter$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.Retry-After.renderInResponses", "link" : "ackcord\/requests\/Retry$minusAfter.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.Retry-After.renderInRequests", "link" : "ackcord\/requests\/Retry$minusAfter.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.Retry-After.value", "link" : "ackcord\/requests\/Retry$minusAfter.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[Retry-After]", "member" : "ackcord.requests.Retry-After.companion", "link" : "ackcord\/requests\/Retry$minusAfter.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.Retry-After]", "kind" : "def"}, {"member" : "ackcord.requests.Retry-After#<init>", "error" : "unsupported entity"}, {"label" : "tilReset", "tail" : ": FiniteDuration", "member" : "ackcord.requests.Retry-After.tilReset", "link" : "ackcord\/requests\/Retry$minusAfter.html#tilReset:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/Retry$minusAfter.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/Retry$minusAfter.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/Retry$minusAfter.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/Retry$minusAfter.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/Retry$minusAfter.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/Retry$minusAfter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Retry$minusAfter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Retry$minusAfter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Retry$minusAfter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Retry$minusAfter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Retry$minusAfter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Retry$minusAfter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Retry$minusAfter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Retry$minusAfter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Retry$minusAfter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Retry$minusAfter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Retry$minusAfter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Retry$minusAfter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Retry$minusAfter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Retry$minusAfter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Retry$minusAfter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[Retry-After]", "member" : "ackcord.requests.Retry-After.parse", "link" : "ackcord\/requests\/Retry$minusAfter$.html#parse(value:String):scala.util.Try[ackcord.requests.Retry-After]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.Retry-After.name", "link" : "ackcord\/requests\/Retry$minusAfter$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[Retry-After]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/Retry$minusAfter$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/Retry$minusAfter$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): Retry-After", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/Retry$minusAfter$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/Retry$minusAfter$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Retry$minusAfter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Retry$minusAfter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Retry$minusAfter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Retry$minusAfter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Retry$minusAfter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Retry$minusAfter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Retry$minusAfter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Retry$minusAfter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Retry$minusAfter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Retry$minusAfter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Retry$minusAfter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Retry$minusAfter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Retry$minusAfter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Retry$minusAfter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Retry$minusAfter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Retry$minusAfter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Retry$minusAfter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/Retry$minusAfter.html", "kind" : "class"}, {"name" : "ackcord.requests.Routes", "shortDescription" : "All the routes used by AckCord", "object" : "ackcord\/requests\/Routes$.html", "members_object" : [{"label" : "getCurrentApplication", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.getCurrentApplication", "link" : "ackcord\/requests\/Routes$.html#getCurrentApplication:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "oAuth2Revoke", "tail" : ": Route", "member" : "ackcord.requests.Routes.oAuth2Revoke", "link" : "ackcord\/requests\/Routes$.html#oAuth2Revoke:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "oAuth2Token", "tail" : ": Route", "member" : "ackcord.requests.Routes.oAuth2Token", "link" : "ackcord\/requests\/Routes$.html#oAuth2Token:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "oAuth2Authorize", "tail" : ": Route", "member" : "ackcord.requests.Routes.oAuth2Authorize", "link" : "ackcord\/requests\/Routes$.html#oAuth2Authorize:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "oAuth2", "tail" : ": Route", "member" : "ackcord.requests.Routes.oAuth2", "link" : "ackcord\/requests\/Routes$.html#oAuth2:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "teamIconImage", "tail" : ": (SnowflakeType[Team], String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.teamIconImage", "link" : "ackcord\/requests\/Routes$.html#teamIconImage:(ackcord.data.SnowflakeType[ackcord.data.Team],String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "applicationAssetImage", "tail" : ": (RawSnowflake, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.applicationAssetImage", "link" : "ackcord\/requests\/Routes$.html#applicationAssetImage:(ackcord.data.RawSnowflake,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "applicationIconImage", "tail" : ": (RawSnowflake, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.applicationIconImage", "link" : "ackcord\/requests\/Routes$.html#applicationIconImage:(ackcord.data.RawSnowflake,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "userAvatarImage", "tail" : ": (UserId, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.userAvatarImage", "link" : "ackcord\/requests\/Routes$.html#userAvatarImage:(ackcord.data.UserId,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "defaultUserAvatarImage", "tail" : ": (Int, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.defaultUserAvatarImage", "link" : "ackcord\/requests\/Routes$.html#defaultUserAvatarImage:(Int,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildBannerImage", "tail" : ": (GuildId, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.guildBannerImage", "link" : "ackcord\/requests\/Routes$.html#guildBannerImage:(ackcord.data.GuildId,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "discoverySplashImage", "tail" : ": (GuildId, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.discoverySplashImage", "link" : "ackcord\/requests\/Routes$.html#discoverySplashImage:(ackcord.data.GuildId,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildSplashImage", "tail" : ": (GuildId, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.guildSplashImage", "link" : "ackcord\/requests\/Routes$.html#guildSplashImage:(ackcord.data.GuildId,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildIconImage", "tail" : ": (GuildId, String, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.guildIconImage", "link" : "ackcord\/requests\/Routes$.html#guildIconImage:(ackcord.data.GuildId,String,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "emojiImage", "tail" : ": (EmojiId, ImageFormat, Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.emojiImage", "link" : "ackcord\/requests\/Routes$.html#emojiImage:(ackcord.data.EmojiId,ackcord.data.ImageFormat,Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "discriminator", "tail" : ": MinorParameter[Int]", "member" : "ackcord.requests.Routes.discriminator", "link" : "ackcord\/requests\/Routes$.html#discriminator:ackcord.requests.Routes.MinorParameter[Int]", "kind" : "val"}, {"label" : "extension", "tail" : ": ConcatParameter[ImageFormat]", "member" : "ackcord.requests.Routes.extension", "link" : "ackcord\/requests\/Routes$.html#extension:ackcord.requests.Routes.ConcatParameter[ackcord.data.ImageFormat]", "kind" : "val"}, {"label" : "size", "tail" : ": QueryParameter[Int]", "member" : "ackcord.requests.Routes.size", "link" : "ackcord\/requests\/Routes$.html#size:ackcord.requests.Routes.QueryParameter[Int]", "kind" : "val"}, {"label" : "executeGithubWebhook", "tail" : ": (SnowflakeType[Webhook], InviteCode, Option[Boolean]) => RequestRoute", "member" : "ackcord.requests.Routes.executeGithubWebhook", "link" : "ackcord\/requests\/Routes$.html#executeGithubWebhook:(ackcord.data.SnowflakeType[ackcord.data.Webhook],ackcord.requests.Routes.InviteCode,Option[Boolean])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "executeSlackWebhook", "tail" : ": (SnowflakeType[Webhook], InviteCode, Option[Boolean]) => RequestRoute", "member" : "ackcord.requests.Routes.executeSlackWebhook", "link" : "ackcord\/requests\/Routes$.html#executeSlackWebhook:(ackcord.data.SnowflakeType[ackcord.data.Webhook],ackcord.requests.Routes.InviteCode,Option[Boolean])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "executeWebhook", "tail" : ": (SnowflakeType[Webhook], InviteCode, Option[Boolean]) => RequestRoute", "member" : "ackcord.requests.Routes.executeWebhook", "link" : "ackcord\/requests\/Routes$.html#executeWebhook:(ackcord.data.SnowflakeType[ackcord.data.Webhook],ackcord.requests.Routes.InviteCode,Option[Boolean])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "waitQuery", "tail" : ": QueryParameter[Boolean]", "member" : "ackcord.requests.Routes.waitQuery", "link" : "ackcord\/requests\/Routes$.html#waitQuery:ackcord.requests.Routes.QueryParameter[Boolean]", "kind" : "val"}, {"label" : "deleteWebhookWithToken", "tail" : ": (SnowflakeType[Webhook], String) => RequestRoute", "member" : "ackcord.requests.Routes.deleteWebhookWithToken", "link" : "ackcord\/requests\/Routes$.html#deleteWebhookWithToken:(ackcord.data.SnowflakeType[ackcord.data.Webhook],String)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteWebhook", "tail" : ": (SnowflakeType[Webhook]) => RequestRoute", "member" : "ackcord.requests.Routes.deleteWebhook", "link" : "ackcord\/requests\/Routes$.html#deleteWebhook:ackcord.data.SnowflakeType[ackcord.data.Webhook]=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyWebhookWithToken", "tail" : ": (SnowflakeType[Webhook], String) => RequestRoute", "member" : "ackcord.requests.Routes.modifyWebhookWithToken", "link" : "ackcord\/requests\/Routes$.html#modifyWebhookWithToken:(ackcord.data.SnowflakeType[ackcord.data.Webhook],String)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyWebhook", "tail" : ": (SnowflakeType[Webhook]) => RequestRoute", "member" : "ackcord.requests.Routes.modifyWebhook", "link" : "ackcord\/requests\/Routes$.html#modifyWebhook:ackcord.data.SnowflakeType[ackcord.data.Webhook]=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getWebhookWithToken", "tail" : ": (SnowflakeType[Webhook], String) => RequestRoute", "member" : "ackcord.requests.Routes.getWebhookWithToken", "link" : "ackcord\/requests\/Routes$.html#getWebhookWithToken:(ackcord.data.SnowflakeType[ackcord.data.Webhook],String)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getWebhook", "tail" : ": (SnowflakeType[Webhook]) => RequestRoute", "member" : "ackcord.requests.Routes.getWebhook", "link" : "ackcord\/requests\/Routes$.html#getWebhook:ackcord.data.SnowflakeType[ackcord.data.Webhook]=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildWebhooks", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildWebhooks", "link" : "ackcord\/requests\/Routes$.html#getGuildWebhooks:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getChannelWebhooks", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.getChannelWebhooks", "link" : "ackcord\/requests\/Routes$.html#getChannelWebhooks:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createWebhook", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.createWebhook", "link" : "ackcord\/requests\/Routes$.html#createWebhook:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channelWebhooks", "tail" : ": RouteFunction[ChannelId]", "member" : "ackcord.requests.Routes.channelWebhooks", "link" : "ackcord\/requests\/Routes$.html#channelWebhooks:ackcord.requests.Routes.RouteFunction[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "webhookWithToken", "tail" : ": RouteFunction[(SnowflakeType[Webhook], String)]", "member" : "ackcord.requests.Routes.webhookWithToken", "link" : "ackcord\/requests\/Routes$.html#webhookWithToken:ackcord.requests.Routes.RouteFunction[(ackcord.data.SnowflakeType[ackcord.data.Webhook],String)]", "kind" : "val"}, {"label" : "webhook", "tail" : ": RouteFunction[SnowflakeType[Webhook]]", "member" : "ackcord.requests.Routes.webhook", "link" : "ackcord\/requests\/Routes$.html#webhook:ackcord.requests.Routes.RouteFunction[ackcord.data.SnowflakeType[ackcord.data.Webhook]]", "kind" : "val"}, {"label" : "listVoiceRegions", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.listVoiceRegions", "link" : "ackcord\/requests\/Routes$.html#listVoiceRegions:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getUserConnections", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.getUserConnections", "link" : "ackcord\/requests\/Routes$.html#getUserConnections:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createDM", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.createDM", "link" : "ackcord\/requests\/Routes$.html#createDM:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getUserDMs", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.getUserDMs", "link" : "ackcord\/requests\/Routes$.html#getUserDMs:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "userDMs", "tail" : ": Route", "member" : "ackcord.requests.Routes.userDMs", "link" : "ackcord\/requests\/Routes$.html#userDMs:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "leaveGuild", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.leaveGuild", "link" : "ackcord\/requests\/Routes$.html#leaveGuild:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getCurrentUserGuilds", "tail" : ": (Option[GuildId], Option[GuildId], Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.getCurrentUserGuilds", "link" : "ackcord\/requests\/Routes$.html#getCurrentUserGuilds:(Option[ackcord.data.GuildId],Option[ackcord.data.GuildId],Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "currentUserGuilds", "tail" : ": Route", "member" : "ackcord.requests.Routes.currentUserGuilds", "link" : "ackcord\/requests\/Routes$.html#currentUserGuilds:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "modifyCurrentUser", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.modifyCurrentUser", "link" : "ackcord\/requests\/Routes$.html#modifyCurrentUser:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getUser", "tail" : ": (UserId) => RequestRoute", "member" : "ackcord.requests.Routes.getUser", "link" : "ackcord\/requests\/Routes$.html#getUser:ackcord.data.UserId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getCurrentUser", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.getCurrentUser", "link" : "ackcord\/requests\/Routes$.html#getCurrentUser:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "currentUser", "tail" : ": Route", "member" : "ackcord.requests.Routes.currentUser", "link" : "ackcord\/requests\/Routes$.html#currentUser:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "users", "tail" : ": Route", "member" : "ackcord.requests.Routes.users", "link" : "ackcord\/requests\/Routes$.html#users:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "deleteInvite", "tail" : ": (InviteCode) => RequestRoute", "member" : "ackcord.requests.Routes.deleteInvite", "link" : "ackcord\/requests\/Routes$.html#deleteInvite:ackcord.requests.Routes.InviteCode=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getInvite", "tail" : ": (InviteCode) => RequestRoute", "member" : "ackcord.requests.Routes.getInvite", "link" : "ackcord\/requests\/Routes$.html#getInvite:ackcord.requests.Routes.InviteCode=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "inviteCode", "tail" : ": RouteFunction[String]", "member" : "ackcord.requests.Routes.inviteCode", "link" : "ackcord\/requests\/Routes$.html#inviteCode:ackcord.requests.Routes.RouteFunction[String]", "kind" : "val"}, {"label" : "invites", "tail" : ": Route", "member" : "ackcord.requests.Routes.invites", "link" : "ackcord\/requests\/Routes$.html#invites:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "createGuildFromTemplate", "tail" : ": (String) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildFromTemplate", "link" : "ackcord\/requests\/Routes$.html#createGuildFromTemplate:String=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getTemplate", "tail" : ": (String) => RequestRoute", "member" : "ackcord.requests.Routes.getTemplate", "link" : "ackcord\/requests\/Routes$.html#getTemplate:String=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "templateCodeRoute", "tail" : ": RouteFunction[String]", "member" : "ackcord.requests.Routes.templateCodeRoute", "link" : "ackcord\/requests\/Routes$.html#templateCodeRoute:ackcord.requests.Routes.RouteFunction[String]", "kind" : "val"}, {"label" : "template", "tail" : ": Route", "member" : "ackcord.requests.Routes.template", "link" : "ackcord\/requests\/Routes$.html#template:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "getGuildWidgetImage", "tail" : ": (GuildId, Option[WidgetImageStyle]) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildWidgetImage", "link" : "ackcord\/requests\/Routes$.html#getGuildWidgetImage:(ackcord.data.GuildId,Option[ackcord.data.WidgetImageStyle])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "style", "tail" : ": QueryParameter[WidgetImageStyle]", "member" : "ackcord.requests.Routes.style", "link" : "ackcord\/requests\/Routes$.html#style:ackcord.requests.Routes.QueryParameter[ackcord.data.WidgetImageStyle]", "kind" : "val"}, {"label" : "getGuildVanityUrl", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildVanityUrl", "link" : "ackcord\/requests\/Routes$.html#getGuildVanityUrl:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildWidgetJson", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildWidgetJson", "link" : "ackcord\/requests\/Routes$.html#getGuildWidgetJson:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuildWidget", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildWidget", "link" : "ackcord\/requests\/Routes$.html#modifyGuildWidget:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildWidget", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildWidget", "link" : "ackcord\/requests\/Routes$.html#getGuildWidget:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildWidget", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildWidget", "link" : "ackcord\/requests\/Routes$.html#guildWidget:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "syncGuildIntegration", "tail" : ": (GuildId, IntegrationId) => RequestRoute", "member" : "ackcord.requests.Routes.syncGuildIntegration", "link" : "ackcord\/requests\/Routes$.html#syncGuildIntegration:(ackcord.data.GuildId,ackcord.data.IntegrationId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteGuildIntegration", "tail" : ": (GuildId, IntegrationId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteGuildIntegration", "link" : "ackcord\/requests\/Routes$.html#deleteGuildIntegration:(ackcord.data.GuildId,ackcord.data.IntegrationId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuildIntegration", "tail" : ": (GuildId, IntegrationId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildIntegration", "link" : "ackcord\/requests\/Routes$.html#modifyGuildIntegration:(ackcord.data.GuildId,ackcord.data.IntegrationId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildIntegration", "tail" : ": RouteFunction[(GuildId, IntegrationId)]", "member" : "ackcord.requests.Routes.guildIntegration", "link" : "ackcord\/requests\/Routes$.html#guildIntegration:ackcord.requests.Routes.RouteFunction[(ackcord.data.GuildId,ackcord.data.IntegrationId)]", "kind" : "val"}, {"label" : "createGuildIntegrations", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildIntegrations", "link" : "ackcord\/requests\/Routes$.html#createGuildIntegrations:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildIntegrations", "tail" : ": (GuildId, Option[Boolean]) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildIntegrations", "link" : "ackcord\/requests\/Routes$.html#getGuildIntegrations:(ackcord.data.GuildId,Option[Boolean])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildIntegrations", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildIntegrations", "link" : "ackcord\/requests\/Routes$.html#guildIntegrations:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "includeApplicationsQuery", "tail" : ": QueryParameter[Boolean]", "member" : "ackcord.requests.Routes.includeApplicationsQuery", "link" : "ackcord\/requests\/Routes$.html#includeApplicationsQuery:ackcord.requests.Routes.QueryParameter[Boolean]", "kind" : "val"}, {"label" : "getGuildInvites", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildInvites", "link" : "ackcord\/requests\/Routes$.html#getGuildInvites:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildVoiceRegions", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildVoiceRegions", "link" : "ackcord\/requests\/Routes$.html#getGuildVoiceRegions:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "beginGuildPrune", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.beginGuildPrune", "link" : "ackcord\/requests\/Routes$.html#beginGuildPrune:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildPruneCount", "tail" : ": (GuildId, Option[Int], Option[Seq[RoleId]]) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildPruneCount", "link" : "ackcord\/requests\/Routes$.html#getGuildPruneCount:(ackcord.data.GuildId,Option[Int],Option[Seq[ackcord.data.RoleId]])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildPrune", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildPrune", "link" : "ackcord\/requests\/Routes$.html#guildPrune:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "includeRolesQuery", "tail" : ": QueryParameter[Seq[RoleId]]", "member" : "ackcord.requests.Routes.includeRolesQuery", "link" : "ackcord\/requests\/Routes$.html#includeRolesQuery:ackcord.requests.Routes.QueryParameter[Seq[ackcord.data.RoleId]]", "kind" : "val"}, {"label" : "daysQuery", "tail" : ": QueryParameter[Int]", "member" : "ackcord.requests.Routes.daysQuery", "link" : "ackcord\/requests\/Routes$.html#daysQuery:ackcord.requests.Routes.QueryParameter[Int]", "kind" : "val"}, {"label" : "deleteGuildRole", "tail" : ": (GuildId, RoleId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteGuildRole", "link" : "ackcord\/requests\/Routes$.html#deleteGuildRole:(ackcord.data.GuildId,ackcord.data.RoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuildRole", "tail" : ": (GuildId, RoleId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildRole", "link" : "ackcord\/requests\/Routes$.html#modifyGuildRole:(ackcord.data.GuildId,ackcord.data.RoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildRole", "tail" : ": RouteFunction[(GuildId, RoleId)]", "member" : "ackcord.requests.Routes.guildRole", "link" : "ackcord\/requests\/Routes$.html#guildRole:ackcord.requests.Routes.RouteFunction[(ackcord.data.GuildId,ackcord.data.RoleId)]", "kind" : "val"}, {"label" : "modifyGuildRolePositions", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildRolePositions", "link" : "ackcord\/requests\/Routes$.html#modifyGuildRolePositions:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createGuildRole", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildRole", "link" : "ackcord\/requests\/Routes$.html#createGuildRole:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildRole", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildRole", "link" : "ackcord\/requests\/Routes$.html#getGuildRole:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildRoles", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildRoles", "link" : "ackcord\/requests\/Routes$.html#guildRoles:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "removeGuildMemberBan", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.removeGuildMemberBan", "link" : "ackcord\/requests\/Routes$.html#removeGuildMemberBan:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createGuildMemberBan", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildMemberBan", "link" : "ackcord\/requests\/Routes$.html#createGuildMemberBan:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildBan", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildBan", "link" : "ackcord\/requests\/Routes$.html#getGuildBan:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildBans", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildBans", "link" : "ackcord\/requests\/Routes$.html#getGuildBans:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildMemberBan", "tail" : ": RouteFunction[(GuildId, UserId)]", "member" : "ackcord.requests.Routes.guildMemberBan", "link" : "ackcord\/requests\/Routes$.html#guildMemberBan:ackcord.requests.Routes.RouteFunction[(ackcord.data.GuildId,ackcord.data.UserId)]", "kind" : "val"}, {"label" : "guildBans", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildBans", "link" : "ackcord\/requests\/Routes$.html#guildBans:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "removeGuildMemberRole", "tail" : ": (GuildId, UserId, RoleId) => RequestRoute", "member" : "ackcord.requests.Routes.removeGuildMemberRole", "link" : "ackcord\/requests\/Routes$.html#removeGuildMemberRole:(ackcord.data.GuildId,ackcord.data.UserId,ackcord.data.RoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "addGuildMemberRole", "tail" : ": (GuildId, UserId, RoleId) => RequestRoute", "member" : "ackcord.requests.Routes.addGuildMemberRole", "link" : "ackcord\/requests\/Routes$.html#addGuildMemberRole:(ackcord.data.GuildId,ackcord.data.UserId,ackcord.data.RoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildMemberRole", "tail" : ": RouteFunction[((GuildId, UserId), RoleId)]", "member" : "ackcord.requests.Routes.guildMemberRole", "link" : "ackcord\/requests\/Routes$.html#guildMemberRole:ackcord.requests.Routes.RouteFunction[((ackcord.data.GuildId,ackcord.data.UserId),ackcord.data.RoleId)]", "kind" : "val"}, {"label" : "modifyCurrentNick", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyCurrentNick", "link" : "ackcord\/requests\/Routes$.html#modifyCurrentNick:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "removeGuildMember", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.removeGuildMember", "link" : "ackcord\/requests\/Routes$.html#removeGuildMember:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuildMember", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildMember", "link" : "ackcord\/requests\/Routes$.html#modifyGuildMember:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "addGuildMember", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.addGuildMember", "link" : "ackcord\/requests\/Routes$.html#addGuildMember:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "listGuildMembers", "tail" : ": (GuildId, Option[Int], Option[UserId]) => RequestRoute", "member" : "ackcord.requests.Routes.listGuildMembers", "link" : "ackcord\/requests\/Routes$.html#listGuildMembers:(ackcord.data.GuildId,Option[Int],Option[ackcord.data.UserId])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildMember", "tail" : ": (GuildId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildMember", "link" : "ackcord\/requests\/Routes$.html#getGuildMember:(ackcord.data.GuildId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildMember", "tail" : ": RouteFunction[(GuildId, UserId)]", "member" : "ackcord.requests.Routes.guildMember", "link" : "ackcord\/requests\/Routes$.html#guildMember:ackcord.requests.Routes.RouteFunction[(ackcord.data.GuildId,ackcord.data.UserId)]", "kind" : "val"}, {"label" : "guildMembers", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildMembers", "link" : "ackcord\/requests\/Routes$.html#guildMembers:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "modifyGuildChannelsPositions", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildChannelsPositions", "link" : "ackcord\/requests\/Routes$.html#modifyGuildChannelsPositions:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createGuildChannel", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildChannel", "link" : "ackcord\/requests\/Routes$.html#createGuildChannel:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildChannels", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildChannels", "link" : "ackcord\/requests\/Routes$.html#getGuildChannels:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildChannels", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildChannels", "link" : "ackcord\/requests\/Routes$.html#guildChannels:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "deleteGuild", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteGuild", "link" : "ackcord\/requests\/Routes$.html#deleteGuild:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuild", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuild", "link" : "ackcord\/requests\/Routes$.html#modifyGuild:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildPreview", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildPreview", "link" : "ackcord\/requests\/Routes$.html#getGuildPreview:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuild", "tail" : ": (GuildId, Option[Boolean]) => RequestRoute", "member" : "ackcord.requests.Routes.getGuild", "link" : "ackcord\/requests\/Routes$.html#getGuild:(ackcord.data.GuildId,Option[Boolean])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createGuild", "tail" : ": RequestRoute", "member" : "ackcord.requests.Routes.createGuild", "link" : "ackcord\/requests\/Routes$.html#createGuild:ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "withCountQuery", "tail" : ": QueryParameter[Boolean]", "member" : "ackcord.requests.Routes.withCountQuery", "link" : "ackcord\/requests\/Routes$.html#withCountQuery:ackcord.requests.Routes.QueryParameter[Boolean]", "kind" : "val"}, {"label" : "deleteGuildEmoji", "tail" : ": (GuildId, EmojiId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteGuildEmoji", "link" : "ackcord\/requests\/Routes$.html#deleteGuildEmoji:(ackcord.data.GuildId,ackcord.data.EmojiId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyGuildEmoji", "tail" : ": (GuildId, EmojiId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyGuildEmoji", "link" : "ackcord\/requests\/Routes$.html#modifyGuildEmoji:(ackcord.data.GuildId,ackcord.data.EmojiId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getGuildEmoji", "tail" : ": (GuildId, EmojiId) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildEmoji", "link" : "ackcord\/requests\/Routes$.html#getGuildEmoji:(ackcord.data.GuildId,ackcord.data.EmojiId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildEmoji", "tail" : ": RouteFunction[(GuildId, EmojiId)]", "member" : "ackcord.requests.Routes.guildEmoji", "link" : "ackcord\/requests\/Routes$.html#guildEmoji:ackcord.requests.Routes.RouteFunction[(ackcord.data.GuildId,ackcord.data.EmojiId)]", "kind" : "val"}, {"label" : "createGuildEmoji", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.createGuildEmoji", "link" : "ackcord\/requests\/Routes$.html#createGuildEmoji:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "listGuildEmojis", "tail" : ": (GuildId) => RequestRoute", "member" : "ackcord.requests.Routes.listGuildEmojis", "link" : "ackcord\/requests\/Routes$.html#listGuildEmojis:ackcord.data.GuildId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guildEmojis", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guildEmojis", "link" : "ackcord\/requests\/Routes$.html#guildEmojis:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "groupDmRemoveRecipient", "tail" : ": (ChannelId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.groupDmRemoveRecipient", "link" : "ackcord\/requests\/Routes$.html#groupDmRemoveRecipient:(ackcord.data.ChannelId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "groupDmAddRecipient", "tail" : ": (ChannelId, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.groupDmAddRecipient", "link" : "ackcord\/requests\/Routes$.html#groupDmAddRecipient:(ackcord.data.ChannelId,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "groupDmRecipient", "tail" : ": RouteFunction[(ChannelId, UserId)]", "member" : "ackcord.requests.Routes.groupDmRecipient", "link" : "ackcord\/requests\/Routes$.html#groupDmRecipient:ackcord.requests.Routes.RouteFunction[(ackcord.data.ChannelId,ackcord.data.UserId)]", "kind" : "val"}, {"label" : "followNewsChannel", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.followNewsChannel", "link" : "ackcord\/requests\/Routes$.html#followNewsChannel:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deletePinnedChannelMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.deletePinnedChannelMessage", "link" : "ackcord\/requests\/Routes$.html#deletePinnedChannelMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "addPinnedChannelMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.addPinnedChannelMessage", "link" : "ackcord\/requests\/Routes$.html#addPinnedChannelMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channelPinnedMessage", "tail" : ": RouteFunction[(ChannelId, MessageId)]", "member" : "ackcord.requests.Routes.channelPinnedMessage", "link" : "ackcord\/requests\/Routes$.html#channelPinnedMessage:ackcord.requests.Routes.RouteFunction[(ackcord.data.ChannelId,ackcord.data.MessageId)]", "kind" : "val"}, {"label" : "getPinnedMessage", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.getPinnedMessage", "link" : "ackcord\/requests\/Routes$.html#getPinnedMessage:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "pinnedMessage", "tail" : ": RouteFunction[ChannelId]", "member" : "ackcord.requests.Routes.pinnedMessage", "link" : "ackcord\/requests\/Routes$.html#pinnedMessage:ackcord.requests.Routes.RouteFunction[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "triggerTyping", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.triggerTyping", "link" : "ackcord\/requests\/Routes$.html#triggerTyping:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createChannelInvites", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.createChannelInvites", "link" : "ackcord\/requests\/Routes$.html#createChannelInvites:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getChannelInvites", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.getChannelInvites", "link" : "ackcord\/requests\/Routes$.html#getChannelInvites:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channelInvites", "tail" : ": RouteFunction[ChannelId]", "member" : "ackcord.requests.Routes.channelInvites", "link" : "ackcord\/requests\/Routes$.html#channelInvites:ackcord.requests.Routes.RouteFunction[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "deleteChannelPermissions", "tail" : ": (ChannelId, UserOrRoleId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteChannelPermissions", "link" : "ackcord\/requests\/Routes$.html#deleteChannelPermissions:(ackcord.data.ChannelId,ackcord.data.UserOrRoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "editChannelPermissions", "tail" : ": (ChannelId, UserOrRoleId) => RequestRoute", "member" : "ackcord.requests.Routes.editChannelPermissions", "link" : "ackcord\/requests\/Routes$.html#editChannelPermissions:(ackcord.data.ChannelId,ackcord.data.UserOrRoleId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channelPermissions", "tail" : ": RouteFunction[(ChannelId, UserOrRoleId)]", "member" : "ackcord.requests.Routes.channelPermissions", "link" : "ackcord\/requests\/Routes$.html#channelPermissions:ackcord.requests.Routes.RouteFunction[(ackcord.data.ChannelId,ackcord.data.UserOrRoleId)]", "kind" : "val"}, {"label" : "deleteAllReactionsForEmoji", "tail" : ": (ChannelId, MessageId, String) => RequestRoute", "member" : "ackcord.requests.Routes.deleteAllReactionsForEmoji", "link" : "ackcord\/requests\/Routes$.html#deleteAllReactionsForEmoji:(ackcord.data.ChannelId,ackcord.data.MessageId,String)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteAllReactions", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteAllReactions", "link" : "ackcord\/requests\/Routes$.html#deleteAllReactions:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getReactions", "tail" : ": (ChannelId, MessageId, Emoji, Option[UserId], Option[UserId], Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.getReactions", "link" : "ackcord\/requests\/Routes$.html#getReactions:(ackcord.data.ChannelId,ackcord.data.MessageId,ackcord.requests.Routes.Emoji,Option[ackcord.data.UserId],Option[ackcord.data.UserId],Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteUserReaction", "tail" : ": (ChannelId, MessageId, Emoji, UserId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteUserReaction", "link" : "ackcord\/requests\/Routes$.html#deleteUserReaction:(ackcord.data.ChannelId,ackcord.data.MessageId,ackcord.requests.Routes.Emoji,ackcord.data.UserId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteOwnReaction", "tail" : ": (ChannelId, MessageId, Emoji) => RequestRoute", "member" : "ackcord.requests.Routes.deleteOwnReaction", "link" : "ackcord\/requests\/Routes$.html#deleteOwnReaction:(ackcord.data.ChannelId,ackcord.data.MessageId,ackcord.requests.Routes.Emoji)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createReaction", "tail" : ": (ChannelId, MessageId, Emoji) => RequestRoute", "member" : "ackcord.requests.Routes.createReaction", "link" : "ackcord\/requests\/Routes$.html#createReaction:(ackcord.data.ChannelId,ackcord.data.MessageId,ackcord.requests.Routes.Emoji)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyMeReaction", "tail" : ": RouteFunction[((ChannelId, MessageId), Emoji)]", "member" : "ackcord.requests.Routes.modifyMeReaction", "link" : "ackcord\/requests\/Routes$.html#modifyMeReaction:ackcord.requests.Routes.RouteFunction[((ackcord.data.ChannelId,ackcord.data.MessageId),ackcord.requests.Routes.Emoji)]", "kind" : "val"}, {"label" : "emojiReactions", "tail" : ": RouteFunction[((ChannelId, MessageId), Emoji)]", "member" : "ackcord.requests.Routes.emojiReactions", "link" : "ackcord\/requests\/Routes$.html#emojiReactions:ackcord.requests.Routes.RouteFunction[((ackcord.data.ChannelId,ackcord.data.MessageId),ackcord.requests.Routes.Emoji)]", "kind" : "val"}, {"label" : "reactions", "tail" : ": RouteFunction[(ChannelId, MessageId)]", "member" : "ackcord.requests.Routes.reactions", "link" : "ackcord\/requests\/Routes$.html#reactions:ackcord.requests.Routes.RouteFunction[(ackcord.data.ChannelId,ackcord.data.MessageId)]", "kind" : "val"}, {"label" : "crosspostMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.crosspostMessage", "link" : "ackcord\/requests\/Routes$.html#crosspostMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "bulkDeleteMessages", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.bulkDeleteMessages", "link" : "ackcord\/requests\/Routes$.html#bulkDeleteMessages:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "deleteMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteMessage", "link" : "ackcord\/requests\/Routes$.html#deleteMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "editMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.editMessage", "link" : "ackcord\/requests\/Routes$.html#editMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "createMessage", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.createMessage", "link" : "ackcord\/requests\/Routes$.html#createMessage:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getChannelMessage", "tail" : ": (ChannelId, MessageId) => RequestRoute", "member" : "ackcord.requests.Routes.getChannelMessage", "link" : "ackcord\/requests\/Routes$.html#getChannelMessage:(ackcord.data.ChannelId,ackcord.data.MessageId)=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getChannelMessages", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.getChannelMessages", "link" : "ackcord\/requests\/Routes$.html#getChannelMessages:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channelMessage", "tail" : ": RouteFunction[(ChannelId, MessageId)]", "member" : "ackcord.requests.Routes.channelMessage", "link" : "ackcord\/requests\/Routes$.html#channelMessage:ackcord.requests.Routes.RouteFunction[(ackcord.data.ChannelId,ackcord.data.MessageId)]", "kind" : "val"}, {"label" : "channelMessages", "tail" : ": RouteFunction[ChannelId]", "member" : "ackcord.requests.Routes.channelMessages", "link" : "ackcord\/requests\/Routes$.html#channelMessages:ackcord.requests.Routes.RouteFunction[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "deleteCloseChannel", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.deleteCloseChannel", "link" : "ackcord\/requests\/Routes$.html#deleteCloseChannel:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "modifyChannel", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.modifyChannel", "link" : "ackcord\/requests\/Routes$.html#modifyChannel:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "getChannel", "tail" : ": (ChannelId) => RequestRoute", "member" : "ackcord.requests.Routes.getChannel", "link" : "ackcord\/requests\/Routes$.html#getChannel:ackcord.data.ChannelId=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "channel", "tail" : ": RouteFunction[ChannelId]", "member" : "ackcord.requests.Routes.channel", "link" : "ackcord\/requests\/Routes$.html#channel:ackcord.requests.Routes.RouteFunction[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "getGuildAuditLogs", "tail" : ": (GuildId, Option[UserId], Option[AuditLogEvent], Option[RawSnowflake], Option[Int]) => RequestRoute", "member" : "ackcord.requests.Routes.getGuildAuditLogs", "link" : "ackcord\/requests\/Routes$.html#getGuildAuditLogs:(ackcord.data.GuildId,Option[ackcord.data.UserId],Option[ackcord.data.AuditLogEvent],Option[ackcord.data.RawSnowflake],Option[Int])=>ackcord.requests.RequestRoute", "kind" : "val"}, {"label" : "guild", "tail" : ": RouteFunction[GuildId]", "member" : "ackcord.requests.Routes.guild", "link" : "ackcord\/requests\/Routes$.html#guild:ackcord.requests.Routes.RouteFunction[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "guilds", "tail" : ": Route", "member" : "ackcord.requests.Routes.guilds", "link" : "ackcord\/requests\/Routes$.html#guilds:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "templateCode", "tail" : ": MinorParameter[String]", "member" : "ackcord.requests.Routes.templateCode", "link" : "ackcord\/requests\/Routes$.html#templateCode:ackcord.requests.Routes.MinorParameter[String]", "kind" : "val"}, {"label" : "teamId", "tail" : ": MinorParameter[SnowflakeType[Team]]", "member" : "ackcord.requests.Routes.teamId", "link" : "ackcord\/requests\/Routes$.html#teamId:ackcord.requests.Routes.MinorParameter[ackcord.data.SnowflakeType[ackcord.data.Team]]", "kind" : "val"}, {"label" : "applicationId", "tail" : ": MinorParameter[RawSnowflake]", "member" : "ackcord.requests.Routes.applicationId", "link" : "ackcord\/requests\/Routes$.html#applicationId:ackcord.requests.Routes.MinorParameter[ackcord.data.RawSnowflake]", "kind" : "val"}, {"label" : "hash", "tail" : ": MinorParameter[String]", "member" : "ackcord.requests.Routes.hash", "link" : "ackcord\/requests\/Routes$.html#hash:ackcord.requests.Routes.MinorParameter[String]", "kind" : "val"}, {"label" : "token", "tail" : ": MinorParameter[String]", "member" : "ackcord.requests.Routes.token", "link" : "ackcord\/requests\/Routes$.html#token:ackcord.requests.Routes.MinorParameter[String]", "kind" : "val"}, {"label" : "inviteCodeParam", "tail" : ": MinorParameter[String]", "member" : "ackcord.requests.Routes.inviteCodeParam", "link" : "ackcord\/requests\/Routes$.html#inviteCodeParam:ackcord.requests.Routes.MinorParameter[String]", "kind" : "val"}, {"label" : "integrationId", "tail" : ": MinorParameter[IntegrationId]", "member" : "ackcord.requests.Routes.integrationId", "link" : "ackcord\/requests\/Routes$.html#integrationId:ackcord.requests.Routes.MinorParameter[ackcord.data.IntegrationId]", "kind" : "val"}, {"label" : "roleId", "tail" : ": MinorParameter[RoleId]", "member" : "ackcord.requests.Routes.roleId", "link" : "ackcord\/requests\/Routes$.html#roleId:ackcord.requests.Routes.MinorParameter[ackcord.data.RoleId]", "kind" : "val"}, {"label" : "permissionOverwriteId", "tail" : ": MinorParameter[UserOrRoleId]", "member" : "ackcord.requests.Routes.permissionOverwriteId", "link" : "ackcord\/requests\/Routes$.html#permissionOverwriteId:ackcord.requests.Routes.MinorParameter[ackcord.data.UserOrRoleId]", "kind" : "val"}, {"label" : "userId", "tail" : ": MinorParameter[UserId]", "member" : "ackcord.requests.Routes.userId", "link" : "ackcord\/requests\/Routes$.html#userId:ackcord.requests.Routes.MinorParameter[ackcord.data.UserId]", "kind" : "val"}, {"label" : "emojiId", "tail" : ": MinorParameter[EmojiId]", "member" : "ackcord.requests.Routes.emojiId", "link" : "ackcord\/requests\/Routes$.html#emojiId:ackcord.requests.Routes.MinorParameter[ackcord.data.EmojiId]", "kind" : "val"}, {"label" : "emoji", "tail" : ": MinorParameter[Emoji]", "member" : "ackcord.requests.Routes.emoji", "link" : "ackcord\/requests\/Routes$.html#emoji:ackcord.requests.Routes.MinorParameter[ackcord.requests.Routes.Emoji]", "kind" : "val"}, {"label" : "messageId", "tail" : ": MinorParameter[MessageId]", "member" : "ackcord.requests.Routes.messageId", "link" : "ackcord\/requests\/Routes$.html#messageId:ackcord.requests.Routes.MinorParameter[ackcord.data.MessageId]", "kind" : "val"}, {"label" : "webhookId", "tail" : ": MajorParameter[SnowflakeType[Webhook]]", "member" : "ackcord.requests.Routes.webhookId", "link" : "ackcord\/requests\/Routes$.html#webhookId:ackcord.requests.Routes.MajorParameter[ackcord.data.SnowflakeType[ackcord.data.Webhook]]", "kind" : "val"}, {"label" : "channelId", "tail" : ": MajorParameter[ChannelId]", "member" : "ackcord.requests.Routes.channelId", "link" : "ackcord\/requests\/Routes$.html#channelId:ackcord.requests.Routes.MajorParameter[ackcord.data.ChannelId]", "kind" : "val"}, {"label" : "guildId", "tail" : ": MajorParameter[GuildId]", "member" : "ackcord.requests.Routes.guildId", "link" : "ackcord\/requests\/Routes$.html#guildId:ackcord.requests.Routes.MajorParameter[ackcord.data.GuildId]", "kind" : "val"}, {"label" : "upcast", "tail" : "(a: A): B", "member" : "ackcord.requests.Routes.upcast", "link" : "ackcord\/requests\/Routes$.html#upcast[A,B>:A](a:A):B", "kind" : "def"}, {"label" : "seqQuery", "tail" : "(name: String, print: (A) => String, requireFn: (A) => Unit): SeqQueryParameter[A]", "member" : "ackcord.requests.Routes.seqQuery", "link" : "ackcord\/requests\/Routes$.html#seqQuery[A](name:String,print:A=>String,requireFn:A=>Unit):ackcord.requests.Routes.SeqQueryParameter[A]", "kind" : "def"}, {"label" : "query", "tail" : "(name: String, print: (A) => String, requireFn: (A) => Unit): QueryParameter[A]", "member" : "ackcord.requests.Routes.query", "link" : "ackcord\/requests\/Routes$.html#query[A](name:String,print:A=>String,requireFn:A=>Unit):ackcord.requests.Routes.QueryParameter[A]", "kind" : "def"}, {"label" : "ConcatParameter", "tail" : "", "member" : "ackcord.requests.Routes.ConcatParameter", "link" : "ackcord\/requests\/Routes$.html#ConcatParameter[A]extendsAnyRef", "kind" : "class"}, {"label" : "SeqQueryParameter", "tail" : "", "member" : "ackcord.requests.Routes.SeqQueryParameter", "link" : "ackcord\/requests\/Routes$.html#SeqQueryParameter[A]extendsAnyRef", "kind" : "class"}, {"label" : "QueryParameter", "tail" : "", "member" : "ackcord.requests.Routes.QueryParameter", "link" : "ackcord\/requests\/Routes$.html#QueryParameter[A]extendsAnyRef", "kind" : "class"}, {"label" : "MinorParameter", "tail" : "", "member" : "ackcord.requests.Routes.MinorParameter", "link" : "ackcord\/requests\/Routes$.html#MinorParameter[A]extendsAnyRef", "kind" : "class"}, {"label" : "MajorParameter", "tail" : "", "member" : "ackcord.requests.Routes.MajorParameter", "link" : "ackcord\/requests\/Routes$.html#MajorParameter[A]extendsAnyRef", "kind" : "class"}, {"label" : "QueryRouteFunction", "tail" : "", "member" : "ackcord.requests.Routes.QueryRouteFunction", "link" : "ackcord\/requests\/Routes$.html#QueryRouteFunction[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "RouteFunction", "tail" : "", "member" : "ackcord.requests.Routes.RouteFunction", "link" : "ackcord\/requests\/Routes$.html#RouteFunction[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "QueryRoute", "tail" : "", "member" : "ackcord.requests.Routes.QueryRoute", "link" : "ackcord\/requests\/Routes$.html#QueryRouteextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Route", "tail" : "", "member" : "ackcord.requests.Routes.Route", "link" : "ackcord\/requests\/Routes$.html#RouteextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Emoji", "tail" : "", "member" : "ackcord.requests.Routes.Emoji", "link" : "ackcord\/requests\/Routes$.html#Emoji=String", "kind" : "type"}, {"label" : "InviteCode", "tail" : "", "member" : "ackcord.requests.Routes.InviteCode", "link" : "ackcord\/requests\/Routes$.html#InviteCode=String", "kind" : "type"}, {"label" : "botGateway", "tail" : ": Route", "member" : "ackcord.requests.Routes.botGateway", "link" : "ackcord\/requests\/Routes$.html#botGateway:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "gateway", "tail" : ": Route", "member" : "ackcord.requests.Routes.gateway", "link" : "ackcord\/requests\/Routes$.html#gateway:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "cdn", "tail" : ": Route", "member" : "ackcord.requests.Routes.cdn", "link" : "ackcord\/requests\/Routes$.html#cdn:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "base", "tail" : ": Route", "member" : "ackcord.requests.Routes.base", "link" : "ackcord\/requests\/Routes$.html#base:ackcord.requests.Routes.Route", "kind" : "val"}, {"label" : "discordCdn", "tail" : ": String", "member" : "ackcord.requests.Routes.discordCdn", "link" : "ackcord\/requests\/Routes$.html#discordCdn:String", "kind" : "val"}, {"label" : "discord", "tail" : ": String", "member" : "ackcord.requests.Routes.discord", "link" : "ackcord\/requests\/Routes$.html#discord:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/Routes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/Routes$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/Routes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/Routes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/Routes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/Routes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/Routes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Routes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Routes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/Routes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/Routes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/Routes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/Routes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/Routes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/Routes$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/Routes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/Routes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/Routes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/Routes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.requests.SupervisionStreams", "shortDescription" : "", "object" : "ackcord\/requests\/SupervisionStreams$.html", "members_object" : [{"label" : "logAndContinue", "tail" : "(sink: Sink[In, Mat])(system: ActorSystem[Nothing]): Sink[In, Mat]", "member" : "ackcord.requests.SupervisionStreams.logAndContinue", "link" : "ackcord\/requests\/SupervisionStreams$.html#logAndContinue[In,Mat](sink:akka.stream.scaladsl.Sink[In,Mat])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Sink[In,Mat]", "kind" : "def"}, {"label" : "logAndContinue", "tail" : "(flow: Flow[In, Out, Mat])(system: ActorSystem[Nothing]): Flow[In, Out, Mat]", "member" : "ackcord.requests.SupervisionStreams.logAndContinue", "link" : "ackcord\/requests\/SupervisionStreams$.html#logAndContinue[In,Out,Mat](flow:akka.stream.scaladsl.Flow[In,Out,Mat])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Flow[In,Out,Mat]", "kind" : "def"}, {"label" : "logAndContinue", "tail" : "(source: Source[Out, Mat])(system: ActorSystem[Nothing]): Source[Out, Mat]", "member" : "ackcord.requests.SupervisionStreams.logAndContinue", "link" : "ackcord\/requests\/SupervisionStreams$.html#logAndContinue[Out,Mat](source:akka.stream.scaladsl.Source[Out,Mat])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.scaladsl.Source[Out,Mat]", "kind" : "def"}, {"label" : "logAndContinue", "tail" : "(graph: RunnableGraph[M])(system: ActorSystem[Nothing]): RunnableGraph[M]", "member" : "ackcord.requests.SupervisionStreams.logAndContinue", "link" : "ackcord\/requests\/SupervisionStreams$.html#logAndContinue[M](graph:akka.stream.javadsl.RunnableGraph[M])(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):akka.stream.javadsl.RunnableGraph[M]", "kind" : "def"}, {"label" : "addLogAndContinueFunction", "tail" : "(addAtributes: (Attributes) => G)(system: ActorSystem[Nothing]): G", "member" : "ackcord.requests.SupervisionStreams.addLogAndContinueFunction", "link" : "ackcord\/requests\/SupervisionStreams$.html#addLogAndContinueFunction[G](addAtributes:akka.stream.Attributes=>G)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):G", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/SupervisionStreams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/SupervisionStreams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/SupervisionStreams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/SupervisionStreams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/SupervisionStreams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/SupervisionStreams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/SupervisionStreams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SupervisionStreams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SupervisionStreams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SupervisionStreams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/SupervisionStreams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/SupervisionStreams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/SupervisionStreams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/SupervisionStreams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/SupervisionStreams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/SupervisionStreams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/SupervisionStreams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/SupervisionStreams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/SupervisionStreams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ackcord.requests.SyncGuildIntegration", "shortDescription" : "Sync an integration.", "members_case class" : [{"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.SyncGuildIntegration.hasPermissions", "link" : "ackcord\/requests\/SyncGuildIntegration.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.SyncGuildIntegration.requiredPermissions", "link" : "ackcord\/requests\/SyncGuildIntegration.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.SyncGuildIntegration.route", "link" : "ackcord\/requests\/SyncGuildIntegration.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.SyncGuildIntegration#<init>", "error" : "unsupported entity"}, {"label" : "integrationId", "tail" : ": IntegrationId", "member" : "ackcord.requests.SyncGuildIntegration.integrationId", "link" : "ackcord\/requests\/SyncGuildIntegration.html#integrationId:ackcord.data.IntegrationId", "kind" : "val"}, {"label" : "guildId", "tail" : ": GuildId", "member" : "ackcord.requests.SyncGuildIntegration.guildId", "link" : "ackcord\/requests\/SyncGuildIntegration.html#guildId:ackcord.data.GuildId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/SyncGuildIntegration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/SyncGuildIntegration.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/SyncGuildIntegration.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/SyncGuildIntegration.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/SyncGuildIntegration.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/SyncGuildIntegration.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/SyncGuildIntegration.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/SyncGuildIntegration.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/SyncGuildIntegration.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/SyncGuildIntegration.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/SyncGuildIntegration.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/SyncGuildIntegration.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/SyncGuildIntegration.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/SyncGuildIntegration.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/SyncGuildIntegration.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/SyncGuildIntegration.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/SyncGuildIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/SyncGuildIntegration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/SyncGuildIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/SyncGuildIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/SyncGuildIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/SyncGuildIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/SyncGuildIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SyncGuildIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SyncGuildIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/SyncGuildIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/SyncGuildIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/SyncGuildIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/SyncGuildIntegration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/SyncGuildIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/SyncGuildIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/SyncGuildIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/SyncGuildIntegration.html", "kind" : "case class"}, {"name" : "ackcord.requests.TriggerTypingIndicator", "shortDescription" : "Triggers a typing indicator in a channel.", "members_case class" : [{"label" : "route", "tail" : "(): RequestRoute", "member" : "ackcord.requests.TriggerTypingIndicator.route", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#route:ackcord.requests.RequestRoute", "kind" : "def"}, {"member" : "ackcord.requests.TriggerTypingIndicator#<init>", "error" : "unsupported entity"}, {"label" : "channelId", "tail" : ": TextChannelId", "member" : "ackcord.requests.TriggerTypingIndicator.channelId", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#channelId:ackcord.data.TextChannelId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "responseDecoder", "tail" : "(): Decoder[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.responseDecoder", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#responseDecoder:io.circe.Decoder[akka.NotUsed]", "kind" : "def"}, {"label" : "parseResponse", "tail" : "(entity: ResponseEntity)(system: ActorSystem[Nothing]): Future[NotUsed]", "member" : "ackcord.requests.NoResponseRequest.parseResponse", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#parseResponse(entity:akka.http.scaladsl.model.ResponseEntity)(implicitsystem:akka.actor.typed.ActorSystem[Nothing]):scala.concurrent.Future[akka.NotUsed]", "kind" : "def"}, {"label" : "toNiceResponse", "tail" : "(response: NotUsed): NotUsed", "member" : "ackcord.requests.NoNiceResponseRequest.toNiceResponse", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#toNiceResponse(response:Response):Response", "kind" : "def"}, {"label" : "params", "tail" : "(): NotUsed", "member" : "ackcord.requests.NoParamsRequest.params", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#params:akka.NotUsed", "kind" : "def"}, {"label" : "paramsEncoder", "tail" : "(): Encoder[NotUsed]", "member" : "ackcord.requests.NoParamsRequest.paramsEncoder", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#paramsEncoder:io.circe.Encoder[akka.NotUsed]", "kind" : "def"}, {"label" : "requestBody", "tail" : "(): RequestEntity", "member" : "ackcord.requests.RESTRequest.requestBody", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#requestBody:akka.http.scaladsl.model.RequestEntity", "kind" : "def"}, {"label" : "jsonPrinter", "tail" : "(): Printer", "member" : "ackcord.requests.RESTRequest.jsonPrinter", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#jsonPrinter:io.circe.Printer", "kind" : "def"}, {"label" : "jsonParams", "tail" : "(): Json", "member" : "ackcord.requests.RESTRequest.jsonParams", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#jsonParams:io.circe.Json", "kind" : "def"}, {"label" : "bodyForLogging", "tail" : "(): Option[String]", "member" : "ackcord.requests.RESTRequest.bodyForLogging", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#bodyForLogging:Option[String]", "kind" : "def"}, {"label" : "hasPermissions", "tail" : "(c: CacheSnapshot): Boolean", "member" : "ackcord.requests.BaseRESTRequest.hasPermissions", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#hasPermissions(implicitc:ackcord.CacheSnapshot):Boolean", "kind" : "def"}, {"label" : "requiredPermissions", "tail" : "(): Permission", "member" : "ackcord.requests.BaseRESTRequest.requiredPermissions", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#requiredPermissions:ackcord.data.Permission", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[NotUsed, B]): Request[B]", "member" : "ackcord.requests.Request.collect", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#collect[B](f:PartialFunction[Data,B]):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (NotUsed) => Boolean): Request[NotUsed]", "member" : "ackcord.requests.Request.filter", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#filter(f:Data=>Boolean):ackcord.requests.Request[Data]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (NotUsed) => B): Request[B]", "member" : "ackcord.requests.Request.map", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#map[B](f:Data=>B):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "transformResponse", "tail" : "(f: (ExecutionContext) => (Future[NotUsed]) => Future[B]): Request[B]", "member" : "ackcord.requests.Request.transformResponse", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#transformResponse[B](f:scala.concurrent.ExecutionContext=>(scala.concurrent.Future[Data]=>scala.concurrent.Future[B])):ackcord.requests.Request[B]", "kind" : "def"}, {"label" : "extraHeaders", "tail" : "(): Seq[HttpHeader]", "member" : "ackcord.requests.Request.extraHeaders", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#extraHeaders:Seq[akka.http.scaladsl.model.HttpHeader]", "kind" : "def"}, {"label" : "identifier", "tail" : ": UUID", "member" : "ackcord.requests.Request.identifier", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#identifier:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/TriggerTypingIndicator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/TriggerTypingIndicator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/TriggerTypingIndicator.html", "kind" : "case class"}, {"name" : "ackcord.requests.VanityUrlResponse", "shortDescription" : "", "members_case class" : [{"member" : "ackcord.requests.VanityUrlResponse#<init>", "error" : "unsupported entity"}, {"label" : "code", "tail" : ": String", "member" : "ackcord.requests.VanityUrlResponse.code", "link" : "ackcord\/requests\/VanityUrlResponse.html#code:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ackcord\/requests\/VanityUrlResponse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/VanityUrlResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/VanityUrlResponse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/VanityUrlResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/VanityUrlResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/VanityUrlResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/VanityUrlResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/VanityUrlResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/VanityUrlResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/VanityUrlResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/VanityUrlResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/VanityUrlResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/VanityUrlResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/VanityUrlResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/VanityUrlResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/VanityUrlResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/VanityUrlResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ackcord\/requests\/VanityUrlResponse.html", "kind" : "case class"}, {"name" : "ackcord.requests.X-Audit-Log-Reason", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-Audit-Log-Reason.renderInResponses", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-Audit-Log-Reason.renderInRequests", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-Audit-Log-Reason.value", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-Audit-Log-Reason]", "member" : "ackcord.requests.X-Audit-Log-Reason.companion", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-Audit-Log-Reason]", "kind" : "def"}, {"member" : "ackcord.requests.X-Audit-Log-Reason#<init>", "error" : "unsupported entity"}, {"label" : "reason", "tail" : ": String", "member" : "ackcord.requests.X-Audit-Log-Reason.reason", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#reason:String", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-Audit-Log-Reason]", "member" : "ackcord.requests.X-Audit-Log-Reason.parse", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#parse(value:String):scala.util.Try[ackcord.requests.X-Audit-Log-Reason]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-Audit-Log-Reason.name", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-Audit-Log-Reason]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-Audit-Log-Reason", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusAudit$minusLog$minusReason.html", "kind" : "class"}, {"name" : "ackcord.requests.X-RateLimit-Bucket", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Bucket.renderInResponses", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Bucket.renderInRequests", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Bucket.value", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-RateLimit-Bucket]", "member" : "ackcord.requests.X-RateLimit-Bucket.companion", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-RateLimit-Bucket]", "kind" : "def"}, {"member" : "ackcord.requests.X-RateLimit-Bucket#<init>", "error" : "unsupported entity"}, {"label" : "identifier", "tail" : ": String", "member" : "ackcord.requests.X-RateLimit-Bucket.identifier", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#identifier:String", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-RateLimit-Bucket]", "member" : "ackcord.requests.X-RateLimit-Bucket.parse", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#parse(value:String):scala.util.Try[ackcord.requests.X-RateLimit-Bucket]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Bucket.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-RateLimit-Bucket]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-RateLimit-Bucket", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusBucket$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRateLimit$minusBucket.html", "kind" : "class"}, {"name" : "ackcord.requests.X-Ratelimit-Global", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-Ratelimit-Global.renderInResponses", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-Ratelimit-Global.renderInRequests", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-Ratelimit-Global.value", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-Ratelimit-Global]", "member" : "ackcord.requests.X-Ratelimit-Global.companion", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-Ratelimit-Global]", "kind" : "def"}, {"member" : "ackcord.requests.X-Ratelimit-Global#<init>", "error" : "unsupported entity"}, {"label" : "isGlobal", "tail" : ": Boolean", "member" : "ackcord.requests.X-Ratelimit-Global.isGlobal", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#isGlobal:Boolean", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-Ratelimit-Global]", "member" : "ackcord.requests.X-Ratelimit-Global.parse", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#parse(value:String):scala.util.Try[ackcord.requests.X-Ratelimit-Global]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-Ratelimit-Global.name", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-Ratelimit-Global]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-Ratelimit-Global", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRatelimit$minusGlobal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRatelimit$minusGlobal.html", "kind" : "class"}, {"name" : "ackcord.requests.X-RateLimit-Limit", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Limit.renderInResponses", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Limit.renderInRequests", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Limit.value", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-RateLimit-Limit]", "member" : "ackcord.requests.X-RateLimit-Limit.companion", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-RateLimit-Limit]", "kind" : "def"}, {"member" : "ackcord.requests.X-RateLimit-Limit#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Int", "member" : "ackcord.requests.X-RateLimit-Limit.limit", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#limit:Int", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-RateLimit-Limit]", "member" : "ackcord.requests.X-RateLimit-Limit.parse", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#parse(value:String):scala.util.Try[ackcord.requests.X-RateLimit-Limit]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Limit.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-RateLimit-Limit]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-RateLimit-Limit", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusLimit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRateLimit$minusLimit.html", "kind" : "class"}, {"name" : "ackcord.requests.X-RateLimit-Remaining", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Remaining.renderInResponses", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Remaining.renderInRequests", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Remaining.value", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-RateLimit-Remaining]", "member" : "ackcord.requests.X-RateLimit-Remaining.companion", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-RateLimit-Remaining]", "kind" : "def"}, {"member" : "ackcord.requests.X-RateLimit-Remaining#<init>", "error" : "unsupported entity"}, {"label" : "remaining", "tail" : ": Int", "member" : "ackcord.requests.X-RateLimit-Remaining.remaining", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#remaining:Int", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-RateLimit-Remaining]", "member" : "ackcord.requests.X-RateLimit-Remaining.parse", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#parse(value:String):scala.util.Try[ackcord.requests.X-RateLimit-Remaining]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Remaining.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-RateLimit-Remaining]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-RateLimit-Remaining", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusRemaining$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRateLimit$minusRemaining.html", "kind" : "class"}, {"name" : "ackcord.requests.X-RateLimit-Reset", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Reset.renderInResponses", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Reset.renderInRequests", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Reset.value", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-RateLimit-Reset]", "member" : "ackcord.requests.X-RateLimit-Reset.companion", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-RateLimit-Reset]", "kind" : "def"}, {"member" : "ackcord.requests.X-RateLimit-Reset#<init>", "error" : "unsupported entity"}, {"label" : "resetAt", "tail" : ": Instant", "member" : "ackcord.requests.X-RateLimit-Reset.resetAt", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#resetAt:java.time.Instant", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-RateLimit-Reset]", "member" : "ackcord.requests.X-RateLimit-Reset.parse", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#parse(value:String):scala.util.Try[ackcord.requests.X-RateLimit-Reset]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Reset.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-RateLimit-Reset]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-RateLimit-Reset", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRateLimit$minusReset.html", "kind" : "class"}, {"name" : "ackcord.requests.X-RateLimit-Reset-After", "shortDescription" : "", "object" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html", "members_class" : [{"label" : "renderInResponses", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Reset-After.renderInResponses", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#renderInResponses():Boolean", "kind" : "def"}, {"label" : "renderInRequests", "tail" : "(): Boolean", "member" : "ackcord.requests.X-RateLimit-Reset-After.renderInRequests", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#renderInRequests():Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Reset-After.value", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#value():String", "kind" : "def"}, {"label" : "companion", "tail" : "(): ModeledCustomHeaderCompanion[X-RateLimit-Reset-After]", "member" : "ackcord.requests.X-RateLimit-Reset-After.companion", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#companion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[ackcord.requests.X-RateLimit-Reset-After]", "kind" : "def"}, {"member" : "ackcord.requests.X-RateLimit-Reset-After#<init>", "error" : "unsupported entity"}, {"label" : "resetIn", "tail" : ": FiniteDuration", "member" : "ackcord.requests.X-RateLimit-Reset-After.resetIn", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#resetIn:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#lowercaseName():String", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeader.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#name():String", "kind" : "final def"}, {"label" : "render", "tail" : "(r: R): r.type", "member" : "akka.http.scaladsl.model.headers.CustomHeader.render", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#render[R<:akka.http.impl.util.Rendering](r:R):r.type", "kind" : "final def"}, {"label" : "isNot", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.isNot", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#isNot(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "is", "tail" : "(nameInLowerCase: String): Boolean", "member" : "akka.http.scaladsl.model.HttpHeader.is", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#is(nameInLowerCase:String):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.http.impl.util.ToStringRenderable.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(value: String): Try[X-RateLimit-Reset-After]", "member" : "ackcord.requests.X-RateLimit-Reset-After.parse", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#parse(value:String):scala.util.Try[ackcord.requests.X-RateLimit-Reset-After]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "ackcord.requests.X-RateLimit-Reset-After.name", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#name:String", "kind" : "def"}, {"label" : "implicitlyLocatableCompanion", "tail" : ": ModeledCustomHeaderCompanion[X-RateLimit-Reset-After]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.implicitlyLocatableCompanion", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#implicitlyLocatableCompanion:akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion[H]", "kind" : "implicit final val"}, {"label" : "unapply", "tail" : "(h: HttpHeader): Option[String]", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.unapply", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#unapply(h:akka.http.scaladsl.model.HttpHeader):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): X-RateLimit-Reset-After", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.apply", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#apply(value:String):H", "kind" : "def"}, {"label" : "lowercaseName", "tail" : "(): String", "member" : "akka.http.scaladsl.model.headers.ModeledCustomHeaderCompanion.lowercaseName", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#lowercaseName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ackcord\/requests\/X$minusRateLimit$minusReset$minusAfter.html", "kind" : "class"}]};